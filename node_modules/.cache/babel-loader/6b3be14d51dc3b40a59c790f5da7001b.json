{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.mjs';\nconst _cacheNameDetails = {\n  googleAnalytics: 'googleAnalytics',\n  precache: 'precache-v2',\n  prefix: 'workbox',\n  runtime: 'runtime',\n  suffix: self.registration.scope\n};\n\nconst _createCacheName = cacheName => {\n  return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix].filter(value => value.length > 0).join('-');\n};\n\nexport const cacheNames = {\n  updateDetails: details => {\n    Object.keys(_cacheNameDetails).forEach(key => {\n      if (typeof details[key] !== 'undefined') {\n        _cacheNameDetails[key] = details[key];\n      }\n    });\n  },\n  getGoogleAnalyticsName: userCacheName => {\n    return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n  },\n  getPrecacheName: userCacheName => {\n    return userCacheName || _createCacheName(_cacheNameDetails.precache);\n  },\n  getPrefix: () => {\n    return _cacheNameDetails.prefix;\n  },\n  getRuntimeName: userCacheName => {\n    return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n  },\n  getSuffix: () => {\n    return _cacheNameDetails.suffix;\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-core/_private/cacheNames.mjs"],"names":["_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","self","registration","scope","_createCacheName","cacheName","filter","value","length","join","cacheNames","updateDetails","details","Object","keys","forEach","key","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix"],"mappings":"AAAA;;;;;;;AAQA,OAAO,iBAAP;AAGA,MAAMA,iBAAiB,GAAG;AACxBC,EAAAA,eAAe,EAAE,iBADO;AAExBC,EAAAA,QAAQ,EAAE,aAFc;AAGxBC,EAAAA,MAAM,EAAE,SAHgB;AAIxBC,EAAAA,OAAO,EAAE,SAJe;AAKxBC,EAAAA,MAAM,EAAEC,IAAI,CAACC,YAAL,CAAkBC;AALF,CAA1B;;AAQA,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AACtC,SAAO,CAACV,iBAAiB,CAACG,MAAnB,EAA2BO,SAA3B,EAAsCV,iBAAiB,CAACK,MAAxD,EACFM,MADE,CACMC,KAAD,IAAWA,KAAK,CAACC,MAAN,GAAe,CAD/B,EAEFC,IAFE,CAEG,GAFH,CAAP;AAGD,CAJD;;AAMA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BC,IAAAA,MAAM,CAACC,IAAP,CAAYnB,iBAAZ,EAA+BoB,OAA/B,CAAwCC,GAAD,IAAS;AAC9C,UAAI,OAAOJ,OAAO,CAACI,GAAD,CAAd,KAAwB,WAA5B,EAAyC;AACvCrB,QAAAA,iBAAiB,CAACqB,GAAD,CAAjB,GAAyBJ,OAAO,CAACI,GAAD,CAAhC;AACD;AACF,KAJD;AAKD,GAPuB;AAQxBC,EAAAA,sBAAsB,EAAGC,aAAD,IAAmB;AACzC,WAAOA,aAAa,IAAId,gBAAgB,CAACT,iBAAiB,CAACC,eAAnB,CAAxC;AACD,GAVuB;AAWxBuB,EAAAA,eAAe,EAAGD,aAAD,IAAmB;AAClC,WAAOA,aAAa,IAAId,gBAAgB,CAACT,iBAAiB,CAACE,QAAnB,CAAxC;AACD,GAbuB;AAcxBuB,EAAAA,SAAS,EAAE,MAAM;AACf,WAAOzB,iBAAiB,CAACG,MAAzB;AACD,GAhBuB;AAiBxBuB,EAAAA,cAAc,EAAGH,aAAD,IAAmB;AACjC,WAAOA,aAAa,IAAId,gBAAgB,CAACT,iBAAiB,CAACI,OAAnB,CAAxC;AACD,GAnBuB;AAoBxBuB,EAAAA,SAAS,EAAE,MAAM;AACf,WAAO3B,iBAAiB,CAACK,MAAzB;AACD;AAtBuB,CAAnB","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport '../_version.mjs';\n\n\nconst _cacheNameDetails = {\n  googleAnalytics: 'googleAnalytics',\n  precache: 'precache-v2',\n  prefix: 'workbox',\n  runtime: 'runtime',\n  suffix: self.registration.scope,\n};\n\nconst _createCacheName = (cacheName) => {\n  return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n      .filter((value) => value.length > 0)\n      .join('-');\n};\n\nexport const cacheNames = {\n  updateDetails: (details) => {\n    Object.keys(_cacheNameDetails).forEach((key) => {\n      if (typeof details[key] !== 'undefined') {\n        _cacheNameDetails[key] = details[key];\n      }\n    });\n  },\n  getGoogleAnalyticsName: (userCacheName) => {\n    return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n  },\n  getPrecacheName: (userCacheName) => {\n    return userCacheName || _createCacheName(_cacheNameDetails.precache);\n  },\n  getPrefix: () => {\n    return _cacheNameDetails.prefix;\n  },\n  getRuntimeName: (userCacheName) => {\n    return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n  },\n  getSuffix: () => {\n    return _cacheNameDetails.suffix;\n  },\n};\n"]},"metadata":{},"sourceType":"module"}