{"ast":null,"code":"//      \n'use strict';\n\nconst path = require('path');\n\nconst isDirectory = require('is-directory');\n\nfunction getDirectory(filepath) {\n  return new Promise((resolve, reject) => {\n    return isDirectory(filepath, (err, filepathIsDirectory) => {\n      if (err) {\n        return reject(err);\n      }\n\n      return resolve(filepathIsDirectory ? filepath : path.dirname(filepath));\n    });\n  });\n}\n\ngetDirectory.sync = function getDirectorySync(filepath) {\n  return isDirectory.sync(filepath) ? filepath : path.dirname(filepath);\n};\n\nmodule.exports = getDirectory;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/cosmiconfig/dist/getDirectory.js"],"names":["path","require","isDirectory","getDirectory","filepath","Promise","resolve","reject","err","filepathIsDirectory","dirname","sync","getDirectorySync","module","exports"],"mappings":"AAAA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAA3B;;AAEA,SAASE,YAAT,CAAsBC,QAAtB,EAAyD;AACvD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAOL,WAAW,CAACE,QAAD,EAAW,CAACI,GAAD,EAAMC,mBAAN,KAA8B;AACzD,UAAID,GAAJ,EAAS;AACP,eAAOD,MAAM,CAACC,GAAD,CAAb;AACD;;AACD,aAAOF,OAAO,CAACG,mBAAmB,GAAGL,QAAH,GAAcJ,IAAI,CAACU,OAAL,CAAaN,QAAb,CAAlC,CAAd;AACD,KALiB,CAAlB;AAMD,GAPM,CAAP;AAQD;;AAEDD,YAAY,CAACQ,IAAb,GAAoB,SAASC,gBAAT,CAA0BR,QAA1B,EAAoD;AACtE,SAAOF,WAAW,CAACS,IAAZ,CAAiBP,QAAjB,IAA6BA,QAA7B,GAAwCJ,IAAI,CAACU,OAAL,CAAaN,QAAb,CAA/C;AACD,CAFD;;AAIAS,MAAM,CAACC,OAAP,GAAiBX,YAAjB","sourcesContent":["//      \n'use strict';\n\nconst path = require('path');\nconst isDirectory = require('is-directory');\n\nfunction getDirectory(filepath        )                  {\n  return new Promise((resolve, reject) => {\n    return isDirectory(filepath, (err, filepathIsDirectory) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve(filepathIsDirectory ? filepath : path.dirname(filepath));\n    });\n  });\n}\n\ngetDirectory.sync = function getDirectorySync(filepath        )         {\n  return isDirectory.sync(filepath) ? filepath : path.dirname(filepath);\n};\n\nmodule.exports = getDirectory;\n"]},"metadata":{},"sourceType":"script"}