{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nconst checkForDeprecatedOptions = require('../lib/check-for-deprecated-options');\n\nconst getFileManifestEntries = require('../lib/get-file-manifest-entries');\n\nconst getManifestSchema = require('./options/get-manifest-schema');\n\nconst validate = require('./options/validate');\n/**\n * This method returns a list of URLs to precache, referred to as a \"precache\n * manifest\", along with details about the number of entries and their size,\n * based on the options you provide.\n *\n * @param {Object} config Please refer to the\n * [configuration guide](https://developers.google.com/web/tools/workbox/modules/workbox-build#getmanifest_mode).\n * @return {Promise<{manifestEntries: Array<ManifestEntry>,\n * count: number, size: number, warnings: Array<string>}>} A promise that\n * resolves once the precache manifest is determined. The `size` property\n * contains the aggregate size of all the precached entries, in bytes, the\n * `count` property contains the total number of precached entries, and the\n * `manifestEntries` property contains all the `ManifestEntry` items. Any\n * non-fatal warning messages will be returned via `warnings`.\n *\n * @memberof module:workbox-build\n */\n\n\nasync function getManifest(config) {\n  // This check needs to be done before validation, since the deprecated options\n  // will be renamed.\n  const deprecationWarnings = checkForDeprecatedOptions(config);\n  const options = validate(config, getManifestSchema);\n  const {\n    manifestEntries,\n    count,\n    size,\n    warnings\n  } = await getFileManifestEntries(options); // Add in any deprecation warnings.\n\n  warnings.push(...deprecationWarnings);\n  return {\n    manifestEntries,\n    count,\n    size,\n    warnings\n  };\n}\n\nmodule.exports = getManifest;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-build/src/entry-points/get-manifest.js"],"names":["checkForDeprecatedOptions","require","getFileManifestEntries","getManifestSchema","validate","getManifest","config","deprecationWarnings","options","manifestEntries","count","size","warnings","push","module","exports"],"mappings":"AAAA;;;;;;;AAQA,MAAMA,yBAAyB,GAC3BC,OAAO,CAAC,qCAAD,CADX;;AAEA,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,kCAAD,CAAtC;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,+BAAD,CAAjC;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,oBAAD,CAAxB;AAEA;;;;;;;;;;;;;;;;;;;AAiBA,eAAeI,WAAf,CAA2BC,MAA3B,EAAmC;AACjC;AACA;AACA,QAAMC,mBAAmB,GAAGP,yBAAyB,CAACM,MAAD,CAArD;AAEA,QAAME,OAAO,GAAGJ,QAAQ,CAACE,MAAD,EAASH,iBAAT,CAAxB;AAEA,QAAM;AAACM,IAAAA,eAAD;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA;AAA/B,MACJ,MAAMV,sBAAsB,CAACM,OAAD,CAD9B,CAPiC,CAUjC;;AACAI,EAAAA,QAAQ,CAACC,IAAT,CAAc,GAAGN,mBAAjB;AAEA,SAAO;AAACE,IAAAA,eAAD;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA;AAA/B,GAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBV,WAAjB","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nconst checkForDeprecatedOptions =\n    require('../lib/check-for-deprecated-options');\nconst getFileManifestEntries = require('../lib/get-file-manifest-entries');\nconst getManifestSchema = require('./options/get-manifest-schema');\nconst validate = require('./options/validate');\n\n/**\n * This method returns a list of URLs to precache, referred to as a \"precache\n * manifest\", along with details about the number of entries and their size,\n * based on the options you provide.\n *\n * @param {Object} config Please refer to the\n * [configuration guide](https://developers.google.com/web/tools/workbox/modules/workbox-build#getmanifest_mode).\n * @return {Promise<{manifestEntries: Array<ManifestEntry>,\n * count: number, size: number, warnings: Array<string>}>} A promise that\n * resolves once the precache manifest is determined. The `size` property\n * contains the aggregate size of all the precached entries, in bytes, the\n * `count` property contains the total number of precached entries, and the\n * `manifestEntries` property contains all the `ManifestEntry` items. Any\n * non-fatal warning messages will be returned via `warnings`.\n *\n * @memberof module:workbox-build\n */\nasync function getManifest(config) {\n  // This check needs to be done before validation, since the deprecated options\n  // will be renamed.\n  const deprecationWarnings = checkForDeprecatedOptions(config);\n\n  const options = validate(config, getManifestSchema);\n\n  const {manifestEntries, count, size, warnings} =\n    await getFileManifestEntries(options);\n\n  // Add in any deprecation warnings.\n  warnings.push(...deprecationWarnings);\n\n  return {manifestEntries, count, size, warnings};\n}\n\nmodule.exports = getManifest;\n"]},"metadata":{},"sourceType":"script"}