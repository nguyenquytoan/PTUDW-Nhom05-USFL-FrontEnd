{"ast":null,"code":"/**\n * @license\n * The MIT License\n *\n * Copyright © 2012–2016 Kir Belevich\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n *\n * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n *\n * Лицензия MIT\n *\n * Copyright © 2012–2016 Кир Белевич\n *\n * Данная лицензия разрешает лицам, получившим копию\n * данного\n * программного обеспечения и сопутствующей\n * документации\n * (в дальнейшем именуемыми «Программное Обеспечение»),\n * безвозмездно\n * использовать Программное Обеспечение без\n * ограничений, включая\n * неограниченное право на использование, копирование,\n * изменение,\n * добавление, публикацию, распространение,\n * сублицензирование\n * и/или продажу копий Программного Обеспечения, также\n * как и лицам,\n * которым предоставляется данное Программное\n * Обеспечение,\n * при соблюдении следующих условий:\n *\n * Указанное выше уведомление об авторском праве и\n * данные условия\n * должны быть включены во все копии или значимые части\n * данного\n * Программного Обеспечения.\n *\n * ДАННОЕ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ «КАК\n * ЕСТЬ»,\n * БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, ЯВНО ВЫРАЖЕННЫХ ИЛИ\n * ПОДРАЗУМЕВАЕМЫХ,\n * ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ГАРАНТИЯМИ ТОВАРНОЙ\n * ПРИГОДНОСТИ,\n * СООТВЕТСТВИЯ ПО ЕГО КОНКРЕТНОМУ НАЗНАЧЕНИЮ И\n * ОТСУТСТВИЯ НАРУШЕНИЙ\n * ПРАВ. НИ В КАКОМ СЛУЧАЕ АВТОРЫ ИЛИ ПРАВООБЛАДАТЕЛИ НЕ\n * НЕСУТ\n * ОТВЕТСТВЕННОСТИ ПО ИСКАМ О ВОЗМЕЩЕНИИ УЩЕРБА, УБЫТКОВ\n * ИЛИ ДРУГИХ\n * ТРЕБОВАНИЙ ПО ДЕЙСТВУЮЩИМ КОНТРАКТАМ, ДЕЛИКТАМ ИЛИ\n * ИНОМУ,\n * ВОЗНИКШИМ ИЗ, ИМЕЮЩИМ ПРИЧИНОЙ ИЛИ СВЯЗАННЫМ С\n * ПРОГРАММНЫМ\n * ОБЕСПЕЧЕНИЕМ ИЛИ ИСПОЛЬЗОВАНИЕМ ПРОГРАММНОГО\n * ОБЕСПЕЧЕНИЯ\n * ИЛИ ИНЫМИ ДЕЙСТВИЯМИ С ПРОГРАММНЫМ ОБЕСПЕЧЕНИЕМ.\n */\n'use strict';\n\nvar JSAPI = require('../lib/svgo/jsAPI');\n\nexports.type = 'full';\nexports.active = false;\nexports.description = 'Finds <path> elements with the same d, fill, and ' + 'stroke, and converts them to <use> elements ' + 'referencing a single <path> def.';\n/**\n * Finds <path> elements with the same d, fill, and stroke, and converts them to\n * <use> elements referencing a single <path> def.\n *\n * @author Jacob Howcroft\n */\n\nexports.fn = function (data) {\n  const seen = new Map();\n  let count = 0;\n  const defs = [];\n  traverse(data, item => {\n    if (!item.isElem('path') || !item.hasAttr('d')) {\n      return;\n    }\n\n    const d = item.attr('d').value;\n    const fill = item.hasAttr('fill') && item.attr('fill').value || '';\n    const stroke = item.hasAttr('stroke') && item.attr('stroke').value || '';\n    const key = d + ';s:' + stroke + ';f:' + fill;\n    const hasSeen = seen.get(key);\n\n    if (!hasSeen) {\n      seen.set(key, {\n        elem: item,\n        reused: false\n      });\n      return;\n    }\n\n    if (!hasSeen.reused) {\n      hasSeen.reused = true;\n\n      if (!hasSeen.elem.hasAttr('id')) {\n        hasSeen.elem.addAttr({\n          name: 'id',\n          local: 'id',\n          prefix: '',\n          value: 'reuse-' + count++\n        });\n      }\n\n      defs.push(hasSeen.elem);\n    }\n\n    item = convertToUse(item, hasSeen.elem.attr('id').value);\n  });\n  const defsTag = new JSAPI({\n    elem: 'defs',\n    prefix: '',\n    local: 'defs',\n    content: [],\n    attrs: []\n  }, data);\n  data.content[0].spliceContent(0, 0, defsTag);\n\n  for (let def of defs) {\n    // Remove class and style before copying to avoid circular refs in\n    // JSON.stringify. This is fine because we don't actually want class or\n    // style information to be copied.\n    const style = def.style;\n    const defClass = def.class;\n    delete def.style;\n    delete def.class;\n    const defClone = def.clone();\n    def.style = style;\n    def.class = defClass;\n    defClone.removeAttr('transform');\n    defsTag.spliceContent(0, 0, defClone); // Convert the original def to a use so the first usage isn't duplicated.\n\n    def = convertToUse(def, defClone.attr('id').value);\n    def.removeAttr('id');\n  }\n\n  return data;\n};\n/** */\n\n\nfunction convertToUse(item, href) {\n  item.renameElem('use');\n  item.removeAttr('d');\n  item.removeAttr('stroke');\n  item.removeAttr('fill');\n  item.addAttr({\n    name: 'xlink:href',\n    local: 'xlink:href',\n    prefix: 'none',\n    value: '#' + href\n  });\n  delete item.pathJS;\n  return item;\n}\n/** */\n\n\nfunction traverse(parent, callback) {\n  if (parent.isEmpty()) {\n    return;\n  }\n\n  for (let child of parent.content) {\n    callback(child);\n    traverse(child, callback);\n  }\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/svgo/plugins/reusePaths.js"],"names":["JSAPI","require","exports","type","active","description","fn","data","seen","Map","count","defs","traverse","item","isElem","hasAttr","d","attr","value","fill","stroke","key","hasSeen","get","set","elem","reused","addAttr","name","local","prefix","push","convertToUse","defsTag","content","attrs","spliceContent","def","style","defClass","class","defClone","clone","removeAttr","href","renameElem","pathJS","parent","callback","isEmpty","child"],"mappings":"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","sourcesContent":["/**\n * @license\n * The MIT License\n *\n * Copyright © 2012–2016 Kir Belevich\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n *\n * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n *\n * Лицензия MIT\n *\n * Copyright © 2012–2016 Кир Белевич\n *\n * Данная лицензия разрешает лицам, получившим копию\n * данного\n * программного обеспечения и сопутствующей\n * документации\n * (в дальнейшем именуемыми «Программное Обеспечение»),\n * безвозмездно\n * использовать Программное Обеспечение без\n * ограничений, включая\n * неограниченное право на использование, копирование,\n * изменение,\n * добавление, публикацию, распространение,\n * сублицензирование\n * и/или продажу копий Программного Обеспечения, также\n * как и лицам,\n * которым предоставляется данное Программное\n * Обеспечение,\n * при соблюдении следующих условий:\n *\n * Указанное выше уведомление об авторском праве и\n * данные условия\n * должны быть включены во все копии или значимые части\n * данного\n * Программного Обеспечения.\n *\n * ДАННОЕ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ «КАК\n * ЕСТЬ»,\n * БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, ЯВНО ВЫРАЖЕННЫХ ИЛИ\n * ПОДРАЗУМЕВАЕМЫХ,\n * ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ГАРАНТИЯМИ ТОВАРНОЙ\n * ПРИГОДНОСТИ,\n * СООТВЕТСТВИЯ ПО ЕГО КОНКРЕТНОМУ НАЗНАЧЕНИЮ И\n * ОТСУТСТВИЯ НАРУШЕНИЙ\n * ПРАВ. НИ В КАКОМ СЛУЧАЕ АВТОРЫ ИЛИ ПРАВООБЛАДАТЕЛИ НЕ\n * НЕСУТ\n * ОТВЕТСТВЕННОСТИ ПО ИСКАМ О ВОЗМЕЩЕНИИ УЩЕРБА, УБЫТКОВ\n * ИЛИ ДРУГИХ\n * ТРЕБОВАНИЙ ПО ДЕЙСТВУЮЩИМ КОНТРАКТАМ, ДЕЛИКТАМ ИЛИ\n * ИНОМУ,\n * ВОЗНИКШИМ ИЗ, ИМЕЮЩИМ ПРИЧИНОЙ ИЛИ СВЯЗАННЫМ С\n * ПРОГРАММНЫМ\n * ОБЕСПЕЧЕНИЕМ ИЛИ ИСПОЛЬЗОВАНИЕМ ПРОГРАММНОГО\n * ОБЕСПЕЧЕНИЯ\n * ИЛИ ИНЫМИ ДЕЙСТВИЯМИ С ПРОГРАММНЫМ ОБЕСПЕЧЕНИЕМ.\n */\n\n'use strict';\n\nvar JSAPI = require('../lib/svgo/jsAPI');\n\nexports.type = 'full';\n\nexports.active = false;\n\nexports.description = 'Finds <path> elements with the same d, fill, and ' +\n                      'stroke, and converts them to <use> elements ' +\n                      'referencing a single <path> def.';\n\n/**\n * Finds <path> elements with the same d, fill, and stroke, and converts them to\n * <use> elements referencing a single <path> def.\n *\n * @author Jacob Howcroft\n */\nexports.fn = function(data) {\n  const seen = new Map();\n  let count = 0;\n  const defs = [];\n  traverse(data, item => {\n    if (!item.isElem('path') || !item.hasAttr('d')) {\n      return;\n    }\n    const d = item.attr('d').value;\n    const fill = (item.hasAttr('fill') && item.attr('fill').value) || '';\n    const stroke = (item.hasAttr('stroke') && item.attr('stroke').value) || '';\n    const key = d + ';s:' + stroke + ';f:' + fill;\n    const hasSeen = seen.get(key);\n    if (!hasSeen) {\n      seen.set(key, {elem: item, reused: false});\n      return;\n    }\n    if (!hasSeen.reused) {\n      hasSeen.reused = true;\n      if (!hasSeen.elem.hasAttr('id')) {\n        hasSeen.elem.addAttr({name: 'id', local: 'id',\n                              prefix: '', value: 'reuse-' + (count++)});\n      }\n      defs.push(hasSeen.elem);\n    }\n    item = convertToUse(item, hasSeen.elem.attr('id').value);\n  });\n  const defsTag = new JSAPI({\n    elem: 'defs', prefix: '', local: 'defs', content: [], attrs: []}, data);\n  data.content[0].spliceContent(0, 0, defsTag);\n  for (let def of defs) {\n    // Remove class and style before copying to avoid circular refs in\n    // JSON.stringify. This is fine because we don't actually want class or\n    // style information to be copied.\n    const style = def.style;\n    const defClass = def.class;\n    delete def.style;\n    delete def.class;\n    const defClone = def.clone();\n    def.style = style;\n    def.class = defClass;\n    defClone.removeAttr('transform');\n    defsTag.spliceContent(0, 0, defClone);\n    // Convert the original def to a use so the first usage isn't duplicated.\n    def = convertToUse(def, defClone.attr('id').value);\n    def.removeAttr('id');\n  }\n  return data;\n};\n\n/** */\nfunction convertToUse(item, href) {\n  item.renameElem('use');\n  item.removeAttr('d');\n  item.removeAttr('stroke');\n  item.removeAttr('fill');\n  item.addAttr({name: 'xlink:href', local: 'xlink:href',\n                prefix: 'none', value: '#' + href});\n  delete item.pathJS;\n  return item;\n}\n\n/** */\nfunction traverse(parent, callback) {\n  if (parent.isEmpty()) {\n    return;\n  }\n  for (let child of parent.content) {\n    callback(child);\n    traverse(child, callback);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}