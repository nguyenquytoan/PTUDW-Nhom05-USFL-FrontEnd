{"ast":null,"code":"var test = require('tape');\n\nvar stringify = require('../');\n\ntest('space parameter', function (t) {\n  t.plan(1);\n  var obj = {\n    one: 1,\n    two: 2\n  };\n  t.equal(stringify(obj, {\n    space: '  '\n  }), '' + '{\\n' + '  \"one\": 1,\\n' + '  \"two\": 2\\n' + '}');\n});\ntest('space parameter (with tabs)', function (t) {\n  t.plan(1);\n  var obj = {\n    one: 1,\n    two: 2\n  };\n  t.equal(stringify(obj, {\n    space: '\\t'\n  }), '' + '{\\n' + '\\t\"one\": 1,\\n' + '\\t\"two\": 2\\n' + '}');\n});\ntest('space parameter (with a number)', function (t) {\n  t.plan(1);\n  var obj = {\n    one: 1,\n    two: 2\n  };\n  t.equal(stringify(obj, {\n    space: 3\n  }), '' + '{\\n' + '   \"one\": 1,\\n' + '   \"two\": 2\\n' + '}');\n});\ntest('space parameter (nested objects)', function (t) {\n  t.plan(1);\n  var obj = {\n    one: 1,\n    two: {\n      b: 4,\n      a: [2, 3]\n    }\n  };\n  t.equal(stringify(obj, {\n    space: '  '\n  }), '' + '{\\n' + '  \"one\": 1,\\n' + '  \"two\": {\\n' + '    \"a\": [\\n' + '      2,\\n' + '      3\\n' + '    ],\\n' + '    \"b\": 4\\n' + '  }\\n' + '}');\n});\ntest('space parameter (same as native)', function (t) {\n  t.plan(1); // for this test, properties need to be in alphabetical order\n\n  var obj = {\n    one: 1,\n    two: {\n      a: [2, 3],\n      b: 4\n    }\n  };\n  t.equal(stringify(obj, {\n    space: '  '\n  }), JSON.stringify(obj, null, '  '));\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/json-stable-stringify/test/space.js"],"names":["test","require","stringify","t","plan","obj","one","two","equal","space","b","a","JSON"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,KAAD,CAAvB;;AAEAD,IAAI,CAAC,iBAAD,EAAoB,UAAUG,CAAV,EAAa;AACjCA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP;AACA,MAAIC,GAAG,GAAG;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAV;AACAJ,EAAAA,CAAC,CAACK,KAAF,CAAQN,SAAS,CAACG,GAAD,EAAM;AAACI,IAAAA,KAAK,EAAE;AAAR,GAAN,CAAjB,EAAuC,KACjC,KADiC,GAEjC,eAFiC,GAGjC,cAHiC,GAIjC,GAJN;AAMH,CATG,CAAJ;AAWAT,IAAI,CAAC,6BAAD,EAAgC,UAAUG,CAAV,EAAa;AAC7CA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP;AACA,MAAIC,GAAG,GAAG;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAV;AACAJ,EAAAA,CAAC,CAACK,KAAF,CAAQN,SAAS,CAACG,GAAD,EAAM;AAACI,IAAAA,KAAK,EAAE;AAAR,GAAN,CAAjB,EAAuC,KACjC,KADiC,GAEjC,eAFiC,GAGjC,cAHiC,GAIjC,GAJN;AAMH,CATG,CAAJ;AAWAT,IAAI,CAAC,iCAAD,EAAoC,UAAUG,CAAV,EAAa;AACjDA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP;AACA,MAAIC,GAAG,GAAG;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAV;AACAJ,EAAAA,CAAC,CAACK,KAAF,CAAQN,SAAS,CAACG,GAAD,EAAM;AAACI,IAAAA,KAAK,EAAE;AAAR,GAAN,CAAjB,EAAoC,KAC9B,KAD8B,GAE9B,gBAF8B,GAG9B,eAH8B,GAI9B,GAJN;AAMH,CATG,CAAJ;AAWAT,IAAI,CAAC,kCAAD,EAAqC,UAAUG,CAAV,EAAa;AAClDA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP;AACA,MAAIC,GAAG,GAAG;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAEG,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAC,CAAD,EAAG,CAAH;AAAX;AAAf,GAAV;AACAR,EAAAA,CAAC,CAACK,KAAF,CAAQN,SAAS,CAACG,GAAD,EAAM;AAACI,IAAAA,KAAK,EAAE;AAAR,GAAN,CAAjB,EAAuC,KACjC,KADiC,GAEjC,eAFiC,GAGjC,cAHiC,GAIjC,cAJiC,GAKjC,YALiC,GAMjC,WANiC,GAOjC,UAPiC,GAQjC,cARiC,GASjC,OATiC,GAUjC,GAVN;AAYH,CAfG,CAAJ;AAiBAT,IAAI,CAAC,kCAAD,EAAqC,UAAUG,CAAV,EAAa;AAClDA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP,EADkD,CAElD;;AACA,MAAIC,GAAG,GAAG;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAEI,MAAAA,CAAC,EAAE,CAAC,CAAD,EAAG,CAAH,CAAL;AAAYD,MAAAA,CAAC,EAAE;AAAf;AAAf,GAAV;AACAP,EAAAA,CAAC,CAACK,KAAF,CAAQN,SAAS,CAACG,GAAD,EAAM;AAACI,IAAAA,KAAK,EAAE;AAAR,GAAN,CAAjB,EAAuCG,IAAI,CAACV,SAAL,CAAeG,GAAf,EAAoB,IAApB,EAA0B,IAA1B,CAAvC;AACH,CALG,CAAJ","sourcesContent":["var test = require('tape');\nvar stringify = require('../');\n\ntest('space parameter', function (t) {\n    t.plan(1);\n    var obj = { one: 1, two: 2 };\n    t.equal(stringify(obj, {space: '  '}), ''\n        + '{\\n'\n        + '  \"one\": 1,\\n'\n        + '  \"two\": 2\\n'\n        + '}'\n    );\n});\n\ntest('space parameter (with tabs)', function (t) {\n    t.plan(1);\n    var obj = { one: 1, two: 2 };\n    t.equal(stringify(obj, {space: '\\t'}), ''\n        + '{\\n'\n        + '\\t\"one\": 1,\\n'\n        + '\\t\"two\": 2\\n'\n        + '}'\n    );\n});\n\ntest('space parameter (with a number)', function (t) {\n    t.plan(1);\n    var obj = { one: 1, two: 2 };\n    t.equal(stringify(obj, {space: 3}), ''\n        + '{\\n'\n        + '   \"one\": 1,\\n'\n        + '   \"two\": 2\\n'\n        + '}'\n    );\n});\n\ntest('space parameter (nested objects)', function (t) {\n    t.plan(1);\n    var obj = { one: 1, two: { b: 4, a: [2,3] } };\n    t.equal(stringify(obj, {space: '  '}), ''\n        + '{\\n'\n        + '  \"one\": 1,\\n'\n        + '  \"two\": {\\n'\n        + '    \"a\": [\\n'\n        + '      2,\\n'\n        + '      3\\n'\n        + '    ],\\n'\n        + '    \"b\": 4\\n'\n        + '  }\\n'\n        + '}'\n    );\n});\n\ntest('space parameter (same as native)', function (t) {\n    t.plan(1);\n    // for this test, properties need to be in alphabetical order\n    var obj = { one: 1, two: { a: [2,3], b: 4 } };\n    t.equal(stringify(obj, {space: '  '}), JSON.stringify(obj, null, '  '));\n});\n"]},"metadata":{},"sourceType":"script"}