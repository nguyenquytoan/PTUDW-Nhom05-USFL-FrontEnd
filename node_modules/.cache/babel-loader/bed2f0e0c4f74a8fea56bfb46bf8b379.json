{"ast":null,"code":"'use strict';\n\nconst os = require('os');\n\nconst hasFlag = require('has-flag');\n\nconst {\n  env\n} = process;\nlet forceColor;\n\nif (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false') || hasFlag('color=never')) {\n  forceColor = 0;\n} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true') || hasFlag('color=always')) {\n  forceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n  if (env.FORCE_COLOR === true || env.FORCE_COLOR === 'true') {\n    forceColor = 1;\n  } else if (env.FORCE_COLOR === false || env.FORCE_COLOR === 'false') {\n    forceColor = 0;\n  } else {\n    forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n  }\n}\n\nfunction translateLevel(level) {\n  if (level === 0) {\n    return false;\n  }\n\n  return {\n    level,\n    hasBasic: true,\n    has256: level >= 2,\n    has16m: level >= 3\n  };\n}\n\nfunction supportsColor(stream) {\n  if (forceColor === 0) {\n    return 0;\n  }\n\n  if (hasFlag('color=16m') || hasFlag('color=full') || hasFlag('color=truecolor')) {\n    return 3;\n  }\n\n  if (hasFlag('color=256')) {\n    return 2;\n  }\n\n  if (stream && !stream.isTTY && forceColor === undefined) {\n    return 0;\n  }\n\n  const min = forceColor || 0;\n\n  if (env.TERM === 'dumb') {\n    return min;\n  }\n\n  if (process.platform === 'win32') {\n    // Node.js 7.5.0 is the first version of Node.js to include a patch to\n    // libuv that enables 256 color output on Windows. Anything earlier and it\n    // won't work. However, here we target Node.js 8 at minimum as it is an LTS\n    // release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n    // release that supports 256 colors. Windows 10 build 14931 is the first release\n    // that supports 16m/TrueColor.\n    const osRelease = os.release().split('.');\n\n    if (Number(process.versions.node.split('.')[0]) >= 8 && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\n    }\n\n    return 1;\n  }\n\n  if ('CI' in env) {\n    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n      return 1;\n    }\n\n    return min;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n  }\n\n  if (env.COLORTERM === 'truecolor') {\n    return 3;\n  }\n\n  if ('TERM_PROGRAM' in env) {\n    const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n    switch (env.TERM_PROGRAM) {\n      case 'iTerm.app':\n        return version >= 3 ? 3 : 2;\n\n      case 'Apple_Terminal':\n        return 2;\n      // No default\n    }\n  }\n\n  if (/-256(color)?$/i.test(env.TERM)) {\n    return 2;\n  }\n\n  if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n    return 1;\n  }\n\n  if ('COLORTERM' in env) {\n    return 1;\n  }\n\n  return min;\n}\n\nfunction getSupportLevel(stream) {\n  const level = supportsColor(stream);\n  return translateLevel(level);\n}\n\nmodule.exports = {\n  supportsColor: getSupportLevel,\n  stdout: getSupportLevel(process.stdout),\n  stderr: getSupportLevel(process.stderr)\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/webpack-dev-server/node_modules/supports-color/index.js"],"names":["os","require","hasFlag","env","process","forceColor","FORCE_COLOR","length","Math","min","parseInt","translateLevel","level","hasBasic","has256","has16m","supportsColor","stream","isTTY","undefined","TERM","platform","osRelease","release","split","Number","versions","node","some","sign","CI_NAME","test","TEAMCITY_VERSION","COLORTERM","version","TERM_PROGRAM_VERSION","TERM_PROGRAM","getSupportLevel","module","exports","stdout","stderr"],"mappings":"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","sourcesContent":["'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === true || env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === false || env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n"]},"metadata":{},"sourceType":"script"}