{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observable_1 = require(\"../Observable\");\n\nvar isArray_1 = require(\"../util/isArray\");\n\nvar map_1 = require(\"../operators/map\");\n\nvar isObject_1 = require(\"../util/isObject\");\n\nvar from_1 = require(\"./from\");\n\nfunction forkJoin() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  if (sources.length === 1) {\n    var first_1 = sources[0];\n\n    if (isArray_1.isArray(first_1)) {\n      return forkJoinInternal(first_1, null);\n    }\n\n    if (isObject_1.isObject(first_1) && Object.getPrototypeOf(first_1) === Object.prototype) {\n      var keys = Object.keys(first_1);\n      return forkJoinInternal(keys.map(function (key) {\n        return first_1[key];\n      }), keys);\n    }\n  }\n\n  if (typeof sources[sources.length - 1] === 'function') {\n    var resultSelector_1 = sources.pop();\n    sources = sources.length === 1 && isArray_1.isArray(sources[0]) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(map_1.map(function (args) {\n      return resultSelector_1.apply(void 0, args);\n    }));\n  }\n\n  return forkJoinInternal(sources, null);\n}\n\nexports.forkJoin = forkJoin;\n\nfunction forkJoinInternal(sources, keys) {\n  return new Observable_1.Observable(function (subscriber) {\n    var len = sources.length;\n\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n\n    var values = new Array(len);\n    var completed = 0;\n    var emitted = 0;\n\n    var _loop_1 = function (i) {\n      var source = from_1.from(sources[i]);\n      var hasValue = false;\n      subscriber.add(source.subscribe({\n        next: function (value) {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n\n          values[i] = value;\n        },\n        error: function (err) {\n          return subscriber.error(err);\n        },\n        complete: function () {\n          completed++;\n\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ? keys.reduce(function (result, key, i) {\n                return result[key] = values[i], result;\n              }, {}) : values);\n            }\n\n            subscriber.complete();\n          }\n        }\n      }));\n    };\n\n    for (var i = 0; i < len; i++) {\n      _loop_1(i);\n    }\n  });\n}","map":{"version":3,"sources":["../../src/internal/observable/forkJoin.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar isArray_1 = require(\"../util/isArray\");\nvar map_1 = require(\"../operators/map\");\nvar isObject_1 = require(\"../util/isObject\");\nvar from_1 = require(\"./from\");\nfunction forkJoin() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    if (sources.length === 1) {\n        var first_1 = sources[0];\n        if (isArray_1.isArray(first_1)) {\n            return forkJoinInternal(first_1, null);\n        }\n        if (isObject_1.isObject(first_1) && Object.getPrototypeOf(first_1) === Object.prototype) {\n            var keys = Object.keys(first_1);\n            return forkJoinInternal(keys.map(function (key) { return first_1[key]; }), keys);\n        }\n    }\n    if (typeof sources[sources.length - 1] === 'function') {\n        var resultSelector_1 = sources.pop();\n        sources = (sources.length === 1 && isArray_1.isArray(sources[0])) ? sources[0] : sources;\n        return forkJoinInternal(sources, null).pipe(map_1.map(function (args) { return resultSelector_1.apply(void 0, args); }));\n    }\n    return forkJoinInternal(sources, null);\n}\nexports.forkJoin = forkJoin;\nfunction forkJoinInternal(sources, keys) {\n    return new Observable_1.Observable(function (subscriber) {\n        var len = sources.length;\n        if (len === 0) {\n            subscriber.complete();\n            return;\n        }\n        var values = new Array(len);\n        var completed = 0;\n        var emitted = 0;\n        var _loop_1 = function (i) {\n            var source = from_1.from(sources[i]);\n            var hasValue = false;\n            subscriber.add(source.subscribe({\n                next: function (value) {\n                    if (!hasValue) {\n                        hasValue = true;\n                        emitted++;\n                    }\n                    values[i] = value;\n                },\n                error: function (err) { return subscriber.error(err); },\n                complete: function () {\n                    completed++;\n                    if (completed === len || !hasValue) {\n                        if (emitted === len) {\n                            subscriber.next(keys ?\n                                keys.reduce(function (result, key, i) { return (result[key] = values[i], result); }, {}) :\n                                values);\n                        }\n                        subscriber.complete();\n                    }\n                }\n            }));\n        };\n        for (var i = 0; i < len; i++) {\n            _loop_1(i);\n        }\n    });\n}\n//# sourceMappingURL=forkJoin.js.map"]},"metadata":{},"sourceType":"script"}