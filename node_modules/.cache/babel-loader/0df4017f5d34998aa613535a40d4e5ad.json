{"ast":null,"code":"var tape = require('tape');\n\nvar type = require('./');\n\ntape('stringifies', function (t) {\n  t.same(type.stringify('http', 'tcp'), '_http._tcp');\n  t.same(type.stringify('http', 'tcp', 'sub'), '_http._tcp._sub');\n  t.same(type.stringify('http', 'tcp', 'sub', 'sub2'), '_http._tcp._sub._sub2');\n  t.same(type.stringify('http', 'tcp', ['sub', 'sub2']), '_http._tcp._sub._sub2');\n  t.same(type.stringify({\n    name: 'http',\n    protocol: 'tcp',\n    subtypes: ['sub', 'sub2']\n  }), '_http._tcp._sub._sub2');\n  t.end();\n});\ntape('parses', function (t) {\n  t.same(type.parse('_http._tcp'), {\n    name: 'http',\n    protocol: 'tcp',\n    subtypes: []\n  });\n  t.same(type.parse('_http._tcp._sub'), {\n    name: 'http',\n    protocol: 'tcp',\n    subtypes: ['sub']\n  });\n  t.same(type.parse('_http._tcp._sub._sub2'), {\n    name: 'http',\n    protocol: 'tcp',\n    subtypes: ['sub', 'sub2']\n  });\n  t.end();\n});\ntape('shorthands', function (t) {\n  t.same(type.tcp('http'), '_http._tcp');\n  t.same(type.tcp('http', 'sub'), '_http._tcp._sub');\n  t.same(type.tcp('http', 'sub', 'sub2'), '_http._tcp._sub._sub2');\n  t.same(type.tcp('http', ['sub', 'sub2']), '_http._tcp._sub._sub2');\n  t.end();\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/multicast-dns-service-types/test.js"],"names":["tape","require","type","t","same","stringify","name","protocol","subtypes","end","parse","tcp"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AAEAD,IAAI,CAAC,aAAD,EAAgB,UAAUG,CAAV,EAAa;AAC/BA,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACG,SAAL,CAAe,MAAf,EAAuB,KAAvB,CAAP,EAAsC,YAAtC;AACAF,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACG,SAAL,CAAe,MAAf,EAAuB,KAAvB,EAA8B,KAA9B,CAAP,EAA6C,iBAA7C;AACAF,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACG,SAAL,CAAe,MAAf,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,MAArC,CAAP,EAAqD,uBAArD;AACAF,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACG,SAAL,CAAe,MAAf,EAAuB,KAAvB,EAA8B,CAAC,KAAD,EAAQ,MAAR,CAA9B,CAAP,EAAuD,uBAAvD;AACAF,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACG,SAAL,CAAe;AAACC,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,QAAQ,EAAE,KAAzB;AAAgCC,IAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,MAAR;AAA1C,GAAf,CAAP,EAAmF,uBAAnF;AACAL,EAAAA,CAAC,CAACM,GAAF;AACD,CAPG,CAAJ;AASAT,IAAI,CAAC,QAAD,EAAW,UAAUG,CAAV,EAAa;AAC1BA,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACQ,KAAL,CAAW,YAAX,CAAP,EAAiC;AAACJ,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,QAAQ,EAAE,KAAzB;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GAAjC;AACAL,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACQ,KAAL,CAAW,iBAAX,CAAP,EAAsC;AAACJ,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,QAAQ,EAAE,KAAzB;AAAgCC,IAAAA,QAAQ,EAAE,CAAC,KAAD;AAA1C,GAAtC;AACAL,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACQ,KAAL,CAAW,uBAAX,CAAP,EAA4C;AAACJ,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,QAAQ,EAAE,KAAzB;AAAgCC,IAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,MAAR;AAA1C,GAA5C;AACAL,EAAAA,CAAC,CAACM,GAAF;AACD,CALG,CAAJ;AAOAT,IAAI,CAAC,YAAD,EAAe,UAAUG,CAAV,EAAa;AAC9BA,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACS,GAAL,CAAS,MAAT,CAAP,EAAyB,YAAzB;AACAR,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACS,GAAL,CAAS,MAAT,EAAiB,KAAjB,CAAP,EAAgC,iBAAhC;AACAR,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACS,GAAL,CAAS,MAAT,EAAiB,KAAjB,EAAwB,MAAxB,CAAP,EAAwC,uBAAxC;AACAR,EAAAA,CAAC,CAACC,IAAF,CAAOF,IAAI,CAACS,GAAL,CAAS,MAAT,EAAiB,CAAC,KAAD,EAAQ,MAAR,CAAjB,CAAP,EAA0C,uBAA1C;AACAR,EAAAA,CAAC,CAACM,GAAF;AACD,CANG,CAAJ","sourcesContent":["var tape = require('tape')\nvar type = require('./')\n\ntape('stringifies', function (t) {\n  t.same(type.stringify('http', 'tcp'), '_http._tcp')\n  t.same(type.stringify('http', 'tcp', 'sub'), '_http._tcp._sub')\n  t.same(type.stringify('http', 'tcp', 'sub', 'sub2'), '_http._tcp._sub._sub2')\n  t.same(type.stringify('http', 'tcp', ['sub', 'sub2']), '_http._tcp._sub._sub2')\n  t.same(type.stringify({name: 'http', protocol: 'tcp', subtypes: ['sub', 'sub2']}), '_http._tcp._sub._sub2')\n  t.end()\n})\n\ntape('parses', function (t) {\n  t.same(type.parse('_http._tcp'), {name: 'http', protocol: 'tcp', subtypes: []})\n  t.same(type.parse('_http._tcp._sub'), {name: 'http', protocol: 'tcp', subtypes: ['sub']})\n  t.same(type.parse('_http._tcp._sub._sub2'), {name: 'http', protocol: 'tcp', subtypes: ['sub', 'sub2']})\n  t.end()\n})\n\ntape('shorthands', function (t) {\n  t.same(type.tcp('http'), '_http._tcp')\n  t.same(type.tcp('http', 'sub'), '_http._tcp._sub')\n  t.same(type.tcp('http', 'sub', 'sub2'), '_http._tcp._sub._sub2')\n  t.same(type.tcp('http', ['sub', 'sub2']), '_http._tcp._sub._sub2')\n  t.end()\n})\n"]},"metadata":{},"sourceType":"script"}