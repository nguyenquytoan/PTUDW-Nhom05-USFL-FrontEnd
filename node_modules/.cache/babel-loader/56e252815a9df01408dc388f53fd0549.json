{"ast":null,"code":"/**\n * @fileoverview Rule that warns when identifier names are shorter or longer\n * than the values provided in configuration.\n * @author Burak Yigit Kaya aka BYK\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"enforce minimum and maximum identifier lengths\",\n      category: \"Stylistic Issues\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/id-length\"\n    },\n    schema: [{\n      type: \"object\",\n      properties: {\n        min: {\n          type: \"integer\",\n          default: 2\n        },\n        max: {\n          type: \"integer\"\n        },\n        exceptions: {\n          type: \"array\",\n          uniqueItems: true,\n          items: {\n            type: \"string\"\n          }\n        },\n        properties: {\n          enum: [\"always\", \"never\"]\n        }\n      },\n      additionalProperties: false\n    }],\n    messages: {\n      tooShort: \"Identifier name '{{name}}' is too short (< {{min}}).\",\n      tooLong: \"Identifier name '{{name}}' is too long (> {{max}}).\"\n    }\n  },\n\n  create(context) {\n    const options = context.options[0] || {};\n    const minLength = typeof options.min !== \"undefined\" ? options.min : 2;\n    const maxLength = typeof options.max !== \"undefined\" ? options.max : Infinity;\n    const properties = options.properties !== \"never\";\n    const exceptions = (options.exceptions ? options.exceptions : []).reduce((obj, item) => {\n      obj[item] = true;\n      return obj;\n    }, {});\n    const SUPPORTED_EXPRESSIONS = {\n      MemberExpression: properties && function (parent) {\n        return !parent.computed && ( // regular property assignment\n        parent.parent.left === parent && parent.parent.type === \"AssignmentExpression\" || // or the last identifier in an ObjectPattern destructuring\n        parent.parent.type === \"Property\" && parent.parent.value === parent && parent.parent.parent.type === \"ObjectPattern\" && parent.parent.parent.parent.left === parent.parent.parent);\n      },\n\n      AssignmentPattern(parent, node) {\n        return parent.left === node;\n      },\n\n      VariableDeclarator(parent, node) {\n        return parent.id === node;\n      },\n\n      Property: properties && function (parent, node) {\n        return parent.key === node;\n      },\n      ImportDefaultSpecifier: true,\n      RestElement: true,\n      FunctionExpression: true,\n      ArrowFunctionExpression: true,\n      ClassDeclaration: true,\n      FunctionDeclaration: true,\n      MethodDefinition: true,\n      CatchClause: true\n    };\n    return {\n      Identifier(node) {\n        const name = node.name;\n        const parent = node.parent;\n        const isShort = name.length < minLength;\n        const isLong = name.length > maxLength;\n\n        if (!(isShort || isLong) || exceptions[name]) {\n          return; // Nothing to report\n        }\n\n        const isValidExpression = SUPPORTED_EXPRESSIONS[parent.type];\n\n        if (isValidExpression && (isValidExpression === true || isValidExpression(parent, node))) {\n          context.report({\n            node,\n            messageId: isShort ? \"tooShort\" : \"tooLong\",\n            data: {\n              name,\n              min: minLength,\n              max: maxLength\n            }\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/lib/rules/id-length.js"],"names":["module","exports","meta","type","docs","description","category","recommended","url","schema","properties","min","default","max","exceptions","uniqueItems","items","enum","additionalProperties","messages","tooShort","tooLong","create","context","options","minLength","maxLength","Infinity","reduce","obj","item","SUPPORTED_EXPRESSIONS","MemberExpression","parent","computed","left","value","AssignmentPattern","node","VariableDeclarator","id","Property","key","ImportDefaultSpecifier","RestElement","FunctionExpression","ArrowFunctionExpression","ClassDeclaration","FunctionDeclaration","MethodDefinition","CatchClause","Identifier","name","isShort","length","isLong","isValidExpression","report","messageId","data"],"mappings":"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","sourcesContent":["/**\n * @fileoverview Rule that warns when identifier names are shorter or longer\n * than the values provided in configuration.\n * @author Burak Yigit Kaya aka BYK\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"enforce minimum and maximum identifier lengths\",\n            category: \"Stylistic Issues\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/id-length\"\n        },\n\n        schema: [\n            {\n                type: \"object\",\n                properties: {\n                    min: {\n                        type: \"integer\",\n                        default: 2\n                    },\n                    max: {\n                        type: \"integer\"\n                    },\n                    exceptions: {\n                        type: \"array\",\n                        uniqueItems: true,\n                        items: {\n                            type: \"string\"\n                        }\n                    },\n                    properties: {\n                        enum: [\"always\", \"never\"]\n                    }\n                },\n                additionalProperties: false\n            }\n        ],\n        messages: {\n            tooShort: \"Identifier name '{{name}}' is too short (< {{min}}).\",\n            tooLong: \"Identifier name '{{name}}' is too long (> {{max}}).\"\n        }\n    },\n\n    create(context) {\n        const options = context.options[0] || {};\n        const minLength = typeof options.min !== \"undefined\" ? options.min : 2;\n        const maxLength = typeof options.max !== \"undefined\" ? options.max : Infinity;\n        const properties = options.properties !== \"never\";\n        const exceptions = (options.exceptions ? options.exceptions : [])\n            .reduce((obj, item) => {\n                obj[item] = true;\n\n                return obj;\n            }, {});\n\n        const SUPPORTED_EXPRESSIONS = {\n            MemberExpression: properties && function(parent) {\n                return !parent.computed && (\n\n                    // regular property assignment\n                    (parent.parent.left === parent && parent.parent.type === \"AssignmentExpression\" ||\n\n                    // or the last identifier in an ObjectPattern destructuring\n                    parent.parent.type === \"Property\" && parent.parent.value === parent &&\n                    parent.parent.parent.type === \"ObjectPattern\" && parent.parent.parent.parent.left === parent.parent.parent)\n                );\n            },\n            AssignmentPattern(parent, node) {\n                return parent.left === node;\n            },\n            VariableDeclarator(parent, node) {\n                return parent.id === node;\n            },\n            Property: properties && function(parent, node) {\n                return parent.key === node;\n            },\n            ImportDefaultSpecifier: true,\n            RestElement: true,\n            FunctionExpression: true,\n            ArrowFunctionExpression: true,\n            ClassDeclaration: true,\n            FunctionDeclaration: true,\n            MethodDefinition: true,\n            CatchClause: true\n        };\n\n        return {\n            Identifier(node) {\n                const name = node.name;\n                const parent = node.parent;\n\n                const isShort = name.length < minLength;\n                const isLong = name.length > maxLength;\n\n                if (!(isShort || isLong) || exceptions[name]) {\n                    return; // Nothing to report\n                }\n\n                const isValidExpression = SUPPORTED_EXPRESSIONS[parent.type];\n\n                if (isValidExpression && (isValidExpression === true || isValidExpression(parent, node))) {\n                    context.report({\n                        node,\n                        messageId: isShort ? \"tooShort\" : \"tooLong\",\n                        data: { name, min: minLength, max: maxLength }\n                    });\n                }\n            }\n        };\n    }\n};\n"]},"metadata":{},"sourceType":"script"}