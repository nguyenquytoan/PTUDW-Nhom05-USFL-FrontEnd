{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasProp;\nexports.hasAnyProp = hasAnyProp;\nexports.hasEveryProp = hasEveryProp;\n\nvar _propName = require('./propName');\n\nvar _propName2 = _interopRequireDefault(_propName);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar DEFAULT_OPTIONS = {\n  spreadStrict: true,\n  ignoreCase: true\n};\n/**\n * Returns boolean indicating whether an prop exists on the props\n * property of a JSX element node.\n */\n\nfunction hasProp() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;\n  var propToCheck = options.ignoreCase ? prop.toUpperCase() : prop;\n  return props.some(function (attribute) {\n    // If the props contain a spread prop, then refer to strict param.\n    if (attribute.type === 'JSXSpreadAttribute') {\n      return !options.spreadStrict;\n    }\n\n    var currentProp = options.ignoreCase ? (0, _propName2.default)(attribute).toUpperCase() : (0, _propName2.default)(attribute);\n    return propToCheck === currentProp;\n  });\n}\n/**\n * Given the props on a node and a list of props to check, this returns a boolean\n * indicating if any of them exist on the node.\n */\n\n\nfunction hasAnyProp() {\n  var nodeProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;\n  var propsToCheck = typeof props === 'string' ? props.split(' ') : props;\n  return propsToCheck.some(function (prop) {\n    return hasProp(nodeProps, prop, options);\n  });\n}\n/**\n * Given the props on a node and a list of props to check, this returns a boolean\n * indicating if all of them exist on the node\n */\n\n\nfunction hasEveryProp() {\n  var nodeProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;\n  var propsToCheck = typeof props === 'string' ? props.split(' ') : props;\n  return propsToCheck.every(function (prop) {\n    return hasProp(nodeProps, prop, options);\n  });\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jsx-ast-utils/lib/hasProp.js"],"names":["Object","defineProperty","exports","value","default","hasProp","hasAnyProp","hasEveryProp","_propName","require","_propName2","_interopRequireDefault","obj","__esModule","DEFAULT_OPTIONS","spreadStrict","ignoreCase","props","arguments","length","undefined","prop","options","propToCheck","toUpperCase","some","attribute","type","currentProp","nodeProps","propsToCheck","split","every"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasProp;\nexports.hasAnyProp = hasAnyProp;\nexports.hasEveryProp = hasEveryProp;\n\nvar _propName = require('./propName');\n\nvar _propName2 = _interopRequireDefault(_propName);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_OPTIONS = {\n  spreadStrict: true,\n  ignoreCase: true\n};\n\n/**\n * Returns boolean indicating whether an prop exists on the props\n * property of a JSX element node.\n */\nfunction hasProp() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;\n\n  var propToCheck = options.ignoreCase ? prop.toUpperCase() : prop;\n\n  return props.some(function (attribute) {\n    // If the props contain a spread prop, then refer to strict param.\n    if (attribute.type === 'JSXSpreadAttribute') {\n      return !options.spreadStrict;\n    }\n\n    var currentProp = options.ignoreCase ? (0, _propName2.default)(attribute).toUpperCase() : (0, _propName2.default)(attribute);\n\n    return propToCheck === currentProp;\n  });\n}\n\n/**\n * Given the props on a node and a list of props to check, this returns a boolean\n * indicating if any of them exist on the node.\n */\nfunction hasAnyProp() {\n  var nodeProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;\n\n  var propsToCheck = typeof props === 'string' ? props.split(' ') : props;\n\n  return propsToCheck.some(function (prop) {\n    return hasProp(nodeProps, prop, options);\n  });\n}\n\n/**\n * Given the props on a node and a list of props to check, this returns a boolean\n * indicating if all of them exist on the node\n */\nfunction hasEveryProp() {\n  var nodeProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;\n\n  var propsToCheck = typeof props === 'string' ? props.split(' ') : props;\n\n  return propsToCheck.every(function (prop) {\n    return hasProp(nodeProps, prop, options);\n  });\n}"]},"metadata":{},"sourceType":"script"}