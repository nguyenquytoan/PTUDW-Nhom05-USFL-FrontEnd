{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.mjs';\nimport '../_version.mjs';\nconst serializableProperties = ['method', 'referrer', 'referrerPolicy', 'mode', 'credentials', 'cache', 'redirect', 'integrity', 'keepalive'];\n/**\n * A class to make it easier to serialize and de-serialize requests so they\n * can be stored in IndexedDB.\n *\n * @private\n */\n\nclass StorableRequest {\n  /**\n   * Converts a Request object to a plain object that can be structured\n   * cloned or JSON-stringified.\n   *\n   * @param {Request} request\n   * @return {Promise<StorableRequest>}\n   *\n   * @private\n   */\n  static async fromRequest(request) {\n    const requestData = {\n      url: request.url,\n      headers: {}\n    }; // Set the body if present.\n\n    if (request.method !== 'GET') {\n      // Use ArrayBuffer to support non-text request bodies.\n      // NOTE: we can't use Blobs becuse Safari doesn't support storing\n      // Blobs in IndexedDB in some cases:\n      // https://github.com/dfahlander/Dexie.js/issues/618#issuecomment-398348457\n      requestData.body = await request.clone().arrayBuffer();\n    } // Convert the headers from an iterable to an object.\n\n\n    for (const [key, value] of request.headers.entries()) {\n      requestData.headers[key] = value;\n    } // Add all other serializable request properties\n\n\n    for (const prop of serializableProperties) {\n      if (request[prop] !== undefined) {\n        requestData[prop] = request[prop];\n      }\n    }\n\n    return new StorableRequest(requestData);\n  }\n  /**\n   * Accepts an object of request data that can be used to construct a\n   * `Request` but can also be stored in IndexedDB.\n   *\n   * @param {Object} requestData An object of request data that includes the\n   *     `url` plus any relevant properties of\n   *     [requestInit]{@link https://fetch.spec.whatwg.org/#requestinit}.\n   * @private\n   */\n\n\n  constructor(requestData) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isType(requestData, 'object', {\n        moduleName: 'workbox-background-sync',\n        className: 'StorableRequest',\n        funcName: 'constructor',\n        paramName: 'requestData'\n      });\n      assert.isType(requestData.url, 'string', {\n        moduleName: 'workbox-background-sync',\n        className: 'StorableRequest',\n        funcName: 'constructor',\n        paramName: 'requestData.url'\n      });\n    } // If the request's mode is `navigate`, convert it to `same-origin` since\n    // navigation requests can't be constructed via script.\n\n\n    if (requestData.mode === 'navigate') {\n      requestData.mode = 'same-origin';\n    }\n\n    this._requestData = requestData;\n  }\n  /**\n   * Returns a deep clone of the instances `_requestData` object.\n   *\n   * @return {Object}\n   *\n   * @private\n   */\n\n\n  toObject() {\n    const requestData = Object.assign({}, this._requestData);\n    requestData.headers = Object.assign({}, this._requestData.headers);\n\n    if (requestData.body) {\n      requestData.body = requestData.body.slice(0);\n    }\n\n    return requestData;\n  }\n  /**\n   * Converts this instance to a Request.\n   *\n   * @return {Request}\n   *\n   * @private\n   */\n\n\n  toRequest() {\n    return new Request(this._requestData.url, this._requestData);\n  }\n  /**\n   * Creates and returns a deep clone of the instance.\n   *\n   * @return {StorableRequest}\n   *\n   * @private\n   */\n\n\n  clone() {\n    return new StorableRequest(this.toObject());\n  }\n\n}\n\nexport { StorableRequest };","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-background-sync/lib/StorableRequest.mjs"],"names":["assert","serializableProperties","StorableRequest","fromRequest","request","requestData","url","headers","method","body","clone","arrayBuffer","key","value","entries","prop","undefined","constructor","process","env","NODE_ENV","isType","moduleName","className","funcName","paramName","mode","_requestData","toObject","Object","assign","slice","toRequest","Request"],"mappings":"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","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport {assert} from 'workbox-core/_private/assert.mjs';\nimport '../_version.mjs';\n\n\nconst serializableProperties = [\n  'method',\n  'referrer',\n  'referrerPolicy',\n  'mode',\n  'credentials',\n  'cache',\n  'redirect',\n  'integrity',\n  'keepalive',\n];\n\n\n/**\n * A class to make it easier to serialize and de-serialize requests so they\n * can be stored in IndexedDB.\n *\n * @private\n */\nclass StorableRequest {\n  /**\n   * Converts a Request object to a plain object that can be structured\n   * cloned or JSON-stringified.\n   *\n   * @param {Request} request\n   * @return {Promise<StorableRequest>}\n   *\n   * @private\n   */\n  static async fromRequest(request) {\n    const requestData = {\n      url: request.url,\n      headers: {},\n    };\n\n    // Set the body if present.\n    if (request.method !== 'GET') {\n      // Use ArrayBuffer to support non-text request bodies.\n      // NOTE: we can't use Blobs becuse Safari doesn't support storing\n      // Blobs in IndexedDB in some cases:\n      // https://github.com/dfahlander/Dexie.js/issues/618#issuecomment-398348457\n      requestData.body = await request.clone().arrayBuffer();\n    }\n\n    // Convert the headers from an iterable to an object.\n    for (const [key, value] of request.headers.entries()) {\n      requestData.headers[key] = value;\n    }\n\n    // Add all other serializable request properties\n    for (const prop of serializableProperties) {\n      if (request[prop] !== undefined) {\n        requestData[prop] = request[prop];\n      }\n    }\n\n    return new StorableRequest(requestData);\n  }\n\n  /**\n   * Accepts an object of request data that can be used to construct a\n   * `Request` but can also be stored in IndexedDB.\n   *\n   * @param {Object} requestData An object of request data that includes the\n   *     `url` plus any relevant properties of\n   *     [requestInit]{@link https://fetch.spec.whatwg.org/#requestinit}.\n   * @private\n   */\n  constructor(requestData) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isType(requestData, 'object', {\n        moduleName: 'workbox-background-sync',\n        className: 'StorableRequest',\n        funcName: 'constructor',\n        paramName: 'requestData',\n      });\n      assert.isType(requestData.url, 'string', {\n        moduleName: 'workbox-background-sync',\n        className: 'StorableRequest',\n        funcName: 'constructor',\n        paramName: 'requestData.url',\n      });\n    }\n\n    // If the request's mode is `navigate`, convert it to `same-origin` since\n    // navigation requests can't be constructed via script.\n    if (requestData.mode === 'navigate') {\n      requestData.mode = 'same-origin';\n    }\n\n    this._requestData = requestData;\n  }\n\n  /**\n   * Returns a deep clone of the instances `_requestData` object.\n   *\n   * @return {Object}\n   *\n   * @private\n   */\n  toObject() {\n    const requestData = Object.assign({}, this._requestData);\n    requestData.headers = Object.assign({}, this._requestData.headers);\n    if (requestData.body) {\n      requestData.body = requestData.body.slice(0);\n    }\n\n    return requestData;\n  }\n\n  /**\n   * Converts this instance to a Request.\n   *\n   * @return {Request}\n   *\n   * @private\n   */\n  toRequest() {\n    return new Request(this._requestData.url, this._requestData);\n  }\n\n  /**\n   * Creates and returns a deep clone of the instance.\n   *\n   * @return {StorableRequest}\n   *\n   * @private\n   */\n  clone() {\n    return new StorableRequest(this.toObject());\n  }\n}\n\nexport {StorableRequest};\n"]},"metadata":{},"sourceType":"module"}