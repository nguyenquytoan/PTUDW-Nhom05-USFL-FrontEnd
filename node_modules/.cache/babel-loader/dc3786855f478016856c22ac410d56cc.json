{"ast":null,"code":"var parse = require('../');\n\nvar test = require('tape');\n\ntest('parse args', function (t) {\n  t.deepEqual(parse(['--no-moo']), {\n    moo: false,\n    _: []\n  }, 'no');\n  t.deepEqual(parse(['-v', 'a', '-v', 'b', '-v', 'c']), {\n    v: ['a', 'b', 'c'],\n    _: []\n  }, 'multi');\n  t.end();\n});\ntest('comprehensive', function (t) {\n  t.deepEqual(parse(['--name=meowmers', 'bare', '-cats', 'woo', '-h', 'awesome', '--multi=quux', '--key', 'value', '-b', '--bool', '--no-meep', '--multi=baz', '--', '--not-a-flag', 'eek']), {\n    c: true,\n    a: true,\n    t: true,\n    s: 'woo',\n    h: 'awesome',\n    b: true,\n    bool: true,\n    key: 'value',\n    multi: ['quux', 'baz'],\n    meep: false,\n    name: 'meowmers',\n    _: ['bare', '--not-a-flag', 'eek']\n  });\n  t.end();\n});\ntest('flag boolean', function (t) {\n  var argv = parse(['-t', 'moo'], {\n    boolean: 't'\n  });\n  t.deepEqual(argv, {\n    t: true,\n    _: ['moo']\n  });\n  t.deepEqual(typeof argv.t, 'boolean');\n  t.end();\n});\ntest('flag boolean value', function (t) {\n  var argv = parse(['--verbose', 'false', 'moo', '-t', 'true'], {\n    boolean: ['t', 'verbose'],\n    default: {\n      verbose: true\n    }\n  });\n  t.deepEqual(argv, {\n    verbose: false,\n    t: true,\n    _: ['moo']\n  });\n  t.deepEqual(typeof argv.verbose, 'boolean');\n  t.deepEqual(typeof argv.t, 'boolean');\n  t.end();\n});\ntest('newlines in params', function (t) {\n  var args = parse(['-s', \"X\\nX\"]);\n  t.deepEqual(args, {\n    _: [],\n    s: \"X\\nX\"\n  }); // reproduce in bash:\n  // VALUE=\"new\n  // line\"\n  // node program.js --s=\"$VALUE\"\n\n  args = parse([\"--s=X\\nX\"]);\n  t.deepEqual(args, {\n    _: [],\n    s: \"X\\nX\"\n  });\n  t.end();\n});\ntest('strings', function (t) {\n  var s = parse(['-s', '0001234'], {\n    string: 's'\n  }).s;\n  t.equal(s, '0001234');\n  t.equal(typeof s, 'string');\n  var x = parse(['-x', '56'], {\n    string: 'x'\n  }).x;\n  t.equal(x, '56');\n  t.equal(typeof x, 'string');\n  t.end();\n});\ntest('stringArgs', function (t) {\n  var s = parse(['  ', '  '], {\n    string: '_'\n  })._;\n\n  t.same(s.length, 2);\n  t.same(typeof s[0], 'string');\n  t.same(s[0], '  ');\n  t.same(typeof s[1], 'string');\n  t.same(s[1], '  ');\n  t.end();\n});\ntest('empty strings', function (t) {\n  var s = parse(['-s'], {\n    string: 's'\n  }).s;\n  t.equal(s, '');\n  t.equal(typeof s, 'string');\n  var str = parse(['--str'], {\n    string: 'str'\n  }).str;\n  t.equal(str, '');\n  t.equal(typeof str, 'string');\n  var letters = parse(['-art'], {\n    string: ['a', 't']\n  });\n  t.equal(letters.a, '');\n  t.equal(letters.r, true);\n  t.equal(letters.t, '');\n  t.end();\n});\ntest('string and alias', function (t) {\n  var x = parse(['--str', '000123'], {\n    string: 's',\n    alias: {\n      s: 'str'\n    }\n  });\n  t.equal(x.str, '000123');\n  t.equal(typeof x.str, 'string');\n  t.equal(x.s, '000123');\n  t.equal(typeof x.s, 'string');\n  var y = parse(['-s', '000123'], {\n    string: 'str',\n    alias: {\n      str: 's'\n    }\n  });\n  t.equal(y.str, '000123');\n  t.equal(typeof y.str, 'string');\n  t.equal(y.s, '000123');\n  t.equal(typeof y.s, 'string');\n  t.end();\n});\ntest('slashBreak', function (t) {\n  t.same(parse(['-I/foo/bar/baz']), {\n    I: '/foo/bar/baz',\n    _: []\n  });\n  t.same(parse(['-xyz/foo/bar/baz']), {\n    x: true,\n    y: true,\n    z: '/foo/bar/baz',\n    _: []\n  });\n  t.end();\n});\ntest('alias', function (t) {\n  var argv = parse(['-f', '11', '--zoom', '55'], {\n    alias: {\n      z: 'zoom'\n    }\n  });\n  t.equal(argv.zoom, 55);\n  t.equal(argv.z, argv.zoom);\n  t.equal(argv.f, 11);\n  t.end();\n});\ntest('multiAlias', function (t) {\n  var argv = parse(['-f', '11', '--zoom', '55'], {\n    alias: {\n      z: ['zm', 'zoom']\n    }\n  });\n  t.equal(argv.zoom, 55);\n  t.equal(argv.z, argv.zoom);\n  t.equal(argv.z, argv.zm);\n  t.equal(argv.f, 11);\n  t.end();\n});\ntest('nested dotted objects', function (t) {\n  var argv = parse(['--foo.bar', '3', '--foo.baz', '4', '--foo.quux.quibble', '5', '--foo.quux.o_O', '--beep.boop']);\n  t.same(argv.foo, {\n    bar: 3,\n    baz: 4,\n    quux: {\n      quibble: 5,\n      o_O: true\n    }\n  });\n  t.same(argv.beep, {\n    boop: true\n  });\n  t.end();\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/minimist/test/parse.js"],"names":["parse","require","test","t","deepEqual","moo","_","v","end","c","a","s","h","b","bool","key","multi","meep","name","argv","boolean","default","verbose","args","string","equal","x","same","length","str","letters","r","alias","y","I","z","zoom","f","zm","foo","bar","baz","quux","quibble","o_O","beep","boop"],"mappings":"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","sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('parse args', function (t) {\n    t.deepEqual(\n        parse([ '--no-moo' ]),\n        { moo : false, _ : [] },\n        'no'\n    );\n    t.deepEqual(\n        parse([ '-v', 'a', '-v', 'b', '-v', 'c' ]),\n        { v : ['a','b','c'], _ : [] },\n        'multi'\n    );\n    t.end();\n});\n \ntest('comprehensive', function (t) {\n    t.deepEqual(\n        parse([\n            '--name=meowmers', 'bare', '-cats', 'woo',\n            '-h', 'awesome', '--multi=quux',\n            '--key', 'value',\n            '-b', '--bool', '--no-meep', '--multi=baz',\n            '--', '--not-a-flag', 'eek'\n        ]),\n        {\n            c : true,\n            a : true,\n            t : true,\n            s : 'woo',\n            h : 'awesome',\n            b : true,\n            bool : true,\n            key : 'value',\n            multi : [ 'quux', 'baz' ],\n            meep : false,\n            name : 'meowmers',\n            _ : [ 'bare', '--not-a-flag', 'eek' ]\n        }\n    );\n    t.end();\n});\n\ntest('flag boolean', function (t) {\n    var argv = parse([ '-t', 'moo' ], { boolean: 't' });\n    t.deepEqual(argv, { t : true, _ : [ 'moo' ] });\n    t.deepEqual(typeof argv.t, 'boolean');\n    t.end();\n});\n\ntest('flag boolean value', function (t) {\n    var argv = parse(['--verbose', 'false', 'moo', '-t', 'true'], {\n        boolean: [ 't', 'verbose' ],\n        default: { verbose: true }\n    });\n    \n    t.deepEqual(argv, {\n        verbose: false,\n        t: true,\n        _: ['moo']\n    });\n    \n    t.deepEqual(typeof argv.verbose, 'boolean');\n    t.deepEqual(typeof argv.t, 'boolean');\n    t.end();\n});\n\ntest('newlines in params' , function (t) {\n    var args = parse([ '-s', \"X\\nX\" ])\n    t.deepEqual(args, { _ : [], s : \"X\\nX\" });\n    \n    // reproduce in bash:\n    // VALUE=\"new\n    // line\"\n    // node program.js --s=\"$VALUE\"\n    args = parse([ \"--s=X\\nX\" ])\n    t.deepEqual(args, { _ : [], s : \"X\\nX\" });\n    t.end();\n});\n\ntest('strings' , function (t) {\n    var s = parse([ '-s', '0001234' ], { string: 's' }).s;\n    t.equal(s, '0001234');\n    t.equal(typeof s, 'string');\n    \n    var x = parse([ '-x', '56' ], { string: 'x' }).x;\n    t.equal(x, '56');\n    t.equal(typeof x, 'string');\n    t.end();\n});\n\ntest('stringArgs', function (t) {\n    var s = parse([ '  ', '  ' ], { string: '_' })._;\n    t.same(s.length, 2);\n    t.same(typeof s[0], 'string');\n    t.same(s[0], '  ');\n    t.same(typeof s[1], 'string');\n    t.same(s[1], '  ');\n    t.end();\n});\n\ntest('empty strings', function(t) {\n    var s = parse([ '-s' ], { string: 's' }).s;\n    t.equal(s, '');\n    t.equal(typeof s, 'string');\n\n    var str = parse([ '--str' ], { string: 'str' }).str;\n    t.equal(str, '');\n    t.equal(typeof str, 'string');\n\n    var letters = parse([ '-art' ], {\n        string: [ 'a', 't' ]\n    });\n\n    t.equal(letters.a, '');\n    t.equal(letters.r, true);\n    t.equal(letters.t, '');\n\n    t.end();\n});\n\n\ntest('string and alias', function(t) {\n    var x = parse([ '--str',  '000123' ], {\n        string: 's',\n        alias: { s: 'str' }\n    });\n\n    t.equal(x.str, '000123');\n    t.equal(typeof x.str, 'string');\n    t.equal(x.s, '000123');\n    t.equal(typeof x.s, 'string');\n\n    var y = parse([ '-s',  '000123' ], {\n        string: 'str',\n        alias: { str: 's' }\n    });\n\n    t.equal(y.str, '000123');\n    t.equal(typeof y.str, 'string');\n    t.equal(y.s, '000123');\n    t.equal(typeof y.s, 'string');\n    t.end();\n});\n\ntest('slashBreak', function (t) {\n    t.same(\n        parse([ '-I/foo/bar/baz' ]),\n        { I : '/foo/bar/baz', _ : [] }\n    );\n    t.same(\n        parse([ '-xyz/foo/bar/baz' ]),\n        { x : true, y : true, z : '/foo/bar/baz', _ : [] }\n    );\n    t.end();\n});\n\ntest('alias', function (t) {\n    var argv = parse([ '-f', '11', '--zoom', '55' ], {\n        alias: { z: 'zoom' }\n    });\n    t.equal(argv.zoom, 55);\n    t.equal(argv.z, argv.zoom);\n    t.equal(argv.f, 11);\n    t.end();\n});\n\ntest('multiAlias', function (t) {\n    var argv = parse([ '-f', '11', '--zoom', '55' ], {\n        alias: { z: [ 'zm', 'zoom' ] }\n    });\n    t.equal(argv.zoom, 55);\n    t.equal(argv.z, argv.zoom);\n    t.equal(argv.z, argv.zm);\n    t.equal(argv.f, 11);\n    t.end();\n});\n\ntest('nested dotted objects', function (t) {\n    var argv = parse([\n        '--foo.bar', '3', '--foo.baz', '4',\n        '--foo.quux.quibble', '5', '--foo.quux.o_O',\n        '--beep.boop'\n    ]);\n    \n    t.same(argv.foo, {\n        bar : 3,\n        baz : 4,\n        quux : {\n            quibble : 5,\n            o_O : true\n        }\n    });\n    t.same(argv.beep, { boop : true });\n    t.end();\n});\n"]},"metadata":{},"sourceType":"script"}