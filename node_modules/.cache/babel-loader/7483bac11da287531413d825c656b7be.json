{"ast":null,"code":"'use strict';\n\nconst ADVANCED_GROUP = 'Advanced options:';\nconst DISPLAY_GROUP = 'Stats options:';\nconst SSL_GROUP = 'SSL options:';\nconst CONNECTION_GROUP = 'Connection options:';\nconst RESPONSE_GROUP = 'Response options:';\nconst BASIC_GROUP = 'Basic options:';\nmodule.exports = {\n  devServer: [{\n    name: 'bonjour',\n    type: Boolean,\n    describe: 'Broadcasts the server via ZeroConf networking on start'\n  }, {\n    name: 'lazy',\n    type: Boolean,\n    describe: 'Lazy'\n  }, {\n    name: 'liveReload',\n    type: Boolean,\n    defaultValue: true,\n    describe: 'Enables/Disables live reloading on changing files'\n  }, {\n    name: 'serveIndex',\n    type: Boolean,\n    describe: 'Enables/Disables serveIndex middleware',\n    defaultValue: true\n  }, {\n    name: 'inline',\n    type: Boolean,\n    defaultValue: true,\n    describe: 'Inline mode (set to false to disable including client scripts like livereload)'\n  }, {\n    name: 'profile',\n    type: Boolean,\n    describe: 'Print compilation profile data for progress steps'\n  }, {\n    name: 'progress',\n    type: Boolean,\n    describe: 'Print compilation progress in percentage',\n    group: BASIC_GROUP\n  }, {\n    name: 'hot-only',\n    type: Boolean,\n    describe: 'Do not refresh page if HMR fails',\n    group: ADVANCED_GROUP\n  }, {\n    name: 'stdin',\n    type: Boolean,\n    describe: 'close when stdin ends'\n  }, {\n    name: 'open',\n    type: String,\n    describe: 'Open the default browser, or optionally specify a browser name'\n  }, {\n    name: 'useLocalIp',\n    type: Boolean,\n    describe: 'Open default browser with local IP'\n  }, {\n    name: 'open-page',\n    type: String,\n    describe: 'Open default browser with the specified page'\n  }, {\n    name: 'client-log-level',\n    type: String,\n    group: DISPLAY_GROUP,\n    defaultValue: 'info',\n    describe: 'Log level in the browser (trace, debug, info, warn, error or silent)'\n  }, {\n    name: 'https',\n    type: Boolean,\n    group: SSL_GROUP,\n    describe: 'HTTPS'\n  }, {\n    name: 'http2',\n    type: Boolean,\n    group: SSL_GROUP,\n    describe: 'HTTP/2, must be used with HTTPS'\n  }, {\n    name: 'key',\n    type: String,\n    describe: 'Path to a SSL key.',\n    group: SSL_GROUP\n  }, {\n    name: 'cert',\n    type: String,\n    describe: 'Path to a SSL certificate.',\n    group: SSL_GROUP\n  }, {\n    name: 'cacert',\n    type: String,\n    describe: 'Path to a SSL CA certificate.',\n    group: SSL_GROUP\n  }, {\n    name: 'pfx',\n    type: String,\n    describe: 'Path to a SSL pfx file.',\n    group: SSL_GROUP\n  }, {\n    name: 'pfx-passphrase',\n    type: String,\n    describe: 'Passphrase for pfx file.',\n    group: SSL_GROUP\n  }, {\n    name: 'content-base',\n    type: String,\n    describe: 'A directory or URL to serve HTML content from.',\n    group: RESPONSE_GROUP\n  }, {\n    name: 'watch-content-base',\n    type: Boolean,\n    describe: 'Enable live-reloading of the content-base.',\n    group: RESPONSE_GROUP\n  }, {\n    name: 'history-api-fallback',\n    type: Boolean,\n    describe: 'Fallback to /index.html for Single Page Applications.',\n    group: RESPONSE_GROUP\n  }, {\n    name: 'compress',\n    type: Boolean,\n    describe: 'Enable gzip compression',\n    group: RESPONSE_GROUP\n  }, // findPort is currently not set up\n  {\n    name: 'port',\n    type: Number,\n    describe: 'The port',\n    group: CONNECTION_GROUP\n  }, {\n    name: 'disable-host-check',\n    type: Boolean,\n    describe: 'Will not check the host',\n    group: CONNECTION_GROUP\n  }, {\n    name: 'socket',\n    type: String,\n    describe: 'Socket to listen',\n    group: CONNECTION_GROUP\n  }, {\n    name: 'public',\n    type: String,\n    describe: 'The public hostname/ip address of the server',\n    group: CONNECTION_GROUP\n  }, {\n    name: 'host',\n    type: String,\n    describe: 'The hostname/ip address the server will bind to',\n    group: CONNECTION_GROUP\n  }, // use command-line-args \"multiple\" option, allowing the usage: --allowed-hosts host1 host2 host3\n  // instead of the old, comma-separated syntax: --allowed-hosts host1,host2,host3\n  {\n    name: 'allowed-hosts',\n    type: String,\n    describe: 'A list of hosts that are allowed to access the dev server, separated by spaces',\n    group: CONNECTION_GROUP,\n    multiple: true\n  }]\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/webpack-dev-server/bin/cli-flags.js"],"names":["ADVANCED_GROUP","DISPLAY_GROUP","SSL_GROUP","CONNECTION_GROUP","RESPONSE_GROUP","BASIC_GROUP","module","exports","devServer","name","type","Boolean","describe","defaultValue","group","String","Number","multiple"],"mappings":"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","sourcesContent":["'use strict';\n\nconst ADVANCED_GROUP = 'Advanced options:';\nconst DISPLAY_GROUP = 'Stats options:';\nconst SSL_GROUP = 'SSL options:';\nconst CONNECTION_GROUP = 'Connection options:';\nconst RESPONSE_GROUP = 'Response options:';\nconst BASIC_GROUP = 'Basic options:';\n\nmodule.exports = {\n  devServer: [\n    {\n      name: 'bonjour',\n      type: Boolean,\n      describe: 'Broadcasts the server via ZeroConf networking on start',\n    },\n    {\n      name: 'lazy',\n      type: Boolean,\n      describe: 'Lazy',\n    },\n    {\n      name: 'liveReload',\n      type: Boolean,\n      defaultValue: true,\n      describe: 'Enables/Disables live reloading on changing files',\n    },\n    {\n      name: 'serveIndex',\n      type: Boolean,\n      describe: 'Enables/Disables serveIndex middleware',\n      defaultValue: true,\n    },\n    {\n      name: 'inline',\n      type: Boolean,\n      defaultValue: true,\n      describe:\n        'Inline mode (set to false to disable including client scripts like livereload)',\n    },\n    {\n      name: 'profile',\n      type: Boolean,\n      describe: 'Print compilation profile data for progress steps',\n    },\n    {\n      name: 'progress',\n      type: Boolean,\n      describe: 'Print compilation progress in percentage',\n      group: BASIC_GROUP,\n    },\n    {\n      name: 'hot-only',\n      type: Boolean,\n      describe: 'Do not refresh page if HMR fails',\n      group: ADVANCED_GROUP,\n    },\n    {\n      name: 'stdin',\n      type: Boolean,\n      describe: 'close when stdin ends',\n    },\n    {\n      name: 'open',\n      type: String,\n      describe:\n        'Open the default browser, or optionally specify a browser name',\n    },\n    {\n      name: 'useLocalIp',\n      type: Boolean,\n      describe: 'Open default browser with local IP',\n    },\n    {\n      name: 'open-page',\n      type: String,\n      describe: 'Open default browser with the specified page',\n    },\n    {\n      name: 'client-log-level',\n      type: String,\n      group: DISPLAY_GROUP,\n      defaultValue: 'info',\n      describe:\n        'Log level in the browser (trace, debug, info, warn, error or silent)',\n    },\n    {\n      name: 'https',\n      type: Boolean,\n      group: SSL_GROUP,\n      describe: 'HTTPS',\n    },\n    {\n      name: 'http2',\n      type: Boolean,\n      group: SSL_GROUP,\n      describe: 'HTTP/2, must be used with HTTPS',\n    },\n    {\n      name: 'key',\n      type: String,\n      describe: 'Path to a SSL key.',\n      group: SSL_GROUP,\n    },\n    {\n      name: 'cert',\n      type: String,\n      describe: 'Path to a SSL certificate.',\n      group: SSL_GROUP,\n    },\n    {\n      name: 'cacert',\n      type: String,\n      describe: 'Path to a SSL CA certificate.',\n      group: SSL_GROUP,\n    },\n    {\n      name: 'pfx',\n      type: String,\n      describe: 'Path to a SSL pfx file.',\n      group: SSL_GROUP,\n    },\n    {\n      name: 'pfx-passphrase',\n      type: String,\n      describe: 'Passphrase for pfx file.',\n      group: SSL_GROUP,\n    },\n    {\n      name: 'content-base',\n      type: String,\n      describe: 'A directory or URL to serve HTML content from.',\n      group: RESPONSE_GROUP,\n    },\n    {\n      name: 'watch-content-base',\n      type: Boolean,\n      describe: 'Enable live-reloading of the content-base.',\n      group: RESPONSE_GROUP,\n    },\n    {\n      name: 'history-api-fallback',\n      type: Boolean,\n      describe: 'Fallback to /index.html for Single Page Applications.',\n      group: RESPONSE_GROUP,\n    },\n    {\n      name: 'compress',\n      type: Boolean,\n      describe: 'Enable gzip compression',\n      group: RESPONSE_GROUP,\n    },\n    // findPort is currently not set up\n    {\n      name: 'port',\n      type: Number,\n      describe: 'The port',\n      group: CONNECTION_GROUP,\n    },\n    {\n      name: 'disable-host-check',\n      type: Boolean,\n      describe: 'Will not check the host',\n      group: CONNECTION_GROUP,\n    },\n    {\n      name: 'socket',\n      type: String,\n      describe: 'Socket to listen',\n      group: CONNECTION_GROUP,\n    },\n    {\n      name: 'public',\n      type: String,\n      describe: 'The public hostname/ip address of the server',\n      group: CONNECTION_GROUP,\n    },\n    {\n      name: 'host',\n      type: String,\n      describe: 'The hostname/ip address the server will bind to',\n      group: CONNECTION_GROUP,\n    },\n    // use command-line-args \"multiple\" option, allowing the usage: --allowed-hosts host1 host2 host3\n    // instead of the old, comma-separated syntax: --allowed-hosts host1,host2,host3\n    {\n      name: 'allowed-hosts',\n      type: String,\n      describe:\n        'A list of hosts that are allowed to access the dev server, separated by spaces',\n      group: CONNECTION_GROUP,\n      multiple: true,\n    },\n  ],\n};\n"]},"metadata":{},"sourceType":"script"}