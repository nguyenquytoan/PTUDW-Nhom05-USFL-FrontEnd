{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar no_case_1 = require(\"no-case\");\n\nfunction pascalCaseTransform(input, index) {\n  var firstChar = input.charAt(0);\n  var lowerChars = input.substr(1).toLowerCase();\n\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return \"_\" + firstChar + lowerChars;\n  }\n\n  return \"\" + firstChar.toUpperCase() + lowerChars;\n}\n\nexports.pascalCaseTransform = pascalCaseTransform;\n\nfunction pascalCaseTransformMerge(input) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexports.pascalCaseTransformMerge = pascalCaseTransformMerge;\n\nfunction pascalCase(input, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return no_case_1.noCase(input, tslib_1.__assign({\n    delimiter: \"\",\n    transform: pascalCaseTransform\n  }, options));\n}\n\nexports.pascalCase = pascalCase;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAIA,SAAgB,mBAAhB,CAAoC,KAApC,EAAmD,KAAnD,EAAgE;AAC9D,MAAM,SAAS,GAAG,KAAK,CAAC,MAAN,CAAa,CAAb,CAAlB;AACA,MAAM,UAAU,GAAG,KAAK,CAAC,MAAN,CAAa,CAAb,EAAgB,WAAhB,EAAnB;;AACA,MAAI,KAAK,GAAG,CAAR,IAAa,SAAS,IAAI,GAA1B,IAAiC,SAAS,IAAI,GAAlD,EAAuD;AACrD,WAAO,MAAI,SAAJ,GAAgB,UAAvB;AACD;;AACD,SAAO,KAAG,SAAS,CAAC,WAAV,EAAH,GAA6B,UAApC;AACD;;AAPD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AASA,SAAgB,wBAAhB,CAAyC,KAAzC,EAAsD;AACpD,SAAO,KAAK,CAAC,MAAN,CAAa,CAAb,EAAgB,WAAhB,KAAgC,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,WAAf,EAAvC;AACD;;AAFD,OAAA,CAAA,wBAAA,GAAA,wBAAA;;AAIA,SAAgB,UAAhB,CAA2B,KAA3B,EAA0C,OAA1C,EAA+D;AAArB,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAqB;;AAC7D,SAAO,SAAA,CAAA,MAAA,CAAO,KAAP,EAAY,OAAA,CAAA,QAAA,CAAA;AACjB,IAAA,SAAS,EAAE,EADM;AAEjB,IAAA,SAAS,EAAE;AAFM,GAAA,EAGd,OAHc,CAAZ,CAAP;AAKD;;AAND,OAAA,CAAA,UAAA,GAAA,UAAA","sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function pascalCaseTransform(input: string, index: number) {\n  const firstChar = input.charAt(0);\n  const lowerChars = input.substr(1).toLowerCase();\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return `_${firstChar}${lowerChars}`;\n  }\n  return `${firstChar.toUpperCase()}${lowerChars}`;\n}\n\nexport function pascalCaseTransformMerge(input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexport function pascalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"\",\n    transform: pascalCaseTransform,\n    ...options\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}