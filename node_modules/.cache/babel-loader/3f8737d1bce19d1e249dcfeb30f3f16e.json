{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.mjs';\nimport { cacheNames } from './_private/cacheNames.mjs';\nimport { WorkboxError } from './_private/WorkboxError.mjs';\nimport './_version.mjs';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @alias workbox.core.setCacheNameDetails\n */\n\nexport const setCacheNameDetails = details => {\n  if (process.env.NODE_ENV !== 'production') {\n    Object.keys(details).forEach(key => {\n      assert.isType(details[key], 'string', {\n        moduleName: 'workbox-core',\n        funcName: 'setCacheNameDetails',\n        paramName: `details.${key}`\n      });\n    });\n\n    if ('precache' in details && details.precache.length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'precache',\n        value: details.precache\n      });\n    }\n\n    if ('runtime' in details && details.runtime.length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'runtime',\n        value: details.runtime\n      });\n    }\n\n    if ('googleAnalytics' in details && details.googleAnalytics.length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'googleAnalytics',\n        value: details.googleAnalytics\n      });\n    }\n  }\n\n  cacheNames.updateDetails(details);\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-core/setCacheNameDetails.mjs"],"names":["assert","cacheNames","WorkboxError","setCacheNameDetails","details","process","env","NODE_ENV","Object","keys","forEach","key","isType","moduleName","funcName","paramName","precache","length","cacheNameId","value","runtime","googleAnalytics","updateDetails"],"mappings":"AAAA;;;;;;;AAQA,SAAQA,MAAR,QAAqB,uBAArB;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AACA,OAAO,gBAAP;AAGA;;;;;;;;;;;;;;;;;;AAiBA,OAAO,MAAMC,mBAAmB,GAAIC,OAAD,IAAa;AAC9C,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,IAAAA,MAAM,CAACC,IAAP,CAAYL,OAAZ,EAAqBM,OAArB,CAA8BC,GAAD,IAAS;AACpCX,MAAAA,MAAM,CAACY,MAAP,CAAcR,OAAO,CAACO,GAAD,CAArB,EAA4B,QAA5B,EAAsC;AACpCE,QAAAA,UAAU,EAAE,cADwB;AAEpCC,QAAAA,QAAQ,EAAE,qBAF0B;AAGpCC,QAAAA,SAAS,EAAG,WAAUJ,GAAI;AAHU,OAAtC;AAKD,KAND;;AAQA,QAAI,cAAcP,OAAd,IAAyBA,OAAO,CAACY,QAAR,CAAiBC,MAAjB,KAA4B,CAAzD,EAA4D;AAC1D,YAAM,IAAIf,YAAJ,CAAiB,oBAAjB,EAAuC;AAC3CgB,QAAAA,WAAW,EAAE,UAD8B;AAE3CC,QAAAA,KAAK,EAAEf,OAAO,CAACY;AAF4B,OAAvC,CAAN;AAID;;AAED,QAAI,aAAaZ,OAAb,IAAwBA,OAAO,CAACgB,OAAR,CAAgBH,MAAhB,KAA2B,CAAvD,EAA0D;AACxD,YAAM,IAAIf,YAAJ,CAAiB,oBAAjB,EAAuC;AAC3CgB,QAAAA,WAAW,EAAE,SAD8B;AAE3CC,QAAAA,KAAK,EAAEf,OAAO,CAACgB;AAF4B,OAAvC,CAAN;AAID;;AAED,QAAI,qBAAqBhB,OAArB,IAAgCA,OAAO,CAACiB,eAAR,CAAwBJ,MAAxB,KAAmC,CAAvE,EAA0E;AACxE,YAAM,IAAIf,YAAJ,CAAiB,oBAAjB,EAAuC;AAC3CgB,QAAAA,WAAW,EAAE,iBAD8B;AAE3CC,QAAAA,KAAK,EAAEf,OAAO,CAACiB;AAF4B,OAAvC,CAAN;AAID;AACF;;AAEDpB,EAAAA,UAAU,CAACqB,aAAX,CAAyBlB,OAAzB;AACD,CAjCM","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport {assert} from './_private/assert.mjs';\nimport {cacheNames} from './_private/cacheNames.mjs';\nimport {WorkboxError} from './_private/WorkboxError.mjs';\nimport './_version.mjs';\n\n\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @alias workbox.core.setCacheNameDetails\n */\nexport const setCacheNameDetails = (details) => {\n  if (process.env.NODE_ENV !== 'production') {\n    Object.keys(details).forEach((key) => {\n      assert.isType(details[key], 'string', {\n        moduleName: 'workbox-core',\n        funcName: 'setCacheNameDetails',\n        paramName: `details.${key}`,\n      });\n    });\n\n    if ('precache' in details && details.precache.length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'precache',\n        value: details.precache,\n      });\n    }\n\n    if ('runtime' in details && details.runtime.length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'runtime',\n        value: details.runtime,\n      });\n    }\n\n    if ('googleAnalytics' in details && details.googleAnalytics.length === 0) {\n      throw new WorkboxError('invalid-cache-name', {\n        cacheNameId: 'googleAnalytics',\n        value: details.googleAnalytics,\n      });\n    }\n  }\n\n  cacheNames.updateDetails(details);\n};\n"]},"metadata":{},"sourceType":"module"}