{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst ts = require(\"typescript\");\n\nconst util_1 = require(\"./util\");\n\nfunction convertAst(sourceFile) {\n  const wrapped = {\n    node: sourceFile,\n    parent: undefined,\n    kind: ts.SyntaxKind.SourceFile,\n    children: [],\n    next: undefined,\n    skip: undefined\n  };\n  const flat = [];\n  let current = wrapped;\n  let previous = current;\n  ts.forEachChild(sourceFile, function wrap(node) {\n    flat.push(node);\n    const parent = current;\n    previous.next = current = {\n      node,\n      parent,\n      kind: node.kind,\n      children: [],\n      next: undefined,\n      skip: undefined\n    };\n    if (previous !== parent) setSkip(previous, current);\n    previous = current;\n    parent.children.push(current);\n    if (util_1.isNodeKind(node.kind)) ts.forEachChild(node, wrap);\n    current = parent;\n  });\n  return {\n    wrapped,\n    flat\n  };\n}\n\nexports.convertAst = convertAst;\n\nfunction setSkip(node, skip) {\n  do {\n    node.skip = skip;\n    node = node.parent;\n  } while (node !== skip.parent);\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/tsutils/util/convert-ast.js"],"names":["Object","defineProperty","exports","value","ts","require","util_1","convertAst","sourceFile","wrapped","node","parent","undefined","kind","SyntaxKind","SourceFile","children","next","skip","flat","current","previous","forEachChild","wrap","push","setSkip","isNodeKind"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,YAAD,CAAlB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,SAASE,UAAT,CAAoBC,UAApB,EAAgC;AAC5B,QAAMC,OAAO,GAAG;AACZC,IAAAA,IAAI,EAAEF,UADM;AAEZG,IAAAA,MAAM,EAAEC,SAFI;AAGZC,IAAAA,IAAI,EAAET,EAAE,CAACU,UAAH,CAAcC,UAHR;AAIZC,IAAAA,QAAQ,EAAE,EAJE;AAKZC,IAAAA,IAAI,EAAEL,SALM;AAMZM,IAAAA,IAAI,EAAEN;AANM,GAAhB;AAQA,QAAMO,IAAI,GAAG,EAAb;AACA,MAAIC,OAAO,GAAGX,OAAd;AACA,MAAIY,QAAQ,GAAGD,OAAf;AACAhB,EAAAA,EAAE,CAACkB,YAAH,CAAgBd,UAAhB,EAA4B,SAASe,IAAT,CAAcb,IAAd,EAAoB;AAC5CS,IAAAA,IAAI,CAACK,IAAL,CAAUd,IAAV;AACA,UAAMC,MAAM,GAAGS,OAAf;AACAC,IAAAA,QAAQ,CAACJ,IAAT,GAAgBG,OAAO,GAAG;AACtBV,MAAAA,IADsB;AAEtBC,MAAAA,MAFsB;AAGtBE,MAAAA,IAAI,EAAEH,IAAI,CAACG,IAHW;AAItBG,MAAAA,QAAQ,EAAE,EAJY;AAKtBC,MAAAA,IAAI,EAAEL,SALgB;AAMtBM,MAAAA,IAAI,EAAEN;AANgB,KAA1B;AAQA,QAAIS,QAAQ,KAAKV,MAAjB,EACIc,OAAO,CAACJ,QAAD,EAAWD,OAAX,CAAP;AACJC,IAAAA,QAAQ,GAAGD,OAAX;AACAT,IAAAA,MAAM,CAACK,QAAP,CAAgBQ,IAAhB,CAAqBJ,OAArB;AACA,QAAId,MAAM,CAACoB,UAAP,CAAkBhB,IAAI,CAACG,IAAvB,CAAJ,EACIT,EAAE,CAACkB,YAAH,CAAgBZ,IAAhB,EAAsBa,IAAtB;AACJH,IAAAA,OAAO,GAAGT,MAAV;AACH,GAlBD;AAmBA,SAAO;AACHF,IAAAA,OADG;AAEHU,IAAAA;AAFG,GAAP;AAIH;;AACDjB,OAAO,CAACK,UAAR,GAAqBA,UAArB;;AACA,SAASkB,OAAT,CAAiBf,IAAjB,EAAuBQ,IAAvB,EAA6B;AACzB,KAAG;AACCR,IAAAA,IAAI,CAACQ,IAAL,GAAYA,IAAZ;AACAR,IAAAA,IAAI,GAAGA,IAAI,CAACC,MAAZ;AACH,GAHD,QAGSD,IAAI,KAAKQ,IAAI,CAACP,MAHvB;AAIH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ts = require(\"typescript\");\nconst util_1 = require(\"./util\");\nfunction convertAst(sourceFile) {\n    const wrapped = {\n        node: sourceFile,\n        parent: undefined,\n        kind: ts.SyntaxKind.SourceFile,\n        children: [],\n        next: undefined,\n        skip: undefined,\n    };\n    const flat = [];\n    let current = wrapped;\n    let previous = current;\n    ts.forEachChild(sourceFile, function wrap(node) {\n        flat.push(node);\n        const parent = current;\n        previous.next = current = {\n            node,\n            parent,\n            kind: node.kind,\n            children: [],\n            next: undefined,\n            skip: undefined,\n        };\n        if (previous !== parent)\n            setSkip(previous, current);\n        previous = current;\n        parent.children.push(current);\n        if (util_1.isNodeKind(node.kind))\n            ts.forEachChild(node, wrap);\n        current = parent;\n    });\n    return {\n        wrapped,\n        flat,\n    };\n}\nexports.convertAst = convertAst;\nfunction setSkip(node, skip) {\n    do {\n        node.skip = skip;\n        node = node.parent;\n    } while (node !== skip.parent);\n}\n"]},"metadata":{},"sourceType":"script"}