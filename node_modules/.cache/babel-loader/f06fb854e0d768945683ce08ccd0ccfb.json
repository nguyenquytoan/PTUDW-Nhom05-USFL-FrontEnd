{"ast":null,"code":"var canReorder = require('./reorderable').canReorder;\n\nvar extractProperties = require('./extract-properties');\n\nvar optimizeProperties = require('./properties/optimize');\n\nvar serializeRules = require('../../writer/one-time').rules;\n\nvar Token = require('../../tokenizer/token');\n\nfunction mergeNonAdjacentBySelector(tokens, context) {\n  var specificityCache = context.cache.specificity;\n  var allSelectors = {};\n  var repeatedSelectors = [];\n  var i;\n\n  for (i = tokens.length - 1; i >= 0; i--) {\n    if (tokens[i][0] != Token.RULE) continue;\n    if (tokens[i][2].length === 0) continue;\n    var selector = serializeRules(tokens[i][1]);\n    allSelectors[selector] = [i].concat(allSelectors[selector] || []);\n    if (allSelectors[selector].length == 2) repeatedSelectors.push(selector);\n  }\n\n  for (i = repeatedSelectors.length - 1; i >= 0; i--) {\n    var positions = allSelectors[repeatedSelectors[i]];\n\n    selectorIterator: for (var j = positions.length - 1; j > 0; j--) {\n      var positionOne = positions[j - 1];\n      var tokenOne = tokens[positionOne];\n      var positionTwo = positions[j];\n      var tokenTwo = tokens[positionTwo];\n\n      directionIterator: for (var direction = 1; direction >= -1; direction -= 2) {\n        var topToBottom = direction == 1;\n        var from = topToBottom ? positionOne + 1 : positionTwo - 1;\n        var to = topToBottom ? positionTwo : positionOne;\n        var delta = topToBottom ? 1 : -1;\n        var moved = topToBottom ? tokenOne : tokenTwo;\n        var target = topToBottom ? tokenTwo : tokenOne;\n        var movedProperties = extractProperties(moved);\n\n        while (from != to) {\n          var traversedProperties = extractProperties(tokens[from]);\n          from += delta; // traversed then moved as we move selectors towards the start\n\n          var reorderable = topToBottom ? canReorder(movedProperties, traversedProperties, specificityCache) : canReorder(traversedProperties, movedProperties, specificityCache);\n          if (!reorderable && !topToBottom) continue selectorIterator;\n          if (!reorderable && topToBottom) continue directionIterator;\n        }\n\n        if (topToBottom) {\n          Array.prototype.push.apply(moved[2], target[2]);\n          target[2] = moved[2];\n        } else {\n          Array.prototype.push.apply(target[2], moved[2]);\n        }\n\n        optimizeProperties(target[2], true, true, context);\n        moved[2] = [];\n      }\n    }\n  }\n}\n\nmodule.exports = mergeNonAdjacentBySelector;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/optimizer/level-2/merge-non-adjacent-by-selector.js"],"names":["canReorder","require","extractProperties","optimizeProperties","serializeRules","rules","Token","mergeNonAdjacentBySelector","tokens","context","specificityCache","cache","specificity","allSelectors","repeatedSelectors","i","length","RULE","selector","concat","push","positions","selectorIterator","j","positionOne","tokenOne","positionTwo","tokenTwo","directionIterator","direction","topToBottom","from","to","delta","moved","target","movedProperties","traversedProperties","reorderable","Array","prototype","apply","module","exports"],"mappings":"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","sourcesContent":["var canReorder = require('./reorderable').canReorder;\nvar extractProperties = require('./extract-properties');\n\nvar optimizeProperties = require('./properties/optimize');\n\nvar serializeRules = require('../../writer/one-time').rules;\n\nvar Token = require('../../tokenizer/token');\n\nfunction mergeNonAdjacentBySelector(tokens, context) {\n  var specificityCache = context.cache.specificity;\n  var allSelectors = {};\n  var repeatedSelectors = [];\n  var i;\n\n  for (i = tokens.length - 1; i >= 0; i--) {\n    if (tokens[i][0] != Token.RULE)\n      continue;\n    if (tokens[i][2].length === 0)\n      continue;\n\n    var selector = serializeRules(tokens[i][1]);\n    allSelectors[selector] = [i].concat(allSelectors[selector] || []);\n\n    if (allSelectors[selector].length == 2)\n      repeatedSelectors.push(selector);\n  }\n\n  for (i = repeatedSelectors.length - 1; i >= 0; i--) {\n    var positions = allSelectors[repeatedSelectors[i]];\n\n    selectorIterator:\n    for (var j = positions.length - 1; j > 0; j--) {\n      var positionOne = positions[j - 1];\n      var tokenOne = tokens[positionOne];\n      var positionTwo = positions[j];\n      var tokenTwo = tokens[positionTwo];\n\n      directionIterator:\n      for (var direction = 1; direction >= -1; direction -= 2) {\n        var topToBottom = direction == 1;\n        var from = topToBottom ? positionOne + 1 : positionTwo - 1;\n        var to = topToBottom ? positionTwo : positionOne;\n        var delta = topToBottom ? 1 : -1;\n        var moved = topToBottom ? tokenOne : tokenTwo;\n        var target = topToBottom ? tokenTwo : tokenOne;\n        var movedProperties = extractProperties(moved);\n\n        while (from != to) {\n          var traversedProperties = extractProperties(tokens[from]);\n          from += delta;\n\n          // traversed then moved as we move selectors towards the start\n          var reorderable = topToBottom ?\n            canReorder(movedProperties, traversedProperties, specificityCache) :\n            canReorder(traversedProperties, movedProperties, specificityCache);\n\n          if (!reorderable && !topToBottom)\n            continue selectorIterator;\n          if (!reorderable && topToBottom)\n            continue directionIterator;\n        }\n\n        if (topToBottom) {\n          Array.prototype.push.apply(moved[2], target[2]);\n          target[2] = moved[2];\n        } else {\n          Array.prototype.push.apply(target[2], moved[2]);\n        }\n\n        optimizeProperties(target[2], true, true, context);\n        moved[2] = [];\n      }\n    }\n  }\n}\n\nmodule.exports = mergeNonAdjacentBySelector;\n"]},"metadata":{},"sourceType":"script"}