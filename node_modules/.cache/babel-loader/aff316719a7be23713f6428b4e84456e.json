{"ast":null,"code":"'use strict';\n\nconst Parser = require('./parser');\n\nconst AtWord = require('./atword');\n\nconst Colon = require('./colon');\n\nconst Comma = require('./comma');\n\nconst Comment = require('./comment');\n\nconst Func = require('./function');\n\nconst Num = require('./number');\n\nconst Operator = require('./operator');\n\nconst Paren = require('./paren');\n\nconst Str = require('./string');\n\nconst UnicodeRange = require('./unicode-range');\n\nconst Value = require('./value');\n\nconst Word = require('./word');\n\nlet parser = function (source, options) {\n  return new Parser(source, options);\n};\n\nparser.atword = function (opts) {\n  return new AtWord(opts);\n};\n\nparser.colon = function (opts) {\n  return new Colon(Object.assign({\n    value: ':'\n  }, opts));\n};\n\nparser.comma = function (opts) {\n  return new Comma(Object.assign({\n    value: ','\n  }, opts));\n};\n\nparser.comment = function (opts) {\n  return new Comment(opts);\n};\n\nparser.func = function (opts) {\n  return new Func(opts);\n};\n\nparser.number = function (opts) {\n  return new Num(opts);\n};\n\nparser.operator = function (opts) {\n  return new Operator(opts);\n};\n\nparser.paren = function (opts) {\n  return new Paren(Object.assign({\n    value: '('\n  }, opts));\n};\n\nparser.string = function (opts) {\n  return new Str(Object.assign({\n    quote: '\\''\n  }, opts));\n};\n\nparser.value = function (opts) {\n  return new Value(opts);\n};\n\nparser.word = function (opts) {\n  return new Word(opts);\n};\n\nparser.unicodeRange = function (opts) {\n  return new UnicodeRange(opts);\n};\n\nmodule.exports = parser;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-values-parser/lib/index.js"],"names":["Parser","require","AtWord","Colon","Comma","Comment","Func","Num","Operator","Paren","Str","UnicodeRange","Value","Word","parser","source","options","atword","opts","colon","Object","assign","value","comma","comment","func","number","operator","paren","string","quote","word","unicodeRange","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Parser = require('./parser');\nconst AtWord = require('./atword');\nconst Colon = require('./colon');\nconst Comma = require('./comma');\nconst Comment = require('./comment');\nconst Func = require('./function');\nconst Num = require('./number');\nconst Operator = require('./operator');\nconst Paren = require('./paren');\nconst Str = require('./string');\nconst UnicodeRange = require('./unicode-range');\nconst Value = require('./value');\nconst Word = require('./word');\n\nlet parser = function (source, options) {\n  return new Parser(source, options);\n};\n\nparser.atword = function (opts) {\n  return new AtWord(opts);\n};\n\nparser.colon = function (opts) {\n  return new Colon(Object.assign({ value: ':' }, opts));\n};\n\nparser.comma = function (opts) {\n  return new Comma(Object.assign({ value: ',' }, opts));\n};\n\nparser.comment = function (opts) {\n  return new Comment(opts);\n};\n\nparser.func = function (opts) {\n  return new Func(opts);\n};\n\nparser.number = function (opts) {\n  return new Num(opts);\n};\n\nparser.operator = function (opts) {\n  return new Operator(opts);\n};\n\nparser.paren = function (opts) {\n  return new Paren(Object.assign({ value: '(' }, opts));\n};\n\nparser.string = function (opts) {\n  return new Str(Object.assign({ quote: '\\'' }, opts));\n};\n\nparser.value = function (opts) {\n  return new Value(opts);\n};\n\nparser.word = function (opts) {\n  return new Word(opts);\n};\n\nparser.unicodeRange = function (opts) {\n  return new UnicodeRange(opts);\n};\n\nmodule.exports = parser;\n"]},"metadata":{},"sourceType":"script"}