{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _webpack = _interopRequireDefault(require(\"webpack\"));\n\nvar _webpackSources = _interopRequireDefault(require(\"webpack-sources\"));\n\nvar _CssDependency = _interopRequireDefault(require(\"./CssDependency\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable class-methods-use-this */\n\n\nconst {\n  ConcatSource,\n  SourceMapSource,\n  OriginalSource\n} = _webpackSources.default;\nconst {\n  Template,\n  util: {\n    createHash\n  }\n} = _webpack.default;\nconst MODULE_TYPE = 'css/mini-extract';\nconst pluginName = 'mini-css-extract-plugin';\nconst REGEXP_CHUNKHASH = /\\[chunkhash(?::(\\d+))?\\]/i;\nconst REGEXP_CONTENTHASH = /\\[contenthash(?::(\\d+))?\\]/i;\nconst REGEXP_NAME = /\\[name\\]/i;\nconst REGEXP_PLACEHOLDERS = /\\[(name|id|chunkhash)\\]/g;\nconst DEFAULT_FILENAME = '[name].css';\n\nclass CssDependencyTemplate {\n  apply() {}\n\n}\n\nclass CssModule extends _webpack.default.Module {\n  constructor(dependency) {\n    super(MODULE_TYPE, dependency.context);\n    this.id = '';\n    this._identifier = dependency.identifier;\n    this._identifierIndex = dependency.identifierIndex;\n    this.content = dependency.content;\n    this.media = dependency.media;\n    this.sourceMap = dependency.sourceMap;\n  } // no source() so webpack doesn't do add stuff to the bundle\n\n\n  size() {\n    return this.content.length;\n  }\n\n  identifier() {\n    return `css ${this._identifier} ${this._identifierIndex}`;\n  }\n\n  readableIdentifier(requestShortener) {\n    return `css ${requestShortener.shorten(this._identifier)}${this._identifierIndex ? ` (${this._identifierIndex})` : ''}`;\n  }\n\n  nameForCondition() {\n    const resource = this._identifier.split('!').pop();\n\n    const idx = resource.indexOf('?');\n\n    if (idx >= 0) {\n      return resource.substring(0, idx);\n    }\n\n    return resource;\n  }\n\n  updateCacheModule(module) {\n    this.content = module.content;\n    this.media = module.media;\n    this.sourceMap = module.sourceMap;\n  }\n\n  needRebuild() {\n    return true;\n  }\n\n  build(options, compilation, resolver, fileSystem, callback) {\n    this.buildInfo = {};\n    this.buildMeta = {};\n    callback();\n  }\n\n  updateHash(hash) {\n    super.updateHash(hash);\n    hash.update(this.content);\n    hash.update(this.media || '');\n    hash.update(this.sourceMap ? JSON.stringify(this.sourceMap) : '');\n  }\n\n}\n\nclass CssModuleFactory {\n  create({\n    dependencies: [dependency]\n  }, callback) {\n    callback(null, new CssModule(dependency));\n  }\n\n}\n\nclass MiniCssExtractPlugin {\n  constructor(options = {}) {\n    this.options = Object.assign({\n      filename: DEFAULT_FILENAME,\n      moduleFilename: () => this.options.filename || DEFAULT_FILENAME,\n      ignoreOrder: false\n    }, options);\n\n    if (!this.options.chunkFilename) {\n      const {\n        filename\n      } = this.options; // Anything changing depending on chunk is fine\n\n      if (filename.match(REGEXP_PLACEHOLDERS)) {\n        this.options.chunkFilename = filename;\n      } else {\n        // Elsewise prefix '[id].' in front of the basename to make it changing\n        this.options.chunkFilename = filename.replace(/(^|\\/)([^/]*(?:\\?|$))/, '$1[id].$2');\n      }\n    }\n  }\n\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(pluginName, compilation => {\n      compilation.dependencyFactories.set(_CssDependency.default, new CssModuleFactory());\n      compilation.dependencyTemplates.set(_CssDependency.default, new CssDependencyTemplate());\n      compilation.mainTemplate.hooks.renderManifest.tap(pluginName, (result, {\n        chunk\n      }) => {\n        const renderedModules = Array.from(chunk.modulesIterable).filter(module => module.type === MODULE_TYPE);\n\n        if (renderedModules.length > 0) {\n          result.push({\n            render: () => this.renderContentAsset(compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener),\n            filenameTemplate: ({\n              chunk: chunkData\n            }) => this.options.moduleFilename(chunkData),\n            pathOptions: {\n              chunk,\n              contentHashType: MODULE_TYPE\n            },\n            identifier: `${pluginName}.${chunk.id}`,\n            hash: chunk.contentHash[MODULE_TYPE]\n          });\n        }\n      });\n      compilation.chunkTemplate.hooks.renderManifest.tap(pluginName, (result, {\n        chunk\n      }) => {\n        const renderedModules = Array.from(chunk.modulesIterable).filter(module => module.type === MODULE_TYPE);\n\n        if (renderedModules.length > 0) {\n          result.push({\n            render: () => this.renderContentAsset(compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener),\n            filenameTemplate: this.options.chunkFilename,\n            pathOptions: {\n              chunk,\n              contentHashType: MODULE_TYPE\n            },\n            identifier: `${pluginName}.${chunk.id}`,\n            hash: chunk.contentHash[MODULE_TYPE]\n          });\n        }\n      });\n      compilation.mainTemplate.hooks.hashForChunk.tap(pluginName, (hash, chunk) => {\n        const {\n          chunkFilename\n        } = this.options;\n\n        if (REGEXP_CHUNKHASH.test(chunkFilename)) {\n          hash.update(JSON.stringify(chunk.getChunkMaps(true).hash));\n        }\n\n        if (REGEXP_CONTENTHASH.test(chunkFilename)) {\n          hash.update(JSON.stringify(chunk.getChunkMaps(true).contentHash[MODULE_TYPE] || {}));\n        }\n\n        if (REGEXP_NAME.test(chunkFilename)) {\n          hash.update(JSON.stringify(chunk.getChunkMaps(true).name));\n        }\n      });\n      compilation.hooks.contentHash.tap(pluginName, chunk => {\n        const {\n          outputOptions\n        } = compilation;\n        const {\n          hashFunction,\n          hashDigest,\n          hashDigestLength\n        } = outputOptions;\n        const hash = createHash(hashFunction);\n\n        for (const m of chunk.modulesIterable) {\n          if (m.type === MODULE_TYPE) {\n            m.updateHash(hash);\n          }\n        }\n\n        const {\n          contentHash\n        } = chunk;\n        contentHash[MODULE_TYPE] = hash.digest(hashDigest).substring(0, hashDigestLength);\n      });\n      const {\n        mainTemplate\n      } = compilation;\n      mainTemplate.hooks.localVars.tap(pluginName, (source, chunk) => {\n        const chunkMap = this.getCssChunkObject(chunk);\n\n        if (Object.keys(chunkMap).length > 0) {\n          return Template.asString([source, '', '// object to store loaded CSS chunks', 'var installedCssChunks = {', Template.indent(chunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(',\\n')), '}']);\n        }\n\n        return source;\n      });\n      mainTemplate.hooks.requireEnsure.tap(pluginName, (source, chunk, hash) => {\n        const chunkMap = this.getCssChunkObject(chunk);\n\n        if (Object.keys(chunkMap).length > 0) {\n          const chunkMaps = chunk.getChunkMaps();\n          const {\n            crossOriginLoading\n          } = mainTemplate.outputOptions;\n          const linkHrefPath = mainTemplate.getAssetPath(JSON.stringify(this.options.chunkFilename), {\n            hash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n            hashWithLength: length => `\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n            chunk: {\n              id: '\" + chunkId + \"',\n              hash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n\n              hashWithLength(length) {\n                const shortChunkHashMap = Object.create(null);\n\n                for (const chunkId of Object.keys(chunkMaps.hash)) {\n                  if (typeof chunkMaps.hash[chunkId] === 'string') {\n                    shortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substring(0, length);\n                  }\n                }\n\n                return `\" + ${JSON.stringify(shortChunkHashMap)}[chunkId] + \"`;\n              },\n\n              contentHash: {\n                [MODULE_TYPE]: `\" + ${JSON.stringify(chunkMaps.contentHash[MODULE_TYPE])}[chunkId] + \"`\n              },\n              contentHashWithLength: {\n                [MODULE_TYPE]: length => {\n                  const shortContentHashMap = {};\n                  const contentHash = chunkMaps.contentHash[MODULE_TYPE];\n\n                  for (const chunkId of Object.keys(contentHash)) {\n                    if (typeof contentHash[chunkId] === 'string') {\n                      shortContentHashMap[chunkId] = contentHash[chunkId].substring(0, length);\n                    }\n                  }\n\n                  return `\" + ${JSON.stringify(shortContentHashMap)}[chunkId] + \"`;\n                }\n              },\n              name: `\" + (${JSON.stringify(chunkMaps.name)}[chunkId]||chunkId) + \"`\n            },\n            contentHashType: MODULE_TYPE\n          });\n          return Template.asString([source, '', `// ${pluginName} CSS loading`, `var cssChunks = ${JSON.stringify(chunkMap)};`, 'if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);', 'else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {', Template.indent(['promises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {', Template.indent([`var href = ${linkHrefPath};`, `var fullhref = ${mainTemplate.requireFn}.p + href;`, 'var existingLinkTags = document.getElementsByTagName(\"link\");', 'for(var i = 0; i < existingLinkTags.length; i++) {', Template.indent(['var tag = existingLinkTags[i];', 'var dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");', 'if(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();']), '}', 'var existingStyleTags = document.getElementsByTagName(\"style\");', 'for(var i = 0; i < existingStyleTags.length; i++) {', Template.indent(['var tag = existingStyleTags[i];', 'var dataHref = tag.getAttribute(\"data-href\");', 'if(dataHref === href || dataHref === fullhref) return resolve();']), '}', 'var linkTag = document.createElement(\"link\");', 'linkTag.rel = \"stylesheet\";', 'linkTag.type = \"text/css\";', 'linkTag.onload = resolve;', 'linkTag.onerror = function(event) {', Template.indent(['var request = event && event.target && event.target.src || fullhref;', 'var err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\\\n(\" + request + \")\");', 'err.code = \"CSS_CHUNK_LOAD_FAILED\";', 'err.request = request;', 'delete installedCssChunks[chunkId]', 'linkTag.parentNode.removeChild(linkTag)', 'reject(err);']), '};', 'linkTag.href = fullhref;', crossOriginLoading ? Template.asString([`if (linkTag.href.indexOf(window.location.origin + '/') !== 0) {`, Template.indent(`linkTag.crossOrigin = ${JSON.stringify(crossOriginLoading)};`), '}']) : '', 'var head = document.getElementsByTagName(\"head\")[0];', 'head.appendChild(linkTag);']), '}).then(function() {', Template.indent(['installedCssChunks[chunkId] = 0;']), '}));']), '}']);\n        }\n\n        return source;\n      });\n    });\n  }\n\n  getCssChunkObject(mainChunk) {\n    const obj = {};\n\n    for (const chunk of mainChunk.getAllAsyncChunks()) {\n      for (const module of chunk.modulesIterable) {\n        if (module.type === MODULE_TYPE) {\n          obj[chunk.id] = 1;\n          break;\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  renderContentAsset(compilation, chunk, modules, requestShortener) {\n    let usedModules;\n    const [chunkGroup] = chunk.groupsIterable;\n\n    if (typeof chunkGroup.getModuleIndex2 === 'function') {\n      // Store dependencies for modules\n      const moduleDependencies = new Map(modules.map(m => [m, new Set()]));\n      const moduleDependenciesReasons = new Map(modules.map(m => [m, new Map()])); // Get ordered list of modules per chunk group\n      // This loop also gathers dependencies from the ordered lists\n      // Lists are in reverse order to allow to use Array.pop()\n\n      const modulesByChunkGroup = Array.from(chunk.groupsIterable, cg => {\n        const sortedModules = modules.map(m => {\n          return {\n            module: m,\n            index: cg.getModuleIndex2(m)\n          };\n        }) // eslint-disable-next-line no-undefined\n        .filter(item => item.index !== undefined).sort((a, b) => b.index - a.index).map(item => item.module);\n\n        for (let i = 0; i < sortedModules.length; i++) {\n          const set = moduleDependencies.get(sortedModules[i]);\n          const reasons = moduleDependenciesReasons.get(sortedModules[i]);\n\n          for (let j = i + 1; j < sortedModules.length; j++) {\n            const module = sortedModules[j];\n            set.add(module);\n            const reason = reasons.get(module) || new Set();\n            reason.add(cg);\n            reasons.set(module, reason);\n          }\n        }\n\n        return sortedModules;\n      }); // set with already included modules in correct order\n\n      usedModules = new Set();\n\n      const unusedModulesFilter = m => !usedModules.has(m);\n\n      while (usedModules.size < modules.length) {\n        let success = false;\n        let bestMatch;\n        let bestMatchDeps; // get first module where dependencies are fulfilled\n\n        for (const list of modulesByChunkGroup) {\n          // skip and remove already added modules\n          while (list.length > 0 && usedModules.has(list[list.length - 1])) {\n            list.pop();\n          } // skip empty lists\n\n\n          if (list.length !== 0) {\n            const module = list[list.length - 1];\n            const deps = moduleDependencies.get(module); // determine dependencies that are not yet included\n\n            const failedDeps = Array.from(deps).filter(unusedModulesFilter); // store best match for fallback behavior\n\n            if (!bestMatchDeps || bestMatchDeps.length > failedDeps.length) {\n              bestMatch = list;\n              bestMatchDeps = failedDeps;\n            }\n\n            if (failedDeps.length === 0) {\n              // use this module and remove it from list\n              usedModules.add(list.pop());\n              success = true;\n              break;\n            }\n          }\n        }\n\n        if (!success) {\n          // no module found => there is a conflict\n          // use list with fewest failed deps\n          // and emit a warning\n          const fallbackModule = bestMatch.pop();\n\n          if (!this.options.ignoreOrder) {\n            const reasons = moduleDependenciesReasons.get(fallbackModule);\n            compilation.warnings.push(new Error([`chunk ${chunk.name || chunk.id} [${pluginName}]`, 'Conflicting order. Following module has been added:', ` * ${fallbackModule.readableIdentifier(requestShortener)}`, 'despite it was not able to fulfill desired ordering with these modules:', ...bestMatchDeps.map(m => {\n              const goodReasonsMap = moduleDependenciesReasons.get(m);\n              const goodReasons = goodReasonsMap && goodReasonsMap.get(fallbackModule);\n              const failedChunkGroups = Array.from(reasons.get(m), cg => cg.name).join(', ');\n              const goodChunkGroups = goodReasons && Array.from(goodReasons, cg => cg.name).join(', ');\n              return [` * ${m.readableIdentifier(requestShortener)}`, `   - couldn't fulfill desired order of chunk group(s) ${failedChunkGroups}`, goodChunkGroups && `   - while fulfilling desired order of chunk group(s) ${goodChunkGroups}`].filter(Boolean).join('\\n');\n            })].join('\\n')));\n          }\n\n          usedModules.add(fallbackModule);\n        }\n      }\n    } else {\n      // fallback for older webpack versions\n      // (to avoid a breaking change)\n      // TODO remove this in next major version\n      // and increase minimum webpack version to 4.12.0\n      modules.sort((a, b) => a.index2 - b.index2);\n      usedModules = modules;\n    }\n\n    const source = new ConcatSource();\n    const externalsSource = new ConcatSource();\n\n    for (const m of usedModules) {\n      if (/^@import url/.test(m.content)) {\n        // HACK for IE\n        // http://stackoverflow.com/a/14676665/1458162\n        let {\n          content\n        } = m;\n\n        if (m.media) {\n          // insert media into the @import\n          // this is rar\n          // TODO improve this and parse the CSS to support multiple medias\n          content = content.replace(/;|\\s*$/, m.media);\n        }\n\n        externalsSource.add(content);\n        externalsSource.add('\\n');\n      } else {\n        if (m.media) {\n          source.add(`@media ${m.media} {\\n`);\n        }\n\n        if (m.sourceMap) {\n          source.add(new SourceMapSource(m.content, m.readableIdentifier(requestShortener), m.sourceMap));\n        } else {\n          source.add(new OriginalSource(m.content, m.readableIdentifier(requestShortener)));\n        }\n\n        source.add('\\n');\n\n        if (m.media) {\n          source.add('}\\n');\n        }\n      }\n    }\n\n    return new ConcatSource(externalsSource, source);\n  }\n\n}\n\nMiniCssExtractPlugin.loader = require.resolve('./loader');\nvar _default = MiniCssExtractPlugin;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/mini-css-extract-plugin/dist/index.js"],"names":["Object","defineProperty","exports","value","default","_webpack","_interopRequireDefault","require","_webpackSources","_CssDependency","obj","__esModule","ConcatSource","SourceMapSource","OriginalSource","Template","util","createHash","MODULE_TYPE","pluginName","REGEXP_CHUNKHASH","REGEXP_CONTENTHASH","REGEXP_NAME","REGEXP_PLACEHOLDERS","DEFAULT_FILENAME","CssDependencyTemplate","apply","CssModule","Module","constructor","dependency","context","id","_identifier","identifier","_identifierIndex","identifierIndex","content","media","sourceMap","size","length","readableIdentifier","requestShortener","shorten","nameForCondition","resource","split","pop","idx","indexOf","substring","updateCacheModule","module","needRebuild","build","options","compilation","resolver","fileSystem","callback","buildInfo","buildMeta","updateHash","hash","update","JSON","stringify","CssModuleFactory","create","dependencies","MiniCssExtractPlugin","assign","filename","moduleFilename","ignoreOrder","chunkFilename","match","replace","compiler","hooks","thisCompilation","tap","dependencyFactories","set","dependencyTemplates","mainTemplate","renderManifest","result","chunk","renderedModules","Array","from","modulesIterable","filter","type","push","render","renderContentAsset","runtimeTemplate","filenameTemplate","chunkData","pathOptions","contentHashType","contentHash","chunkTemplate","hashForChunk","test","getChunkMaps","name","outputOptions","hashFunction","hashDigest","hashDigestLength","m","digest","localVars","source","chunkMap","getCssChunkObject","keys","asString","indent","ids","map","join","requireEnsure","chunkMaps","crossOriginLoading","linkHrefPath","getAssetPath","renderCurrentHashCode","hashWithLength","shortChunkHashMap","chunkId","contentHashWithLength","shortContentHashMap","requireFn","mainChunk","getAllAsyncChunks","modules","usedModules","chunkGroup","groupsIterable","getModuleIndex2","moduleDependencies","Map","Set","moduleDependenciesReasons","modulesByChunkGroup","cg","sortedModules","index","item","undefined","sort","a","b","i","get","reasons","j","add","reason","unusedModulesFilter","has","success","bestMatch","bestMatchDeps","list","deps","failedDeps","fallbackModule","warnings","Error","goodReasonsMap","goodReasons","failedChunkGroups","goodChunkGroups","Boolean","index2","externalsSource","loader","resolve","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _webpack = _interopRequireDefault(require(\"webpack\"));\n\nvar _webpackSources = _interopRequireDefault(require(\"webpack-sources\"));\n\nvar _CssDependency = _interopRequireDefault(require(\"./CssDependency\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable class-methods-use-this */\nconst {\n  ConcatSource,\n  SourceMapSource,\n  OriginalSource\n} = _webpackSources.default;\nconst {\n  Template,\n  util: {\n    createHash\n  }\n} = _webpack.default;\nconst MODULE_TYPE = 'css/mini-extract';\nconst pluginName = 'mini-css-extract-plugin';\nconst REGEXP_CHUNKHASH = /\\[chunkhash(?::(\\d+))?\\]/i;\nconst REGEXP_CONTENTHASH = /\\[contenthash(?::(\\d+))?\\]/i;\nconst REGEXP_NAME = /\\[name\\]/i;\nconst REGEXP_PLACEHOLDERS = /\\[(name|id|chunkhash)\\]/g;\nconst DEFAULT_FILENAME = '[name].css';\n\nclass CssDependencyTemplate {\n  apply() {}\n\n}\n\nclass CssModule extends _webpack.default.Module {\n  constructor(dependency) {\n    super(MODULE_TYPE, dependency.context);\n    this.id = '';\n    this._identifier = dependency.identifier;\n    this._identifierIndex = dependency.identifierIndex;\n    this.content = dependency.content;\n    this.media = dependency.media;\n    this.sourceMap = dependency.sourceMap;\n  } // no source() so webpack doesn't do add stuff to the bundle\n\n\n  size() {\n    return this.content.length;\n  }\n\n  identifier() {\n    return `css ${this._identifier} ${this._identifierIndex}`;\n  }\n\n  readableIdentifier(requestShortener) {\n    return `css ${requestShortener.shorten(this._identifier)}${this._identifierIndex ? ` (${this._identifierIndex})` : ''}`;\n  }\n\n  nameForCondition() {\n    const resource = this._identifier.split('!').pop();\n\n    const idx = resource.indexOf('?');\n\n    if (idx >= 0) {\n      return resource.substring(0, idx);\n    }\n\n    return resource;\n  }\n\n  updateCacheModule(module) {\n    this.content = module.content;\n    this.media = module.media;\n    this.sourceMap = module.sourceMap;\n  }\n\n  needRebuild() {\n    return true;\n  }\n\n  build(options, compilation, resolver, fileSystem, callback) {\n    this.buildInfo = {};\n    this.buildMeta = {};\n    callback();\n  }\n\n  updateHash(hash) {\n    super.updateHash(hash);\n    hash.update(this.content);\n    hash.update(this.media || '');\n    hash.update(this.sourceMap ? JSON.stringify(this.sourceMap) : '');\n  }\n\n}\n\nclass CssModuleFactory {\n  create({\n    dependencies: [dependency]\n  }, callback) {\n    callback(null, new CssModule(dependency));\n  }\n\n}\n\nclass MiniCssExtractPlugin {\n  constructor(options = {}) {\n    this.options = Object.assign({\n      filename: DEFAULT_FILENAME,\n      moduleFilename: () => this.options.filename || DEFAULT_FILENAME,\n      ignoreOrder: false\n    }, options);\n\n    if (!this.options.chunkFilename) {\n      const {\n        filename\n      } = this.options; // Anything changing depending on chunk is fine\n\n      if (filename.match(REGEXP_PLACEHOLDERS)) {\n        this.options.chunkFilename = filename;\n      } else {\n        // Elsewise prefix '[id].' in front of the basename to make it changing\n        this.options.chunkFilename = filename.replace(/(^|\\/)([^/]*(?:\\?|$))/, '$1[id].$2');\n      }\n    }\n  }\n\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(pluginName, compilation => {\n      compilation.dependencyFactories.set(_CssDependency.default, new CssModuleFactory());\n      compilation.dependencyTemplates.set(_CssDependency.default, new CssDependencyTemplate());\n      compilation.mainTemplate.hooks.renderManifest.tap(pluginName, (result, {\n        chunk\n      }) => {\n        const renderedModules = Array.from(chunk.modulesIterable).filter(module => module.type === MODULE_TYPE);\n\n        if (renderedModules.length > 0) {\n          result.push({\n            render: () => this.renderContentAsset(compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener),\n            filenameTemplate: ({\n              chunk: chunkData\n            }) => this.options.moduleFilename(chunkData),\n            pathOptions: {\n              chunk,\n              contentHashType: MODULE_TYPE\n            },\n            identifier: `${pluginName}.${chunk.id}`,\n            hash: chunk.contentHash[MODULE_TYPE]\n          });\n        }\n      });\n      compilation.chunkTemplate.hooks.renderManifest.tap(pluginName, (result, {\n        chunk\n      }) => {\n        const renderedModules = Array.from(chunk.modulesIterable).filter(module => module.type === MODULE_TYPE);\n\n        if (renderedModules.length > 0) {\n          result.push({\n            render: () => this.renderContentAsset(compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener),\n            filenameTemplate: this.options.chunkFilename,\n            pathOptions: {\n              chunk,\n              contentHashType: MODULE_TYPE\n            },\n            identifier: `${pluginName}.${chunk.id}`,\n            hash: chunk.contentHash[MODULE_TYPE]\n          });\n        }\n      });\n      compilation.mainTemplate.hooks.hashForChunk.tap(pluginName, (hash, chunk) => {\n        const {\n          chunkFilename\n        } = this.options;\n\n        if (REGEXP_CHUNKHASH.test(chunkFilename)) {\n          hash.update(JSON.stringify(chunk.getChunkMaps(true).hash));\n        }\n\n        if (REGEXP_CONTENTHASH.test(chunkFilename)) {\n          hash.update(JSON.stringify(chunk.getChunkMaps(true).contentHash[MODULE_TYPE] || {}));\n        }\n\n        if (REGEXP_NAME.test(chunkFilename)) {\n          hash.update(JSON.stringify(chunk.getChunkMaps(true).name));\n        }\n      });\n      compilation.hooks.contentHash.tap(pluginName, chunk => {\n        const {\n          outputOptions\n        } = compilation;\n        const {\n          hashFunction,\n          hashDigest,\n          hashDigestLength\n        } = outputOptions;\n        const hash = createHash(hashFunction);\n\n        for (const m of chunk.modulesIterable) {\n          if (m.type === MODULE_TYPE) {\n            m.updateHash(hash);\n          }\n        }\n\n        const {\n          contentHash\n        } = chunk;\n        contentHash[MODULE_TYPE] = hash.digest(hashDigest).substring(0, hashDigestLength);\n      });\n      const {\n        mainTemplate\n      } = compilation;\n      mainTemplate.hooks.localVars.tap(pluginName, (source, chunk) => {\n        const chunkMap = this.getCssChunkObject(chunk);\n\n        if (Object.keys(chunkMap).length > 0) {\n          return Template.asString([source, '', '// object to store loaded CSS chunks', 'var installedCssChunks = {', Template.indent(chunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(',\\n')), '}']);\n        }\n\n        return source;\n      });\n      mainTemplate.hooks.requireEnsure.tap(pluginName, (source, chunk, hash) => {\n        const chunkMap = this.getCssChunkObject(chunk);\n\n        if (Object.keys(chunkMap).length > 0) {\n          const chunkMaps = chunk.getChunkMaps();\n          const {\n            crossOriginLoading\n          } = mainTemplate.outputOptions;\n          const linkHrefPath = mainTemplate.getAssetPath(JSON.stringify(this.options.chunkFilename), {\n            hash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n            hashWithLength: length => `\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n            chunk: {\n              id: '\" + chunkId + \"',\n              hash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n\n              hashWithLength(length) {\n                const shortChunkHashMap = Object.create(null);\n\n                for (const chunkId of Object.keys(chunkMaps.hash)) {\n                  if (typeof chunkMaps.hash[chunkId] === 'string') {\n                    shortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substring(0, length);\n                  }\n                }\n\n                return `\" + ${JSON.stringify(shortChunkHashMap)}[chunkId] + \"`;\n              },\n\n              contentHash: {\n                [MODULE_TYPE]: `\" + ${JSON.stringify(chunkMaps.contentHash[MODULE_TYPE])}[chunkId] + \"`\n              },\n              contentHashWithLength: {\n                [MODULE_TYPE]: length => {\n                  const shortContentHashMap = {};\n                  const contentHash = chunkMaps.contentHash[MODULE_TYPE];\n\n                  for (const chunkId of Object.keys(contentHash)) {\n                    if (typeof contentHash[chunkId] === 'string') {\n                      shortContentHashMap[chunkId] = contentHash[chunkId].substring(0, length);\n                    }\n                  }\n\n                  return `\" + ${JSON.stringify(shortContentHashMap)}[chunkId] + \"`;\n                }\n              },\n              name: `\" + (${JSON.stringify(chunkMaps.name)}[chunkId]||chunkId) + \"`\n            },\n            contentHashType: MODULE_TYPE\n          });\n          return Template.asString([source, '', `// ${pluginName} CSS loading`, `var cssChunks = ${JSON.stringify(chunkMap)};`, 'if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);', 'else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {', Template.indent(['promises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {', Template.indent([`var href = ${linkHrefPath};`, `var fullhref = ${mainTemplate.requireFn}.p + href;`, 'var existingLinkTags = document.getElementsByTagName(\"link\");', 'for(var i = 0; i < existingLinkTags.length; i++) {', Template.indent(['var tag = existingLinkTags[i];', 'var dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");', 'if(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();']), '}', 'var existingStyleTags = document.getElementsByTagName(\"style\");', 'for(var i = 0; i < existingStyleTags.length; i++) {', Template.indent(['var tag = existingStyleTags[i];', 'var dataHref = tag.getAttribute(\"data-href\");', 'if(dataHref === href || dataHref === fullhref) return resolve();']), '}', 'var linkTag = document.createElement(\"link\");', 'linkTag.rel = \"stylesheet\";', 'linkTag.type = \"text/css\";', 'linkTag.onload = resolve;', 'linkTag.onerror = function(event) {', Template.indent(['var request = event && event.target && event.target.src || fullhref;', 'var err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\\\n(\" + request + \")\");', 'err.code = \"CSS_CHUNK_LOAD_FAILED\";', 'err.request = request;', 'delete installedCssChunks[chunkId]', 'linkTag.parentNode.removeChild(linkTag)', 'reject(err);']), '};', 'linkTag.href = fullhref;', crossOriginLoading ? Template.asString([`if (linkTag.href.indexOf(window.location.origin + '/') !== 0) {`, Template.indent(`linkTag.crossOrigin = ${JSON.stringify(crossOriginLoading)};`), '}']) : '', 'var head = document.getElementsByTagName(\"head\")[0];', 'head.appendChild(linkTag);']), '}).then(function() {', Template.indent(['installedCssChunks[chunkId] = 0;']), '}));']), '}']);\n        }\n\n        return source;\n      });\n    });\n  }\n\n  getCssChunkObject(mainChunk) {\n    const obj = {};\n\n    for (const chunk of mainChunk.getAllAsyncChunks()) {\n      for (const module of chunk.modulesIterable) {\n        if (module.type === MODULE_TYPE) {\n          obj[chunk.id] = 1;\n          break;\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  renderContentAsset(compilation, chunk, modules, requestShortener) {\n    let usedModules;\n    const [chunkGroup] = chunk.groupsIterable;\n\n    if (typeof chunkGroup.getModuleIndex2 === 'function') {\n      // Store dependencies for modules\n      const moduleDependencies = new Map(modules.map(m => [m, new Set()]));\n      const moduleDependenciesReasons = new Map(modules.map(m => [m, new Map()])); // Get ordered list of modules per chunk group\n      // This loop also gathers dependencies from the ordered lists\n      // Lists are in reverse order to allow to use Array.pop()\n\n      const modulesByChunkGroup = Array.from(chunk.groupsIterable, cg => {\n        const sortedModules = modules.map(m => {\n          return {\n            module: m,\n            index: cg.getModuleIndex2(m)\n          };\n        }) // eslint-disable-next-line no-undefined\n        .filter(item => item.index !== undefined).sort((a, b) => b.index - a.index).map(item => item.module);\n\n        for (let i = 0; i < sortedModules.length; i++) {\n          const set = moduleDependencies.get(sortedModules[i]);\n          const reasons = moduleDependenciesReasons.get(sortedModules[i]);\n\n          for (let j = i + 1; j < sortedModules.length; j++) {\n            const module = sortedModules[j];\n            set.add(module);\n            const reason = reasons.get(module) || new Set();\n            reason.add(cg);\n            reasons.set(module, reason);\n          }\n        }\n\n        return sortedModules;\n      }); // set with already included modules in correct order\n\n      usedModules = new Set();\n\n      const unusedModulesFilter = m => !usedModules.has(m);\n\n      while (usedModules.size < modules.length) {\n        let success = false;\n        let bestMatch;\n        let bestMatchDeps; // get first module where dependencies are fulfilled\n\n        for (const list of modulesByChunkGroup) {\n          // skip and remove already added modules\n          while (list.length > 0 && usedModules.has(list[list.length - 1])) {\n            list.pop();\n          } // skip empty lists\n\n\n          if (list.length !== 0) {\n            const module = list[list.length - 1];\n            const deps = moduleDependencies.get(module); // determine dependencies that are not yet included\n\n            const failedDeps = Array.from(deps).filter(unusedModulesFilter); // store best match for fallback behavior\n\n            if (!bestMatchDeps || bestMatchDeps.length > failedDeps.length) {\n              bestMatch = list;\n              bestMatchDeps = failedDeps;\n            }\n\n            if (failedDeps.length === 0) {\n              // use this module and remove it from list\n              usedModules.add(list.pop());\n              success = true;\n              break;\n            }\n          }\n        }\n\n        if (!success) {\n          // no module found => there is a conflict\n          // use list with fewest failed deps\n          // and emit a warning\n          const fallbackModule = bestMatch.pop();\n\n          if (!this.options.ignoreOrder) {\n            const reasons = moduleDependenciesReasons.get(fallbackModule);\n            compilation.warnings.push(new Error([`chunk ${chunk.name || chunk.id} [${pluginName}]`, 'Conflicting order. Following module has been added:', ` * ${fallbackModule.readableIdentifier(requestShortener)}`, 'despite it was not able to fulfill desired ordering with these modules:', ...bestMatchDeps.map(m => {\n              const goodReasonsMap = moduleDependenciesReasons.get(m);\n              const goodReasons = goodReasonsMap && goodReasonsMap.get(fallbackModule);\n              const failedChunkGroups = Array.from(reasons.get(m), cg => cg.name).join(', ');\n              const goodChunkGroups = goodReasons && Array.from(goodReasons, cg => cg.name).join(', ');\n              return [` * ${m.readableIdentifier(requestShortener)}`, `   - couldn't fulfill desired order of chunk group(s) ${failedChunkGroups}`, goodChunkGroups && `   - while fulfilling desired order of chunk group(s) ${goodChunkGroups}`].filter(Boolean).join('\\n');\n            })].join('\\n')));\n          }\n\n          usedModules.add(fallbackModule);\n        }\n      }\n    } else {\n      // fallback for older webpack versions\n      // (to avoid a breaking change)\n      // TODO remove this in next major version\n      // and increase minimum webpack version to 4.12.0\n      modules.sort((a, b) => a.index2 - b.index2);\n      usedModules = modules;\n    }\n\n    const source = new ConcatSource();\n    const externalsSource = new ConcatSource();\n\n    for (const m of usedModules) {\n      if (/^@import url/.test(m.content)) {\n        // HACK for IE\n        // http://stackoverflow.com/a/14676665/1458162\n        let {\n          content\n        } = m;\n\n        if (m.media) {\n          // insert media into the @import\n          // this is rar\n          // TODO improve this and parse the CSS to support multiple medias\n          content = content.replace(/;|\\s*$/, m.media);\n        }\n\n        externalsSource.add(content);\n        externalsSource.add('\\n');\n      } else {\n        if (m.media) {\n          source.add(`@media ${m.media} {\\n`);\n        }\n\n        if (m.sourceMap) {\n          source.add(new SourceMapSource(m.content, m.readableIdentifier(requestShortener), m.sourceMap));\n        } else {\n          source.add(new OriginalSource(m.content, m.readableIdentifier(requestShortener)));\n        }\n\n        source.add('\\n');\n\n        if (m.media) {\n          source.add('}\\n');\n        }\n      }\n    }\n\n    return new ConcatSource(externalsSource, source);\n  }\n\n}\n\nMiniCssExtractPlugin.loader = require.resolve('./loader');\nvar _default = MiniCssExtractPlugin;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}