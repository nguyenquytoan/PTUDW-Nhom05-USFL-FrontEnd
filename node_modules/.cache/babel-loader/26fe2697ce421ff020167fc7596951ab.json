{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _neoAsync = _interopRequireDefault(require(\"neo-async\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nlet nodeSassJobQueue = null;\n/**\n * Verifies that the implementation and version of Sass is supported by this loader.\n *\n * @param {Object} implementation\n * @returns {Function}\n */\n\nfunction getRenderFunctionFromSassImplementation(implementation) {\n  const isDartSass = implementation.info.includes('dart-sass');\n\n  if (isDartSass) {\n    return implementation.render.bind(implementation);\n  } // There is an issue with node-sass when async custom importers are used\n  // See https://github.com/sass/node-sass/issues/857#issuecomment-93594360\n  // We need to use a job queue to make sure that one thread is always available to the UV lib\n\n\n  if (nodeSassJobQueue === null) {\n    const threadPoolSize = Number(process.env.UV_THREADPOOL_SIZE || 4);\n    nodeSassJobQueue = _neoAsync.default.queue(implementation.render.bind(implementation), threadPoolSize - 1);\n  }\n\n  return nodeSassJobQueue.push.bind(nodeSassJobQueue);\n}\n\nvar _default = getRenderFunctionFromSassImplementation;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/sass-loader/dist/getRenderFunctionFromSassImplementation.js"],"names":["Object","defineProperty","exports","value","default","_neoAsync","_interopRequireDefault","require","obj","__esModule","nodeSassJobQueue","getRenderFunctionFromSassImplementation","implementation","isDartSass","info","includes","render","bind","threadPoolSize","Number","process","env","UV_THREADPOOL_SIZE","queue","push","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAAtC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,gBAAgB,GAAG,IAAvB;AACA;;;;;;;AAOA,SAASC,uCAAT,CAAiDC,cAAjD,EAAiE;AAC/D,QAAMC,UAAU,GAAGD,cAAc,CAACE,IAAf,CAAoBC,QAApB,CAA6B,WAA7B,CAAnB;;AAEA,MAAIF,UAAJ,EAAgB;AACd,WAAOD,cAAc,CAACI,MAAf,CAAsBC,IAAtB,CAA2BL,cAA3B,CAAP;AACD,GAL8D,CAK7D;AACF;AACA;;;AAGA,MAAIF,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,UAAMQ,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAkC,CAAnC,CAA7B;AACAZ,IAAAA,gBAAgB,GAAGL,SAAS,CAACD,OAAV,CAAkBmB,KAAlB,CAAwBX,cAAc,CAACI,MAAf,CAAsBC,IAAtB,CAA2BL,cAA3B,CAAxB,EAAoEM,cAAc,GAAG,CAArF,CAAnB;AACD;;AAED,SAAOR,gBAAgB,CAACc,IAAjB,CAAsBP,IAAtB,CAA2BP,gBAA3B,CAAP;AACD;;AAED,IAAIe,QAAQ,GAAGd,uCAAf;AACAT,OAAO,CAACE,OAAR,GAAkBqB,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _neoAsync = _interopRequireDefault(require(\"neo-async\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet nodeSassJobQueue = null;\n/**\n * Verifies that the implementation and version of Sass is supported by this loader.\n *\n * @param {Object} implementation\n * @returns {Function}\n */\n\nfunction getRenderFunctionFromSassImplementation(implementation) {\n  const isDartSass = implementation.info.includes('dart-sass');\n\n  if (isDartSass) {\n    return implementation.render.bind(implementation);\n  } // There is an issue with node-sass when async custom importers are used\n  // See https://github.com/sass/node-sass/issues/857#issuecomment-93594360\n  // We need to use a job queue to make sure that one thread is always available to the UV lib\n\n\n  if (nodeSassJobQueue === null) {\n    const threadPoolSize = Number(process.env.UV_THREADPOOL_SIZE || 4);\n    nodeSassJobQueue = _neoAsync.default.queue(implementation.render.bind(implementation), threadPoolSize - 1);\n  }\n\n  return nodeSassJobQueue.push.bind(nodeSassJobQueue);\n}\n\nvar _default = getRenderFunctionFromSassImplementation;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}