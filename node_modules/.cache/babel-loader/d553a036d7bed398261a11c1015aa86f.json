{"ast":null,"code":"var mdns = require('./')();\n\nmdns.on('warning', function (err) {\n  console.log(err.stack);\n});\nmdns.on('response', function (response) {\n  console.log('got a response packet:', response);\n});\nmdns.on('query', function (query) {\n  console.log('got a query packet:', query); // iterate over all questions to check if we should respond\n\n  query.questions.forEach(function (q) {\n    if (q.type === 'A' && q.name === 'example.local') {\n      // send an A-record response for example.local\n      mdns.respond({\n        answers: [{\n          name: 'example.local',\n          type: 'A',\n          ttl: 300,\n          data: '192.168.1.5'\n        }]\n      });\n    }\n  });\n}); // lets query for an A-record for example.local\n\nmdns.query({\n  questions: [{\n    name: 'example.local',\n    type: 'A'\n  }]\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/multicast-dns/example.js"],"names":["mdns","require","on","err","console","log","stack","response","query","questions","forEach","q","type","name","respond","answers","ttl","data"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,EAAX;;AAEAD,IAAI,CAACE,EAAL,CAAQ,SAAR,EAAmB,UAAUC,GAAV,EAAe;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,KAAhB;AACD,CAFD;AAIAN,IAAI,CAACE,EAAL,CAAQ,UAAR,EAAoB,UAAUK,QAAV,EAAoB;AACtCH,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCE,QAAtC;AACD,CAFD;AAIAP,IAAI,CAACE,EAAL,CAAQ,OAAR,EAAiB,UAAUM,KAAV,EAAiB;AAChCJ,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCG,KAAnC,EADgC,CAGhC;;AACAA,EAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwB,UAAUC,CAAV,EAAa;AACnC,QAAIA,CAAC,CAACC,IAAF,KAAW,GAAX,IAAkBD,CAAC,CAACE,IAAF,KAAW,eAAjC,EAAkD;AAChD;AACAb,MAAAA,IAAI,CAACc,OAAL,CAAa;AACXC,QAAAA,OAAO,EAAE,CAAC;AACRF,UAAAA,IAAI,EAAE,eADE;AAERD,UAAAA,IAAI,EAAE,GAFE;AAGRI,UAAAA,GAAG,EAAE,GAHG;AAIRC,UAAAA,IAAI,EAAE;AAJE,SAAD;AADE,OAAb;AAQD;AACF,GAZD;AAaD,CAjBD,E,CAmBA;;AACAjB,IAAI,CAACQ,KAAL,CAAW;AACTC,EAAAA,SAAS,EAAE,CAAC;AACVI,IAAAA,IAAI,EAAE,eADI;AAEVD,IAAAA,IAAI,EAAE;AAFI,GAAD;AADF,CAAX","sourcesContent":["var mdns = require('./')()\n\nmdns.on('warning', function (err) {\n  console.log(err.stack)\n})\n\nmdns.on('response', function (response) {\n  console.log('got a response packet:', response)\n})\n\nmdns.on('query', function (query) {\n  console.log('got a query packet:', query)\n\n  // iterate over all questions to check if we should respond\n  query.questions.forEach(function (q) {\n    if (q.type === 'A' && q.name === 'example.local') {\n      // send an A-record response for example.local\n      mdns.respond({\n        answers: [{\n          name: 'example.local',\n          type: 'A',\n          ttl: 300,\n          data: '192.168.1.5'\n        }]\n      })\n    }\n  })\n})\n\n// lets query for an A-record for example.local\nmdns.query({\n  questions: [{\n    name: 'example.local',\n    type: 'A'\n  }]\n})\n"]},"metadata":{},"sourceType":"script"}