{"ast":null,"code":"'use strict';\n\nconst arrayUnion = require('array-union');\n\nconst glob = require('glob');\n\nconst fastGlob = require('fast-glob');\n\nconst dirGlob = require('dir-glob');\n\nconst gitignore = require('./gitignore');\n\nconst DEFAULT_FILTER = () => false;\n\nconst isNegative = pattern => pattern[0] === '!';\n\nconst assertPatternsInput = patterns => {\n  if (!patterns.every(x => typeof x === 'string')) {\n    throw new TypeError('Patterns must be a string or an array of strings');\n  }\n};\n\nconst generateGlobTasks = (patterns, taskOpts) => {\n  patterns = [].concat(patterns);\n  assertPatternsInput(patterns);\n  const globTasks = [];\n  taskOpts = Object.assign({\n    ignore: [],\n    expandDirectories: true\n  }, taskOpts);\n  patterns.forEach((pattern, i) => {\n    if (isNegative(pattern)) {\n      return;\n    }\n\n    const ignore = patterns.slice(i).filter(isNegative).map(pattern => pattern.slice(1));\n    const opts = Object.assign({}, taskOpts, {\n      ignore: taskOpts.ignore.concat(ignore)\n    });\n    globTasks.push({\n      pattern,\n      opts\n    });\n  });\n  return globTasks;\n};\n\nconst globDirs = (task, fn) => {\n  let opts = {\n    cwd: task.opts.cwd\n  };\n\n  if (Array.isArray(task.opts.expandDirectories)) {\n    opts = Object.assign(opts, {\n      files: task.opts.expandDirectories\n    });\n  } else if (typeof task.opts.expandDirectories === 'object') {\n    opts = Object.assign(opts, task.opts.expandDirectories);\n  }\n\n  return fn(task.pattern, opts);\n};\n\nconst getPattern = (task, fn) => task.opts.expandDirectories ? globDirs(task, fn) : [task.pattern];\n\nmodule.exports = (patterns, opts) => {\n  let globTasks;\n\n  try {\n    globTasks = generateGlobTasks(patterns, opts);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  const getTasks = Promise.all(globTasks.map(task => Promise.resolve(getPattern(task, dirGlob)).then(globs => Promise.all(globs.map(glob => ({\n    pattern: glob,\n    opts: task.opts\n  })))))).then(tasks => arrayUnion.apply(null, tasks));\n\n  const getFilter = () => {\n    return Promise.resolve(opts && opts.gitignore ? gitignore({\n      cwd: opts.cwd,\n      ignore: opts.ignore\n    }) : DEFAULT_FILTER);\n  };\n\n  return getFilter().then(filter => {\n    return getTasks.then(tasks => Promise.all(tasks.map(task => fastGlob(task.pattern, task.opts)))).then(paths => arrayUnion.apply(null, paths)).then(paths => paths.filter(p => !filter(p)));\n  });\n};\n\nmodule.exports.sync = (patterns, opts) => {\n  const globTasks = generateGlobTasks(patterns, opts);\n\n  const getFilter = () => {\n    return opts && opts.gitignore ? gitignore.sync({\n      cwd: opts.cwd,\n      ignore: opts.ignore\n    }) : DEFAULT_FILTER;\n  };\n\n  const tasks = globTasks.reduce((tasks, task) => {\n    const newTask = getPattern(task, dirGlob.sync).map(glob => ({\n      pattern: glob,\n      opts: task.opts\n    }));\n    return tasks.concat(newTask);\n  }, []);\n  const filter = getFilter();\n  return tasks.reduce((matches, task) => arrayUnion(matches, fastGlob.sync(task.pattern, task.opts)), []).filter(p => !filter(p));\n};\n\nmodule.exports.generateGlobTasks = generateGlobTasks;\n\nmodule.exports.hasMagic = (patterns, opts) => [].concat(patterns).some(pattern => glob.hasMagic(pattern, opts));\n\nmodule.exports.gitignore = gitignore;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/globby/index.js"],"names":["arrayUnion","require","glob","fastGlob","dirGlob","gitignore","DEFAULT_FILTER","isNegative","pattern","assertPatternsInput","patterns","every","x","TypeError","generateGlobTasks","taskOpts","concat","globTasks","Object","assign","ignore","expandDirectories","forEach","i","slice","filter","map","opts","push","globDirs","task","fn","cwd","Array","isArray","files","getPattern","module","exports","err","Promise","reject","getTasks","all","resolve","then","globs","tasks","apply","getFilter","paths","p","sync","reduce","newTask","matches","hasMagic","some"],"mappings":"AAAA;;AACA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,aAAD,CAAzB;;AAEA,MAAMK,cAAc,GAAG,MAAM,KAA7B;;AAEA,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,GAA7C;;AAEA,MAAMC,mBAAmB,GAAGC,QAAQ,IAAI;AACvC,MAAI,CAACA,QAAQ,CAACC,KAAT,CAAeC,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAjC,CAAL,EAAiD;AAChD,UAAM,IAAIC,SAAJ,CAAc,kDAAd,CAAN;AACA;AACD,CAJD;;AAMA,MAAMC,iBAAiB,GAAG,CAACJ,QAAD,EAAWK,QAAX,KAAwB;AACjDL,EAAAA,QAAQ,GAAG,GAAGM,MAAH,CAAUN,QAAV,CAAX;AACAD,EAAAA,mBAAmB,CAACC,QAAD,CAAnB;AAEA,QAAMO,SAAS,GAAG,EAAlB;AAEAF,EAAAA,QAAQ,GAAGG,MAAM,CAACC,MAAP,CAAc;AACxBC,IAAAA,MAAM,EAAE,EADgB;AAExBC,IAAAA,iBAAiB,EAAE;AAFK,GAAd,EAGRN,QAHQ,CAAX;AAKAL,EAAAA,QAAQ,CAACY,OAAT,CAAiB,CAACd,OAAD,EAAUe,CAAV,KAAgB;AAChC,QAAIhB,UAAU,CAACC,OAAD,CAAd,EAAyB;AACxB;AACA;;AAED,UAAMY,MAAM,GAAGV,QAAQ,CACrBc,KADa,CACPD,CADO,EAEbE,MAFa,CAENlB,UAFM,EAGbmB,GAHa,CAGTlB,OAAO,IAAIA,OAAO,CAACgB,KAAR,CAAc,CAAd,CAHF,CAAf;AAKA,UAAMG,IAAI,GAAGT,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,QAAlB,EAA4B;AACxCK,MAAAA,MAAM,EAAEL,QAAQ,CAACK,MAAT,CAAgBJ,MAAhB,CAAuBI,MAAvB;AADgC,KAA5B,CAAb;AAIAH,IAAAA,SAAS,CAACW,IAAV,CAAe;AAACpB,MAAAA,OAAD;AAAUmB,MAAAA;AAAV,KAAf;AACA,GAfD;AAiBA,SAAOV,SAAP;AACA,CA7BD;;AA+BA,MAAMY,QAAQ,GAAG,CAACC,IAAD,EAAOC,EAAP,KAAc;AAC9B,MAAIJ,IAAI,GAAG;AAACK,IAAAA,GAAG,EAAEF,IAAI,CAACH,IAAL,CAAUK;AAAhB,GAAX;;AAEA,MAAIC,KAAK,CAACC,OAAN,CAAcJ,IAAI,CAACH,IAAL,CAAUN,iBAAxB,CAAJ,EAAgD;AAC/CM,IAAAA,IAAI,GAAGT,MAAM,CAACC,MAAP,CAAcQ,IAAd,EAAoB;AAACQ,MAAAA,KAAK,EAAEL,IAAI,CAACH,IAAL,CAAUN;AAAlB,KAApB,CAAP;AACA,GAFD,MAEO,IAAI,OAAOS,IAAI,CAACH,IAAL,CAAUN,iBAAjB,KAAuC,QAA3C,EAAqD;AAC3DM,IAAAA,IAAI,GAAGT,MAAM,CAACC,MAAP,CAAcQ,IAAd,EAAoBG,IAAI,CAACH,IAAL,CAAUN,iBAA9B,CAAP;AACA;;AAED,SAAOU,EAAE,CAACD,IAAI,CAACtB,OAAN,EAAemB,IAAf,CAAT;AACA,CAVD;;AAYA,MAAMS,UAAU,GAAG,CAACN,IAAD,EAAOC,EAAP,KAAcD,IAAI,CAACH,IAAL,CAAUN,iBAAV,GAA8BQ,QAAQ,CAACC,IAAD,EAAOC,EAAP,CAAtC,GAAmD,CAACD,IAAI,CAACtB,OAAN,CAApF;;AAEA6B,MAAM,CAACC,OAAP,GAAiB,CAAC5B,QAAD,EAAWiB,IAAX,KAAoB;AACpC,MAAIV,SAAJ;;AAEA,MAAI;AACHA,IAAAA,SAAS,GAAGH,iBAAiB,CAACJ,QAAD,EAAWiB,IAAX,CAA7B;AACA,GAFD,CAEE,OAAOY,GAAP,EAAY;AACb,WAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACA;;AAED,QAAMG,QAAQ,GAAGF,OAAO,CAACG,GAAR,CAAY1B,SAAS,CAACS,GAAV,CAAcI,IAAI,IAAIU,OAAO,CAACI,OAAR,CAAgBR,UAAU,CAACN,IAAD,EAAO1B,OAAP,CAA1B,EACjDyC,IADiD,CAC5CC,KAAK,IAAIN,OAAO,CAACG,GAAR,CAAYG,KAAK,CAACpB,GAAN,CAAUxB,IAAI,KAAK;AAC7CM,IAAAA,OAAO,EAAEN,IADoC;AAE7CyB,IAAAA,IAAI,EAAEG,IAAI,CAACH;AAFkC,GAAL,CAAd,CAAZ,CADmC,CAAtB,CAAZ,EAMfkB,IANe,CAMVE,KAAK,IAAI/C,UAAU,CAACgD,KAAX,CAAiB,IAAjB,EAAuBD,KAAvB,CANC,CAAjB;;AAQA,QAAME,SAAS,GAAG,MAAM;AACvB,WAAOT,OAAO,CAACI,OAAR,CACNjB,IAAI,IAAIA,IAAI,CAACtB,SAAb,GACCA,SAAS,CAAC;AAAC2B,MAAAA,GAAG,EAAEL,IAAI,CAACK,GAAX;AAAgBZ,MAAAA,MAAM,EAAEO,IAAI,CAACP;AAA7B,KAAD,CADV,GAECd,cAHK,CAAP;AAKA,GAND;;AAQA,SAAO2C,SAAS,GACdJ,IADK,CACApB,MAAM,IAAI;AACf,WAAOiB,QAAQ,CACbG,IADK,CACAE,KAAK,IAAIP,OAAO,CAACG,GAAR,CAAYI,KAAK,CAACrB,GAAN,CAAUI,IAAI,IAAI3B,QAAQ,CAAC2B,IAAI,CAACtB,OAAN,EAAesB,IAAI,CAACH,IAApB,CAA1B,CAAZ,CADT,EAELkB,IAFK,CAEAK,KAAK,IAAIlD,UAAU,CAACgD,KAAX,CAAiB,IAAjB,EAAuBE,KAAvB,CAFT,EAGLL,IAHK,CAGAK,KAAK,IAAIA,KAAK,CAACzB,MAAN,CAAa0B,CAAC,IAAI,CAAC1B,MAAM,CAAC0B,CAAD,CAAzB,CAHT,CAAP;AAIA,GANK,CAAP;AAOA,CAhCD;;AAkCAd,MAAM,CAACC,OAAP,CAAec,IAAf,GAAsB,CAAC1C,QAAD,EAAWiB,IAAX,KAAoB;AACzC,QAAMV,SAAS,GAAGH,iBAAiB,CAACJ,QAAD,EAAWiB,IAAX,CAAnC;;AAEA,QAAMsB,SAAS,GAAG,MAAM;AACvB,WAAOtB,IAAI,IAAIA,IAAI,CAACtB,SAAb,GACNA,SAAS,CAAC+C,IAAV,CAAe;AAACpB,MAAAA,GAAG,EAAEL,IAAI,CAACK,GAAX;AAAgBZ,MAAAA,MAAM,EAAEO,IAAI,CAACP;AAA7B,KAAf,CADM,GAENd,cAFD;AAGA,GAJD;;AAMA,QAAMyC,KAAK,GAAG9B,SAAS,CAACoC,MAAV,CAAiB,CAACN,KAAD,EAAQjB,IAAR,KAAiB;AAC/C,UAAMwB,OAAO,GAAGlB,UAAU,CAACN,IAAD,EAAO1B,OAAO,CAACgD,IAAf,CAAV,CAA+B1B,GAA/B,CAAmCxB,IAAI,KAAK;AAC3DM,MAAAA,OAAO,EAAEN,IADkD;AAE3DyB,MAAAA,IAAI,EAAEG,IAAI,CAACH;AAFgD,KAAL,CAAvC,CAAhB;AAIA,WAAOoB,KAAK,CAAC/B,MAAN,CAAasC,OAAb,CAAP;AACA,GANa,EAMX,EANW,CAAd;AAQA,QAAM7B,MAAM,GAAGwB,SAAS,EAAxB;AAEA,SAAOF,KAAK,CAACM,MAAN,CACN,CAACE,OAAD,EAAUzB,IAAV,KAAmB9B,UAAU,CAACuD,OAAD,EAAUpD,QAAQ,CAACiD,IAAT,CAActB,IAAI,CAACtB,OAAnB,EAA4BsB,IAAI,CAACH,IAAjC,CAAV,CADvB,EAEN,EAFM,EAGLF,MAHK,CAGE0B,CAAC,IAAI,CAAC1B,MAAM,CAAC0B,CAAD,CAHd,CAAP;AAIA,CAvBD;;AAyBAd,MAAM,CAACC,OAAP,CAAexB,iBAAf,GAAmCA,iBAAnC;;AAEAuB,MAAM,CAACC,OAAP,CAAekB,QAAf,GAA0B,CAAC9C,QAAD,EAAWiB,IAAX,KAAoB,GAC5CX,MAD4C,CACrCN,QADqC,EAE5C+C,IAF4C,CAEvCjD,OAAO,IAAIN,IAAI,CAACsD,QAAL,CAAchD,OAAd,EAAuBmB,IAAvB,CAF4B,CAA9C;;AAIAU,MAAM,CAACC,OAAP,CAAejC,SAAf,GAA2BA,SAA3B","sourcesContent":["'use strict';\nconst arrayUnion = require('array-union');\nconst glob = require('glob');\nconst fastGlob = require('fast-glob');\nconst dirGlob = require('dir-glob');\nconst gitignore = require('./gitignore');\n\nconst DEFAULT_FILTER = () => false;\n\nconst isNegative = pattern => pattern[0] === '!';\n\nconst assertPatternsInput = patterns => {\n\tif (!patterns.every(x => typeof x === 'string')) {\n\t\tthrow new TypeError('Patterns must be a string or an array of strings');\n\t}\n};\n\nconst generateGlobTasks = (patterns, taskOpts) => {\n\tpatterns = [].concat(patterns);\n\tassertPatternsInput(patterns);\n\n\tconst globTasks = [];\n\n\ttaskOpts = Object.assign({\n\t\tignore: [],\n\t\texpandDirectories: true\n\t}, taskOpts);\n\n\tpatterns.forEach((pattern, i) => {\n\t\tif (isNegative(pattern)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignore = patterns\n\t\t\t.slice(i)\n\t\t\t.filter(isNegative)\n\t\t\t.map(pattern => pattern.slice(1));\n\n\t\tconst opts = Object.assign({}, taskOpts, {\n\t\t\tignore: taskOpts.ignore.concat(ignore)\n\t\t});\n\n\t\tglobTasks.push({pattern, opts});\n\t});\n\n\treturn globTasks;\n};\n\nconst globDirs = (task, fn) => {\n\tlet opts = {cwd: task.opts.cwd};\n\n\tif (Array.isArray(task.opts.expandDirectories)) {\n\t\topts = Object.assign(opts, {files: task.opts.expandDirectories});\n\t} else if (typeof task.opts.expandDirectories === 'object') {\n\t\topts = Object.assign(opts, task.opts.expandDirectories);\n\t}\n\n\treturn fn(task.pattern, opts);\n};\n\nconst getPattern = (task, fn) => task.opts.expandDirectories ? globDirs(task, fn) : [task.pattern];\n\nmodule.exports = (patterns, opts) => {\n\tlet globTasks;\n\n\ttry {\n\t\tglobTasks = generateGlobTasks(patterns, opts);\n\t} catch (err) {\n\t\treturn Promise.reject(err);\n\t}\n\n\tconst getTasks = Promise.all(globTasks.map(task => Promise.resolve(getPattern(task, dirGlob))\n\t\t.then(globs => Promise.all(globs.map(glob => ({\n\t\t\tpattern: glob,\n\t\t\topts: task.opts\n\t\t}))))\n\t))\n\t\t.then(tasks => arrayUnion.apply(null, tasks));\n\n\tconst getFilter = () => {\n\t\treturn Promise.resolve(\n\t\t\topts && opts.gitignore ?\n\t\t\t\tgitignore({cwd: opts.cwd, ignore: opts.ignore}) :\n\t\t\t\tDEFAULT_FILTER\n\t\t);\n\t};\n\n\treturn getFilter()\n\t\t.then(filter => {\n\t\t\treturn getTasks\n\t\t\t\t.then(tasks => Promise.all(tasks.map(task => fastGlob(task.pattern, task.opts))))\n\t\t\t\t.then(paths => arrayUnion.apply(null, paths))\n\t\t\t\t.then(paths => paths.filter(p => !filter(p)));\n\t\t});\n};\n\nmodule.exports.sync = (patterns, opts) => {\n\tconst globTasks = generateGlobTasks(patterns, opts);\n\n\tconst getFilter = () => {\n\t\treturn opts && opts.gitignore ?\n\t\t\tgitignore.sync({cwd: opts.cwd, ignore: opts.ignore}) :\n\t\t\tDEFAULT_FILTER;\n\t};\n\n\tconst tasks = globTasks.reduce((tasks, task) => {\n\t\tconst newTask = getPattern(task, dirGlob.sync).map(glob => ({\n\t\t\tpattern: glob,\n\t\t\topts: task.opts\n\t\t}));\n\t\treturn tasks.concat(newTask);\n\t}, []);\n\n\tconst filter = getFilter();\n\n\treturn tasks.reduce(\n\t\t(matches, task) => arrayUnion(matches, fastGlob.sync(task.pattern, task.opts)),\n\t\t[]\n\t).filter(p => !filter(p));\n};\n\nmodule.exports.generateGlobTasks = generateGlobTasks;\n\nmodule.exports.hasMagic = (patterns, opts) => []\n\t.concat(patterns)\n\t.some(pattern => glob.hasMagic(pattern, opts));\n\nmodule.exports.gitignore = gitignore;\n"]},"metadata":{},"sourceType":"script"}