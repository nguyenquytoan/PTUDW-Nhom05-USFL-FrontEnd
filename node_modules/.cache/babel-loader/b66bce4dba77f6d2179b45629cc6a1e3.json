{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SubscribeOnObservable_1 = require(\"../observable/SubscribeOnObservable\");\n\nfunction subscribeOn(scheduler, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return function subscribeOnOperatorFunction(source) {\n    return source.lift(new SubscribeOnOperator(scheduler, delay));\n  };\n}\n\nexports.subscribeOn = subscribeOn;\n\nvar SubscribeOnOperator = function () {\n  function SubscribeOnOperator(scheduler, delay) {\n    this.scheduler = scheduler;\n    this.delay = delay;\n  }\n\n  SubscribeOnOperator.prototype.call = function (subscriber, source) {\n    return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n  };\n\n  return SubscribeOnOperator;\n}();","map":{"version":3,"sources":["../../src/internal/operators/subscribeOn.ts"],"names":[],"mappings":";;;;;;AAGA,IAAA,uBAAA,GAAA,OAAA,CAAA,qCAAA,CAAA;;AA6CA,SAAgB,WAAhB,CAA+B,SAA/B,EAAyD,KAAzD,EAA0E;AAAjB,MAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAiB;;AACxE,SAAO,SAAS,2BAAT,CAAqC,MAArC,EAA0D;AAC/D,WAAO,MAAM,CAAC,IAAP,CAAY,IAAI,mBAAJ,CAA2B,SAA3B,EAAsC,KAAtC,CAAZ,CAAP;AACD,GAFD;AAGD;;AAJD,OAAA,CAAA,WAAA,GAAA,WAAA;;AAMA,IAAA,mBAAA,GAAA,YAAA;AACE,WAAA,mBAAA,CAAoB,SAApB,EACoB,KADpB,EACiC;AADb,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACnB;;AACD,EAAA,mBAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,UAAL,EAAgC,MAAhC,EAA2C;AACzC,WAAO,IAAI,uBAAA,CAAA,qBAAJ,CACL,MADK,EACG,KAAK,KADR,EACe,KAAK,SADpB,EAEL,SAFK,CAEK,UAFL,CAAP;AAGD,GAJD;;AAKF,SAAA,mBAAA;AAAC,CATD,EAAA","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SubscribeOnObservable_1 = require(\"../observable/SubscribeOnObservable\");\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nexports.subscribeOn = subscribeOn;\nvar SubscribeOnOperator = (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n//# sourceMappingURL=subscribeOn.js.map"]},"metadata":{},"sourceType":"script"}