{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _fs = require(\"fs\");\n\nvar _path = require(\"path\");\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _istanbulLibInstrument = require(\"istanbul-lib-instrument\");\n\nconst testExclude = require('test-exclude');\n\nconst findUp = require('find-up');\n\nfunction getRealpath(n) {\n  try {\n    return (0, _fs.realpathSync)(n) || n;\n  } catch (e) {\n    return n;\n  }\n}\n\nfunction makeShouldSkip() {\n  let exclude;\n  return function shouldSkip(file, opts) {\n    if (!exclude || exclude.cwd !== opts.cwd) {\n      const cwd = getRealpath(process.env.NYC_CWD || process.cwd());\n      const nycConfig = process.env.NYC_CONFIG ? JSON.parse(process.env.NYC_CONFIG) : {};\n      let config = {};\n\n      if (Object.keys(opts).length > 0) {\n        // explicitly configuring options in babel\n        // takes precedence.\n        config = opts;\n      } else if (nycConfig.include || nycConfig.exclude) {\n        // nyc was configured in a parent process (keep these settings).\n        config = {\n          include: nycConfig.include,\n          exclude: nycConfig.exclude,\n          // Make sure this is true unless explicitly set to `false`. `undefined` is still `true`.\n          excludeNodeModules: nycConfig.excludeNodeModules !== false\n        };\n      } else {\n        // fallback to loading config from key in package.json.\n        config = {\n          configKey: 'nyc',\n          configPath: (0, _path.dirname)(findUp.sync('package.json', {\n            cwd\n          }))\n        };\n      }\n\n      exclude = testExclude(Object.assign({\n        cwd\n      }, config));\n    }\n\n    return !exclude.shouldInstrument(file);\n  };\n}\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  const t = api.types;\n  const shouldSkip = makeShouldSkip();\n  return {\n    visitor: {\n      Program: {\n        enter(path) {\n          this.__dv__ = null;\n          const realPath = getRealpath(this.file.opts.filename);\n\n          if (shouldSkip(realPath, this.opts)) {\n            return;\n          }\n\n          let {\n            inputSourceMap\n          } = this.opts;\n\n          if (this.opts.useInlineSourceMaps !== false) {\n            if (!inputSourceMap && this.file.inputMap) {\n              inputSourceMap = this.file.inputMap.sourcemap;\n            }\n          }\n\n          this.__dv__ = (0, _istanbulLibInstrument.programVisitor)(t, realPath, {\n            coverageVariable: '__coverage__',\n            inputSourceMap\n          });\n\n          this.__dv__.enter(path);\n        },\n\n        exit(path) {\n          if (!this.__dv__) {\n            return;\n          }\n\n          const result = this.__dv__.exit(path);\n\n          if (this.opts.onCover) {\n            this.opts.onCover(getRealpath(this.file.opts.filename), result.fileCoverage);\n          }\n        }\n\n      }\n    }\n  };\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/babel-plugin-istanbul/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_fs","require","_path","_helperPluginUtils","_istanbulLibInstrument","testExclude","findUp","getRealpath","n","realpathSync","e","makeShouldSkip","exclude","shouldSkip","file","opts","cwd","process","env","NYC_CWD","nycConfig","NYC_CONFIG","JSON","parse","config","keys","length","include","excludeNodeModules","configKey","configPath","dirname","sync","assign","shouldInstrument","_default","declare","api","assertVersion","t","types","visitor","Program","enter","path","__dv__","realPath","filename","inputSourceMap","useInlineSourceMaps","inputMap","sourcemap","programVisitor","coverageVariable","exit","result","onCover","fileCoverage"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _fs = require(\"fs\");\n\nvar _path = require(\"path\");\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _istanbulLibInstrument = require(\"istanbul-lib-instrument\");\n\nconst testExclude = require('test-exclude');\n\nconst findUp = require('find-up');\n\nfunction getRealpath(n) {\n  try {\n    return (0, _fs.realpathSync)(n) || n;\n  } catch (e) {\n    return n;\n  }\n}\n\nfunction makeShouldSkip() {\n  let exclude;\n  return function shouldSkip(file, opts) {\n    if (!exclude || exclude.cwd !== opts.cwd) {\n      const cwd = getRealpath(process.env.NYC_CWD || process.cwd());\n      const nycConfig = process.env.NYC_CONFIG ? JSON.parse(process.env.NYC_CONFIG) : {};\n      let config = {};\n\n      if (Object.keys(opts).length > 0) {\n        // explicitly configuring options in babel\n        // takes precedence.\n        config = opts;\n      } else if (nycConfig.include || nycConfig.exclude) {\n        // nyc was configured in a parent process (keep these settings).\n        config = {\n          include: nycConfig.include,\n          exclude: nycConfig.exclude,\n          // Make sure this is true unless explicitly set to `false`. `undefined` is still `true`.\n          excludeNodeModules: nycConfig.excludeNodeModules !== false\n        };\n      } else {\n        // fallback to loading config from key in package.json.\n        config = {\n          configKey: 'nyc',\n          configPath: (0, _path.dirname)(findUp.sync('package.json', {\n            cwd\n          }))\n        };\n      }\n\n      exclude = testExclude(Object.assign({\n        cwd\n      }, config));\n    }\n\n    return !exclude.shouldInstrument(file);\n  };\n}\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  const t = api.types;\n  const shouldSkip = makeShouldSkip();\n  return {\n    visitor: {\n      Program: {\n        enter(path) {\n          this.__dv__ = null;\n          const realPath = getRealpath(this.file.opts.filename);\n\n          if (shouldSkip(realPath, this.opts)) {\n            return;\n          }\n\n          let {\n            inputSourceMap\n          } = this.opts;\n\n          if (this.opts.useInlineSourceMaps !== false) {\n            if (!inputSourceMap && this.file.inputMap) {\n              inputSourceMap = this.file.inputMap.sourcemap;\n            }\n          }\n\n          this.__dv__ = (0, _istanbulLibInstrument.programVisitor)(t, realPath, {\n            coverageVariable: '__coverage__',\n            inputSourceMap\n          });\n\n          this.__dv__.enter(path);\n        },\n\n        exit(path) {\n          if (!this.__dv__) {\n            return;\n          }\n\n          const result = this.__dv__.exit(path);\n\n          if (this.opts.onCover) {\n            this.opts.onCover(getRealpath(this.file.opts.filename), result.fileCoverage);\n          }\n        }\n\n      }\n    }\n  };\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}