{"ast":null,"code":"import postcss from 'postcss';\nimport { expect } from 'chai';\nimport plugin from '..';\n\nconst test = (input, output, opts, done) => {\n  postcss([plugin(opts)]).process(input, {\n    from: '<inline>'\n  }).then(result => {\n    expect(result.css).to.eql(output);\n    expect(result.warnings()).to.be.empty; // eslint-disable-line no-unused-expressions\n\n    done();\n  }).catch(done);\n};\n\ndescribe('postcss-attribute-case-insensitive', () => {\n  it('simple', done => {\n    test('[data-foo=test i] { display: block; }', '[data-foo=test],[data-foo=Test],[data-foo=tEst],[data-foo=TEst],[data-foo=teSt],[data-foo=TeSt],[data-foo=tESt],[data-foo=TESt],[data-foo=tesT],[data-foo=TesT],[data-foo=tEsT],[data-foo=TEsT],[data-foo=teST],[data-foo=TeST],[data-foo=tEST],[data-foo=TEST] { display: block; }', {}, done);\n  });\n  it('with spaces', done => {\n    test('[foo=\"a b\" i]{}', '[foo=\"a b\"],[foo=\"A b\"],[foo=\"a B\"],[foo=\"A B\"]{}', {}, done);\n  });\n  it('not insensitive', done => {\n    test('[foo=a]{}', '[foo=a]{}', {}, done);\n  });\n  it('several attributes', done => {\n    test('[foo=a i],[foobar=b],[bar=c i]{}', '[foobar=b],[foo=a],[foo=A],[bar=c],[bar=C]{}', {}, done);\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-attribute-case-insensitive/test/test.js"],"names":["postcss","expect","plugin","test","input","output","opts","done","process","from","then","result","css","to","eql","warnings","be","empty","catch","describe","it"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,OAAOC,MAAP,MAAmB,IAAnB;;AAEA,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,KAA+B;AAC3CP,EAAAA,OAAO,CAAC,CACPE,MAAM,CAACI,IAAD,CADC,CAAD,CAAP,CAGEE,OAHF,CAGUJ,KAHV,EAGiB;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAHjB,EAIEC,IAJF,CAIOC,MAAM,IAAI;AACfV,IAAAA,MAAM,CAACU,MAAM,CAACC,GAAR,CAAN,CAAmBC,EAAnB,CAAsBC,GAAtB,CAA0BT,MAA1B;AACAJ,IAAAA,MAAM,CAACU,MAAM,CAACI,QAAP,EAAD,CAAN,CAA0BF,EAA1B,CAA6BG,EAA7B,CAAgCC,KAAhC,CAFe,CAEwB;;AAEvCV,IAAAA,IAAI;AACJ,GATF,EAUEW,KAVF,CAUQX,IAVR;AAWA,CAZD;;AAcAY,QAAQ,CAAC,oCAAD,EAAuC,MAAM;AACpDC,EAAAA,EAAE,CAAC,QAAD,EAAWb,IAAI,IAAI;AACpBJ,IAAAA,IAAI,CACH,uCADG,EAEH,qRAFG,EAGH,EAHG,EAIHI,IAJG,CAAJ;AAMA,GAPC,CAAF;AASAa,EAAAA,EAAE,CAAC,aAAD,EAAgBb,IAAI,IAAI;AACzBJ,IAAAA,IAAI,CACH,iBADG,EAEH,mDAFG,EAGH,EAHG,EAIHI,IAJG,CAAJ;AAMA,GAPC,CAAF;AASAa,EAAAA,EAAE,CAAC,iBAAD,EAAoBb,IAAI,IAAI;AAC7BJ,IAAAA,IAAI,CACH,WADG,EAEH,WAFG,EAGH,EAHG,EAIHI,IAJG,CAAJ;AAMA,GAPC,CAAF;AASAa,EAAAA,EAAE,CAAC,oBAAD,EAAuBb,IAAI,IAAI;AAChCJ,IAAAA,IAAI,CACH,kCADG,EAEH,8CAFG,EAGH,EAHG,EAIHI,IAJG,CAAJ;AAMA,GAPC,CAAF;AAQA,CApCO,CAAR","sourcesContent":["import postcss from 'postcss';\nimport { expect } from 'chai';\n\nimport plugin from '..';\n\nconst test = (input, output, opts, done) => {\n\tpostcss([\n\t\tplugin(opts)\n\t])\n\t\t.process(input, { from: '<inline>' })\n\t\t.then(result => {\n\t\t\texpect(result.css).to.eql(output);\n\t\t\texpect(result.warnings()).to.be.empty; // eslint-disable-line no-unused-expressions\n\n\t\t\tdone();\n\t\t})\n\t\t.catch(done);\n};\n\ndescribe('postcss-attribute-case-insensitive', () => {\n\tit('simple', done => {\n\t\ttest(\n\t\t\t'[data-foo=test i] { display: block; }',\n\t\t\t'[data-foo=test],[data-foo=Test],[data-foo=tEst],[data-foo=TEst],[data-foo=teSt],[data-foo=TeSt],[data-foo=tESt],[data-foo=TESt],[data-foo=tesT],[data-foo=TesT],[data-foo=tEsT],[data-foo=TEsT],[data-foo=teST],[data-foo=TeST],[data-foo=tEST],[data-foo=TEST] { display: block; }',\n\t\t\t{},\n\t\t\tdone\n\t\t);\n\t});\n\n\tit('with spaces', done => {\n\t\ttest(\n\t\t\t'[foo=\"a b\" i]{}',\n\t\t\t'[foo=\"a b\"],[foo=\"A b\"],[foo=\"a B\"],[foo=\"A B\"]{}',\n\t\t\t{},\n\t\t\tdone\n\t\t);\n\t});\n\n\tit('not insensitive', done => {\n\t\ttest(\n\t\t\t'[foo=a]{}',\n\t\t\t'[foo=a]{}',\n\t\t\t{},\n\t\t\tdone\n\t\t);\n\t});\n\n\tit('several attributes', done => {\n\t\ttest(\n\t\t\t'[foo=a i],[foobar=b],[bar=c i]{}',\n\t\t\t'[foobar=b],[foo=a],[foo=A],[bar=c],[bar=C]{}',\n\t\t\t{},\n\t\t\tdone\n\t\t);\n\t});\n});\n"]},"metadata":{},"sourceType":"module"}