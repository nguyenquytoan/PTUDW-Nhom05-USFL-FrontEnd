{"ast":null,"code":"// Can unquote attribute detection\n// Adopted implementation of Mathias Bynens\n// https://github.com/mathiasbynens/mothereff.in/blob/master/unquoted-attributes/eff.js\nvar escapesRx = /\\\\([0-9A-Fa-f]{1,6})(\\r\\n|[ \\t\\n\\f\\r])?|\\\\./g;\nvar blockUnquoteRx = /^(-?\\d|--)|[\\u0000-\\u002c\\u002e\\u002f\\u003A-\\u0040\\u005B-\\u005E\\u0060\\u007B-\\u009f]/;\n\nfunction canUnquote(value) {\n  if (value === '' || value === '-') {\n    return;\n  } // Escapes are valid, so replace them with a valid non-empty string\n\n\n  value = value.replace(escapesRx, 'a');\n  return !blockUnquoteRx.test(value);\n}\n\nmodule.exports = function (node) {\n  var attrValue = node.value;\n\n  if (!attrValue || attrValue.type !== 'String') {\n    return;\n  }\n\n  var unquotedValue = attrValue.value.replace(/^(.)(.*)\\1$/, '$2');\n\n  if (canUnquote(unquotedValue)) {\n    node.value = {\n      type: 'Identifier',\n      loc: attrValue.loc,\n      name: unquotedValue\n    };\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/csso/lib/replace/AttributeSelector.js"],"names":["escapesRx","blockUnquoteRx","canUnquote","value","replace","test","module","exports","node","attrValue","type","unquotedValue","loc","name"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,SAAS,GAAG,8CAAhB;AACA,IAAIC,cAAc,GAAG,qFAArB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,MAAIA,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,GAA9B,EAAmC;AAC/B;AACH,GAHsB,CAKvB;;;AACAA,EAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAcJ,SAAd,EAAyB,GAAzB,CAAR;AAEA,SAAO,CAACC,cAAc,CAACI,IAAf,CAAoBF,KAApB,CAAR;AACH;;AAEDG,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC5B,MAAIC,SAAS,GAAGD,IAAI,CAACL,KAArB;;AAEA,MAAI,CAACM,SAAD,IAAcA,SAAS,CAACC,IAAV,KAAmB,QAArC,EAA+C;AAC3C;AACH;;AAED,MAAIC,aAAa,GAAGF,SAAS,CAACN,KAAV,CAAgBC,OAAhB,CAAwB,aAAxB,EAAuC,IAAvC,CAApB;;AACA,MAAIF,UAAU,CAACS,aAAD,CAAd,EAA+B;AAC3BH,IAAAA,IAAI,CAACL,KAAL,GAAa;AACTO,MAAAA,IAAI,EAAE,YADG;AAETE,MAAAA,GAAG,EAAEH,SAAS,CAACG,GAFN;AAGTC,MAAAA,IAAI,EAAEF;AAHG,KAAb;AAKH;AACJ,CAfD","sourcesContent":["// Can unquote attribute detection\n// Adopted implementation of Mathias Bynens\n// https://github.com/mathiasbynens/mothereff.in/blob/master/unquoted-attributes/eff.js\nvar escapesRx = /\\\\([0-9A-Fa-f]{1,6})(\\r\\n|[ \\t\\n\\f\\r])?|\\\\./g;\nvar blockUnquoteRx = /^(-?\\d|--)|[\\u0000-\\u002c\\u002e\\u002f\\u003A-\\u0040\\u005B-\\u005E\\u0060\\u007B-\\u009f]/;\n\nfunction canUnquote(value) {\n    if (value === '' || value === '-') {\n        return;\n    }\n\n    // Escapes are valid, so replace them with a valid non-empty string\n    value = value.replace(escapesRx, 'a');\n\n    return !blockUnquoteRx.test(value);\n}\n\nmodule.exports = function(node) {\n    var attrValue = node.value;\n\n    if (!attrValue || attrValue.type !== 'String') {\n        return;\n    }\n\n    var unquotedValue = attrValue.value.replace(/^(.)(.*)\\1$/, '$2');\n    if (canUnquote(unquotedValue)) {\n        node.value = {\n            type: 'Identifier',\n            loc: attrValue.loc,\n            name: unquotedValue\n        };\n    }\n};\n"]},"metadata":{},"sourceType":"script"}