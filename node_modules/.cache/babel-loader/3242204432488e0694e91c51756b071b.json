{"ast":null,"code":"'use strict';\n\nrequire('./PlainValue-ec8e588e.js');\n\nvar parseCst = require('./parse-cst.js');\n\nrequire('./resolveSeq-4a68b39b.js');\n\nvar Document$1 = require('./Document-2cf6b08c.js');\n\nrequire('./Schema-42e9705c.js');\n\nrequire('./warnings-39684f17.js');\n\nfunction testEvents(src, options) {\n  const opt = Object.assign({\n    keepCstNodes: true,\n    keepNodeTypes: true,\n    version: '1.2'\n  }, options);\n  const docs = parseCst.parse(src).map(cstDoc => new Document$1.Document(opt).parse(cstDoc));\n  const errDoc = docs.find(doc => doc.errors.length > 0);\n  const error = errDoc ? errDoc.errors[0].message : null;\n  const events = ['+STR'];\n\n  try {\n    for (let i = 0; i < docs.length; ++i) {\n      const doc = docs[i];\n      let root = doc.contents;\n      if (Array.isArray(root)) root = root[0];\n      const [rootStart, rootEnd] = doc.range || [0, 0];\n      let e = doc.errors[0] && doc.errors[0].source;\n      if (e && e.type === 'SEQ_ITEM') e = e.node;\n      if (e && (e.type === 'DOCUMENT' || e.range.start < rootStart)) throw new Error();\n      let docStart = '+DOC';\n      const pre = src.slice(0, rootStart);\n      const explicitDoc = /---\\s*$/.test(pre);\n      if (explicitDoc) docStart += ' ---';else if (!doc.contents) continue;\n      events.push(docStart);\n      addEvents(events, doc, e, root);\n      if (doc.contents && doc.contents.length > 1) throw new Error();\n      let docEnd = '-DOC';\n\n      if (rootEnd) {\n        const post = src.slice(rootEnd);\n        if (/^\\.\\.\\./.test(post)) docEnd += ' ...';\n      }\n\n      events.push(docEnd);\n    }\n  } catch (e) {\n    return {\n      events,\n      error: error || e\n    };\n  }\n\n  events.push('-STR');\n  return {\n    events,\n    error\n  };\n}\n\nfunction addEvents(events, doc, e, node) {\n  if (!node) {\n    events.push('=VAL :');\n    return;\n  }\n\n  if (e && node.cstNode === e) throw new Error();\n  let props = '';\n  let anchor = doc.anchors.getName(node);\n\n  if (anchor) {\n    if (/\\d$/.test(anchor)) {\n      const alt = anchor.replace(/\\d$/, '');\n      if (doc.anchors.getNode(alt)) anchor = alt;\n    }\n\n    props = ` &${anchor}`;\n  }\n\n  if (node.cstNode && node.cstNode.tag) {\n    const {\n      handle,\n      suffix\n    } = node.cstNode.tag;\n    props += handle === '!' && !suffix ? ' <!>' : ` <${node.tag}>`;\n  }\n\n  let scalar = null;\n\n  switch (node.type) {\n    case 'ALIAS':\n      {\n        let alias = doc.anchors.getName(node.source);\n\n        if (/\\d$/.test(alias)) {\n          const alt = alias.replace(/\\d$/, '');\n          if (doc.anchors.getNode(alt)) alias = alt;\n        }\n\n        events.push(`=ALI${props} *${alias}`);\n      }\n      break;\n\n    case 'BLOCK_FOLDED':\n      scalar = '>';\n      break;\n\n    case 'BLOCK_LITERAL':\n      scalar = '|';\n      break;\n\n    case 'PLAIN':\n      scalar = ':';\n      break;\n\n    case 'QUOTE_DOUBLE':\n      scalar = '\"';\n      break;\n\n    case 'QUOTE_SINGLE':\n      scalar = \"'\";\n      break;\n\n    case 'PAIR':\n      events.push(`+MAP${props}`);\n      addEvents(events, doc, e, node.key);\n      addEvents(events, doc, e, node.value);\n      events.push('-MAP');\n      break;\n\n    case 'FLOW_SEQ':\n    case 'SEQ':\n      events.push(`+SEQ${props}`);\n      node.items.forEach(item => {\n        addEvents(events, doc, e, item);\n      });\n      events.push('-SEQ');\n      break;\n\n    case 'FLOW_MAP':\n    case 'MAP':\n      events.push(`+MAP${props}`);\n      node.items.forEach(({\n        key,\n        value\n      }) => {\n        addEvents(events, doc, e, key);\n        addEvents(events, doc, e, value);\n      });\n      events.push('-MAP');\n      break;\n\n    default:\n      throw new Error(`Unexpected node type ${node.type}`);\n  }\n\n  if (scalar) {\n    const value = node.cstNode.strValue.replace(/\\\\/g, '\\\\\\\\').replace(/\\0/g, '\\\\0').replace(/\\x07/g, '\\\\a').replace(/\\x08/g, '\\\\b').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\v/g, '\\\\v').replace(/\\f/g, '\\\\f').replace(/\\r/g, '\\\\r').replace(/\\x1b/g, '\\\\e');\n    events.push(`=VAL${props} ${scalar}${value}`);\n  }\n}\n\nexports.testEvents = testEvents;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/yaml/dist/test-events.js"],"names":["require","parseCst","Document$1","testEvents","src","options","opt","Object","assign","keepCstNodes","keepNodeTypes","version","docs","parse","map","cstDoc","Document","errDoc","find","doc","errors","length","error","message","events","i","root","contents","Array","isArray","rootStart","rootEnd","range","e","source","type","node","start","Error","docStart","pre","slice","explicitDoc","test","push","addEvents","docEnd","post","cstNode","props","anchor","anchors","getName","alt","replace","getNode","tag","handle","suffix","scalar","alias","key","value","items","forEach","item","strValue","exports"],"mappings":"AAAA;;AAEAA,OAAO,CAAC,0BAAD,CAAP;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AACAA,OAAO,CAAC,0BAAD,CAAP;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,wBAAD,CAAxB;;AACAA,OAAO,CAAC,sBAAD,CAAP;;AACAA,OAAO,CAAC,wBAAD,CAAP;;AAEA,SAASG,UAAT,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkC;AAChC,QAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc;AACxBC,IAAAA,YAAY,EAAE,IADU;AAExBC,IAAAA,aAAa,EAAE,IAFS;AAGxBC,IAAAA,OAAO,EAAE;AAHe,GAAd,EAITN,OAJS,CAAZ;AAKA,QAAMO,IAAI,GAAGX,QAAQ,CAACY,KAAT,CAAeT,GAAf,EAAoBU,GAApB,CAAwBC,MAAM,IAAI,IAAIb,UAAU,CAACc,QAAf,CAAwBV,GAAxB,EAA6BO,KAA7B,CAAmCE,MAAnC,CAAlC,CAAb;AACA,QAAME,MAAM,GAAGL,IAAI,CAACM,IAAL,CAAUC,GAAG,IAAIA,GAAG,CAACC,MAAJ,CAAWC,MAAX,GAAoB,CAArC,CAAf;AACA,QAAMC,KAAK,GAAGL,MAAM,GAAGA,MAAM,CAACG,MAAP,CAAc,CAAd,EAAiBG,OAApB,GAA8B,IAAlD;AACA,QAAMC,MAAM,GAAG,CAAC,MAAD,CAAf;;AAEA,MAAI;AACF,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,IAAI,CAACS,MAAzB,EAAiC,EAAEI,CAAnC,EAAsC;AACpC,YAAMN,GAAG,GAAGP,IAAI,CAACa,CAAD,CAAhB;AACA,UAAIC,IAAI,GAAGP,GAAG,CAACQ,QAAf;AACA,UAAIC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAJ,EAAyBA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACzB,YAAM,CAACI,SAAD,EAAYC,OAAZ,IAAuBZ,GAAG,CAACa,KAAJ,IAAa,CAAC,CAAD,EAAI,CAAJ,CAA1C;AACA,UAAIC,CAAC,GAAGd,GAAG,CAACC,MAAJ,CAAW,CAAX,KAAiBD,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcc,MAAvC;AACA,UAAID,CAAC,IAAIA,CAAC,CAACE,IAAF,KAAW,UAApB,EAAgCF,CAAC,GAAGA,CAAC,CAACG,IAAN;AAChC,UAAIH,CAAC,KAAKA,CAAC,CAACE,IAAF,KAAW,UAAX,IAAyBF,CAAC,CAACD,KAAF,CAAQK,KAAR,GAAgBP,SAA9C,CAAL,EAA+D,MAAM,IAAIQ,KAAJ,EAAN;AAC/D,UAAIC,QAAQ,GAAG,MAAf;AACA,YAAMC,GAAG,GAAGpC,GAAG,CAACqC,KAAJ,CAAU,CAAV,EAAaX,SAAb,CAAZ;AACA,YAAMY,WAAW,GAAG,UAAUC,IAAV,CAAeH,GAAf,CAApB;AACA,UAAIE,WAAJ,EAAiBH,QAAQ,IAAI,MAAZ,CAAjB,KAAyC,IAAI,CAACpB,GAAG,CAACQ,QAAT,EAAmB;AAC5DH,MAAAA,MAAM,CAACoB,IAAP,CAAYL,QAAZ;AACAM,MAAAA,SAAS,CAACrB,MAAD,EAASL,GAAT,EAAcc,CAAd,EAAiBP,IAAjB,CAAT;AACA,UAAIP,GAAG,CAACQ,QAAJ,IAAgBR,GAAG,CAACQ,QAAJ,CAAaN,MAAb,GAAsB,CAA1C,EAA6C,MAAM,IAAIiB,KAAJ,EAAN;AAC7C,UAAIQ,MAAM,GAAG,MAAb;;AAEA,UAAIf,OAAJ,EAAa;AACX,cAAMgB,IAAI,GAAG3C,GAAG,CAACqC,KAAJ,CAAUV,OAAV,CAAb;AACA,YAAI,UAAUY,IAAV,CAAeI,IAAf,CAAJ,EAA0BD,MAAM,IAAI,MAAV;AAC3B;;AAEDtB,MAAAA,MAAM,CAACoB,IAAP,CAAYE,MAAZ;AACD;AACF,GAzBD,CAyBE,OAAOb,CAAP,EAAU;AACV,WAAO;AACLT,MAAAA,MADK;AAELF,MAAAA,KAAK,EAAEA,KAAK,IAAIW;AAFX,KAAP;AAID;;AAEDT,EAAAA,MAAM,CAACoB,IAAP,CAAY,MAAZ;AACA,SAAO;AACLpB,IAAAA,MADK;AAELF,IAAAA;AAFK,GAAP;AAID;;AAED,SAASuB,SAAT,CAAmBrB,MAAnB,EAA2BL,GAA3B,EAAgCc,CAAhC,EAAmCG,IAAnC,EAAyC;AACvC,MAAI,CAACA,IAAL,EAAW;AACTZ,IAAAA,MAAM,CAACoB,IAAP,CAAY,QAAZ;AACA;AACD;;AAED,MAAIX,CAAC,IAAIG,IAAI,CAACY,OAAL,KAAiBf,CAA1B,EAA6B,MAAM,IAAIK,KAAJ,EAAN;AAC7B,MAAIW,KAAK,GAAG,EAAZ;AACA,MAAIC,MAAM,GAAG/B,GAAG,CAACgC,OAAJ,CAAYC,OAAZ,CAAoBhB,IAApB,CAAb;;AAEA,MAAIc,MAAJ,EAAY;AACV,QAAI,MAAMP,IAAN,CAAWO,MAAX,CAAJ,EAAwB;AACtB,YAAMG,GAAG,GAAGH,MAAM,CAACI,OAAP,CAAe,KAAf,EAAsB,EAAtB,CAAZ;AACA,UAAInC,GAAG,CAACgC,OAAJ,CAAYI,OAAZ,CAAoBF,GAApB,CAAJ,EAA8BH,MAAM,GAAGG,GAAT;AAC/B;;AAEDJ,IAAAA,KAAK,GAAI,KAAIC,MAAO,EAApB;AACD;;AAED,MAAId,IAAI,CAACY,OAAL,IAAgBZ,IAAI,CAACY,OAAL,CAAaQ,GAAjC,EAAsC;AACpC,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA;AAFI,QAGFtB,IAAI,CAACY,OAAL,CAAaQ,GAHjB;AAIAP,IAAAA,KAAK,IAAIQ,MAAM,KAAK,GAAX,IAAkB,CAACC,MAAnB,GAA4B,MAA5B,GAAsC,KAAItB,IAAI,CAACoB,GAAI,GAA5D;AACD;;AAED,MAAIG,MAAM,GAAG,IAAb;;AAEA,UAAQvB,IAAI,CAACD,IAAb;AACE,SAAK,OAAL;AACE;AACE,YAAIyB,KAAK,GAAGzC,GAAG,CAACgC,OAAJ,CAAYC,OAAZ,CAAoBhB,IAAI,CAACF,MAAzB,CAAZ;;AAEA,YAAI,MAAMS,IAAN,CAAWiB,KAAX,CAAJ,EAAuB;AACrB,gBAAMP,GAAG,GAAGO,KAAK,CAACN,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAZ;AACA,cAAInC,GAAG,CAACgC,OAAJ,CAAYI,OAAZ,CAAoBF,GAApB,CAAJ,EAA8BO,KAAK,GAAGP,GAAR;AAC/B;;AAED7B,QAAAA,MAAM,CAACoB,IAAP,CAAa,OAAMK,KAAM,KAAIW,KAAM,EAAnC;AACD;AACD;;AAEF,SAAK,cAAL;AACED,MAAAA,MAAM,GAAG,GAAT;AACA;;AAEF,SAAK,eAAL;AACEA,MAAAA,MAAM,GAAG,GAAT;AACA;;AAEF,SAAK,OAAL;AACEA,MAAAA,MAAM,GAAG,GAAT;AACA;;AAEF,SAAK,cAAL;AACEA,MAAAA,MAAM,GAAG,GAAT;AACA;;AAEF,SAAK,cAAL;AACEA,MAAAA,MAAM,GAAG,GAAT;AACA;;AAEF,SAAK,MAAL;AACEnC,MAAAA,MAAM,CAACoB,IAAP,CAAa,OAAMK,KAAM,EAAzB;AACAJ,MAAAA,SAAS,CAACrB,MAAD,EAASL,GAAT,EAAcc,CAAd,EAAiBG,IAAI,CAACyB,GAAtB,CAAT;AACAhB,MAAAA,SAAS,CAACrB,MAAD,EAASL,GAAT,EAAcc,CAAd,EAAiBG,IAAI,CAAC0B,KAAtB,CAAT;AACAtC,MAAAA,MAAM,CAACoB,IAAP,CAAY,MAAZ;AACA;;AAEF,SAAK,UAAL;AACA,SAAK,KAAL;AACEpB,MAAAA,MAAM,CAACoB,IAAP,CAAa,OAAMK,KAAM,EAAzB;AACAb,MAAAA,IAAI,CAAC2B,KAAL,CAAWC,OAAX,CAAmBC,IAAI,IAAI;AACzBpB,QAAAA,SAAS,CAACrB,MAAD,EAASL,GAAT,EAAcc,CAAd,EAAiBgC,IAAjB,CAAT;AACD,OAFD;AAGAzC,MAAAA,MAAM,CAACoB,IAAP,CAAY,MAAZ;AACA;;AAEF,SAAK,UAAL;AACA,SAAK,KAAL;AACEpB,MAAAA,MAAM,CAACoB,IAAP,CAAa,OAAMK,KAAM,EAAzB;AACAb,MAAAA,IAAI,CAAC2B,KAAL,CAAWC,OAAX,CAAmB,CAAC;AAClBH,QAAAA,GADkB;AAElBC,QAAAA;AAFkB,OAAD,KAGb;AACJjB,QAAAA,SAAS,CAACrB,MAAD,EAASL,GAAT,EAAcc,CAAd,EAAiB4B,GAAjB,CAAT;AACAhB,QAAAA,SAAS,CAACrB,MAAD,EAASL,GAAT,EAAcc,CAAd,EAAiB6B,KAAjB,CAAT;AACD,OAND;AAOAtC,MAAAA,MAAM,CAACoB,IAAP,CAAY,MAAZ;AACA;;AAEF;AACE,YAAM,IAAIN,KAAJ,CAAW,wBAAuBF,IAAI,CAACD,IAAK,EAA5C,CAAN;AAhEJ;;AAmEA,MAAIwB,MAAJ,EAAY;AACV,UAAMG,KAAK,GAAG1B,IAAI,CAACY,OAAL,CAAakB,QAAb,CAAsBZ,OAAtB,CAA8B,KAA9B,EAAqC,MAArC,EAA6CA,OAA7C,CAAqD,KAArD,EAA4D,KAA5D,EAAmEA,OAAnE,CAA2E,OAA3E,EAAoF,KAApF,EAA2FA,OAA3F,CAAmG,OAAnG,EAA4G,KAA5G,EAAmHA,OAAnH,CAA2H,KAA3H,EAAkI,KAAlI,EAAyIA,OAAzI,CAAiJ,KAAjJ,EAAwJ,KAAxJ,EAA+JA,OAA/J,CAAuK,KAAvK,EAA8K,KAA9K,EAAqLA,OAArL,CAA6L,KAA7L,EAAoM,KAApM,EAA2MA,OAA3M,CAAmN,KAAnN,EAA0N,KAA1N,EAAiOA,OAAjO,CAAyO,OAAzO,EAAkP,KAAlP,CAAd;AACA9B,IAAAA,MAAM,CAACoB,IAAP,CAAa,OAAMK,KAAM,IAAGU,MAAO,GAAEG,KAAM,EAA3C;AACD;AACF;;AAEDK,OAAO,CAAChE,UAAR,GAAqBA,UAArB","sourcesContent":["'use strict';\n\nrequire('./PlainValue-ec8e588e.js');\nvar parseCst = require('./parse-cst.js');\nrequire('./resolveSeq-4a68b39b.js');\nvar Document$1 = require('./Document-2cf6b08c.js');\nrequire('./Schema-42e9705c.js');\nrequire('./warnings-39684f17.js');\n\nfunction testEvents(src, options) {\n  const opt = Object.assign({\n    keepCstNodes: true,\n    keepNodeTypes: true,\n    version: '1.2'\n  }, options);\n  const docs = parseCst.parse(src).map(cstDoc => new Document$1.Document(opt).parse(cstDoc));\n  const errDoc = docs.find(doc => doc.errors.length > 0);\n  const error = errDoc ? errDoc.errors[0].message : null;\n  const events = ['+STR'];\n\n  try {\n    for (let i = 0; i < docs.length; ++i) {\n      const doc = docs[i];\n      let root = doc.contents;\n      if (Array.isArray(root)) root = root[0];\n      const [rootStart, rootEnd] = doc.range || [0, 0];\n      let e = doc.errors[0] && doc.errors[0].source;\n      if (e && e.type === 'SEQ_ITEM') e = e.node;\n      if (e && (e.type === 'DOCUMENT' || e.range.start < rootStart)) throw new Error();\n      let docStart = '+DOC';\n      const pre = src.slice(0, rootStart);\n      const explicitDoc = /---\\s*$/.test(pre);\n      if (explicitDoc) docStart += ' ---';else if (!doc.contents) continue;\n      events.push(docStart);\n      addEvents(events, doc, e, root);\n      if (doc.contents && doc.contents.length > 1) throw new Error();\n      let docEnd = '-DOC';\n\n      if (rootEnd) {\n        const post = src.slice(rootEnd);\n        if (/^\\.\\.\\./.test(post)) docEnd += ' ...';\n      }\n\n      events.push(docEnd);\n    }\n  } catch (e) {\n    return {\n      events,\n      error: error || e\n    };\n  }\n\n  events.push('-STR');\n  return {\n    events,\n    error\n  };\n}\n\nfunction addEvents(events, doc, e, node) {\n  if (!node) {\n    events.push('=VAL :');\n    return;\n  }\n\n  if (e && node.cstNode === e) throw new Error();\n  let props = '';\n  let anchor = doc.anchors.getName(node);\n\n  if (anchor) {\n    if (/\\d$/.test(anchor)) {\n      const alt = anchor.replace(/\\d$/, '');\n      if (doc.anchors.getNode(alt)) anchor = alt;\n    }\n\n    props = ` &${anchor}`;\n  }\n\n  if (node.cstNode && node.cstNode.tag) {\n    const {\n      handle,\n      suffix\n    } = node.cstNode.tag;\n    props += handle === '!' && !suffix ? ' <!>' : ` <${node.tag}>`;\n  }\n\n  let scalar = null;\n\n  switch (node.type) {\n    case 'ALIAS':\n      {\n        let alias = doc.anchors.getName(node.source);\n\n        if (/\\d$/.test(alias)) {\n          const alt = alias.replace(/\\d$/, '');\n          if (doc.anchors.getNode(alt)) alias = alt;\n        }\n\n        events.push(`=ALI${props} *${alias}`);\n      }\n      break;\n\n    case 'BLOCK_FOLDED':\n      scalar = '>';\n      break;\n\n    case 'BLOCK_LITERAL':\n      scalar = '|';\n      break;\n\n    case 'PLAIN':\n      scalar = ':';\n      break;\n\n    case 'QUOTE_DOUBLE':\n      scalar = '\"';\n      break;\n\n    case 'QUOTE_SINGLE':\n      scalar = \"'\";\n      break;\n\n    case 'PAIR':\n      events.push(`+MAP${props}`);\n      addEvents(events, doc, e, node.key);\n      addEvents(events, doc, e, node.value);\n      events.push('-MAP');\n      break;\n\n    case 'FLOW_SEQ':\n    case 'SEQ':\n      events.push(`+SEQ${props}`);\n      node.items.forEach(item => {\n        addEvents(events, doc, e, item);\n      });\n      events.push('-SEQ');\n      break;\n\n    case 'FLOW_MAP':\n    case 'MAP':\n      events.push(`+MAP${props}`);\n      node.items.forEach(({\n        key,\n        value\n      }) => {\n        addEvents(events, doc, e, key);\n        addEvents(events, doc, e, value);\n      });\n      events.push('-MAP');\n      break;\n\n    default:\n      throw new Error(`Unexpected node type ${node.type}`);\n  }\n\n  if (scalar) {\n    const value = node.cstNode.strValue.replace(/\\\\/g, '\\\\\\\\').replace(/\\0/g, '\\\\0').replace(/\\x07/g, '\\\\a').replace(/\\x08/g, '\\\\b').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\v/g, '\\\\v').replace(/\\f/g, '\\\\f').replace(/\\r/g, '\\\\r').replace(/\\x1b/g, '\\\\e');\n    events.push(`=VAL${props} ${scalar}${value}`);\n  }\n}\n\nexports.testEvents = testEvents;\n"]},"metadata":{},"sourceType":"script"}