{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.mjs';\nimport { generateURLVariations } from './generateURLVariations.mjs';\nimport '../_version.mjs';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\n\nexport const getCacheKeyForURL = (url, options) => {\n  const precacheController = getOrCreatePrecacheController();\n  const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n\n  for (const possibleURL of generateURLVariations(url, options)) {\n    const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n\n    if (possibleCacheKey) {\n      return possibleCacheKey;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-precaching/utils/getCacheKeyForURL.mjs"],"names":["getOrCreatePrecacheController","generateURLVariations","getCacheKeyForURL","url","options","precacheController","urlsToCacheKeys","getURLsToCacheKeys","possibleURL","possibleCacheKey","get"],"mappings":"AAAA;;;;;;;AAQA,SAAQA,6BAAR,QACO,qCADP;AAEA,SAAQC,qBAAR,QAAoC,6BAApC;AACA,OAAO,iBAAP;AAEA;;;;;;;;;;;;AAWA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACjD,QAAMC,kBAAkB,GAAGL,6BAA6B,EAAxD;AAEA,QAAMM,eAAe,GAAGD,kBAAkB,CAACE,kBAAnB,EAAxB;;AACA,OAAK,MAAMC,WAAX,IAA0BP,qBAAqB,CAACE,GAAD,EAAMC,OAAN,CAA/C,EAA+D;AAC7D,UAAMK,gBAAgB,GAAGH,eAAe,CAACI,GAAhB,CAAoBF,WAApB,CAAzB;;AACA,QAAIC,gBAAJ,EAAsB;AACpB,aAAOA,gBAAP;AACD;AACF;AACF,CAVM","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport {getOrCreatePrecacheController}\n  from './getOrCreatePrecacheController.mjs';\nimport {generateURLVariations} from './generateURLVariations.mjs';\nimport '../_version.mjs';\n\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n  const precacheController = getOrCreatePrecacheController();\n\n  const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n  for (const possibleURL of generateURLVariations(url, options)) {\n    const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n    if (possibleCacheKey) {\n      return possibleCacheKey;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}