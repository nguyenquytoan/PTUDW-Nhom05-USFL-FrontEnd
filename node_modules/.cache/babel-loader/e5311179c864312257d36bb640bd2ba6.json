{"ast":null,"code":"var test = require('tape');\n\nvar parse = require('../').parse;\n\ntest('single operators', function (t) {\n  t.same(parse('beep | boop'), ['beep', {\n    op: '|'\n  }, 'boop']);\n  t.same(parse('beep|boop'), ['beep', {\n    op: '|'\n  }, 'boop']);\n  t.same(parse('beep \\\\| boop'), ['beep', '|', 'boop']);\n  t.same(parse('beep \"|boop\"'), ['beep', '|boop']);\n  t.same(parse('echo zing &'), ['echo', 'zing', {\n    op: '&'\n  }]);\n  t.same(parse('echo zing&'), ['echo', 'zing', {\n    op: '&'\n  }]);\n  t.same(parse('echo zing\\\\&'), ['echo', 'zing&']);\n  t.same(parse('echo \"zing\\\\&\"'), ['echo', 'zing\\\\&']);\n  t.same(parse('beep;boop'), ['beep', {\n    op: ';'\n  }, 'boop']);\n  t.same(parse('(beep;boop)'), [{\n    op: '('\n  }, 'beep', {\n    op: ';'\n  }, 'boop', {\n    op: ')'\n  }]);\n  t.same(parse('beep>boop'), ['beep', {\n    op: '>'\n  }, 'boop']);\n  t.same(parse('beep 2>boop'), ['beep', '2', {\n    op: '>'\n  }, 'boop']);\n  t.same(parse('beep<boop'), ['beep', {\n    op: '<'\n  }, 'boop']);\n  t.end();\n});\ntest('double operators', function (t) {\n  t.same(parse('beep || boop'), ['beep', {\n    op: '||'\n  }, 'boop']);\n  t.same(parse('beep||boop'), ['beep', {\n    op: '||'\n  }, 'boop']);\n  t.same(parse('beep ||boop'), ['beep', {\n    op: '||'\n  }, 'boop']);\n  t.same(parse('beep|| boop'), ['beep', {\n    op: '||'\n  }, 'boop']);\n  t.same(parse('beep  ||   boop'), ['beep', {\n    op: '||'\n  }, 'boop']);\n  t.same(parse('beep && boop'), ['beep', {\n    op: '&&'\n  }, 'boop']);\n  t.same(parse('beep && boop || byte'), ['beep', {\n    op: '&&'\n  }, 'boop', {\n    op: '||'\n  }, 'byte']);\n  t.same(parse('beep&&boop||byte'), ['beep', {\n    op: '&&'\n  }, 'boop', {\n    op: '||'\n  }, 'byte']);\n  t.same(parse('beep\\\\&\\\\&boop||byte'), ['beep&&boop', {\n    op: '||'\n  }, 'byte']);\n  t.same(parse('beep\\\\&&boop||byte'), ['beep&', {\n    op: '&'\n  }, 'boop', {\n    op: '||'\n  }, 'byte']);\n  t.same(parse('beep;;boop|&byte>>blip'), ['beep', {\n    op: ';;'\n  }, 'boop', {\n    op: '|&'\n  }, 'byte', {\n    op: '>>'\n  }, 'blip']);\n  t.same(parse('beep 2>&1'), ['beep', '2', {\n    op: '>&'\n  }, '1']);\n  t.same(parse('beep<(boop)'), ['beep', {\n    op: '<('\n  }, 'boop', {\n    op: ')'\n  }]);\n  t.same(parse('beep<<(boop)'), ['beep', {\n    op: '<'\n  }, {\n    op: '<('\n  }, 'boop', {\n    op: ')'\n  }]);\n  t.end();\n});\ntest('glob patterns', function (t) {\n  t.same(parse('tap test/*.test.js'), ['tap', {\n    op: 'glob',\n    pattern: 'test/*.test.js'\n  }]);\n  t.same(parse('tap \"test/*.test.js\"'), ['tap', 'test/*.test.js']);\n  t.end();\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/shell-quote/test/op.js"],"names":["test","require","parse","t","same","op","end","pattern"],"mappings":"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","sourcesContent":["var test = require('tape');\nvar parse = require('../').parse;\n\ntest('single operators', function (t) {\n    t.same(parse('beep | boop'), [ 'beep', { op: '|' }, 'boop' ]);\n    t.same(parse('beep|boop'), [ 'beep', { op: '|' }, 'boop' ]);\n    t.same(parse('beep \\\\| boop'), [ 'beep', '|', 'boop' ]);\n    t.same(parse('beep \"|boop\"'), [ 'beep', '|boop' ]);\n    \n    t.same(parse('echo zing &'), [ 'echo', 'zing', { op: '&' } ]);\n    t.same(parse('echo zing&'), [ 'echo', 'zing', { op: '&' } ]);\n    t.same(parse('echo zing\\\\&'), [ 'echo', 'zing&' ]);\n    t.same(parse('echo \"zing\\\\&\"'), [ 'echo', 'zing\\\\&' ]);\n    \n    t.same(parse('beep;boop'), [ 'beep', { op: ';' }, 'boop' ]);\n    t.same(parse('(beep;boop)'), [\n        { op: '(' }, 'beep', { op: ';' }, 'boop', { op: ')' }\n    ]);\n    \n    t.same(parse('beep>boop'), [ 'beep', { op: '>' }, 'boop' ]);\n    t.same(parse('beep 2>boop'), [ 'beep', '2', { op: '>' }, 'boop' ]);\n    t.same(parse('beep<boop'), [ 'beep', { op: '<' }, 'boop' ]);\n    \n    t.end();\n});\n\ntest('double operators', function (t) {\n    t.same(parse('beep || boop'), [ 'beep', { op: '||' }, 'boop' ]);\n    t.same(parse('beep||boop'), [ 'beep', { op: '||' }, 'boop' ]);\n    t.same(parse('beep ||boop'), [ 'beep', { op: '||' }, 'boop' ]);\n    t.same(parse('beep|| boop'), [ 'beep', { op: '||' }, 'boop' ]);\n    t.same(parse('beep  ||   boop'), [ 'beep', { op: '||' }, 'boop' ]);\n    \n    t.same(parse('beep && boop'), [ 'beep', { op: '&&' }, 'boop' ]);\n    t.same(\n        parse('beep && boop || byte'),\n        [ 'beep', { op: '&&' }, 'boop', { op: '||' }, 'byte' ]\n    );\n    t.same(\n        parse('beep&&boop||byte'),\n        [ 'beep', { op: '&&' }, 'boop', { op: '||' }, 'byte' ]\n    );\n    t.same(\n        parse('beep\\\\&\\\\&boop||byte'),\n        [ 'beep&&boop', { op: '||' }, 'byte' ]\n    );\n    t.same(\n        parse('beep\\\\&&boop||byte'),\n        [ 'beep&', { op: '&' }, 'boop', { op: '||' }, 'byte' ]\n    );\n    t.same(\n        parse('beep;;boop|&byte>>blip'),\n        [ 'beep', { op: ';;' }, 'boop', { op: '|&' }, 'byte', { op: '>>' }, 'blip' ]\n    );\n\n    t.same(parse('beep 2>&1'), [ 'beep', '2', { op: '>&' }, '1' ]);\n\n    t.same(\n        parse('beep<(boop)'),\n        [ 'beep', { op: '<(' }, 'boop', { op: ')' } ]\n    );\n    t.same(\n        parse('beep<<(boop)'),\n        [ 'beep', { op: '<' }, { op: '<(' }, 'boop', { op: ')' } ]\n    );\n\n    t.end();\n});\n\ntest('glob patterns', function (t) {\n    t.same(\n        parse('tap test/*.test.js'),\n        [ 'tap', { op: 'glob', pattern: 'test/*.test.js' } ]\n    );\n\n    t.same(parse('tap \"test/*.test.js\"'), ['tap', 'test/*.test.js']);\n    t.end();\n})\n"]},"metadata":{},"sourceType":"script"}