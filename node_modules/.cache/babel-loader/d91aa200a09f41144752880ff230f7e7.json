{"ast":null,"code":"import propName from './propName';\nconst DEFAULT_OPTIONS = {\n  ignoreCase: true\n};\n/**\n * Returns the JSXAttribute itself or undefined, indicating the prop\n * is not present on the JSXOpeningElement.\n *\n */\n\nexport default function getProp(props = [], prop = '', options = DEFAULT_OPTIONS) {\n  function getName(name) {\n    return options.ignoreCase ? name.toUpperCase() : name;\n  }\n\n  const propToFind = getName(prop);\n\n  function isPropToFind(property) {\n    return property.type === 'Property' && property.key.type === 'Identifier' && propToFind === getName(property.key.name);\n  }\n\n  const foundAttribute = props.find(attribute => {\n    // If the props contain a spread prop, try to find the property in the object expression.\n    if (attribute.type === 'JSXSpreadAttribute') {\n      return attribute.argument.type === 'ObjectExpression' && propToFind !== getName('key') // https://github.com/reactjs/rfcs/pull/107\n      && attribute.argument.properties.some(isPropToFind);\n    }\n\n    return propToFind === getName(propName(attribute));\n  });\n\n  if (foundAttribute && foundAttribute.type === 'JSXSpreadAttribute') {\n    return propertyToJSXAttribute(foundAttribute.argument.properties.find(isPropToFind));\n  }\n\n  return foundAttribute;\n}\n\nfunction propertyToJSXAttribute(node) {\n  const {\n    key,\n    value\n  } = node;\n  return {\n    type: 'JSXAttribute',\n    name: {\n      type: 'JSXIdentifier',\n      name: key.name,\n      ...getBaseProps(key)\n    },\n    value: value.type === 'Literal' ? adjustRangeStartAndEndOfNode(value) : {\n      type: 'JSXExpressionContainer',\n      expression: adjustExpressionRangeStartAndEnd(value),\n      ...getBaseProps(value)\n    },\n    ...getBaseProps(node)\n  };\n}\n\nfunction adjustRangeStartAndEndOfNode(node) {\n  const [start, end] = node.range || [node.start, node.end];\n  return { ...node,\n    end,\n    range: [start, end],\n    start\n  };\n}\n\nfunction adjustExpressionRangeStartAndEnd({\n  expressions,\n  quasis,\n  ...expression\n}) {\n  return { ...adjustRangeStartAndEndOfNode(expression),\n    ...(expressions ? {\n      expressions: expressions.map(adjustRangeStartAndEndOfNode)\n    } : {}),\n    ...(quasis ? {\n      quasis: quasis.map(adjustRangeStartAndEndOfNode)\n    } : {})\n  };\n}\n\nfunction getBaseProps({\n  loc,\n  ...node\n}) {\n  const {\n    end,\n    range,\n    start\n  } = adjustRangeStartAndEndOfNode(node);\n  return {\n    end,\n    loc: getBaseLocation(loc),\n    range,\n    start\n  };\n}\n\nfunction getBaseLocation({\n  start,\n  end,\n  source,\n  filename\n}) {\n  return {\n    start,\n    end,\n    ...(source !== undefined ? {\n      source\n    } : {}),\n    ...(filename !== undefined ? {\n      filename\n    } : {})\n  };\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jsx-ast-utils/src/getProp.js"],"names":["propName","DEFAULT_OPTIONS","ignoreCase","getProp","props","prop","options","getName","name","toUpperCase","propToFind","isPropToFind","property","type","key","foundAttribute","find","attribute","argument","properties","some","propertyToJSXAttribute","node","value","getBaseProps","adjustRangeStartAndEndOfNode","expression","adjustExpressionRangeStartAndEnd","start","end","range","expressions","quasis","map","loc","getBaseLocation","source","filename","undefined"],"mappings":"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","sourcesContent":["import propName from './propName';\n\nconst DEFAULT_OPTIONS = {\n  ignoreCase: true,\n};\n\n/**\n * Returns the JSXAttribute itself or undefined, indicating the prop\n * is not present on the JSXOpeningElement.\n *\n */\nexport default function getProp(props = [], prop = '', options = DEFAULT_OPTIONS) {\n  function getName(name) { return options.ignoreCase ? name.toUpperCase() : name; }\n  const propToFind = getName(prop);\n  function isPropToFind(property) {\n    return property.type === 'Property'\n      && property.key.type === 'Identifier'\n      && propToFind === getName(property.key.name);\n  }\n\n  const foundAttribute = props.find((attribute) => {\n    // If the props contain a spread prop, try to find the property in the object expression.\n    if (attribute.type === 'JSXSpreadAttribute') {\n      return attribute.argument.type === 'ObjectExpression'\n        && propToFind !== getName('key') // https://github.com/reactjs/rfcs/pull/107\n        && attribute.argument.properties.some(isPropToFind);\n    }\n\n    return propToFind === getName(propName(attribute));\n  });\n\n  if (foundAttribute && foundAttribute.type === 'JSXSpreadAttribute') {\n    return propertyToJSXAttribute(foundAttribute.argument.properties.find(isPropToFind));\n  }\n\n  return foundAttribute;\n}\n\nfunction propertyToJSXAttribute(node) {\n  const { key, value } = node;\n  return {\n    type: 'JSXAttribute',\n    name: { type: 'JSXIdentifier', name: key.name, ...getBaseProps(key) },\n    value: value.type === 'Literal'\n      ? adjustRangeStartAndEndOfNode(value)\n      : {\n        type: 'JSXExpressionContainer',\n        expression: adjustExpressionRangeStartAndEnd(value),\n        ...getBaseProps(value),\n      },\n    ...getBaseProps(node),\n  };\n}\n\nfunction adjustRangeStartAndEndOfNode(node) {\n  const [start, end] = node.range || [node.start, node.end];\n\n  return {\n    ...node,\n    end,\n    range: [start, end],\n    start,\n  };\n}\n\nfunction adjustExpressionRangeStartAndEnd({ expressions, quasis, ...expression }) {\n  return {\n    ...adjustRangeStartAndEndOfNode(expression),\n    ...(expressions ? { expressions: expressions.map(adjustRangeStartAndEndOfNode) } : {}),\n    ...(quasis ? { quasis: quasis.map(adjustRangeStartAndEndOfNode) } : {}),\n  };\n}\n\nfunction getBaseProps({ loc, ...node }) {\n  const { end, range, start } = adjustRangeStartAndEndOfNode(node);\n\n  return {\n    end,\n    loc: getBaseLocation(loc),\n    range,\n    start,\n  };\n}\n\nfunction getBaseLocation({\n  start,\n  end,\n  source,\n  filename,\n}) {\n  return {\n    start,\n    end,\n    ...(source !== undefined ? { source } : {}),\n    ...(filename !== undefined ? { filename } : {}),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}