{"ast":null,"code":"var Marker = require('./marker');\n\nvar Token = require('./token');\n\nvar formatPosition = require('../utils/format-position');\n\nvar Level = {\n  BLOCK: 'block',\n  COMMENT: 'comment',\n  DOUBLE_QUOTE: 'double-quote',\n  RULE: 'rule',\n  SINGLE_QUOTE: 'single-quote'\n};\nvar AT_RULES = ['@charset', '@import'];\nvar BLOCK_RULES = ['@-moz-document', '@document', '@-moz-keyframes', '@-ms-keyframes', '@-o-keyframes', '@-webkit-keyframes', '@keyframes', '@media', '@supports'];\nvar IGNORE_END_COMMENT_PATTERN = /\\/\\* clean\\-css ignore:end \\*\\/$/;\nvar IGNORE_START_COMMENT_PATTERN = /^\\/\\* clean\\-css ignore:start \\*\\//;\nvar PAGE_MARGIN_BOXES = ['@bottom-center', '@bottom-left', '@bottom-left-corner', '@bottom-right', '@bottom-right-corner', '@left-bottom', '@left-middle', '@left-top', '@right-bottom', '@right-middle', '@right-top', '@top-center', '@top-left', '@top-left-corner', '@top-right', '@top-right-corner'];\nvar EXTRA_PAGE_BOXES = ['@footnote', '@footnotes', '@left', '@page-float-bottom', '@page-float-top', '@right'];\nvar REPEAT_PATTERN = /^\\[\\s{0,31}\\d+\\s{0,31}\\]$/;\nvar RULE_WORD_SEPARATOR_PATTERN = /[\\s\\(]/;\nvar TAIL_BROKEN_VALUE_PATTERN = /[\\s|\\}]*$/;\n\nfunction tokenize(source, externalContext) {\n  var internalContext = {\n    level: Level.BLOCK,\n    position: {\n      source: externalContext.source || undefined,\n      line: 1,\n      column: 0,\n      index: 0\n    }\n  };\n  return intoTokens(source, externalContext, internalContext, false);\n}\n\nfunction intoTokens(source, externalContext, internalContext, isNested) {\n  var allTokens = [];\n  var newTokens = allTokens;\n  var lastToken;\n  var ruleToken;\n  var ruleTokens = [];\n  var propertyToken;\n  var metadata;\n  var metadatas = [];\n  var level = internalContext.level;\n  var levels = [];\n  var buffer = [];\n  var buffers = [];\n  var serializedBuffer;\n  var serializedBufferPart;\n  var roundBracketLevel = 0;\n  var isQuoted;\n  var isSpace;\n  var isNewLineNix;\n  var isNewLineWin;\n  var isCarriageReturn;\n  var isCommentStart;\n  var wasCommentStart = false;\n  var isCommentEnd;\n  var wasCommentEnd = false;\n  var isCommentEndMarker;\n  var isEscaped;\n  var wasEscaped = false;\n  var isRaw = false;\n  var seekingValue = false;\n  var seekingPropertyBlockClosing = false;\n  var position = internalContext.position;\n  var lastCommentStartAt;\n\n  for (; position.index < source.length; position.index++) {\n    var character = source[position.index];\n    isQuoted = level == Level.SINGLE_QUOTE || level == Level.DOUBLE_QUOTE;\n    isSpace = character == Marker.SPACE || character == Marker.TAB;\n    isNewLineNix = character == Marker.NEW_LINE_NIX;\n    isNewLineWin = character == Marker.NEW_LINE_NIX && source[position.index - 1] == Marker.CARRIAGE_RETURN;\n    isCarriageReturn = character == Marker.CARRIAGE_RETURN && source[position.index + 1] && source[position.index + 1] != Marker.NEW_LINE_NIX;\n    isCommentStart = !wasCommentEnd && level != Level.COMMENT && !isQuoted && character == Marker.ASTERISK && source[position.index - 1] == Marker.FORWARD_SLASH;\n    isCommentEndMarker = !wasCommentStart && !isQuoted && character == Marker.FORWARD_SLASH && source[position.index - 1] == Marker.ASTERISK;\n    isCommentEnd = level == Level.COMMENT && isCommentEndMarker;\n    roundBracketLevel = Math.max(roundBracketLevel, 0);\n    metadata = buffer.length === 0 ? [position.line, position.column, position.source] : metadata;\n\n    if (isEscaped) {\n      // previous character was a backslash\n      buffer.push(character);\n    } else if (!isCommentEnd && level == Level.COMMENT) {\n      buffer.push(character);\n    } else if (!isCommentStart && !isCommentEnd && isRaw) {\n      buffer.push(character);\n    } else if (isCommentStart && (level == Level.BLOCK || level == Level.RULE) && buffer.length > 1) {\n      // comment start within block preceded by some content, e.g. div/*<--\n      metadatas.push(metadata);\n      buffer.push(character);\n      buffers.push(buffer.slice(0, buffer.length - 2));\n      buffer = buffer.slice(buffer.length - 2);\n      metadata = [position.line, position.column - 1, position.source];\n      levels.push(level);\n      level = Level.COMMENT;\n    } else if (isCommentStart) {\n      // comment start, e.g. /*<--\n      levels.push(level);\n      level = Level.COMMENT;\n      buffer.push(character);\n    } else if (isCommentEnd && isIgnoreStartComment(buffer)) {\n      // ignore:start comment end, e.g. /* clean-css ignore:start */<--\n      serializedBuffer = buffer.join('').trim() + character;\n      lastToken = [Token.COMMENT, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]];\n      newTokens.push(lastToken);\n      isRaw = true;\n      metadata = metadatas.pop() || null;\n      buffer = buffers.pop() || [];\n    } else if (isCommentEnd && isIgnoreEndComment(buffer)) {\n      // ignore:start comment end, e.g. /* clean-css ignore:end */<--\n      serializedBuffer = buffer.join('') + character;\n      lastCommentStartAt = serializedBuffer.lastIndexOf(Marker.FORWARD_SLASH + Marker.ASTERISK);\n      serializedBufferPart = serializedBuffer.substring(0, lastCommentStartAt);\n      lastToken = [Token.RAW, serializedBufferPart, [originalMetadata(metadata, serializedBufferPart, externalContext)]];\n      newTokens.push(lastToken);\n      serializedBufferPart = serializedBuffer.substring(lastCommentStartAt);\n      metadata = [position.line, position.column - serializedBufferPart.length + 1, position.source];\n      lastToken = [Token.COMMENT, serializedBufferPart, [originalMetadata(metadata, serializedBufferPart, externalContext)]];\n      newTokens.push(lastToken);\n      isRaw = false;\n      level = levels.pop();\n      metadata = metadatas.pop() || null;\n      buffer = buffers.pop() || [];\n    } else if (isCommentEnd) {\n      // comment end, e.g. /* comment */<--\n      serializedBuffer = buffer.join('').trim() + character;\n      lastToken = [Token.COMMENT, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]];\n      newTokens.push(lastToken);\n      level = levels.pop();\n      metadata = metadatas.pop() || null;\n      buffer = buffers.pop() || [];\n    } else if (isCommentEndMarker && source[position.index + 1] != Marker.ASTERISK) {\n      externalContext.warnings.push('Unexpected \\'*/\\' at ' + formatPosition([position.line, position.column, position.source]) + '.');\n      buffer = [];\n    } else if (character == Marker.SINGLE_QUOTE && !isQuoted) {\n      // single quotation start, e.g. a[href^='https<--\n      levels.push(level);\n      level = Level.SINGLE_QUOTE;\n      buffer.push(character);\n    } else if (character == Marker.SINGLE_QUOTE && level == Level.SINGLE_QUOTE) {\n      // single quotation end, e.g. a[href^='https'<--\n      level = levels.pop();\n      buffer.push(character);\n    } else if (character == Marker.DOUBLE_QUOTE && !isQuoted) {\n      // double quotation start, e.g. a[href^=\"<--\n      levels.push(level);\n      level = Level.DOUBLE_QUOTE;\n      buffer.push(character);\n    } else if (character == Marker.DOUBLE_QUOTE && level == Level.DOUBLE_QUOTE) {\n      // double quotation end, e.g. a[href^=\"https\"<--\n      level = levels.pop();\n      buffer.push(character);\n    } else if (!isCommentStart && !isCommentEnd && character != Marker.CLOSE_ROUND_BRACKET && character != Marker.OPEN_ROUND_BRACKET && level != Level.COMMENT && !isQuoted && roundBracketLevel > 0) {\n      // character inside any function, e.g. hsla(.<--\n      buffer.push(character);\n    } else if (character == Marker.OPEN_ROUND_BRACKET && !isQuoted && level != Level.COMMENT && !seekingValue) {\n      // round open bracket, e.g. @import url(<--\n      buffer.push(character);\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && !isQuoted && level != Level.COMMENT && !seekingValue) {\n      // round open bracket, e.g. @import url(test.css)<--\n      buffer.push(character);\n      roundBracketLevel--;\n    } else if (character == Marker.SEMICOLON && level == Level.BLOCK && buffer[0] == Marker.AT) {\n      // semicolon ending rule at block level, e.g. @import '...';<--\n      serializedBuffer = buffer.join('').trim();\n      allTokens.push([Token.AT_RULE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      buffer = [];\n    } else if (character == Marker.COMMA && level == Level.BLOCK && ruleToken) {\n      // comma separator at block level, e.g. a,div,<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([tokenScopeFrom(ruleToken[0]), serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext, ruleToken[1].length)]]);\n      buffer = [];\n    } else if (character == Marker.COMMA && level == Level.BLOCK && tokenTypeFrom(buffer) == Token.AT_RULE) {\n      // comma separator at block level, e.g. @import url(...) screen,<--\n      // keep iterating as end semicolon will create the token\n      buffer.push(character);\n    } else if (character == Marker.COMMA && level == Level.BLOCK) {\n      // comma separator at block level, e.g. a,<--\n      ruleToken = [tokenTypeFrom(buffer), [], []];\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([tokenScopeFrom(ruleToken[0]), serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext, 0)]]);\n      buffer = [];\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.BLOCK && ruleToken && ruleToken[0] == Token.NESTED_BLOCK) {\n      // open brace opening at-rule at block level, e.g. @media{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([Token.NESTED_BLOCK_SCOPE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      allTokens.push(ruleToken);\n      levels.push(level);\n      position.column++;\n      position.index++;\n      buffer = [];\n      ruleToken[2] = intoTokens(source, externalContext, internalContext, true);\n      ruleToken = null;\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.BLOCK && tokenTypeFrom(buffer) == Token.NESTED_BLOCK) {\n      // open brace opening at-rule at block level, e.g. @media{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken = ruleToken || [Token.NESTED_BLOCK, [], []];\n      ruleToken[1].push([Token.NESTED_BLOCK_SCOPE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      allTokens.push(ruleToken);\n      levels.push(level);\n      position.column++;\n      position.index++;\n      buffer = [];\n      ruleToken[2] = intoTokens(source, externalContext, internalContext, true);\n      ruleToken = null;\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.BLOCK) {\n      // open brace opening rule at block level, e.g. div{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken = ruleToken || [tokenTypeFrom(buffer), [], []];\n      ruleToken[1].push([tokenScopeFrom(ruleToken[0]), serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext, ruleToken[1].length)]]);\n      newTokens = ruleToken[2];\n      allTokens.push(ruleToken);\n      levels.push(level);\n      level = Level.RULE;\n      buffer = [];\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.RULE && seekingValue) {\n      // open brace opening rule at rule level, e.g. div{--variable:{<--\n      ruleTokens.push(ruleToken);\n      ruleToken = [Token.PROPERTY_BLOCK, []];\n      propertyToken.push(ruleToken);\n      newTokens = ruleToken[1];\n      levels.push(level);\n      level = Level.RULE;\n      seekingValue = false;\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.RULE && isPageMarginBox(buffer)) {\n      // open brace opening page-margin box at rule level, e.g. @page{@top-center{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleTokens.push(ruleToken);\n      ruleToken = [Token.AT_RULE_BLOCK, [], []];\n      ruleToken[1].push([Token.AT_RULE_BLOCK_SCOPE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      newTokens.push(ruleToken);\n      newTokens = ruleToken[2];\n      levels.push(level);\n      level = Level.RULE;\n      buffer = [];\n    } else if (character == Marker.COLON && level == Level.RULE && !seekingValue) {\n      // colon at rule level, e.g. a{color:<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken = [Token.PROPERTY, [Token.PROPERTY_NAME, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]];\n      newTokens.push(propertyToken);\n      seekingValue = true;\n      buffer = [];\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && propertyToken && ruleTokens.length > 0 && buffer.length > 0 && buffer[0] == Marker.AT) {\n      // semicolon at rule level for at-rule, e.g. a{--color:{@apply(--other-color);<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([Token.AT_RULE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      buffer = [];\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && propertyToken && buffer.length > 0) {\n      // semicolon at rule level, e.g. a{color:red;<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      propertyToken = null;\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && propertyToken && buffer.length === 0) {\n      // semicolon after bracketed value at rule level, e.g. a{color:rgb(...);<--\n      propertyToken = null;\n      seekingValue = false;\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && buffer.length > 0 && buffer[0] == Marker.AT) {\n      // semicolon for at-rule at rule level, e.g. a{@apply(--variable);<--\n      serializedBuffer = buffer.join('');\n      newTokens.push([Token.AT_RULE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && seekingPropertyBlockClosing) {\n      // close brace after a property block at rule level, e.g. a{--custom:{color:red;};<--\n      seekingPropertyBlockClosing = false;\n      buffer = [];\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && buffer.length === 0) {// stray semicolon at rule level, e.g. a{;<--\n      // noop\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && propertyToken && seekingValue && buffer.length > 0 && ruleTokens.length > 0) {\n      // close brace at rule level, e.g. a{--color:{color:red}<--\n      serializedBuffer = buffer.join('');\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && propertyToken && buffer.length > 0 && buffer[0] == Marker.AT && ruleTokens.length > 0) {\n      // close brace at rule level for at-rule, e.g. a{--color:{@apply(--other-color)}<--\n      serializedBuffer = buffer.join('');\n      ruleToken[1].push([Token.AT_RULE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && propertyToken && ruleTokens.length > 0) {\n      // close brace at rule level after space, e.g. a{--color:{color:red }<--\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n      level = levels.pop();\n      seekingValue = false;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && propertyToken && buffer.length > 0) {\n      // close brace at rule level, e.g. a{color:red}<--\n      serializedBuffer = buffer.join('');\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = allTokens;\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && buffer.length > 0 && buffer[0] == Marker.AT) {\n      // close brace after at-rule at rule level, e.g. a{@apply(--variable)}<--\n      propertyToken = null;\n      ruleToken = null;\n      serializedBuffer = buffer.join('').trim();\n      newTokens.push([Token.AT_RULE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      newTokens = allTokens;\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && levels[levels.length - 1] == Level.RULE) {\n      // close brace after a property block at rule level, e.g. a{--custom:{color:red;}<--\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n      level = levels.pop();\n      seekingValue = false;\n      seekingPropertyBlockClosing = true;\n      buffer = [];\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE) {\n      // close brace after a rule, e.g. a{color:red;}<--\n      propertyToken = null;\n      ruleToken = null;\n      newTokens = allTokens;\n      level = levels.pop();\n      seekingValue = false;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.BLOCK && !isNested && position.index <= source.length - 1) {\n      // stray close brace at block level, e.g. a{color:red}color:blue}<--\n      externalContext.warnings.push('Unexpected \\'}\\' at ' + formatPosition([position.line, position.column, position.source]) + '.');\n      buffer.push(character);\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.BLOCK) {\n      // close brace at block level, e.g. @media screen {...}<--\n      break;\n    } else if (character == Marker.OPEN_ROUND_BRACKET && level == Level.RULE && seekingValue) {\n      // round open bracket, e.g. a{color:hsla(<--\n      buffer.push(character);\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && level == Level.RULE && seekingValue && roundBracketLevel == 1) {\n      // round close bracket, e.g. a{color:hsla(0,0%,0%)<--\n      buffer.push(character);\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      roundBracketLevel--;\n      buffer = [];\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && level == Level.RULE && seekingValue) {\n      // round close bracket within other brackets, e.g. a{width:calc((10rem / 2)<--\n      buffer.push(character);\n      roundBracketLevel--;\n    } else if (character == Marker.FORWARD_SLASH && source[position.index + 1] != Marker.ASTERISK && level == Level.RULE && seekingValue && buffer.length > 0) {\n      // forward slash within a property, e.g. a{background:url(image.png) 0 0/<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      propertyToken.push([Token.PROPERTY_VALUE, character, [[position.line, position.column, position.source]]]);\n      buffer = [];\n    } else if (character == Marker.FORWARD_SLASH && source[position.index + 1] != Marker.ASTERISK && level == Level.RULE && seekingValue) {\n      // forward slash within a property after space, e.g. a{background:url(image.png) 0 0 /<--\n      propertyToken.push([Token.PROPERTY_VALUE, character, [[position.line, position.column, position.source]]]);\n      buffer = [];\n    } else if (character == Marker.COMMA && level == Level.RULE && seekingValue && buffer.length > 0) {\n      // comma within a property, e.g. a{background:url(image.png),<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      propertyToken.push([Token.PROPERTY_VALUE, character, [[position.line, position.column, position.source]]]);\n      buffer = [];\n    } else if (character == Marker.COMMA && level == Level.RULE && seekingValue) {\n      // comma within a property after space, e.g. a{background:url(image.png) ,<--\n      propertyToken.push([Token.PROPERTY_VALUE, character, [[position.line, position.column, position.source]]]);\n      buffer = [];\n    } else if (character == Marker.CLOSE_SQUARE_BRACKET && propertyToken && propertyToken.length > 1 && buffer.length > 0 && isRepeatToken(buffer)) {\n      buffer.push(character);\n      serializedBuffer = buffer.join('').trim();\n      propertyToken[propertyToken.length - 1][1] += serializedBuffer;\n      buffer = [];\n    } else if ((isSpace || isNewLineNix && !isNewLineWin) && level == Level.RULE && seekingValue && propertyToken && buffer.length > 0) {\n      // space or *nix newline within property, e.g. a{margin:0 <--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      buffer = [];\n    } else if (isNewLineWin && level == Level.RULE && seekingValue && propertyToken && buffer.length > 1) {\n      // win newline within property, e.g. a{margin:0\\r\\n<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      buffer = [];\n    } else if (isNewLineWin && level == Level.RULE && seekingValue) {\n      // win newline\n      buffer = [];\n    } else if (buffer.length == 1 && isNewLineWin) {\n      // ignore windows newline which is composed of two characters\n      buffer.pop();\n    } else if (buffer.length > 0 || !isSpace && !isNewLineNix && !isNewLineWin && !isCarriageReturn) {\n      // any character\n      buffer.push(character);\n    }\n\n    wasEscaped = isEscaped;\n    isEscaped = !wasEscaped && character == Marker.BACK_SLASH;\n    wasCommentStart = isCommentStart;\n    wasCommentEnd = isCommentEnd;\n    position.line = isNewLineWin || isNewLineNix || isCarriageReturn ? position.line + 1 : position.line;\n    position.column = isNewLineWin || isNewLineNix || isCarriageReturn ? 0 : position.column + 1;\n  }\n\n  if (seekingValue) {\n    externalContext.warnings.push('Missing \\'}\\' at ' + formatPosition([position.line, position.column, position.source]) + '.');\n  }\n\n  if (seekingValue && buffer.length > 0) {\n    serializedBuffer = buffer.join('').replace(TAIL_BROKEN_VALUE_PATTERN, '');\n    propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n    buffer = [];\n  }\n\n  if (buffer.length > 0) {\n    externalContext.warnings.push('Invalid character(s) \\'' + buffer.join('') + '\\' at ' + formatPosition(metadata) + '. Ignoring.');\n  }\n\n  return allTokens;\n}\n\nfunction isIgnoreStartComment(buffer) {\n  return IGNORE_START_COMMENT_PATTERN.test(buffer.join('') + Marker.FORWARD_SLASH);\n}\n\nfunction isIgnoreEndComment(buffer) {\n  return IGNORE_END_COMMENT_PATTERN.test(buffer.join('') + Marker.FORWARD_SLASH);\n}\n\nfunction originalMetadata(metadata, value, externalContext, selectorFallbacks) {\n  var source = metadata[2];\n  return externalContext.inputSourceMapTracker.isTracking(source) ? externalContext.inputSourceMapTracker.originalPositionFor(metadata, value.length, selectorFallbacks) : metadata;\n}\n\nfunction tokenTypeFrom(buffer) {\n  var isAtRule = buffer[0] == Marker.AT || buffer[0] == Marker.UNDERSCORE;\n  var ruleWord = buffer.join('').split(RULE_WORD_SEPARATOR_PATTERN)[0];\n\n  if (isAtRule && BLOCK_RULES.indexOf(ruleWord) > -1) {\n    return Token.NESTED_BLOCK;\n  } else if (isAtRule && AT_RULES.indexOf(ruleWord) > -1) {\n    return Token.AT_RULE;\n  } else if (isAtRule) {\n    return Token.AT_RULE_BLOCK;\n  } else {\n    return Token.RULE;\n  }\n}\n\nfunction tokenScopeFrom(tokenType) {\n  if (tokenType == Token.RULE) {\n    return Token.RULE_SCOPE;\n  } else if (tokenType == Token.NESTED_BLOCK) {\n    return Token.NESTED_BLOCK_SCOPE;\n  } else if (tokenType == Token.AT_RULE_BLOCK) {\n    return Token.AT_RULE_BLOCK_SCOPE;\n  }\n}\n\nfunction isPageMarginBox(buffer) {\n  var serializedBuffer = buffer.join('').trim();\n  return PAGE_MARGIN_BOXES.indexOf(serializedBuffer) > -1 || EXTRA_PAGE_BOXES.indexOf(serializedBuffer) > -1;\n}\n\nfunction isRepeatToken(buffer) {\n  return REPEAT_PATTERN.test(buffer.join('') + Marker.CLOSE_SQUARE_BRACKET);\n}\n\nmodule.exports = tokenize;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/tokenizer/tokenize.js"],"names":["Marker","require","Token","formatPosition","Level","BLOCK","COMMENT","DOUBLE_QUOTE","RULE","SINGLE_QUOTE","AT_RULES","BLOCK_RULES","IGNORE_END_COMMENT_PATTERN","IGNORE_START_COMMENT_PATTERN","PAGE_MARGIN_BOXES","EXTRA_PAGE_BOXES","REPEAT_PATTERN","RULE_WORD_SEPARATOR_PATTERN","TAIL_BROKEN_VALUE_PATTERN","tokenize","source","externalContext","internalContext","level","position","undefined","line","column","index","intoTokens","isNested","allTokens","newTokens","lastToken","ruleToken","ruleTokens","propertyToken","metadata","metadatas","levels","buffer","buffers","serializedBuffer","serializedBufferPart","roundBracketLevel","isQuoted","isSpace","isNewLineNix","isNewLineWin","isCarriageReturn","isCommentStart","wasCommentStart","isCommentEnd","wasCommentEnd","isCommentEndMarker","isEscaped","wasEscaped","isRaw","seekingValue","seekingPropertyBlockClosing","lastCommentStartAt","length","character","SPACE","TAB","NEW_LINE_NIX","CARRIAGE_RETURN","ASTERISK","FORWARD_SLASH","Math","max","push","slice","isIgnoreStartComment","join","trim","originalMetadata","pop","isIgnoreEndComment","lastIndexOf","substring","RAW","warnings","CLOSE_ROUND_BRACKET","OPEN_ROUND_BRACKET","SEMICOLON","AT","AT_RULE","COMMA","tokenScopeFrom","tokenTypeFrom","OPEN_CURLY_BRACKET","NESTED_BLOCK","NESTED_BLOCK_SCOPE","PROPERTY_BLOCK","isPageMarginBox","AT_RULE_BLOCK","AT_RULE_BLOCK_SCOPE","COLON","PROPERTY","PROPERTY_NAME","PROPERTY_VALUE","CLOSE_CURLY_BRACKET","CLOSE_SQUARE_BRACKET","isRepeatToken","BACK_SLASH","replace","test","value","selectorFallbacks","inputSourceMapTracker","isTracking","originalPositionFor","isAtRule","UNDERSCORE","ruleWord","split","indexOf","tokenType","RULE_SCOPE","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIE,cAAc,GAAGF,OAAO,CAAC,0BAAD,CAA5B;;AAEA,IAAIG,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,OADG;AAEVC,EAAAA,OAAO,EAAE,SAFC;AAGVC,EAAAA,YAAY,EAAE,cAHJ;AAIVC,EAAAA,IAAI,EAAE,MAJI;AAKVC,EAAAA,YAAY,EAAE;AALJ,CAAZ;AAQA,IAAIC,QAAQ,GAAG,CACb,UADa,EAEb,SAFa,CAAf;AAKA,IAAIC,WAAW,GAAG,CAChB,gBADgB,EAEhB,WAFgB,EAGhB,iBAHgB,EAIhB,gBAJgB,EAKhB,eALgB,EAMhB,oBANgB,EAOhB,YAPgB,EAQhB,QARgB,EAShB,WATgB,CAAlB;AAYA,IAAIC,0BAA0B,GAAG,kCAAjC;AACA,IAAIC,4BAA4B,GAAG,oCAAnC;AAEA,IAAIC,iBAAiB,GAAG,CACtB,gBADsB,EAEtB,cAFsB,EAGtB,qBAHsB,EAItB,eAJsB,EAKtB,sBALsB,EAMtB,cANsB,EAOtB,cAPsB,EAQtB,WARsB,EAStB,eATsB,EAUtB,eAVsB,EAWtB,YAXsB,EAYtB,aAZsB,EAatB,WAbsB,EActB,kBAdsB,EAetB,YAfsB,EAgBtB,mBAhBsB,CAAxB;AAmBA,IAAIC,gBAAgB,GAAG,CACrB,WADqB,EAErB,YAFqB,EAGrB,OAHqB,EAIrB,oBAJqB,EAKrB,iBALqB,EAMrB,QANqB,CAAvB;AASA,IAAIC,cAAc,GAAG,2BAArB;AACA,IAAIC,2BAA2B,GAAG,QAAlC;AACA,IAAIC,yBAAyB,GAAG,WAAhC;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,eAA1B,EAA2C;AACzC,MAAIC,eAAe,GAAG;AACpBC,IAAAA,KAAK,EAAEnB,KAAK,CAACC,KADO;AAEpBmB,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,MAAM,EAAEC,eAAe,CAACD,MAAhB,IAA0BK,SAD1B;AAERC,MAAAA,IAAI,EAAE,CAFE;AAGRC,MAAAA,MAAM,EAAE,CAHA;AAIRC,MAAAA,KAAK,EAAE;AAJC;AAFU,GAAtB;AAUA,SAAOC,UAAU,CAACT,MAAD,EAASC,eAAT,EAA0BC,eAA1B,EAA2C,KAA3C,CAAjB;AACD;;AAED,SAASO,UAAT,CAAoBT,MAApB,EAA4BC,eAA5B,EAA6CC,eAA7C,EAA8DQ,QAA9D,EAAwE;AACtE,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,SAAS,GAAGD,SAAhB;AACA,MAAIE,SAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,aAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIf,KAAK,GAAGD,eAAe,CAACC,KAA5B;AACA,MAAIgB,MAAM,GAAG,EAAb;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,gBAAJ;AACA,MAAIC,oBAAJ;AACA,MAAIC,iBAAiB,GAAG,CAAxB;AACA,MAAIC,QAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,gBAAJ;AACA,MAAIC,cAAJ;AACA,MAAIC,eAAe,GAAG,KAAtB;AACA,MAAIC,YAAJ;AACA,MAAIC,aAAa,GAAG,KAApB;AACA,MAAIC,kBAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,UAAU,GAAG,KAAjB;AACA,MAAIC,KAAK,GAAG,KAAZ;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,2BAA2B,GAAG,KAAlC;AACA,MAAInC,QAAQ,GAAGF,eAAe,CAACE,QAA/B;AACA,MAAIoC,kBAAJ;;AAEA,SAAOpC,QAAQ,CAACI,KAAT,GAAiBR,MAAM,CAACyC,MAA/B,EAAuCrC,QAAQ,CAACI,KAAT,EAAvC,EAAyD;AACvD,QAAIkC,SAAS,GAAG1C,MAAM,CAACI,QAAQ,CAACI,KAAV,CAAtB;AAEAiB,IAAAA,QAAQ,GAAGtB,KAAK,IAAInB,KAAK,CAACK,YAAf,IAA+Bc,KAAK,IAAInB,KAAK,CAACG,YAAzD;AACAuC,IAAAA,OAAO,GAAGgB,SAAS,IAAI9D,MAAM,CAAC+D,KAApB,IAA6BD,SAAS,IAAI9D,MAAM,CAACgE,GAA3D;AACAjB,IAAAA,YAAY,GAAGe,SAAS,IAAI9D,MAAM,CAACiE,YAAnC;AACAjB,IAAAA,YAAY,GAAGc,SAAS,IAAI9D,MAAM,CAACiE,YAApB,IAAoC7C,MAAM,CAACI,QAAQ,CAACI,KAAT,GAAiB,CAAlB,CAAN,IAA8B5B,MAAM,CAACkE,eAAxF;AACAjB,IAAAA,gBAAgB,GAAGa,SAAS,IAAI9D,MAAM,CAACkE,eAApB,IAAuC9C,MAAM,CAACI,QAAQ,CAACI,KAAT,GAAiB,CAAlB,CAA7C,IAAqER,MAAM,CAACI,QAAQ,CAACI,KAAT,GAAiB,CAAlB,CAAN,IAA8B5B,MAAM,CAACiE,YAA7H;AACAf,IAAAA,cAAc,GAAG,CAACG,aAAD,IAAkB9B,KAAK,IAAInB,KAAK,CAACE,OAAjC,IAA4C,CAACuC,QAA7C,IAAyDiB,SAAS,IAAI9D,MAAM,CAACmE,QAA7E,IAAyF/C,MAAM,CAACI,QAAQ,CAACI,KAAT,GAAiB,CAAlB,CAAN,IAA8B5B,MAAM,CAACoE,aAA/I;AACAd,IAAAA,kBAAkB,GAAG,CAACH,eAAD,IAAoB,CAACN,QAArB,IAAiCiB,SAAS,IAAI9D,MAAM,CAACoE,aAArD,IAAsEhD,MAAM,CAACI,QAAQ,CAACI,KAAT,GAAiB,CAAlB,CAAN,IAA8B5B,MAAM,CAACmE,QAAhI;AACAf,IAAAA,YAAY,GAAG7B,KAAK,IAAInB,KAAK,CAACE,OAAf,IAA0BgD,kBAAzC;AACAV,IAAAA,iBAAiB,GAAGyB,IAAI,CAACC,GAAL,CAAS1B,iBAAT,EAA4B,CAA5B,CAApB;AAEAP,IAAAA,QAAQ,GAAGG,MAAM,CAACqB,MAAP,KAAkB,CAAlB,GACT,CAACrC,QAAQ,CAACE,IAAV,EAAgBF,QAAQ,CAACG,MAAzB,EAAiCH,QAAQ,CAACJ,MAA1C,CADS,GAETiB,QAFF;;AAIA,QAAIkB,SAAJ,EAAe;AACb;AACAf,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD,KAHD,MAGO,IAAI,CAACV,YAAD,IAAiB7B,KAAK,IAAInB,KAAK,CAACE,OAApC,EAA6C;AAClDkC,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD,KAFM,MAEA,IAAI,CAACZ,cAAD,IAAmB,CAACE,YAApB,IAAoCK,KAAxC,EAA+C;AACpDjB,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD,KAFM,MAEA,IAAIZ,cAAc,KAAK3B,KAAK,IAAInB,KAAK,CAACC,KAAf,IAAwBkB,KAAK,IAAInB,KAAK,CAACI,IAA5C,CAAd,IAAmEgC,MAAM,CAACqB,MAAP,GAAgB,CAAvF,EAA0F;AAC/F;AACAvB,MAAAA,SAAS,CAACiC,IAAV,CAAelC,QAAf;AACAG,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACArB,MAAAA,OAAO,CAAC8B,IAAR,CAAa/B,MAAM,CAACgC,KAAP,CAAa,CAAb,EAAgBhC,MAAM,CAACqB,MAAP,GAAgB,CAAhC,CAAb;AAEArB,MAAAA,MAAM,GAAGA,MAAM,CAACgC,KAAP,CAAahC,MAAM,CAACqB,MAAP,GAAgB,CAA7B,CAAT;AACAxB,MAAAA,QAAQ,GAAG,CAACb,QAAQ,CAACE,IAAV,EAAgBF,QAAQ,CAACG,MAAT,GAAkB,CAAlC,EAAqCH,QAAQ,CAACJ,MAA9C,CAAX;AAEAmB,MAAAA,MAAM,CAACgC,IAAP,CAAYhD,KAAZ;AACAA,MAAAA,KAAK,GAAGnB,KAAK,CAACE,OAAd;AACD,KAXM,MAWA,IAAI4C,cAAJ,EAAoB;AACzB;AACAX,MAAAA,MAAM,CAACgC,IAAP,CAAYhD,KAAZ;AACAA,MAAAA,KAAK,GAAGnB,KAAK,CAACE,OAAd;AACAkC,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD,KALM,MAKA,IAAIV,YAAY,IAAIqB,oBAAoB,CAACjC,MAAD,CAAxC,EAAkD;AACvD;AACAE,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,KAAyBb,SAA5C;AACA7B,MAAAA,SAAS,GAAG,CAAC/B,KAAK,CAACI,OAAP,EAAgBoC,gBAAhB,EAAkC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAlC,CAAZ;AACAW,MAAAA,SAAS,CAACuC,IAAV,CAAetC,SAAf;AAEAwB,MAAAA,KAAK,GAAG,IAAR;AACApB,MAAAA,QAAQ,GAAGC,SAAS,CAACuC,GAAV,MAAmB,IAA9B;AACArC,MAAAA,MAAM,GAAGC,OAAO,CAACoC,GAAR,MAAiB,EAA1B;AACD,KATM,MASA,IAAIzB,YAAY,IAAI0B,kBAAkB,CAACtC,MAAD,CAAtC,EAAgD;AACrD;AACAE,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,IAAkBZ,SAArC;AACAF,MAAAA,kBAAkB,GAAGlB,gBAAgB,CAACqC,WAAjB,CAA6B/E,MAAM,CAACoE,aAAP,GAAuBpE,MAAM,CAACmE,QAA3D,CAArB;AAEAxB,MAAAA,oBAAoB,GAAGD,gBAAgB,CAACsC,SAAjB,CAA2B,CAA3B,EAA8BpB,kBAA9B,CAAvB;AACA3B,MAAAA,SAAS,GAAG,CAAC/B,KAAK,CAAC+E,GAAP,EAAYtC,oBAAZ,EAAkC,CAACiC,gBAAgB,CAACvC,QAAD,EAAWM,oBAAX,EAAiCtB,eAAjC,CAAjB,CAAlC,CAAZ;AACAW,MAAAA,SAAS,CAACuC,IAAV,CAAetC,SAAf;AAEAU,MAAAA,oBAAoB,GAAGD,gBAAgB,CAACsC,SAAjB,CAA2BpB,kBAA3B,CAAvB;AACAvB,MAAAA,QAAQ,GAAG,CAACb,QAAQ,CAACE,IAAV,EAAgBF,QAAQ,CAACG,MAAT,GAAkBgB,oBAAoB,CAACkB,MAAvC,GAAgD,CAAhE,EAAmErC,QAAQ,CAACJ,MAA5E,CAAX;AACAa,MAAAA,SAAS,GAAG,CAAC/B,KAAK,CAACI,OAAP,EAAgBqC,oBAAhB,EAAsC,CAACiC,gBAAgB,CAACvC,QAAD,EAAWM,oBAAX,EAAiCtB,eAAjC,CAAjB,CAAtC,CAAZ;AACAW,MAAAA,SAAS,CAACuC,IAAV,CAAetC,SAAf;AAEAwB,MAAAA,KAAK,GAAG,KAAR;AACAlC,MAAAA,KAAK,GAAGgB,MAAM,CAACsC,GAAP,EAAR;AACAxC,MAAAA,QAAQ,GAAGC,SAAS,CAACuC,GAAV,MAAmB,IAA9B;AACArC,MAAAA,MAAM,GAAGC,OAAO,CAACoC,GAAR,MAAiB,EAA1B;AACD,KAlBM,MAkBA,IAAIzB,YAAJ,EAAkB;AACvB;AACAV,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,KAAyBb,SAA5C;AACA7B,MAAAA,SAAS,GAAG,CAAC/B,KAAK,CAACI,OAAP,EAAgBoC,gBAAhB,EAAkC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAlC,CAAZ;AACAW,MAAAA,SAAS,CAACuC,IAAV,CAAetC,SAAf;AAEAV,MAAAA,KAAK,GAAGgB,MAAM,CAACsC,GAAP,EAAR;AACAxC,MAAAA,QAAQ,GAAGC,SAAS,CAACuC,GAAV,MAAmB,IAA9B;AACArC,MAAAA,MAAM,GAAGC,OAAO,CAACoC,GAAR,MAAiB,EAA1B;AACD,KATM,MASA,IAAIvB,kBAAkB,IAAIlC,MAAM,CAACI,QAAQ,CAACI,KAAT,GAAiB,CAAlB,CAAN,IAA8B5B,MAAM,CAACmE,QAA/D,EAAyE;AAC9E9C,MAAAA,eAAe,CAAC6D,QAAhB,CAAyBX,IAAzB,CAA8B,0BAA0BpE,cAAc,CAAC,CAACqB,QAAQ,CAACE,IAAV,EAAgBF,QAAQ,CAACG,MAAzB,EAAiCH,QAAQ,CAACJ,MAA1C,CAAD,CAAxC,GAA8F,GAA5H;AACAoB,MAAAA,MAAM,GAAG,EAAT;AACD,KAHM,MAGA,IAAIsB,SAAS,IAAI9D,MAAM,CAACS,YAApB,IAAoC,CAACoC,QAAzC,EAAmD;AACxD;AACAN,MAAAA,MAAM,CAACgC,IAAP,CAAYhD,KAAZ;AACAA,MAAAA,KAAK,GAAGnB,KAAK,CAACK,YAAd;AACA+B,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD,KALM,MAKA,IAAIA,SAAS,IAAI9D,MAAM,CAACS,YAApB,IAAoCc,KAAK,IAAInB,KAAK,CAACK,YAAvD,EAAqE;AAC1E;AACAc,MAAAA,KAAK,GAAGgB,MAAM,CAACsC,GAAP,EAAR;AACArC,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD,KAJM,MAIA,IAAIA,SAAS,IAAI9D,MAAM,CAACO,YAApB,IAAoC,CAACsC,QAAzC,EAAmD;AACxD;AACAN,MAAAA,MAAM,CAACgC,IAAP,CAAYhD,KAAZ;AACAA,MAAAA,KAAK,GAAGnB,KAAK,CAACG,YAAd;AACAiC,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD,KALM,MAKA,IAAIA,SAAS,IAAI9D,MAAM,CAACO,YAApB,IAAoCgB,KAAK,IAAInB,KAAK,CAACG,YAAvD,EAAqE;AAC1E;AACAgB,MAAAA,KAAK,GAAGgB,MAAM,CAACsC,GAAP,EAAR;AACArC,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD,KAJM,MAIA,IAAI,CAACZ,cAAD,IAAmB,CAACE,YAApB,IAAoCU,SAAS,IAAI9D,MAAM,CAACmF,mBAAxD,IAA+ErB,SAAS,IAAI9D,MAAM,CAACoF,kBAAnG,IAAyH7D,KAAK,IAAInB,KAAK,CAACE,OAAxI,IAAmJ,CAACuC,QAApJ,IAAgKD,iBAAiB,GAAG,CAAxL,EAA2L;AAChM;AACAJ,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD,KAHM,MAGA,IAAIA,SAAS,IAAI9D,MAAM,CAACoF,kBAApB,IAA0C,CAACvC,QAA3C,IAAuDtB,KAAK,IAAInB,KAAK,CAACE,OAAtE,IAAiF,CAACoD,YAAtF,EAAoG;AACzG;AACAlB,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AAEAlB,MAAAA,iBAAiB;AAClB,KALM,MAKA,IAAIkB,SAAS,IAAI9D,MAAM,CAACmF,mBAApB,IAA2C,CAACtC,QAA5C,IAAwDtB,KAAK,IAAInB,KAAK,CAACE,OAAvE,IAAkF,CAACoD,YAAvF,EAAqG;AAC1G;AACAlB,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AAEAlB,MAAAA,iBAAiB;AAClB,KALM,MAKA,IAAIkB,SAAS,IAAI9D,MAAM,CAACqF,SAApB,IAAiC9D,KAAK,IAAInB,KAAK,CAACC,KAAhD,IAAyDmC,MAAM,CAAC,CAAD,CAAN,IAAaxC,MAAM,CAACsF,EAAjF,EAAqF;AAC1F;AACA5C,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACA5C,MAAAA,SAAS,CAACwC,IAAV,CAAe,CAACrE,KAAK,CAACqF,OAAP,EAAgB7C,gBAAhB,EAAkC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAlC,CAAf;AAEAmB,MAAAA,MAAM,GAAG,EAAT;AACD,KANM,MAMA,IAAIsB,SAAS,IAAI9D,MAAM,CAACwF,KAApB,IAA6BjE,KAAK,IAAInB,KAAK,CAACC,KAA5C,IAAqD6B,SAAzD,EAAoE;AACzE;AACAQ,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAzC,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAaqC,IAAb,CAAkB,CAACkB,cAAc,CAACvD,SAAS,CAAC,CAAD,CAAV,CAAf,EAA+BQ,gBAA/B,EAAiD,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,EAA8Ca,SAAS,CAAC,CAAD,CAAT,CAAa2B,MAA3D,CAAjB,CAAjD,CAAlB;AAEArB,MAAAA,MAAM,GAAG,EAAT;AACD,KANM,MAMA,IAAIsB,SAAS,IAAI9D,MAAM,CAACwF,KAApB,IAA6BjE,KAAK,IAAInB,KAAK,CAACC,KAA5C,IAAqDqF,aAAa,CAAClD,MAAD,CAAb,IAAyBtC,KAAK,CAACqF,OAAxF,EAAiG;AACtG;AACA;AACA/C,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD,KAJM,MAIA,IAAIA,SAAS,IAAI9D,MAAM,CAACwF,KAApB,IAA6BjE,KAAK,IAAInB,KAAK,CAACC,KAAhD,EAAuD;AAC5D;AACA6B,MAAAA,SAAS,GAAG,CAACwD,aAAa,CAAClD,MAAD,CAAd,EAAwB,EAAxB,EAA4B,EAA5B,CAAZ;AACAE,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAzC,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAaqC,IAAb,CAAkB,CAACkB,cAAc,CAACvD,SAAS,CAAC,CAAD,CAAV,CAAf,EAA+BQ,gBAA/B,EAAiD,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,EAA8C,CAA9C,CAAjB,CAAjD,CAAlB;AAEAmB,MAAAA,MAAM,GAAG,EAAT;AACD,KAPM,MAOA,IAAIsB,SAAS,IAAI9D,MAAM,CAAC2F,kBAApB,IAA0CpE,KAAK,IAAInB,KAAK,CAACC,KAAzD,IAAkE6B,SAAlE,IAA+EA,SAAS,CAAC,CAAD,CAAT,IAAgBhC,KAAK,CAAC0F,YAAzG,EAAuH;AAC5H;AACAlD,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAzC,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAaqC,IAAb,CAAkB,CAACrE,KAAK,CAAC2F,kBAAP,EAA2BnD,gBAA3B,EAA6C,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAA7C,CAAlB;AACAU,MAAAA,SAAS,CAACwC,IAAV,CAAerC,SAAf;AAEAK,MAAAA,MAAM,CAACgC,IAAP,CAAYhD,KAAZ;AACAC,MAAAA,QAAQ,CAACG,MAAT;AACAH,MAAAA,QAAQ,CAACI,KAAT;AACAY,MAAAA,MAAM,GAAG,EAAT;AAEAN,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeL,UAAU,CAACT,MAAD,EAASC,eAAT,EAA0BC,eAA1B,EAA2C,IAA3C,CAAzB;AACAY,MAAAA,SAAS,GAAG,IAAZ;AACD,KAbM,MAaA,IAAI4B,SAAS,IAAI9D,MAAM,CAAC2F,kBAApB,IAA0CpE,KAAK,IAAInB,KAAK,CAACC,KAAzD,IAAkEqF,aAAa,CAAClD,MAAD,CAAb,IAAyBtC,KAAK,CAAC0F,YAArG,EAAmH;AACxH;AACAlD,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAzC,MAAAA,SAAS,GAAGA,SAAS,IAAI,CAAChC,KAAK,CAAC0F,YAAP,EAAqB,EAArB,EAAyB,EAAzB,CAAzB;AACA1D,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAaqC,IAAb,CAAkB,CAACrE,KAAK,CAAC2F,kBAAP,EAA2BnD,gBAA3B,EAA6C,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAA7C,CAAlB;AACAU,MAAAA,SAAS,CAACwC,IAAV,CAAerC,SAAf;AAEAK,MAAAA,MAAM,CAACgC,IAAP,CAAYhD,KAAZ;AACAC,MAAAA,QAAQ,CAACG,MAAT;AACAH,MAAAA,QAAQ,CAACI,KAAT;AACAY,MAAAA,MAAM,GAAG,EAAT;AAEAN,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeL,UAAU,CAACT,MAAD,EAASC,eAAT,EAA0BC,eAA1B,EAA2C,IAA3C,CAAzB;AACAY,MAAAA,SAAS,GAAG,IAAZ;AACD,KAdM,MAcA,IAAI4B,SAAS,IAAI9D,MAAM,CAAC2F,kBAApB,IAA0CpE,KAAK,IAAInB,KAAK,CAACC,KAA7D,EAAoE;AACzE;AACAqC,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAzC,MAAAA,SAAS,GAAGA,SAAS,IAAI,CAACwD,aAAa,CAAClD,MAAD,CAAd,EAAwB,EAAxB,EAA4B,EAA5B,CAAzB;AACAN,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAaqC,IAAb,CAAkB,CAACkB,cAAc,CAACvD,SAAS,CAAC,CAAD,CAAV,CAAf,EAA+BQ,gBAA/B,EAAiD,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,EAA8Ca,SAAS,CAAC,CAAD,CAAT,CAAa2B,MAA3D,CAAjB,CAAjD,CAAlB;AACA7B,MAAAA,SAAS,GAAGE,SAAS,CAAC,CAAD,CAArB;AACAH,MAAAA,SAAS,CAACwC,IAAV,CAAerC,SAAf;AAEAK,MAAAA,MAAM,CAACgC,IAAP,CAAYhD,KAAZ;AACAA,MAAAA,KAAK,GAAGnB,KAAK,CAACI,IAAd;AACAgC,MAAAA,MAAM,GAAG,EAAT;AACD,KAXM,MAWA,IAAIsB,SAAS,IAAI9D,MAAM,CAAC2F,kBAApB,IAA0CpE,KAAK,IAAInB,KAAK,CAACI,IAAzD,IAAiEkD,YAArE,EAAmF;AACxF;AACAvB,MAAAA,UAAU,CAACoC,IAAX,CAAgBrC,SAAhB;AACAA,MAAAA,SAAS,GAAG,CAAChC,KAAK,CAAC4F,cAAP,EAAuB,EAAvB,CAAZ;AACA1D,MAAAA,aAAa,CAACmC,IAAd,CAAmBrC,SAAnB;AACAF,MAAAA,SAAS,GAAGE,SAAS,CAAC,CAAD,CAArB;AAEAK,MAAAA,MAAM,CAACgC,IAAP,CAAYhD,KAAZ;AACAA,MAAAA,KAAK,GAAGnB,KAAK,CAACI,IAAd;AACAkD,MAAAA,YAAY,GAAG,KAAf;AACD,KAVM,MAUA,IAAII,SAAS,IAAI9D,MAAM,CAAC2F,kBAApB,IAA0CpE,KAAK,IAAInB,KAAK,CAACI,IAAzD,IAAiEuF,eAAe,CAACvD,MAAD,CAApF,EAA8F;AACnG;AACAE,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAxC,MAAAA,UAAU,CAACoC,IAAX,CAAgBrC,SAAhB;AACAA,MAAAA,SAAS,GAAG,CAAChC,KAAK,CAAC8F,aAAP,EAAsB,EAAtB,EAA0B,EAA1B,CAAZ;AACA9D,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAaqC,IAAb,CAAkB,CAACrE,KAAK,CAAC+F,mBAAP,EAA4BvD,gBAA5B,EAA8C,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAA9C,CAAlB;AACAW,MAAAA,SAAS,CAACuC,IAAV,CAAerC,SAAf;AACAF,MAAAA,SAAS,GAAGE,SAAS,CAAC,CAAD,CAArB;AAEAK,MAAAA,MAAM,CAACgC,IAAP,CAAYhD,KAAZ;AACAA,MAAAA,KAAK,GAAGnB,KAAK,CAACI,IAAd;AACAgC,MAAAA,MAAM,GAAG,EAAT;AACD,KAZM,MAYA,IAAIsB,SAAS,IAAI9D,MAAM,CAACkG,KAApB,IAA6B3E,KAAK,IAAInB,KAAK,CAACI,IAA5C,IAAoD,CAACkD,YAAzD,EAAuE;AAC5E;AACAhB,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAvC,MAAAA,aAAa,GAAG,CAAClC,KAAK,CAACiG,QAAP,EAAiB,CAACjG,KAAK,CAACkG,aAAP,EAAsB1D,gBAAtB,EAAwC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAxC,CAAjB,CAAhB;AACAW,MAAAA,SAAS,CAACuC,IAAV,CAAenC,aAAf;AAEAsB,MAAAA,YAAY,GAAG,IAAf;AACAlB,MAAAA,MAAM,GAAG,EAAT;AACD,KARM,MAQA,IAAIsB,SAAS,IAAI9D,MAAM,CAACqF,SAApB,IAAiC9D,KAAK,IAAInB,KAAK,CAACI,IAAhD,IAAwD4B,aAAxD,IAAyED,UAAU,CAAC0B,MAAX,GAAoB,CAA7F,IAAkGrB,MAAM,CAACqB,MAAP,GAAgB,CAAlH,IAAuHrB,MAAM,CAAC,CAAD,CAAN,IAAaxC,MAAM,CAACsF,EAA/I,EAAmJ;AACxJ;AACA5C,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAzC,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAaqC,IAAb,CAAkB,CAACrE,KAAK,CAACqF,OAAP,EAAgB7C,gBAAhB,EAAkC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAlC,CAAlB;AAEAmB,MAAAA,MAAM,GAAG,EAAT;AACD,KANM,MAMA,IAAIsB,SAAS,IAAI9D,MAAM,CAACqF,SAApB,IAAiC9D,KAAK,IAAInB,KAAK,CAACI,IAAhD,IAAwD4B,aAAxD,IAAyEI,MAAM,CAACqB,MAAP,GAAgB,CAA7F,EAAgG;AACrG;AACAnB,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAvC,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuB3D,gBAAvB,EAAyC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAzC,CAAnB;AAEAe,MAAAA,aAAa,GAAG,IAAhB;AACAsB,MAAAA,YAAY,GAAG,KAAf;AACAlB,MAAAA,MAAM,GAAG,EAAT;AACD,KARM,MAQA,IAAIsB,SAAS,IAAI9D,MAAM,CAACqF,SAApB,IAAiC9D,KAAK,IAAInB,KAAK,CAACI,IAAhD,IAAwD4B,aAAxD,IAAyEI,MAAM,CAACqB,MAAP,KAAkB,CAA/F,EAAkG;AACvG;AACAzB,MAAAA,aAAa,GAAG,IAAhB;AACAsB,MAAAA,YAAY,GAAG,KAAf;AACD,KAJM,MAIA,IAAII,SAAS,IAAI9D,MAAM,CAACqF,SAApB,IAAiC9D,KAAK,IAAInB,KAAK,CAACI,IAAhD,IAAwDgC,MAAM,CAACqB,MAAP,GAAgB,CAAxE,IAA6ErB,MAAM,CAAC,CAAD,CAAN,IAAaxC,MAAM,CAACsF,EAArG,EAAyG;AAC9G;AACA5C,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,CAAnB;AACA1C,MAAAA,SAAS,CAACuC,IAAV,CAAe,CAACrE,KAAK,CAACqF,OAAP,EAAgB7C,gBAAhB,EAAkC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAlC,CAAf;AAEAqC,MAAAA,YAAY,GAAG,KAAf;AACAlB,MAAAA,MAAM,GAAG,EAAT;AACD,KAPM,MAOA,IAAIsB,SAAS,IAAI9D,MAAM,CAACqF,SAApB,IAAiC9D,KAAK,IAAInB,KAAK,CAACI,IAAhD,IAAwDmD,2BAA5D,EAAyF;AAC9F;AACAA,MAAAA,2BAA2B,GAAG,KAA9B;AACAnB,MAAAA,MAAM,GAAG,EAAT;AACD,KAJM,MAIA,IAAIsB,SAAS,IAAI9D,MAAM,CAACqF,SAApB,IAAiC9D,KAAK,IAAInB,KAAK,CAACI,IAAhD,IAAwDgC,MAAM,CAACqB,MAAP,KAAkB,CAA9E,EAAiF,CACtF;AACA;AACD,KAHM,MAGA,IAAIC,SAAS,IAAI9D,MAAM,CAACsG,mBAApB,IAA2C/E,KAAK,IAAInB,KAAK,CAACI,IAA1D,IAAkE4B,aAAlE,IAAmFsB,YAAnF,IAAmGlB,MAAM,CAACqB,MAAP,GAAgB,CAAnH,IAAwH1B,UAAU,CAAC0B,MAAX,GAAoB,CAAhJ,EAAmJ;AACxJ;AACAnB,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,CAAnB;AACAtC,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuB3D,gBAAvB,EAAyC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAzC,CAAnB;AACAe,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAGC,UAAU,CAAC0C,GAAX,EAAZ;AACA7C,MAAAA,SAAS,GAAGE,SAAS,CAAC,CAAD,CAArB;AAEAX,MAAAA,KAAK,GAAGgB,MAAM,CAACsC,GAAP,EAAR;AACAnB,MAAAA,YAAY,GAAG,KAAf;AACAlB,MAAAA,MAAM,GAAG,EAAT;AACD,KAXM,MAWA,IAAIsB,SAAS,IAAI9D,MAAM,CAACsG,mBAApB,IAA2C/E,KAAK,IAAInB,KAAK,CAACI,IAA1D,IAAkE4B,aAAlE,IAAmFI,MAAM,CAACqB,MAAP,GAAgB,CAAnG,IAAwGrB,MAAM,CAAC,CAAD,CAAN,IAAaxC,MAAM,CAACsF,EAA5H,IAAkInD,UAAU,CAAC0B,MAAX,GAAoB,CAA1J,EAA6J;AAClK;AACAnB,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,CAAnB;AACAxC,MAAAA,SAAS,CAAC,CAAD,CAAT,CAAaqC,IAAb,CAAkB,CAACrE,KAAK,CAACqF,OAAP,EAAgB7C,gBAAhB,EAAkC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAlC,CAAlB;AACAe,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAGC,UAAU,CAAC0C,GAAX,EAAZ;AACA7C,MAAAA,SAAS,GAAGE,SAAS,CAAC,CAAD,CAArB;AAEAX,MAAAA,KAAK,GAAGgB,MAAM,CAACsC,GAAP,EAAR;AACAnB,MAAAA,YAAY,GAAG,KAAf;AACAlB,MAAAA,MAAM,GAAG,EAAT;AACD,KAXM,MAWA,IAAIsB,SAAS,IAAI9D,MAAM,CAACsG,mBAApB,IAA2C/E,KAAK,IAAInB,KAAK,CAACI,IAA1D,IAAkE4B,aAAlE,IAAmFD,UAAU,CAAC0B,MAAX,GAAoB,CAA3G,EAA8G;AACnH;AACAzB,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAGC,UAAU,CAAC0C,GAAX,EAAZ;AACA7C,MAAAA,SAAS,GAAGE,SAAS,CAAC,CAAD,CAArB;AAEAX,MAAAA,KAAK,GAAGgB,MAAM,CAACsC,GAAP,EAAR;AACAnB,MAAAA,YAAY,GAAG,KAAf;AACD,KARM,MAQA,IAAII,SAAS,IAAI9D,MAAM,CAACsG,mBAApB,IAA2C/E,KAAK,IAAInB,KAAK,CAACI,IAA1D,IAAkE4B,aAAlE,IAAmFI,MAAM,CAACqB,MAAP,GAAgB,CAAvG,EAA0G;AAC/G;AACAnB,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,CAAnB;AACAtC,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuB3D,gBAAvB,EAAyC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAzC,CAAnB;AACAe,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAGC,UAAU,CAAC0C,GAAX,EAAZ;AACA7C,MAAAA,SAAS,GAAGD,SAAZ;AAEAR,MAAAA,KAAK,GAAGgB,MAAM,CAACsC,GAAP,EAAR;AACAnB,MAAAA,YAAY,GAAG,KAAf;AACAlB,MAAAA,MAAM,GAAG,EAAT;AACD,KAXM,MAWA,IAAIsB,SAAS,IAAI9D,MAAM,CAACsG,mBAApB,IAA2C/E,KAAK,IAAInB,KAAK,CAACI,IAA1D,IAAkEgC,MAAM,CAACqB,MAAP,GAAgB,CAAlF,IAAuFrB,MAAM,CAAC,CAAD,CAAN,IAAaxC,MAAM,CAACsF,EAA/G,EAAmH;AACxH;AACAlD,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAG,IAAZ;AACAQ,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACA3C,MAAAA,SAAS,CAACuC,IAAV,CAAe,CAACrE,KAAK,CAACqF,OAAP,EAAgB7C,gBAAhB,EAAkC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAlC,CAAf;AACAW,MAAAA,SAAS,GAAGD,SAAZ;AAEAR,MAAAA,KAAK,GAAGgB,MAAM,CAACsC,GAAP,EAAR;AACAnB,MAAAA,YAAY,GAAG,KAAf;AACAlB,MAAAA,MAAM,GAAG,EAAT;AACD,KAXM,MAWA,IAAIsB,SAAS,IAAI9D,MAAM,CAACsG,mBAApB,IAA2C/E,KAAK,IAAInB,KAAK,CAACI,IAA1D,IAAkE+B,MAAM,CAACA,MAAM,CAACsB,MAAP,GAAgB,CAAjB,CAAN,IAA6BzD,KAAK,CAACI,IAAzG,EAA+G;AACpH;AACA4B,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAGC,UAAU,CAAC0C,GAAX,EAAZ;AACA7C,MAAAA,SAAS,GAAGE,SAAS,CAAC,CAAD,CAArB;AAEAX,MAAAA,KAAK,GAAGgB,MAAM,CAACsC,GAAP,EAAR;AACAnB,MAAAA,YAAY,GAAG,KAAf;AACAC,MAAAA,2BAA2B,GAAG,IAA9B;AACAnB,MAAAA,MAAM,GAAG,EAAT;AACD,KAVM,MAUA,IAAIsB,SAAS,IAAI9D,MAAM,CAACsG,mBAApB,IAA2C/E,KAAK,IAAInB,KAAK,CAACI,IAA9D,EAAoE;AACzE;AACA4B,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAG,IAAZ;AACAF,MAAAA,SAAS,GAAGD,SAAZ;AAEAR,MAAAA,KAAK,GAAGgB,MAAM,CAACsC,GAAP,EAAR;AACAnB,MAAAA,YAAY,GAAG,KAAf;AACD,KARM,MAQA,IAAII,SAAS,IAAI9D,MAAM,CAACsG,mBAApB,IAA2C/E,KAAK,IAAInB,KAAK,CAACC,KAA1D,IAAmE,CAACyB,QAApE,IAAgFN,QAAQ,CAACI,KAAT,IAAkBR,MAAM,CAACyC,MAAP,GAAgB,CAAtH,EAAyH;AAC9H;AACAxC,MAAAA,eAAe,CAAC6D,QAAhB,CAAyBX,IAAzB,CAA8B,yBAAyBpE,cAAc,CAAC,CAACqB,QAAQ,CAACE,IAAV,EAAgBF,QAAQ,CAACG,MAAzB,EAAiCH,QAAQ,CAACJ,MAA1C,CAAD,CAAvC,GAA6F,GAA3H;AACAoB,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD,KAJM,MAIA,IAAIA,SAAS,IAAI9D,MAAM,CAACsG,mBAApB,IAA2C/E,KAAK,IAAInB,KAAK,CAACC,KAA9D,EAAqE;AAC1E;AACA;AACD,KAHM,MAGA,IAAIyD,SAAS,IAAI9D,MAAM,CAACoF,kBAApB,IAA0C7D,KAAK,IAAInB,KAAK,CAACI,IAAzD,IAAiEkD,YAArE,EAAmF;AACxF;AACAlB,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACAlB,MAAAA,iBAAiB;AAClB,KAJM,MAIA,IAAIkB,SAAS,IAAI9D,MAAM,CAACmF,mBAApB,IAA2C5D,KAAK,IAAInB,KAAK,CAACI,IAA1D,IAAkEkD,YAAlE,IAAkFd,iBAAiB,IAAI,CAA3G,EAA8G;AACnH;AACAJ,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACApB,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAvC,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuB3D,gBAAvB,EAAyC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAzC,CAAnB;AAEAuB,MAAAA,iBAAiB;AACjBJ,MAAAA,MAAM,GAAG,EAAT;AACD,KARM,MAQA,IAAIsB,SAAS,IAAI9D,MAAM,CAACmF,mBAApB,IAA2C5D,KAAK,IAAInB,KAAK,CAACI,IAA1D,IAAkEkD,YAAtE,EAAoF;AACzF;AACAlB,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACAlB,MAAAA,iBAAiB;AAClB,KAJM,MAIA,IAAIkB,SAAS,IAAI9D,MAAM,CAACoE,aAApB,IAAqChD,MAAM,CAACI,QAAQ,CAACI,KAAT,GAAiB,CAAlB,CAAN,IAA8B5B,MAAM,CAACmE,QAA1E,IAAsF5C,KAAK,IAAInB,KAAK,CAACI,IAArG,IAA6GkD,YAA7G,IAA6HlB,MAAM,CAACqB,MAAP,GAAgB,CAAjJ,EAAoJ;AACzJ;AACAnB,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAvC,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuB3D,gBAAvB,EAAyC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAzC,CAAnB;AACAe,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuBvC,SAAvB,EAAkC,CAAC,CAACtC,QAAQ,CAACE,IAAV,EAAgBF,QAAQ,CAACG,MAAzB,EAAiCH,QAAQ,CAACJ,MAA1C,CAAD,CAAlC,CAAnB;AAEAoB,MAAAA,MAAM,GAAG,EAAT;AACD,KAPM,MAOA,IAAIsB,SAAS,IAAI9D,MAAM,CAACoE,aAApB,IAAqChD,MAAM,CAACI,QAAQ,CAACI,KAAT,GAAiB,CAAlB,CAAN,IAA8B5B,MAAM,CAACmE,QAA1E,IAAsF5C,KAAK,IAAInB,KAAK,CAACI,IAArG,IAA6GkD,YAAjH,EAA+H;AACpI;AACAtB,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuBvC,SAAvB,EAAkC,CAAC,CAACtC,QAAQ,CAACE,IAAV,EAAgBF,QAAQ,CAACG,MAAzB,EAAiCH,QAAQ,CAACJ,MAA1C,CAAD,CAAlC,CAAnB;AAEAoB,MAAAA,MAAM,GAAG,EAAT;AACD,KALM,MAKA,IAAIsB,SAAS,IAAI9D,MAAM,CAACwF,KAApB,IAA6BjE,KAAK,IAAInB,KAAK,CAACI,IAA5C,IAAoDkD,YAApD,IAAoElB,MAAM,CAACqB,MAAP,GAAgB,CAAxF,EAA2F;AAChG;AACAnB,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAvC,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuB3D,gBAAvB,EAAyC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAzC,CAAnB;AACAe,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuBvC,SAAvB,EAAkC,CAAC,CAACtC,QAAQ,CAACE,IAAV,EAAgBF,QAAQ,CAACG,MAAzB,EAAiCH,QAAQ,CAACJ,MAA1C,CAAD,CAAlC,CAAnB;AAEAoB,MAAAA,MAAM,GAAG,EAAT;AACD,KAPM,MAOA,IAAIsB,SAAS,IAAI9D,MAAM,CAACwF,KAApB,IAA6BjE,KAAK,IAAInB,KAAK,CAACI,IAA5C,IAAoDkD,YAAxD,EAAsE;AAC3E;AACAtB,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuBvC,SAAvB,EAAkC,CAAC,CAACtC,QAAQ,CAACE,IAAV,EAAgBF,QAAQ,CAACG,MAAzB,EAAiCH,QAAQ,CAACJ,MAA1C,CAAD,CAAlC,CAAnB;AAEAoB,MAAAA,MAAM,GAAG,EAAT;AACD,KALM,MAKA,IAAIsB,SAAS,IAAI9D,MAAM,CAACuG,oBAApB,IAA4CnE,aAA5C,IAA6DA,aAAa,CAACyB,MAAd,GAAuB,CAApF,IAAyFrB,MAAM,CAACqB,MAAP,GAAgB,CAAzG,IAA8G2C,aAAa,CAAChE,MAAD,CAA/H,EAAyI;AAC9IA,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACApB,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAvC,MAAAA,aAAa,CAACA,aAAa,CAACyB,MAAd,GAAuB,CAAxB,CAAb,CAAwC,CAAxC,KAA8CnB,gBAA9C;AAEAF,MAAAA,MAAM,GAAG,EAAT;AACD,KANM,MAMA,IAAI,CAACM,OAAO,IAAKC,YAAY,IAAI,CAACC,YAA9B,KAAgDzB,KAAK,IAAInB,KAAK,CAACI,IAA/D,IAAuEkD,YAAvE,IAAuFtB,aAAvF,IAAwGI,MAAM,CAACqB,MAAP,GAAgB,CAA5H,EAA+H;AACpI;AACAnB,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAvC,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuB3D,gBAAvB,EAAyC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAzC,CAAnB;AAEAmB,MAAAA,MAAM,GAAG,EAAT;AACD,KANM,MAMA,IAAIQ,YAAY,IAAIzB,KAAK,IAAInB,KAAK,CAACI,IAA/B,IAAuCkD,YAAvC,IAAuDtB,aAAvD,IAAwEI,MAAM,CAACqB,MAAP,GAAgB,CAA5F,EAA+F;AACpG;AACAnB,MAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAnB;AACAvC,MAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuB3D,gBAAvB,EAAyC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAzC,CAAnB;AAEAmB,MAAAA,MAAM,GAAG,EAAT;AACD,KANM,MAMA,IAAIQ,YAAY,IAAIzB,KAAK,IAAInB,KAAK,CAACI,IAA/B,IAAuCkD,YAA3C,EAAyD;AAC9D;AACAlB,MAAAA,MAAM,GAAG,EAAT;AACD,KAHM,MAGA,IAAIA,MAAM,CAACqB,MAAP,IAAiB,CAAjB,IAAsBb,YAA1B,EAAwC;AAC7C;AACAR,MAAAA,MAAM,CAACqC,GAAP;AACD,KAHM,MAGA,IAAIrC,MAAM,CAACqB,MAAP,GAAgB,CAAhB,IAAqB,CAACf,OAAD,IAAY,CAACC,YAAb,IAA6B,CAACC,YAA9B,IAA8C,CAACC,gBAAxE,EAA0F;AAC/F;AACAT,MAAAA,MAAM,CAAC+B,IAAP,CAAYT,SAAZ;AACD;;AAEDN,IAAAA,UAAU,GAAGD,SAAb;AACAA,IAAAA,SAAS,GAAG,CAACC,UAAD,IAAeM,SAAS,IAAI9D,MAAM,CAACyG,UAA/C;AACAtD,IAAAA,eAAe,GAAGD,cAAlB;AACAG,IAAAA,aAAa,GAAGD,YAAhB;AAEA5B,IAAAA,QAAQ,CAACE,IAAT,GAAiBsB,YAAY,IAAID,YAAhB,IAAgCE,gBAAjC,GAAqDzB,QAAQ,CAACE,IAAT,GAAgB,CAArE,GAAyEF,QAAQ,CAACE,IAAlG;AACAF,IAAAA,QAAQ,CAACG,MAAT,GAAmBqB,YAAY,IAAID,YAAhB,IAAgCE,gBAAjC,GAAqD,CAArD,GAAyDzB,QAAQ,CAACG,MAAT,GAAkB,CAA7F;AACD;;AAED,MAAI+B,YAAJ,EAAkB;AAChBrC,IAAAA,eAAe,CAAC6D,QAAhB,CAAyBX,IAAzB,CAA8B,sBAAsBpE,cAAc,CAAC,CAACqB,QAAQ,CAACE,IAAV,EAAgBF,QAAQ,CAACG,MAAzB,EAAiCH,QAAQ,CAACJ,MAA1C,CAAD,CAApC,GAA0F,GAAxH;AACD;;AAED,MAAIsC,YAAY,IAAIlB,MAAM,CAACqB,MAAP,GAAgB,CAApC,EAAuC;AACrCnB,IAAAA,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBgC,OAAhB,CAAwBxF,yBAAxB,EAAmD,EAAnD,CAAnB;AACAkB,IAAAA,aAAa,CAACmC,IAAd,CAAmB,CAACrE,KAAK,CAACmG,cAAP,EAAuB3D,gBAAvB,EAAyC,CAACkC,gBAAgB,CAACvC,QAAD,EAAWK,gBAAX,EAA6BrB,eAA7B,CAAjB,CAAzC,CAAnB;AAEAmB,IAAAA,MAAM,GAAG,EAAT;AACD;;AAED,MAAIA,MAAM,CAACqB,MAAP,GAAgB,CAApB,EAAuB;AACrBxC,IAAAA,eAAe,CAAC6D,QAAhB,CAAyBX,IAAzB,CAA8B,4BAA4B/B,MAAM,CAACkC,IAAP,CAAY,EAAZ,CAA5B,GAA8C,QAA9C,GAAyDvE,cAAc,CAACkC,QAAD,CAAvE,GAAoF,aAAlH;AACD;;AAED,SAAON,SAAP;AACD;;AAED,SAAS0C,oBAAT,CAA8BjC,MAA9B,EAAsC;AACpC,SAAO3B,4BAA4B,CAAC8F,IAA7B,CAAkCnE,MAAM,CAACkC,IAAP,CAAY,EAAZ,IAAkB1E,MAAM,CAACoE,aAA3D,CAAP;AACD;;AAED,SAASU,kBAAT,CAA4BtC,MAA5B,EAAoC;AAClC,SAAO5B,0BAA0B,CAAC+F,IAA3B,CAAgCnE,MAAM,CAACkC,IAAP,CAAY,EAAZ,IAAkB1E,MAAM,CAACoE,aAAzD,CAAP;AACD;;AAED,SAASQ,gBAAT,CAA0BvC,QAA1B,EAAoCuE,KAApC,EAA2CvF,eAA3C,EAA4DwF,iBAA5D,EAA+E;AAC7E,MAAIzF,MAAM,GAAGiB,QAAQ,CAAC,CAAD,CAArB;AAEA,SAAOhB,eAAe,CAACyF,qBAAhB,CAAsCC,UAAtC,CAAiD3F,MAAjD,IACLC,eAAe,CAACyF,qBAAhB,CAAsCE,mBAAtC,CAA0D3E,QAA1D,EAAoEuE,KAAK,CAAC/C,MAA1E,EAAkFgD,iBAAlF,CADK,GAELxE,QAFF;AAGD;;AAED,SAASqD,aAAT,CAAuBlD,MAAvB,EAA+B;AAC7B,MAAIyE,QAAQ,GAAGzE,MAAM,CAAC,CAAD,CAAN,IAAaxC,MAAM,CAACsF,EAApB,IAA0B9C,MAAM,CAAC,CAAD,CAAN,IAAaxC,MAAM,CAACkH,UAA7D;AACA,MAAIC,QAAQ,GAAG3E,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgB0C,KAAhB,CAAsBnG,2BAAtB,EAAmD,CAAnD,CAAf;;AAEA,MAAIgG,QAAQ,IAAItG,WAAW,CAAC0G,OAAZ,CAAoBF,QAApB,IAAgC,CAAC,CAAjD,EAAoD;AAClD,WAAOjH,KAAK,CAAC0F,YAAb;AACD,GAFD,MAEO,IAAIqB,QAAQ,IAAIvG,QAAQ,CAAC2G,OAAT,CAAiBF,QAAjB,IAA6B,CAAC,CAA9C,EAAiD;AACtD,WAAOjH,KAAK,CAACqF,OAAb;AACD,GAFM,MAEA,IAAI0B,QAAJ,EAAc;AACnB,WAAO/G,KAAK,CAAC8F,aAAb;AACD,GAFM,MAEA;AACL,WAAO9F,KAAK,CAACM,IAAb;AACD;AACF;;AAED,SAASiF,cAAT,CAAwB6B,SAAxB,EAAmC;AACjC,MAAIA,SAAS,IAAIpH,KAAK,CAACM,IAAvB,EAA6B;AAC3B,WAAON,KAAK,CAACqH,UAAb;AACD,GAFD,MAEO,IAAID,SAAS,IAAIpH,KAAK,CAAC0F,YAAvB,EAAqC;AAC1C,WAAO1F,KAAK,CAAC2F,kBAAb;AACD,GAFM,MAEA,IAAIyB,SAAS,IAAIpH,KAAK,CAAC8F,aAAvB,EAAsC;AAC3C,WAAO9F,KAAK,CAAC+F,mBAAb;AACD;AACF;;AAED,SAASF,eAAT,CAAyBvD,MAAzB,EAAiC;AAC/B,MAAIE,gBAAgB,GAAGF,MAAM,CAACkC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAvB;AAEA,SAAO7D,iBAAiB,CAACuG,OAAlB,CAA0B3E,gBAA1B,IAA8C,CAAC,CAA/C,IAAoD3B,gBAAgB,CAACsG,OAAjB,CAAyB3E,gBAAzB,IAA6C,CAAC,CAAzG;AACD;;AAED,SAAS8D,aAAT,CAAuBhE,MAAvB,EAA+B;AAC7B,SAAOxB,cAAc,CAAC2F,IAAf,CAAoBnE,MAAM,CAACkC,IAAP,CAAY,EAAZ,IAAkB1E,MAAM,CAACuG,oBAA7C,CAAP;AACD;;AAEDiB,MAAM,CAACC,OAAP,GAAiBtG,QAAjB","sourcesContent":["var Marker = require('./marker');\nvar Token = require('./token');\n\nvar formatPosition = require('../utils/format-position');\n\nvar Level = {\n  BLOCK: 'block',\n  COMMENT: 'comment',\n  DOUBLE_QUOTE: 'double-quote',\n  RULE: 'rule',\n  SINGLE_QUOTE: 'single-quote'\n};\n\nvar AT_RULES = [\n  '@charset',\n  '@import'\n];\n\nvar BLOCK_RULES = [\n  '@-moz-document',\n  '@document',\n  '@-moz-keyframes',\n  '@-ms-keyframes',\n  '@-o-keyframes',\n  '@-webkit-keyframes',\n  '@keyframes',\n  '@media',\n  '@supports'\n];\n\nvar IGNORE_END_COMMENT_PATTERN = /\\/\\* clean\\-css ignore:end \\*\\/$/;\nvar IGNORE_START_COMMENT_PATTERN = /^\\/\\* clean\\-css ignore:start \\*\\//;\n\nvar PAGE_MARGIN_BOXES = [\n  '@bottom-center',\n  '@bottom-left',\n  '@bottom-left-corner',\n  '@bottom-right',\n  '@bottom-right-corner',\n  '@left-bottom',\n  '@left-middle',\n  '@left-top',\n  '@right-bottom',\n  '@right-middle',\n  '@right-top',\n  '@top-center',\n  '@top-left',\n  '@top-left-corner',\n  '@top-right',\n  '@top-right-corner'\n];\n\nvar EXTRA_PAGE_BOXES = [\n  '@footnote',\n  '@footnotes',\n  '@left',\n  '@page-float-bottom',\n  '@page-float-top',\n  '@right'\n];\n\nvar REPEAT_PATTERN = /^\\[\\s{0,31}\\d+\\s{0,31}\\]$/;\nvar RULE_WORD_SEPARATOR_PATTERN = /[\\s\\(]/;\nvar TAIL_BROKEN_VALUE_PATTERN = /[\\s|\\}]*$/;\n\nfunction tokenize(source, externalContext) {\n  var internalContext = {\n    level: Level.BLOCK,\n    position: {\n      source: externalContext.source || undefined,\n      line: 1,\n      column: 0,\n      index: 0\n    }\n  };\n\n  return intoTokens(source, externalContext, internalContext, false);\n}\n\nfunction intoTokens(source, externalContext, internalContext, isNested) {\n  var allTokens = [];\n  var newTokens = allTokens;\n  var lastToken;\n  var ruleToken;\n  var ruleTokens = [];\n  var propertyToken;\n  var metadata;\n  var metadatas = [];\n  var level = internalContext.level;\n  var levels = [];\n  var buffer = [];\n  var buffers = [];\n  var serializedBuffer;\n  var serializedBufferPart;\n  var roundBracketLevel = 0;\n  var isQuoted;\n  var isSpace;\n  var isNewLineNix;\n  var isNewLineWin;\n  var isCarriageReturn;\n  var isCommentStart;\n  var wasCommentStart = false;\n  var isCommentEnd;\n  var wasCommentEnd = false;\n  var isCommentEndMarker;\n  var isEscaped;\n  var wasEscaped = false;\n  var isRaw = false;\n  var seekingValue = false;\n  var seekingPropertyBlockClosing = false;\n  var position = internalContext.position;\n  var lastCommentStartAt;\n\n  for (; position.index < source.length; position.index++) {\n    var character = source[position.index];\n\n    isQuoted = level == Level.SINGLE_QUOTE || level == Level.DOUBLE_QUOTE;\n    isSpace = character == Marker.SPACE || character == Marker.TAB;\n    isNewLineNix = character == Marker.NEW_LINE_NIX;\n    isNewLineWin = character == Marker.NEW_LINE_NIX && source[position.index - 1] == Marker.CARRIAGE_RETURN;\n    isCarriageReturn = character == Marker.CARRIAGE_RETURN && source[position.index + 1] && source[position.index + 1] != Marker.NEW_LINE_NIX;\n    isCommentStart = !wasCommentEnd && level != Level.COMMENT && !isQuoted && character == Marker.ASTERISK && source[position.index - 1] == Marker.FORWARD_SLASH;\n    isCommentEndMarker = !wasCommentStart && !isQuoted && character == Marker.FORWARD_SLASH && source[position.index - 1] == Marker.ASTERISK;\n    isCommentEnd = level == Level.COMMENT && isCommentEndMarker;\n    roundBracketLevel = Math.max(roundBracketLevel, 0);\n\n    metadata = buffer.length === 0 ?\n      [position.line, position.column, position.source] :\n      metadata;\n\n    if (isEscaped) {\n      // previous character was a backslash\n      buffer.push(character);\n    } else if (!isCommentEnd && level == Level.COMMENT) {\n      buffer.push(character);\n    } else if (!isCommentStart && !isCommentEnd && isRaw) {\n      buffer.push(character);\n    } else if (isCommentStart && (level == Level.BLOCK || level == Level.RULE) && buffer.length > 1) {\n      // comment start within block preceded by some content, e.g. div/*<--\n      metadatas.push(metadata);\n      buffer.push(character);\n      buffers.push(buffer.slice(0, buffer.length - 2));\n\n      buffer = buffer.slice(buffer.length - 2);\n      metadata = [position.line, position.column - 1, position.source];\n\n      levels.push(level);\n      level = Level.COMMENT;\n    } else if (isCommentStart) {\n      // comment start, e.g. /*<--\n      levels.push(level);\n      level = Level.COMMENT;\n      buffer.push(character);\n    } else if (isCommentEnd && isIgnoreStartComment(buffer)) {\n      // ignore:start comment end, e.g. /* clean-css ignore:start */<--\n      serializedBuffer = buffer.join('').trim() + character;\n      lastToken = [Token.COMMENT, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]];\n      newTokens.push(lastToken);\n\n      isRaw = true;\n      metadata = metadatas.pop() || null;\n      buffer = buffers.pop() || [];\n    } else if (isCommentEnd && isIgnoreEndComment(buffer)) {\n      // ignore:start comment end, e.g. /* clean-css ignore:end */<--\n      serializedBuffer = buffer.join('') + character;\n      lastCommentStartAt = serializedBuffer.lastIndexOf(Marker.FORWARD_SLASH + Marker.ASTERISK);\n\n      serializedBufferPart = serializedBuffer.substring(0, lastCommentStartAt);\n      lastToken = [Token.RAW, serializedBufferPart, [originalMetadata(metadata, serializedBufferPart, externalContext)]];\n      newTokens.push(lastToken);\n\n      serializedBufferPart = serializedBuffer.substring(lastCommentStartAt);\n      metadata = [position.line, position.column - serializedBufferPart.length + 1, position.source];\n      lastToken = [Token.COMMENT, serializedBufferPart, [originalMetadata(metadata, serializedBufferPart, externalContext)]];\n      newTokens.push(lastToken);\n\n      isRaw = false;\n      level = levels.pop();\n      metadata = metadatas.pop() || null;\n      buffer = buffers.pop() || [];\n    } else if (isCommentEnd) {\n      // comment end, e.g. /* comment */<--\n      serializedBuffer = buffer.join('').trim() + character;\n      lastToken = [Token.COMMENT, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]];\n      newTokens.push(lastToken);\n\n      level = levels.pop();\n      metadata = metadatas.pop() || null;\n      buffer = buffers.pop() || [];\n    } else if (isCommentEndMarker && source[position.index + 1] != Marker.ASTERISK) {\n      externalContext.warnings.push('Unexpected \\'*/\\' at ' + formatPosition([position.line, position.column, position.source]) + '.');\n      buffer = [];\n    } else if (character == Marker.SINGLE_QUOTE && !isQuoted) {\n      // single quotation start, e.g. a[href^='https<--\n      levels.push(level);\n      level = Level.SINGLE_QUOTE;\n      buffer.push(character);\n    } else if (character == Marker.SINGLE_QUOTE && level == Level.SINGLE_QUOTE) {\n      // single quotation end, e.g. a[href^='https'<--\n      level = levels.pop();\n      buffer.push(character);\n    } else if (character == Marker.DOUBLE_QUOTE && !isQuoted) {\n      // double quotation start, e.g. a[href^=\"<--\n      levels.push(level);\n      level = Level.DOUBLE_QUOTE;\n      buffer.push(character);\n    } else if (character == Marker.DOUBLE_QUOTE && level == Level.DOUBLE_QUOTE) {\n      // double quotation end, e.g. a[href^=\"https\"<--\n      level = levels.pop();\n      buffer.push(character);\n    } else if (!isCommentStart && !isCommentEnd && character != Marker.CLOSE_ROUND_BRACKET && character != Marker.OPEN_ROUND_BRACKET && level != Level.COMMENT && !isQuoted && roundBracketLevel > 0) {\n      // character inside any function, e.g. hsla(.<--\n      buffer.push(character);\n    } else if (character == Marker.OPEN_ROUND_BRACKET && !isQuoted && level != Level.COMMENT && !seekingValue) {\n      // round open bracket, e.g. @import url(<--\n      buffer.push(character);\n\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && !isQuoted && level != Level.COMMENT && !seekingValue) {\n      // round open bracket, e.g. @import url(test.css)<--\n      buffer.push(character);\n\n      roundBracketLevel--;\n    } else if (character == Marker.SEMICOLON && level == Level.BLOCK && buffer[0] == Marker.AT) {\n      // semicolon ending rule at block level, e.g. @import '...';<--\n      serializedBuffer = buffer.join('').trim();\n      allTokens.push([Token.AT_RULE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n\n      buffer = [];\n    } else if (character == Marker.COMMA && level == Level.BLOCK && ruleToken) {\n      // comma separator at block level, e.g. a,div,<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([tokenScopeFrom(ruleToken[0]), serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext, ruleToken[1].length)]]);\n\n      buffer = [];\n    } else if (character == Marker.COMMA && level == Level.BLOCK && tokenTypeFrom(buffer) == Token.AT_RULE) {\n      // comma separator at block level, e.g. @import url(...) screen,<--\n      // keep iterating as end semicolon will create the token\n      buffer.push(character);\n    } else if (character == Marker.COMMA && level == Level.BLOCK) {\n      // comma separator at block level, e.g. a,<--\n      ruleToken = [tokenTypeFrom(buffer), [], []];\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([tokenScopeFrom(ruleToken[0]), serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext, 0)]]);\n\n      buffer = [];\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.BLOCK && ruleToken && ruleToken[0] == Token.NESTED_BLOCK) {\n      // open brace opening at-rule at block level, e.g. @media{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([Token.NESTED_BLOCK_SCOPE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      allTokens.push(ruleToken);\n\n      levels.push(level);\n      position.column++;\n      position.index++;\n      buffer = [];\n\n      ruleToken[2] = intoTokens(source, externalContext, internalContext, true);\n      ruleToken = null;\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.BLOCK && tokenTypeFrom(buffer) == Token.NESTED_BLOCK) {\n      // open brace opening at-rule at block level, e.g. @media{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken = ruleToken || [Token.NESTED_BLOCK, [], []];\n      ruleToken[1].push([Token.NESTED_BLOCK_SCOPE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      allTokens.push(ruleToken);\n\n      levels.push(level);\n      position.column++;\n      position.index++;\n      buffer = [];\n\n      ruleToken[2] = intoTokens(source, externalContext, internalContext, true);\n      ruleToken = null;\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.BLOCK) {\n      // open brace opening rule at block level, e.g. div{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken = ruleToken || [tokenTypeFrom(buffer), [], []];\n      ruleToken[1].push([tokenScopeFrom(ruleToken[0]), serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext, ruleToken[1].length)]]);\n      newTokens = ruleToken[2];\n      allTokens.push(ruleToken);\n\n      levels.push(level);\n      level = Level.RULE;\n      buffer = [];\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.RULE && seekingValue) {\n      // open brace opening rule at rule level, e.g. div{--variable:{<--\n      ruleTokens.push(ruleToken);\n      ruleToken = [Token.PROPERTY_BLOCK, []];\n      propertyToken.push(ruleToken);\n      newTokens = ruleToken[1];\n\n      levels.push(level);\n      level = Level.RULE;\n      seekingValue = false;\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.RULE && isPageMarginBox(buffer)) {\n      // open brace opening page-margin box at rule level, e.g. @page{@top-center{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleTokens.push(ruleToken);\n      ruleToken = [Token.AT_RULE_BLOCK, [], []];\n      ruleToken[1].push([Token.AT_RULE_BLOCK_SCOPE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      newTokens.push(ruleToken);\n      newTokens = ruleToken[2];\n\n      levels.push(level);\n      level = Level.RULE;\n      buffer = [];\n    } else if (character == Marker.COLON && level == Level.RULE && !seekingValue) {\n      // colon at rule level, e.g. a{color:<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken = [Token.PROPERTY, [Token.PROPERTY_NAME, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]];\n      newTokens.push(propertyToken);\n\n      seekingValue = true;\n      buffer = [];\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && propertyToken && ruleTokens.length > 0 && buffer.length > 0 && buffer[0] == Marker.AT) {\n      // semicolon at rule level for at-rule, e.g. a{--color:{@apply(--other-color);<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([Token.AT_RULE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n\n      buffer = [];\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && propertyToken && buffer.length > 0) {\n      // semicolon at rule level, e.g. a{color:red;<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n\n      propertyToken = null;\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && propertyToken && buffer.length === 0) {\n      // semicolon after bracketed value at rule level, e.g. a{color:rgb(...);<--\n      propertyToken = null;\n      seekingValue = false;\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && buffer.length > 0 && buffer[0] == Marker.AT) {\n      // semicolon for at-rule at rule level, e.g. a{@apply(--variable);<--\n      serializedBuffer = buffer.join('');\n      newTokens.push([Token.AT_RULE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && seekingPropertyBlockClosing) {\n      // close brace after a property block at rule level, e.g. a{--custom:{color:red;};<--\n      seekingPropertyBlockClosing = false;\n      buffer = [];\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && buffer.length === 0) {\n      // stray semicolon at rule level, e.g. a{;<--\n      // noop\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && propertyToken && seekingValue && buffer.length > 0 && ruleTokens.length > 0) {\n      // close brace at rule level, e.g. a{--color:{color:red}<--\n      serializedBuffer = buffer.join('');\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && propertyToken && buffer.length > 0 && buffer[0] == Marker.AT && ruleTokens.length > 0) {\n      // close brace at rule level for at-rule, e.g. a{--color:{@apply(--other-color)}<--\n      serializedBuffer = buffer.join('');\n      ruleToken[1].push([Token.AT_RULE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && propertyToken && ruleTokens.length > 0) {\n      // close brace at rule level after space, e.g. a{--color:{color:red }<--\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n\n      level = levels.pop();\n      seekingValue = false;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && propertyToken && buffer.length > 0) {\n      // close brace at rule level, e.g. a{color:red}<--\n      serializedBuffer = buffer.join('');\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = allTokens;\n\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && buffer.length > 0 && buffer[0] == Marker.AT) {\n      // close brace after at-rule at rule level, e.g. a{@apply(--variable)}<--\n      propertyToken = null;\n      ruleToken = null;\n      serializedBuffer = buffer.join('').trim();\n      newTokens.push([Token.AT_RULE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      newTokens = allTokens;\n\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE && levels[levels.length - 1] == Level.RULE) {\n      // close brace after a property block at rule level, e.g. a{--custom:{color:red;}<--\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n\n      level = levels.pop();\n      seekingValue = false;\n      seekingPropertyBlockClosing = true;\n      buffer = [];\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE) {\n      // close brace after a rule, e.g. a{color:red;}<--\n      propertyToken = null;\n      ruleToken = null;\n      newTokens = allTokens;\n\n      level = levels.pop();\n      seekingValue = false;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.BLOCK && !isNested && position.index <= source.length - 1) {\n      // stray close brace at block level, e.g. a{color:red}color:blue}<--\n      externalContext.warnings.push('Unexpected \\'}\\' at ' + formatPosition([position.line, position.column, position.source]) + '.');\n      buffer.push(character);\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.BLOCK) {\n      // close brace at block level, e.g. @media screen {...}<--\n      break;\n    } else if (character == Marker.OPEN_ROUND_BRACKET && level == Level.RULE && seekingValue) {\n      // round open bracket, e.g. a{color:hsla(<--\n      buffer.push(character);\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && level == Level.RULE && seekingValue && roundBracketLevel == 1) {\n      // round close bracket, e.g. a{color:hsla(0,0%,0%)<--\n      buffer.push(character);\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n\n      roundBracketLevel--;\n      buffer = [];\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && level == Level.RULE && seekingValue) {\n      // round close bracket within other brackets, e.g. a{width:calc((10rem / 2)<--\n      buffer.push(character);\n      roundBracketLevel--;\n    } else if (character == Marker.FORWARD_SLASH && source[position.index + 1] != Marker.ASTERISK && level == Level.RULE && seekingValue && buffer.length > 0) {\n      // forward slash within a property, e.g. a{background:url(image.png) 0 0/<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      propertyToken.push([Token.PROPERTY_VALUE, character, [[position.line, position.column, position.source]]]);\n\n      buffer = [];\n    } else if (character == Marker.FORWARD_SLASH && source[position.index + 1] != Marker.ASTERISK && level == Level.RULE && seekingValue) {\n      // forward slash within a property after space, e.g. a{background:url(image.png) 0 0 /<--\n      propertyToken.push([Token.PROPERTY_VALUE, character, [[position.line, position.column, position.source]]]);\n\n      buffer = [];\n    } else if (character == Marker.COMMA && level == Level.RULE && seekingValue && buffer.length > 0) {\n      // comma within a property, e.g. a{background:url(image.png),<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n      propertyToken.push([Token.PROPERTY_VALUE, character, [[position.line, position.column, position.source]]]);\n\n      buffer = [];\n    } else if (character == Marker.COMMA && level == Level.RULE && seekingValue) {\n      // comma within a property after space, e.g. a{background:url(image.png) ,<--\n      propertyToken.push([Token.PROPERTY_VALUE, character, [[position.line, position.column, position.source]]]);\n\n      buffer = [];\n    } else if (character == Marker.CLOSE_SQUARE_BRACKET && propertyToken && propertyToken.length > 1 && buffer.length > 0 && isRepeatToken(buffer)) {\n      buffer.push(character);\n      serializedBuffer = buffer.join('').trim();\n      propertyToken[propertyToken.length - 1][1] += serializedBuffer;\n\n      buffer = [];\n    } else if ((isSpace || (isNewLineNix && !isNewLineWin)) && level == Level.RULE && seekingValue && propertyToken && buffer.length > 0) {\n      // space or *nix newline within property, e.g. a{margin:0 <--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n\n      buffer = [];\n    } else if (isNewLineWin && level == Level.RULE && seekingValue && propertyToken && buffer.length > 1) {\n      // win newline within property, e.g. a{margin:0\\r\\n<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n\n      buffer = [];\n    } else if (isNewLineWin && level == Level.RULE && seekingValue) {\n      // win newline\n      buffer = [];\n    } else if (buffer.length == 1 && isNewLineWin) {\n      // ignore windows newline which is composed of two characters\n      buffer.pop();\n    } else if (buffer.length > 0 || !isSpace && !isNewLineNix && !isNewLineWin && !isCarriageReturn) {\n      // any character\n      buffer.push(character);\n    }\n\n    wasEscaped = isEscaped;\n    isEscaped = !wasEscaped && character == Marker.BACK_SLASH;\n    wasCommentStart = isCommentStart;\n    wasCommentEnd = isCommentEnd;\n\n    position.line = (isNewLineWin || isNewLineNix || isCarriageReturn) ? position.line + 1 : position.line;\n    position.column = (isNewLineWin || isNewLineNix || isCarriageReturn) ? 0 : position.column + 1;\n  }\n\n  if (seekingValue) {\n    externalContext.warnings.push('Missing \\'}\\' at ' + formatPosition([position.line, position.column, position.source]) + '.');\n  }\n\n  if (seekingValue && buffer.length > 0) {\n    serializedBuffer = buffer.join('').replace(TAIL_BROKEN_VALUE_PATTERN, '');\n    propertyToken.push([Token.PROPERTY_VALUE, serializedBuffer, [originalMetadata(metadata, serializedBuffer, externalContext)]]);\n\n    buffer = [];\n  }\n\n  if (buffer.length > 0) {\n    externalContext.warnings.push('Invalid character(s) \\'' + buffer.join('') + '\\' at ' + formatPosition(metadata) + '. Ignoring.');\n  }\n\n  return allTokens;\n}\n\nfunction isIgnoreStartComment(buffer) {\n  return IGNORE_START_COMMENT_PATTERN.test(buffer.join('') + Marker.FORWARD_SLASH);\n}\n\nfunction isIgnoreEndComment(buffer) {\n  return IGNORE_END_COMMENT_PATTERN.test(buffer.join('') + Marker.FORWARD_SLASH);\n}\n\nfunction originalMetadata(metadata, value, externalContext, selectorFallbacks) {\n  var source = metadata[2];\n\n  return externalContext.inputSourceMapTracker.isTracking(source) ?\n    externalContext.inputSourceMapTracker.originalPositionFor(metadata, value.length, selectorFallbacks) :\n    metadata;\n}\n\nfunction tokenTypeFrom(buffer) {\n  var isAtRule = buffer[0] == Marker.AT || buffer[0] == Marker.UNDERSCORE;\n  var ruleWord = buffer.join('').split(RULE_WORD_SEPARATOR_PATTERN)[0];\n\n  if (isAtRule && BLOCK_RULES.indexOf(ruleWord) > -1) {\n    return Token.NESTED_BLOCK;\n  } else if (isAtRule && AT_RULES.indexOf(ruleWord) > -1) {\n    return Token.AT_RULE;\n  } else if (isAtRule) {\n    return Token.AT_RULE_BLOCK;\n  } else {\n    return Token.RULE;\n  }\n}\n\nfunction tokenScopeFrom(tokenType) {\n  if (tokenType == Token.RULE) {\n    return Token.RULE_SCOPE;\n  } else if (tokenType == Token.NESTED_BLOCK) {\n    return Token.NESTED_BLOCK_SCOPE;\n  } else if (tokenType == Token.AT_RULE_BLOCK) {\n    return Token.AT_RULE_BLOCK_SCOPE;\n  }\n}\n\nfunction isPageMarginBox(buffer) {\n  var serializedBuffer = buffer.join('').trim();\n\n  return PAGE_MARGIN_BOXES.indexOf(serializedBuffer) > -1 || EXTRA_PAGE_BOXES.indexOf(serializedBuffer) > -1;\n}\n\nfunction isRepeatToken(buffer) {\n  return REPEAT_PATTERN.test(buffer.join('') + Marker.CLOSE_SQUARE_BRACKET);\n}\n\nmodule.exports = tokenize;\n"]},"metadata":{},"sourceType":"script"}