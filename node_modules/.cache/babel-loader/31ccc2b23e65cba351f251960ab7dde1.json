{"ast":null,"code":"var specificity = require('./specificity');\n\nfunction specificitiesOverlap(selector1, selector2, cache) {\n  var specificity1;\n  var specificity2;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = selector1.length; i < l; i++) {\n    specificity1 = findSpecificity(selector1[i][1], cache);\n\n    for (j = 0, m = selector2.length; j < m; j++) {\n      specificity2 = findSpecificity(selector2[j][1], cache);\n\n      if (specificity1[0] === specificity2[0] && specificity1[1] === specificity2[1] && specificity1[2] === specificity2[2]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction findSpecificity(selector, cache) {\n  var value;\n\n  if (!(selector in cache)) {\n    cache[selector] = value = specificity(selector);\n  }\n\n  return value || cache[selector];\n}\n\nmodule.exports = specificitiesOverlap;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/optimizer/level-2/specificities-overlap.js"],"names":["specificity","require","specificitiesOverlap","selector1","selector2","cache","specificity1","specificity2","i","l","j","m","length","findSpecificity","selector","value","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,SAASC,oBAAT,CAA8BC,SAA9B,EAAyCC,SAAzC,EAAoDC,KAApD,EAA2D;AACzD,MAAIC,YAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,CAAJ,EAAOC,CAAP;AACA,MAAIC,CAAJ,EAAOC,CAAP;;AAEA,OAAKH,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGN,SAAS,CAACS,MAA1B,EAAkCJ,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CF,IAAAA,YAAY,GAAGO,eAAe,CAACV,SAAS,CAACK,CAAD,CAAT,CAAa,CAAb,CAAD,EAAkBH,KAAlB,CAA9B;;AAEA,SAAKK,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGP,SAAS,CAACQ,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CH,MAAAA,YAAY,GAAGM,eAAe,CAACT,SAAS,CAACM,CAAD,CAAT,CAAa,CAAb,CAAD,EAAkBL,KAAlB,CAA9B;;AAEA,UAAIC,YAAY,CAAC,CAAD,CAAZ,KAAoBC,YAAY,CAAC,CAAD,CAAhC,IAAuCD,YAAY,CAAC,CAAD,CAAZ,KAAoBC,YAAY,CAAC,CAAD,CAAvE,IAA8ED,YAAY,CAAC,CAAD,CAAZ,KAAoBC,YAAY,CAAC,CAAD,CAAlH,EAAuH;AACrH,eAAO,IAAP;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD;;AAED,SAASM,eAAT,CAAyBC,QAAzB,EAAmCT,KAAnC,EAA0C;AACxC,MAAIU,KAAJ;;AAEA,MAAI,EAAED,QAAQ,IAAIT,KAAd,CAAJ,EAA0B;AACxBA,IAAAA,KAAK,CAACS,QAAD,CAAL,GAAkBC,KAAK,GAAGf,WAAW,CAACc,QAAD,CAArC;AACD;;AAED,SAAOC,KAAK,IAAIV,KAAK,CAACS,QAAD,CAArB;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBf,oBAAjB","sourcesContent":["var specificity = require('./specificity');\n\nfunction specificitiesOverlap(selector1, selector2, cache) {\n  var specificity1;\n  var specificity2;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = selector1.length; i < l; i++) {\n    specificity1 = findSpecificity(selector1[i][1], cache);\n\n    for (j = 0, m = selector2.length; j < m; j++) {\n      specificity2 = findSpecificity(selector2[j][1], cache);\n\n      if (specificity1[0] === specificity2[0] && specificity1[1] === specificity2[1] && specificity1[2] === specificity2[2]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction findSpecificity(selector, cache) {\n  var value;\n\n  if (!(selector in cache)) {\n    cache[selector] = value = specificity(selector);\n  }\n\n  return value || cache[selector];\n}\n\nmodule.exports = specificitiesOverlap;\n"]},"metadata":{},"sourceType":"script"}