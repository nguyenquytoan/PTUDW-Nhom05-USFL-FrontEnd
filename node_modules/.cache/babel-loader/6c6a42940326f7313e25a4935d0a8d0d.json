{"ast":null,"code":"\"use strict\";\n\nvar browserslist = require('browserslist');\n\nvar agents = require('caniuse-lite').agents;\n\nvar utils = require('./utils');\n\nvar Browsers = /*#__PURE__*/function () {\n  /**\n     * Return all prefixes for default browser data\n     */\n  Browsers.prefixes = function prefixes() {\n    if (this.prefixesCache) {\n      return this.prefixesCache;\n    }\n\n    this.prefixesCache = [];\n\n    for (var name in agents) {\n      this.prefixesCache.push(\"-\" + agents[name].prefix + \"-\");\n    }\n\n    this.prefixesCache = utils.uniq(this.prefixesCache).sort(function (a, b) {\n      return b.length - a.length;\n    });\n    return this.prefixesCache;\n  }\n  /**\n     * Check is value contain any possible prefix\n     */\n  ;\n\n  Browsers.withPrefix = function withPrefix(value) {\n    if (!this.prefixesRegexp) {\n      this.prefixesRegexp = new RegExp(this.prefixes().join('|'));\n    }\n\n    return this.prefixesRegexp.test(value);\n  };\n\n  function Browsers(data, requirements, options, browserslistOpts) {\n    this.data = data;\n    this.options = options || {};\n    this.browserslistOpts = browserslistOpts || {};\n    this.selected = this.parse(requirements);\n  }\n  /**\n     * Return browsers selected by requirements\n     */\n\n\n  var _proto = Browsers.prototype;\n\n  _proto.parse = function parse(requirements) {\n    var opts = {};\n\n    for (var i in this.browserslistOpts) {\n      opts[i] = this.browserslistOpts[i];\n    }\n\n    opts.path = this.options.from;\n    opts.env = this.options.env;\n    return browserslist(requirements, opts);\n  }\n  /**\n     * Return prefix for selected browser\n     */\n  ;\n\n  _proto.prefix = function prefix(browser) {\n    var _browser$split = browser.split(' '),\n        name = _browser$split[0],\n        version = _browser$split[1];\n\n    var data = this.data[name];\n    var prefix = data.prefix_exceptions && data.prefix_exceptions[version];\n\n    if (!prefix) {\n      prefix = data.prefix;\n    }\n\n    return \"-\" + prefix + \"-\";\n  }\n  /**\n     * Is browser is selected by requirements\n     */\n  ;\n\n  _proto.isSelected = function isSelected(browser) {\n    return this.selected.includes(browser);\n  };\n\n  return Browsers;\n}();\n\nmodule.exports = Browsers;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/autoprefixer/lib/browsers.js"],"names":["browserslist","require","agents","utils","Browsers","prefixes","prefixesCache","name","push","prefix","uniq","sort","a","b","length","withPrefix","value","prefixesRegexp","RegExp","join","test","data","requirements","options","browserslistOpts","selected","parse","_proto","prototype","opts","i","path","from","env","browser","_browser$split","split","version","prefix_exceptions","isSelected","includes","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar browserslist = require('browserslist');\n\nvar agents = require('caniuse-lite').agents;\n\nvar utils = require('./utils');\n\nvar Browsers = /*#__PURE__*/function () {\n  /**\n     * Return all prefixes for default browser data\n     */\n  Browsers.prefixes = function prefixes() {\n    if (this.prefixesCache) {\n      return this.prefixesCache;\n    }\n\n    this.prefixesCache = [];\n\n    for (var name in agents) {\n      this.prefixesCache.push(\"-\" + agents[name].prefix + \"-\");\n    }\n\n    this.prefixesCache = utils.uniq(this.prefixesCache).sort(function (a, b) {\n      return b.length - a.length;\n    });\n    return this.prefixesCache;\n  }\n  /**\n     * Check is value contain any possible prefix\n     */\n  ;\n\n  Browsers.withPrefix = function withPrefix(value) {\n    if (!this.prefixesRegexp) {\n      this.prefixesRegexp = new RegExp(this.prefixes().join('|'));\n    }\n\n    return this.prefixesRegexp.test(value);\n  };\n\n  function Browsers(data, requirements, options, browserslistOpts) {\n    this.data = data;\n    this.options = options || {};\n    this.browserslistOpts = browserslistOpts || {};\n    this.selected = this.parse(requirements);\n  }\n  /**\n     * Return browsers selected by requirements\n     */\n\n\n  var _proto = Browsers.prototype;\n\n  _proto.parse = function parse(requirements) {\n    var opts = {};\n\n    for (var i in this.browserslistOpts) {\n      opts[i] = this.browserslistOpts[i];\n    }\n\n    opts.path = this.options.from;\n    opts.env = this.options.env;\n    return browserslist(requirements, opts);\n  }\n  /**\n     * Return prefix for selected browser\n     */\n  ;\n\n  _proto.prefix = function prefix(browser) {\n    var _browser$split = browser.split(' '),\n        name = _browser$split[0],\n        version = _browser$split[1];\n\n    var data = this.data[name];\n    var prefix = data.prefix_exceptions && data.prefix_exceptions[version];\n\n    if (!prefix) {\n      prefix = data.prefix;\n    }\n\n    return \"-\" + prefix + \"-\";\n  }\n  /**\n     * Is browser is selected by requirements\n     */\n  ;\n\n  _proto.isSelected = function isSelected(browser) {\n    return this.selected.includes(browser);\n  };\n\n  return Browsers;\n}();\n\nmodule.exports = Browsers;"]},"metadata":{},"sourceType":"script"}