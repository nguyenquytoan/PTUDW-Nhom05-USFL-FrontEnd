{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction sync(path, options) {\n  const lstat = options.fs.lstatSync(path);\n\n  if (!isFollowedSymlink(lstat, options)) {\n    return lstat;\n  }\n\n  try {\n    const stat = options.fs.statSync(path);\n\n    stat.isSymbolicLink = () => true;\n\n    return stat;\n  } catch (err) {\n    if (!options.throwErrorOnBrokenSymlinks) {\n      return lstat;\n    }\n\n    throw err;\n  }\n}\n\nexports.sync = sync;\n\nfunction async(path, options, callback) {\n  options.fs.lstat(path, (err0, lstat) => {\n    if (err0) {\n      return callback(err0, undefined);\n    }\n\n    if (!isFollowedSymlink(lstat, options)) {\n      return callback(null, lstat);\n    }\n\n    options.fs.stat(path, (err1, stat) => {\n      if (err1) {\n        return options.throwErrorOnBrokenSymlinks ? callback(err1) : callback(null, lstat);\n      }\n\n      stat.isSymbolicLink = () => true;\n\n      callback(null, stat);\n    });\n  });\n}\n\nexports.async = async;\n/**\n * Returns `true` for followed symlink.\n */\n\nfunction isFollowedSymlink(stat, options) {\n  return stat.isSymbolicLink() && options.followSymlinks;\n}\n\nexports.isFollowedSymlink = isFollowedSymlink;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@nodelib/fs.stat/out/providers/stat.js"],"names":["Object","defineProperty","exports","value","sync","path","options","lstat","fs","lstatSync","isFollowedSymlink","stat","statSync","isSymbolicLink","err","throwErrorOnBrokenSymlinks","async","callback","err0","undefined","err1","followSymlinks"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,IAAT,CAAcC,IAAd,EAAoBC,OAApB,EAA6B;AACzB,QAAMC,KAAK,GAAGD,OAAO,CAACE,EAAR,CAAWC,SAAX,CAAqBJ,IAArB,CAAd;;AACA,MAAI,CAACK,iBAAiB,CAACH,KAAD,EAAQD,OAAR,CAAtB,EAAwC;AACpC,WAAOC,KAAP;AACH;;AACD,MAAI;AACA,UAAMI,IAAI,GAAGL,OAAO,CAACE,EAAR,CAAWI,QAAX,CAAoBP,IAApB,CAAb;;AACAM,IAAAA,IAAI,CAACE,cAAL,GAAsB,MAAM,IAA5B;;AACA,WAAOF,IAAP;AACH,GAJD,CAKA,OAAOG,GAAP,EAAY;AACR,QAAI,CAACR,OAAO,CAACS,0BAAb,EAAyC;AACrC,aAAOR,KAAP;AACH;;AACD,UAAMO,GAAN;AACH;AACJ;;AACDZ,OAAO,CAACE,IAAR,GAAeA,IAAf;;AACA,SAASY,KAAT,CAAeX,IAAf,EAAqBC,OAArB,EAA8BW,QAA9B,EAAwC;AACpCX,EAAAA,OAAO,CAACE,EAAR,CAAWD,KAAX,CAAiBF,IAAjB,EAAuB,CAACa,IAAD,EAAOX,KAAP,KAAiB;AACpC,QAAIW,IAAJ,EAAU;AACN,aAAOD,QAAQ,CAACC,IAAD,EAAOC,SAAP,CAAf;AACH;;AACD,QAAI,CAACT,iBAAiB,CAACH,KAAD,EAAQD,OAAR,CAAtB,EAAwC;AACpC,aAAOW,QAAQ,CAAC,IAAD,EAAOV,KAAP,CAAf;AACH;;AACDD,IAAAA,OAAO,CAACE,EAAR,CAAWG,IAAX,CAAgBN,IAAhB,EAAsB,CAACe,IAAD,EAAOT,IAAP,KAAgB;AAClC,UAAIS,IAAJ,EAAU;AACN,eAAOd,OAAO,CAACS,0BAAR,GAAqCE,QAAQ,CAACG,IAAD,CAA7C,GAAsDH,QAAQ,CAAC,IAAD,EAAOV,KAAP,CAArE;AACH;;AACDI,MAAAA,IAAI,CAACE,cAAL,GAAsB,MAAM,IAA5B;;AACAI,MAAAA,QAAQ,CAAC,IAAD,EAAON,IAAP,CAAR;AACH,KAND;AAOH,GAdD;AAeH;;AACDT,OAAO,CAACc,KAAR,GAAgBA,KAAhB;AACA;;;;AAGA,SAASN,iBAAT,CAA2BC,IAA3B,EAAiCL,OAAjC,EAA0C;AACtC,SAAOK,IAAI,CAACE,cAAL,MAAyBP,OAAO,CAACe,cAAxC;AACH;;AACDnB,OAAO,CAACQ,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction sync(path, options) {\n    const lstat = options.fs.lstatSync(path);\n    if (!isFollowedSymlink(lstat, options)) {\n        return lstat;\n    }\n    try {\n        const stat = options.fs.statSync(path);\n        stat.isSymbolicLink = () => true;\n        return stat;\n    }\n    catch (err) {\n        if (!options.throwErrorOnBrokenSymlinks) {\n            return lstat;\n        }\n        throw err;\n    }\n}\nexports.sync = sync;\nfunction async(path, options, callback) {\n    options.fs.lstat(path, (err0, lstat) => {\n        if (err0) {\n            return callback(err0, undefined);\n        }\n        if (!isFollowedSymlink(lstat, options)) {\n            return callback(null, lstat);\n        }\n        options.fs.stat(path, (err1, stat) => {\n            if (err1) {\n                return options.throwErrorOnBrokenSymlinks ? callback(err1) : callback(null, lstat);\n            }\n            stat.isSymbolicLink = () => true;\n            callback(null, stat);\n        });\n    });\n}\nexports.async = async;\n/**\n * Returns `true` for followed symlink.\n */\nfunction isFollowedSymlink(stat, options) {\n    return stat.isSymbolicLink() && options.followSymlinks;\n}\nexports.isFollowedSymlink = isFollowedSymlink;\n"]},"metadata":{},"sourceType":"script"}