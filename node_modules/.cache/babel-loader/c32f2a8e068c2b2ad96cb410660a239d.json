{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\ntslib_1.__exportStar(require(\"../2.9/node\"), exports);\n\nconst ts = require(\"typescript\");\n\nfunction isOptionalTypeNode(node) {\n  return node.kind === ts.SyntaxKind.OptionalType;\n}\n\nexports.isOptionalTypeNode = isOptionalTypeNode;\n\nfunction isRestTypeNode(node) {\n  return node.kind === ts.SyntaxKind.RestType;\n}\n\nexports.isRestTypeNode = isRestTypeNode;\n\nfunction isSyntheticExpression(node) {\n  return node.kind === ts.SyntaxKind.SyntheticExpression;\n}\n\nexports.isSyntheticExpression = isSyntheticExpression;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/tsutils/typeguard/3.0/node.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","__exportStar","ts","isOptionalTypeNode","node","kind","SyntaxKind","OptionalType","isRestTypeNode","RestType","isSyntheticExpression","SyntheticExpression"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACAD,OAAO,CAACE,YAAR,CAAqBD,OAAO,CAAC,aAAD,CAA5B,EAA6CH,OAA7C;;AACA,MAAMK,EAAE,GAAGF,OAAO,CAAC,YAAD,CAAlB;;AACA,SAASG,kBAAT,CAA4BC,IAA5B,EAAkC;AAC9B,SAAOA,IAAI,CAACC,IAAL,KAAcH,EAAE,CAACI,UAAH,CAAcC,YAAnC;AACH;;AACDV,OAAO,CAACM,kBAAR,GAA6BA,kBAA7B;;AACA,SAASK,cAAT,CAAwBJ,IAAxB,EAA8B;AAC1B,SAAOA,IAAI,CAACC,IAAL,KAAcH,EAAE,CAACI,UAAH,CAAcG,QAAnC;AACH;;AACDZ,OAAO,CAACW,cAAR,GAAyBA,cAAzB;;AACA,SAASE,qBAAT,CAA+BN,IAA/B,EAAqC;AACjC,SAAOA,IAAI,CAACC,IAAL,KAAcH,EAAE,CAACI,UAAH,CAAcK,mBAAnC;AACH;;AACDd,OAAO,CAACa,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"../2.9/node\"), exports);\nconst ts = require(\"typescript\");\nfunction isOptionalTypeNode(node) {\n    return node.kind === ts.SyntaxKind.OptionalType;\n}\nexports.isOptionalTypeNode = isOptionalTypeNode;\nfunction isRestTypeNode(node) {\n    return node.kind === ts.SyntaxKind.RestType;\n}\nexports.isRestTypeNode = isRestTypeNode;\nfunction isSyntheticExpression(node) {\n    return node.kind === ts.SyntaxKind.SyntheticExpression;\n}\nexports.isSyntheticExpression = isSyntheticExpression;\n"]},"metadata":{},"sourceType":"script"}