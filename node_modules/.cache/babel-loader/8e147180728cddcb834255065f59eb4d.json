{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _icssUtils = require(\"icss-utils\");\n\nvar _loaderUtils = require(\"loader-utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst pluginName = 'postcss-icss-parser';\n\nfunction normalizeIcssImports(icssImports) {\n  return Object.keys(icssImports).reduce((accumulator, url) => {\n    const tokensMap = icssImports[url];\n    const tokens = Object.keys(tokensMap);\n\n    if (tokens.length === 0) {\n      return accumulator;\n    }\n\n    const normalizedUrl = (0, _loaderUtils.urlToRequest)(url);\n\n    if (!accumulator[normalizedUrl]) {\n      // eslint-disable-next-line no-param-reassign\n      accumulator[normalizedUrl] = tokensMap;\n    } else {\n      // eslint-disable-next-line no-param-reassign\n      accumulator[normalizedUrl] = { ...accumulator[normalizedUrl],\n        ...tokensMap\n      };\n    }\n\n    return accumulator;\n  }, {});\n}\n\nvar _default = _postcss.default.plugin(pluginName, () => function process(css, result) {\n  const importReplacements = Object.create(null);\n  const {\n    icssImports,\n    icssExports\n  } = (0, _icssUtils.extractICSS)(css);\n  const normalizedIcssImports = normalizeIcssImports(icssImports);\n  Object.keys(normalizedIcssImports).forEach((url, importIndex) => {\n    const importName = `___CSS_LOADER_ICSS_IMPORT_${importIndex}___`;\n    result.messages.push({\n      pluginName,\n      type: 'import',\n      value: {\n        type: 'icss-import',\n        importName,\n        url\n      }\n    });\n    const tokenMap = normalizedIcssImports[url];\n    const tokens = Object.keys(tokenMap);\n    tokens.forEach((token, replacementIndex) => {\n      const replacementName = `___CSS_LOADER_ICSS_IMPORT_${importIndex}_REPLACEMENT_${replacementIndex}___`;\n      const localName = tokenMap[token];\n      importReplacements[token] = replacementName;\n      result.messages.push({\n        pluginName,\n        type: 'replacer',\n        value: {\n          type: 'icss-import',\n          importName,\n          replacementName,\n          localName\n        }\n      });\n    });\n  });\n\n  if (Object.keys(importReplacements).length > 0) {\n    (0, _icssUtils.replaceSymbols)(css, importReplacements);\n  }\n\n  Object.keys(icssExports).forEach(name => {\n    const value = (0, _icssUtils.replaceValueSymbols)(icssExports[name], importReplacements);\n    result.messages.push({\n      pluginName,\n      type: 'export',\n      value: {\n        name,\n        value\n      }\n    });\n  });\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/css-loader/dist/plugins/postcss-icss-parser.js"],"names":["Object","defineProperty","exports","value","default","_postcss","_interopRequireDefault","require","_icssUtils","_loaderUtils","obj","__esModule","pluginName","normalizeIcssImports","icssImports","keys","reduce","accumulator","url","tokensMap","tokens","length","normalizedUrl","urlToRequest","_default","plugin","process","css","result","importReplacements","create","icssExports","extractICSS","normalizedIcssImports","forEach","importIndex","importName","messages","push","type","tokenMap","token","replacementIndex","replacementName","localName","replaceSymbols","name","replaceValueSymbols"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _icssUtils = require(\"icss-utils\");\n\nvar _loaderUtils = require(\"loader-utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst pluginName = 'postcss-icss-parser';\n\nfunction normalizeIcssImports(icssImports) {\n  return Object.keys(icssImports).reduce((accumulator, url) => {\n    const tokensMap = icssImports[url];\n    const tokens = Object.keys(tokensMap);\n\n    if (tokens.length === 0) {\n      return accumulator;\n    }\n\n    const normalizedUrl = (0, _loaderUtils.urlToRequest)(url);\n\n    if (!accumulator[normalizedUrl]) {\n      // eslint-disable-next-line no-param-reassign\n      accumulator[normalizedUrl] = tokensMap;\n    } else {\n      // eslint-disable-next-line no-param-reassign\n      accumulator[normalizedUrl] = { ...accumulator[normalizedUrl],\n        ...tokensMap\n      };\n    }\n\n    return accumulator;\n  }, {});\n}\n\nvar _default = _postcss.default.plugin(pluginName, () => function process(css, result) {\n  const importReplacements = Object.create(null);\n  const {\n    icssImports,\n    icssExports\n  } = (0, _icssUtils.extractICSS)(css);\n  const normalizedIcssImports = normalizeIcssImports(icssImports);\n  Object.keys(normalizedIcssImports).forEach((url, importIndex) => {\n    const importName = `___CSS_LOADER_ICSS_IMPORT_${importIndex}___`;\n    result.messages.push({\n      pluginName,\n      type: 'import',\n      value: {\n        type: 'icss-import',\n        importName,\n        url\n      }\n    });\n    const tokenMap = normalizedIcssImports[url];\n    const tokens = Object.keys(tokenMap);\n    tokens.forEach((token, replacementIndex) => {\n      const replacementName = `___CSS_LOADER_ICSS_IMPORT_${importIndex}_REPLACEMENT_${replacementIndex}___`;\n      const localName = tokenMap[token];\n      importReplacements[token] = replacementName;\n      result.messages.push({\n        pluginName,\n        type: 'replacer',\n        value: {\n          type: 'icss-import',\n          importName,\n          replacementName,\n          localName\n        }\n      });\n    });\n  });\n\n  if (Object.keys(importReplacements).length > 0) {\n    (0, _icssUtils.replaceSymbols)(css, importReplacements);\n  }\n\n  Object.keys(icssExports).forEach(name => {\n    const value = (0, _icssUtils.replaceValueSymbols)(icssExports[name], importReplacements);\n    result.messages.push({\n      pluginName,\n      type: 'export',\n      value: {\n        name,\n        value\n      }\n    });\n  });\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}