{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.deepMerge = exports.saveSnapshotFile = exports.ensureDirectoryExists = exports.escapeBacktickString = exports.unescape = exports.serialize = exports.getSnapshotData = exports.keyToTestName = exports.testNameToKey = exports.SNAPSHOT_VERSION_WARNING = exports.SNAPSHOT_GUIDE_LINK = exports.SNAPSHOT_VERSION = void 0;\n\nvar _fs = _interopRequireDefault(require('fs'));\n\nvar _path = _interopRequireDefault(require('path'));\n\nvar _mkdirp = _interopRequireDefault(require('mkdirp'));\n\nvar _naturalCompare = _interopRequireDefault(require('natural-compare'));\n\nvar _chalk = _interopRequireDefault(require('chalk'));\n\nvar _prettyFormat = _interopRequireDefault(require('pretty-format'));\n\nvar _plugins = require('./plugins');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\n\nvar jestWriteFile = global[Symbol.for('jest-native-write-file')] || _fs.default.writeFileSync;\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\n\nvar jestReadFile = global[Symbol.for('jest-native-read-file')] || _fs.default.readFileSync;\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\n\nvar jestExistsFile = global[Symbol.for('jest-native-exists-file')] || _fs.default.existsSync;\n\nconst SNAPSHOT_VERSION = '1';\nexports.SNAPSHOT_VERSION = SNAPSHOT_VERSION;\nconst SNAPSHOT_VERSION_REGEXP = /^\\/\\/ Jest Snapshot v(.+),/;\nconst SNAPSHOT_GUIDE_LINK = 'https://goo.gl/fbAQLP';\nexports.SNAPSHOT_GUIDE_LINK = SNAPSHOT_GUIDE_LINK;\n\nconst SNAPSHOT_VERSION_WARNING = _chalk.default.yellow(`${_chalk.default.bold('Warning')}: Before you upgrade snapshots, ` + `we recommend that you revert any local changes to tests or other code, ` + `to ensure that you do not store invalid state.`);\n\nexports.SNAPSHOT_VERSION_WARNING = SNAPSHOT_VERSION_WARNING;\n\nconst writeSnapshotVersion = () => `// Jest Snapshot v${SNAPSHOT_VERSION}, ${SNAPSHOT_GUIDE_LINK}`;\n\nconst validateSnapshotVersion = snapshotContents => {\n  const versionTest = SNAPSHOT_VERSION_REGEXP.exec(snapshotContents);\n  const version = versionTest && versionTest[1];\n\n  if (!version) {\n    return new Error(_chalk.default.red(`${_chalk.default.bold('Outdated snapshot')}: No snapshot header found. ` + `Jest 19 introduced versioned snapshots to ensure all developers ` + `on a project are using the same version of Jest. ` + `Please update all snapshots during this upgrade of Jest.\\n\\n`) + SNAPSHOT_VERSION_WARNING);\n  }\n\n  if (version < SNAPSHOT_VERSION) {\n    return new Error(_chalk.default.red(`${_chalk.default.red.bold('Outdated snapshot')}: The version of the snapshot ` + `file associated with this test is outdated. The snapshot file ` + `version ensures that all developers on a project are using ` + `the same version of Jest. ` + `Please update all snapshots during this upgrade of Jest.\\n\\n`) + `Expected: v${SNAPSHOT_VERSION}\\n` + `Received: v${version}\\n\\n` + SNAPSHOT_VERSION_WARNING);\n  }\n\n  if (version > SNAPSHOT_VERSION) {\n    return new Error(_chalk.default.red(`${_chalk.default.red.bold('Outdated Jest version')}: The version of this ` + `snapshot file indicates that this project is meant to be used ` + `with a newer version of Jest. The snapshot file version ensures ` + `that all developers on a project are using the same version of ` + `Jest. Please update your version of Jest and re-run the tests.\\n\\n`) + `Expected: v${SNAPSHOT_VERSION}\\n` + `Received: v${version}`);\n  }\n\n  return null;\n};\n\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nconst testNameToKey = (testName, count) => testName + ' ' + count;\n\nexports.testNameToKey = testNameToKey;\n\nconst keyToTestName = key => {\n  if (!/ \\d+$/.test(key)) {\n    throw new Error('Snapshot keys must end with a number.');\n  }\n\n  return key.replace(/ \\d+$/, '');\n};\n\nexports.keyToTestName = keyToTestName;\n\nconst getSnapshotData = (snapshotPath, update) => {\n  const data = Object.create(null);\n  let snapshotContents = '';\n  let dirty = false;\n\n  if (jestExistsFile(snapshotPath)) {\n    try {\n      snapshotContents = jestReadFile(snapshotPath, 'utf8'); // eslint-disable-next-line no-new-func\n\n      const populate = new Function('exports', snapshotContents);\n      populate(data);\n    } catch (e) {}\n  }\n\n  const validationResult = validateSnapshotVersion(snapshotContents);\n  const isInvalid = snapshotContents && validationResult;\n\n  if (update === 'none' && isInvalid) {\n    throw validationResult;\n  }\n\n  if ((update === 'all' || update === 'new') && isInvalid) {\n    dirty = true;\n  }\n\n  return {\n    data,\n    dirty\n  };\n}; // Extra line breaks at the beginning and at the end of the snapshot are useful\n// to make the content of the snapshot easier to read\n\n\nexports.getSnapshotData = getSnapshotData;\n\nconst addExtraLineBreaks = string => string.includes('\\n') ? `\\n${string}\\n` : string;\n\nconst serialize = data => addExtraLineBreaks(normalizeNewlines((0, _prettyFormat.default)(data, {\n  escapeRegex: true,\n  plugins: (0, _plugins.getSerializers)(),\n  printFunctionName: false\n}))); // unescape double quotes\n\n\nexports.serialize = serialize;\n\nconst unescape = data => data.replace(/\\\\(\")/g, '$1');\n\nexports.unescape = unescape;\n\nconst escapeBacktickString = str => str.replace(/`|\\\\|\\${/g, '\\\\$&');\n\nexports.escapeBacktickString = escapeBacktickString;\n\nconst printBacktickString = str => '`' + escapeBacktickString(str) + '`';\n\nconst ensureDirectoryExists = filePath => {\n  try {\n    _mkdirp.default.sync(_path.default.join(_path.default.dirname(filePath)), '777');\n  } catch (e) {}\n};\n\nexports.ensureDirectoryExists = ensureDirectoryExists;\n\nconst normalizeNewlines = string => string.replace(/\\r\\n|\\r/g, '\\n');\n\nconst saveSnapshotFile = (snapshotData, snapshotPath) => {\n  const snapshots = Object.keys(snapshotData).sort(_naturalCompare.default).map(key => 'exports[' + printBacktickString(key) + '] = ' + printBacktickString(normalizeNewlines(snapshotData[key])) + ';');\n  ensureDirectoryExists(snapshotPath);\n  jestWriteFile(snapshotPath, writeSnapshotVersion() + '\\n\\n' + snapshots.join('\\n\\n') + '\\n');\n};\n\nexports.saveSnapshotFile = saveSnapshotFile;\n\nconst deepMergeArray = (target, source) => {\n  const mergedOutput = Array.from(target);\n  source.forEach((sourceElement, index) => {\n    const targetElement = mergedOutput[index];\n\n    if (Array.isArray(target[index])) {\n      mergedOutput[index] = deepMergeArray(target[index], sourceElement);\n    } else if (isObject(targetElement)) {\n      mergedOutput[index] = deepMerge(target[index], sourceElement);\n    } else {\n      // Source does not exist in target or target is primitive and cannot be deep merged\n      mergedOutput[index] = sourceElement;\n    }\n  });\n  return mergedOutput;\n};\n\nconst deepMerge = (target, source) => {\n  const mergedOutput = _objectSpread({}, target);\n\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isObject(source[key]) && !source[key].$$typeof) {\n        if (!(key in target)) Object.assign(mergedOutput, {\n          [key]: source[key]\n        });else mergedOutput[key] = deepMerge(target[key], source[key]);\n      } else if (Array.isArray(source[key])) {\n        mergedOutput[key] = deepMergeArray(target[key], source[key]);\n      } else {\n        Object.assign(mergedOutput, {\n          [key]: source[key]\n        });\n      }\n    });\n  }\n\n  return mergedOutput;\n};\n\nexports.deepMerge = deepMerge;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-snapshot/build/utils.js"],"names":["Object","defineProperty","exports","value","deepMerge","saveSnapshotFile","ensureDirectoryExists","escapeBacktickString","unescape","serialize","getSnapshotData","keyToTestName","testNameToKey","SNAPSHOT_VERSION_WARNING","SNAPSHOT_GUIDE_LINK","SNAPSHOT_VERSION","_fs","_interopRequireDefault","require","_path","_mkdirp","_naturalCompare","_chalk","_prettyFormat","_plugins","obj","__esModule","default","Symbol","global","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","configurable","writable","jestWriteFile","for","writeFileSync","jestReadFile","readFileSync","jestExistsFile","existsSync","SNAPSHOT_VERSION_REGEXP","yellow","bold","writeSnapshotVersion","validateSnapshotVersion","snapshotContents","versionTest","exec","version","Error","red","isObject","item","Array","isArray","testName","count","test","replace","snapshotPath","update","data","create","dirty","populate","Function","e","validationResult","isInvalid","addExtraLineBreaks","string","includes","normalizeNewlines","escapeRegex","plugins","getSerializers","printFunctionName","str","printBacktickString","filePath","sync","join","dirname","snapshotData","snapshots","sort","map","deepMergeArray","mergedOutput","from","sourceElement","index","targetElement","$$typeof","assign"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.deepMerge = exports.saveSnapshotFile = exports.ensureDirectoryExists = exports.escapeBacktickString = exports.unescape = exports.serialize = exports.getSnapshotData = exports.keyToTestName = exports.testNameToKey = exports.SNAPSHOT_VERSION_WARNING = exports.SNAPSHOT_GUIDE_LINK = exports.SNAPSHOT_VERSION = void 0;\n\nvar _fs = _interopRequireDefault(require('fs'));\n\nvar _path = _interopRequireDefault(require('path'));\n\nvar _mkdirp = _interopRequireDefault(require('mkdirp'));\n\nvar _naturalCompare = _interopRequireDefault(require('natural-compare'));\n\nvar _chalk = _interopRequireDefault(require('chalk'));\n\nvar _prettyFormat = _interopRequireDefault(require('pretty-format'));\n\nvar _plugins = require('./plugins');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(\n        Object.getOwnPropertySymbols(source).filter(function(sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        })\n      );\n    }\n    ownKeys.forEach(function(key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\n\nvar jestWriteFile =\n  global[Symbol.for('jest-native-write-file')] || _fs.default.writeFileSync;\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\n\nvar jestReadFile =\n  global[Symbol.for('jest-native-read-file')] || _fs.default.readFileSync;\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\n\nvar jestExistsFile =\n  global[Symbol.for('jest-native-exists-file')] || _fs.default.existsSync;\n\nconst SNAPSHOT_VERSION = '1';\nexports.SNAPSHOT_VERSION = SNAPSHOT_VERSION;\nconst SNAPSHOT_VERSION_REGEXP = /^\\/\\/ Jest Snapshot v(.+),/;\nconst SNAPSHOT_GUIDE_LINK = 'https://goo.gl/fbAQLP';\nexports.SNAPSHOT_GUIDE_LINK = SNAPSHOT_GUIDE_LINK;\n\nconst SNAPSHOT_VERSION_WARNING = _chalk.default.yellow(\n  `${_chalk.default.bold('Warning')}: Before you upgrade snapshots, ` +\n    `we recommend that you revert any local changes to tests or other code, ` +\n    `to ensure that you do not store invalid state.`\n);\n\nexports.SNAPSHOT_VERSION_WARNING = SNAPSHOT_VERSION_WARNING;\n\nconst writeSnapshotVersion = () =>\n  `// Jest Snapshot v${SNAPSHOT_VERSION}, ${SNAPSHOT_GUIDE_LINK}`;\n\nconst validateSnapshotVersion = snapshotContents => {\n  const versionTest = SNAPSHOT_VERSION_REGEXP.exec(snapshotContents);\n  const version = versionTest && versionTest[1];\n\n  if (!version) {\n    return new Error(\n      _chalk.default.red(\n        `${_chalk.default.bold(\n          'Outdated snapshot'\n        )}: No snapshot header found. ` +\n          `Jest 19 introduced versioned snapshots to ensure all developers ` +\n          `on a project are using the same version of Jest. ` +\n          `Please update all snapshots during this upgrade of Jest.\\n\\n`\n      ) + SNAPSHOT_VERSION_WARNING\n    );\n  }\n\n  if (version < SNAPSHOT_VERSION) {\n    return new Error(\n      _chalk.default.red(\n        `${_chalk.default.red.bold(\n          'Outdated snapshot'\n        )}: The version of the snapshot ` +\n          `file associated with this test is outdated. The snapshot file ` +\n          `version ensures that all developers on a project are using ` +\n          `the same version of Jest. ` +\n          `Please update all snapshots during this upgrade of Jest.\\n\\n`\n      ) +\n        `Expected: v${SNAPSHOT_VERSION}\\n` +\n        `Received: v${version}\\n\\n` +\n        SNAPSHOT_VERSION_WARNING\n    );\n  }\n\n  if (version > SNAPSHOT_VERSION) {\n    return new Error(\n      _chalk.default.red(\n        `${_chalk.default.red.bold(\n          'Outdated Jest version'\n        )}: The version of this ` +\n          `snapshot file indicates that this project is meant to be used ` +\n          `with a newer version of Jest. The snapshot file version ensures ` +\n          `that all developers on a project are using the same version of ` +\n          `Jest. Please update your version of Jest and re-run the tests.\\n\\n`\n      ) +\n        `Expected: v${SNAPSHOT_VERSION}\\n` +\n        `Received: v${version}`\n    );\n  }\n\n  return null;\n};\n\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nconst testNameToKey = (testName, count) => testName + ' ' + count;\n\nexports.testNameToKey = testNameToKey;\n\nconst keyToTestName = key => {\n  if (!/ \\d+$/.test(key)) {\n    throw new Error('Snapshot keys must end with a number.');\n  }\n\n  return key.replace(/ \\d+$/, '');\n};\n\nexports.keyToTestName = keyToTestName;\n\nconst getSnapshotData = (snapshotPath, update) => {\n  const data = Object.create(null);\n  let snapshotContents = '';\n  let dirty = false;\n\n  if (jestExistsFile(snapshotPath)) {\n    try {\n      snapshotContents = jestReadFile(snapshotPath, 'utf8'); // eslint-disable-next-line no-new-func\n\n      const populate = new Function('exports', snapshotContents);\n      populate(data);\n    } catch (e) {}\n  }\n\n  const validationResult = validateSnapshotVersion(snapshotContents);\n  const isInvalid = snapshotContents && validationResult;\n\n  if (update === 'none' && isInvalid) {\n    throw validationResult;\n  }\n\n  if ((update === 'all' || update === 'new') && isInvalid) {\n    dirty = true;\n  }\n\n  return {\n    data,\n    dirty\n  };\n}; // Extra line breaks at the beginning and at the end of the snapshot are useful\n// to make the content of the snapshot easier to read\n\nexports.getSnapshotData = getSnapshotData;\n\nconst addExtraLineBreaks = string =>\n  string.includes('\\n') ? `\\n${string}\\n` : string;\n\nconst serialize = data =>\n  addExtraLineBreaks(\n    normalizeNewlines(\n      (0, _prettyFormat.default)(data, {\n        escapeRegex: true,\n        plugins: (0, _plugins.getSerializers)(),\n        printFunctionName: false\n      })\n    )\n  ); // unescape double quotes\n\nexports.serialize = serialize;\n\nconst unescape = data => data.replace(/\\\\(\")/g, '$1');\n\nexports.unescape = unescape;\n\nconst escapeBacktickString = str => str.replace(/`|\\\\|\\${/g, '\\\\$&');\n\nexports.escapeBacktickString = escapeBacktickString;\n\nconst printBacktickString = str => '`' + escapeBacktickString(str) + '`';\n\nconst ensureDirectoryExists = filePath => {\n  try {\n    _mkdirp.default.sync(\n      _path.default.join(_path.default.dirname(filePath)),\n      '777'\n    );\n  } catch (e) {}\n};\n\nexports.ensureDirectoryExists = ensureDirectoryExists;\n\nconst normalizeNewlines = string => string.replace(/\\r\\n|\\r/g, '\\n');\n\nconst saveSnapshotFile = (snapshotData, snapshotPath) => {\n  const snapshots = Object.keys(snapshotData)\n    .sort(_naturalCompare.default)\n    .map(\n      key =>\n        'exports[' +\n        printBacktickString(key) +\n        '] = ' +\n        printBacktickString(normalizeNewlines(snapshotData[key])) +\n        ';'\n    );\n  ensureDirectoryExists(snapshotPath);\n  jestWriteFile(\n    snapshotPath,\n    writeSnapshotVersion() + '\\n\\n' + snapshots.join('\\n\\n') + '\\n'\n  );\n};\n\nexports.saveSnapshotFile = saveSnapshotFile;\n\nconst deepMergeArray = (target, source) => {\n  const mergedOutput = Array.from(target);\n  source.forEach((sourceElement, index) => {\n    const targetElement = mergedOutput[index];\n\n    if (Array.isArray(target[index])) {\n      mergedOutput[index] = deepMergeArray(target[index], sourceElement);\n    } else if (isObject(targetElement)) {\n      mergedOutput[index] = deepMerge(target[index], sourceElement);\n    } else {\n      // Source does not exist in target or target is primitive and cannot be deep merged\n      mergedOutput[index] = sourceElement;\n    }\n  });\n  return mergedOutput;\n};\n\nconst deepMerge = (target, source) => {\n  const mergedOutput = _objectSpread({}, target);\n\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isObject(source[key]) && !source[key].$$typeof) {\n        if (!(key in target))\n          Object.assign(mergedOutput, {\n            [key]: source[key]\n          });\n        else mergedOutput[key] = deepMerge(target[key], source[key]);\n      } else if (Array.isArray(source[key])) {\n        mergedOutput[key] = deepMergeArray(target[key], source[key]);\n      } else {\n        Object.assign(mergedOutput, {\n          [key]: source[key]\n        });\n      }\n    });\n  }\n\n  return mergedOutput;\n};\n\nexports.deepMerge = deepMerge;\n"]},"metadata":{},"sourceType":"script"}