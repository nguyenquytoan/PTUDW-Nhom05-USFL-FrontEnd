{"ast":null,"code":"var entries = require('object.entries');\n\nvar path = require('path');\n\nvar fse = require('fs-extra');\n\nvar _ = require('lodash');\n\nconst emitCountMap = new Map();\nconst compilerHookMap = new WeakMap();\n\nconst standardizeFilePaths = file => {\n  file.name = file.name.replace(/\\\\/g, '/');\n  file.path = file.path.replace(/\\\\/g, '/');\n  return file;\n};\n\nfunction ManifestPlugin(opts) {\n  this.opts = _.assign({\n    publicPath: null,\n    basePath: '',\n    fileName: 'manifest.json',\n    transformExtensions: /^(gz|map)$/i,\n    writeToFileEmit: false,\n    seed: null,\n    filter: null,\n    map: null,\n    generate: null,\n    sort: null,\n    serialize: function (manifest) {\n      return JSON.stringify(manifest, null, 2);\n    }\n  }, opts || {});\n}\n\nManifestPlugin.getCompilerHooks = compiler => {\n  var hooks = compilerHookMap.get(compiler);\n\n  if (hooks === undefined) {\n    const SyncWaterfallHook = require('tapable').SyncWaterfallHook;\n\n    hooks = {\n      afterEmit: new SyncWaterfallHook(['manifest'])\n    };\n    compilerHookMap.set(compiler, hooks);\n  }\n\n  return hooks;\n};\n\nManifestPlugin.prototype.getFileType = function (str) {\n  str = str.replace(/\\?.*/, '');\n  var split = str.split('.');\n  var ext = split.pop();\n\n  if (this.opts.transformExtensions.test(ext)) {\n    ext = split.pop() + '.' + ext;\n  }\n\n  return ext;\n};\n\nManifestPlugin.prototype.apply = function (compiler) {\n  var moduleAssets = {};\n  var outputFolder = compiler.options.output.path;\n  var outputFile = path.resolve(outputFolder, this.opts.fileName);\n  var outputName = path.relative(outputFolder, outputFile);\n\n  var moduleAsset = function (module, file) {\n    if (module.userRequest) {\n      moduleAssets[file] = path.join(path.dirname(file), path.basename(module.userRequest));\n    }\n  };\n\n  var emit = function (compilation, compileCallback) {\n    const emitCount = emitCountMap.get(outputFile) - 1;\n    emitCountMap.set(outputFile, emitCount);\n    var seed = this.opts.seed || {};\n    var publicPath = this.opts.publicPath != null ? this.opts.publicPath : compilation.options.output.publicPath;\n    var stats = compilation.getStats().toJson({\n      // Disable data generation of everything we don't use\n      all: false,\n      // Add asset Information\n      assets: true,\n      // Show cached assets (setting this to `false` only shows emitted files)\n      cachedAssets: true\n    });\n    var files = compilation.chunks.reduce(function (files, chunk) {\n      return chunk.files.reduce(function (files, path) {\n        var name = chunk.name ? chunk.name : null;\n\n        if (name) {\n          name = name + '.' + this.getFileType(path);\n        } else {\n          // For nameless chunks, just map the files directly.\n          name = path;\n        } // Webpack 4: .isOnlyInitial()\n        // Webpack 3: .isInitial()\n        // Webpack 1/2: .initial\n\n\n        return files.concat({\n          path: path,\n          chunk: chunk,\n          name: name,\n          isInitial: chunk.isOnlyInitial ? chunk.isOnlyInitial() : chunk.isInitial ? chunk.isInitial() : chunk.initial,\n          isChunk: true,\n          isAsset: false,\n          isModuleAsset: false\n        });\n      }.bind(this), files);\n    }.bind(this), []); // module assets don't show up in assetsByChunkName.\n    // we're getting them this way;\n\n    files = stats.assets.reduce(function (files, asset) {\n      var name = moduleAssets[asset.name];\n\n      if (name) {\n        return files.concat({\n          path: asset.name,\n          name: name,\n          isInitial: false,\n          isChunk: false,\n          isAsset: true,\n          isModuleAsset: true\n        });\n      }\n\n      var isEntryAsset = asset.chunks.length > 0;\n\n      if (isEntryAsset) {\n        return files;\n      }\n\n      return files.concat({\n        path: asset.name,\n        name: asset.name,\n        isInitial: false,\n        isChunk: false,\n        isAsset: true,\n        isModuleAsset: false\n      });\n    }, files);\n    files = files.filter(function (file) {\n      // Don't add hot updates to manifest\n      var isUpdateChunk = file.path.indexOf('hot-update') >= 0; // Don't add manifest from another instance\n\n      var isManifest = emitCountMap.get(path.join(outputFolder, file.name)) !== undefined;\n      return !isUpdateChunk && !isManifest;\n    }); // Append optional basepath onto all references.\n    // This allows output path to be reflected in the manifest.\n\n    if (this.opts.basePath) {\n      files = files.map(function (file) {\n        file.name = this.opts.basePath + file.name;\n        return file;\n      }.bind(this));\n    }\n\n    if (publicPath) {\n      // Similar to basePath but only affects the value (similar to how\n      // output.publicPath turns require('foo/bar') into '/public/foo/bar', see\n      // https://github.com/webpack/docs/wiki/configuration#outputpublicpath\n      files = files.map(function (file) {\n        file.path = publicPath + file.path;\n        return file;\n      }.bind(this));\n    }\n\n    files = files.map(standardizeFilePaths);\n\n    if (this.opts.filter) {\n      files = files.filter(this.opts.filter);\n    }\n\n    if (this.opts.map) {\n      files = files.map(this.opts.map).map(standardizeFilePaths);\n    }\n\n    if (this.opts.sort) {\n      files = files.sort(this.opts.sort);\n    }\n\n    var manifest;\n\n    if (this.opts.generate) {\n      const entrypointsArray = Array.from(compilation.entrypoints instanceof Map ? // Webpack 4+\n      compilation.entrypoints.entries() : // Webpack 3\n      entries(compilation.entrypoints));\n      const entrypoints = entrypointsArray.reduce((e, [name, entrypoint]) => Object.assign(e, {\n        [name]: entrypoint.getFiles()\n      }), {});\n      manifest = this.opts.generate(seed, files, entrypoints);\n    } else {\n      manifest = files.reduce(function (manifest, file) {\n        manifest[file.name] = file.path;\n        return manifest;\n      }, seed);\n    }\n\n    const isLastEmit = emitCount === 0;\n\n    if (isLastEmit) {\n      var output = this.opts.serialize(manifest);\n      compilation.assets[outputName] = {\n        source: function () {\n          return output;\n        },\n        size: function () {\n          return output.length;\n        }\n      };\n\n      if (this.opts.writeToFileEmit) {\n        fse.outputFileSync(outputFile, output);\n      }\n    }\n\n    if (compiler.hooks) {\n      ManifestPlugin.getCompilerHooks(compiler).afterEmit.call(manifest);\n    } else {\n      compilation.applyPluginsAsync('webpack-manifest-plugin-after-emit', manifest, compileCallback);\n    }\n  }.bind(this);\n\n  function beforeRun(compiler, callback) {\n    let emitCount = emitCountMap.get(outputFile) || 0;\n    emitCountMap.set(outputFile, emitCount + 1);\n\n    if (callback) {\n      callback();\n    }\n  }\n\n  if (compiler.hooks) {\n    const pluginOptions = {\n      name: 'ManifestPlugin',\n      stage: Infinity\n    }; // Preserve exposure of custom hook in Webpack 4 for back compatability.\n    // Going forward, plugins should call `ManifestPlugin.getCompilerHooks(compiler)` directy.\n\n    if (!Object.isFrozen(compiler.hooks)) {\n      compiler.hooks.webpackManifestPluginAfterEmit = ManifestPlugin.getCompilerHooks(compiler).afterEmit;\n    }\n\n    compiler.hooks.compilation.tap(pluginOptions, function (compilation) {\n      compilation.hooks.moduleAsset.tap(pluginOptions, moduleAsset);\n    });\n    compiler.hooks.emit.tap(pluginOptions, emit);\n    compiler.hooks.run.tap(pluginOptions, beforeRun);\n    compiler.hooks.watchRun.tap(pluginOptions, beforeRun);\n  } else {\n    compiler.plugin('compilation', function (compilation) {\n      compilation.plugin('module-asset', moduleAsset);\n    });\n    compiler.plugin('emit', emit);\n    compiler.plugin('before-run', beforeRun);\n    compiler.plugin('watch-run', beforeRun);\n  }\n};\n\nmodule.exports = ManifestPlugin;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/webpack-manifest-plugin/lib/plugin.js"],"names":["entries","require","path","fse","_","emitCountMap","Map","compilerHookMap","WeakMap","standardizeFilePaths","file","name","replace","ManifestPlugin","opts","assign","publicPath","basePath","fileName","transformExtensions","writeToFileEmit","seed","filter","map","generate","sort","serialize","manifest","JSON","stringify","getCompilerHooks","compiler","hooks","get","undefined","SyncWaterfallHook","afterEmit","set","prototype","getFileType","str","split","ext","pop","test","apply","moduleAssets","outputFolder","options","output","outputFile","resolve","outputName","relative","moduleAsset","module","userRequest","join","dirname","basename","emit","compilation","compileCallback","emitCount","stats","getStats","toJson","all","assets","cachedAssets","files","chunks","reduce","chunk","concat","isInitial","isOnlyInitial","initial","isChunk","isAsset","isModuleAsset","bind","asset","isEntryAsset","length","isUpdateChunk","indexOf","isManifest","entrypointsArray","Array","from","entrypoints","e","entrypoint","Object","getFiles","isLastEmit","source","size","outputFileSync","call","applyPluginsAsync","beforeRun","callback","pluginOptions","stage","Infinity","isFrozen","webpackManifestPluginAfterEmit","tap","run","watchRun","plugin","exports"],"mappings":"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","sourcesContent":["var entries = require('object.entries');\nvar path = require('path');\nvar fse = require('fs-extra');\nvar _ = require('lodash');\n\nconst emitCountMap = new Map();\nconst compilerHookMap = new WeakMap();\n\nconst standardizeFilePaths = (file) => {\n  file.name = file.name.replace(/\\\\/g, '/');\n  file.path = file.path.replace(/\\\\/g, '/');\n  return file;\n};\n\nfunction ManifestPlugin(opts) {\n  this.opts = _.assign({\n    publicPath: null,\n    basePath: '',\n    fileName: 'manifest.json',\n    transformExtensions: /^(gz|map)$/i,\n    writeToFileEmit: false,\n    seed: null,\n    filter: null,\n    map: null,\n    generate: null,\n    sort: null,\n    serialize: function(manifest) {\n      return JSON.stringify(manifest, null, 2);\n    },\n  }, opts || {});\n}\n\nManifestPlugin.getCompilerHooks = (compiler) => {\n  var hooks = compilerHookMap.get(compiler);\n  if (hooks === undefined) {\n    const SyncWaterfallHook = require('tapable').SyncWaterfallHook;\n    hooks = {\n      afterEmit: new SyncWaterfallHook(['manifest'])\n    };\n    compilerHookMap.set(compiler, hooks);\n  }\n  return hooks;\n}\n\nManifestPlugin.prototype.getFileType = function(str) {\n  str = str.replace(/\\?.*/, '');\n  var split = str.split('.');\n  var ext = split.pop();\n  if (this.opts.transformExtensions.test(ext)) {\n    ext = split.pop() + '.' + ext;\n  }\n  return ext;\n};\n\nManifestPlugin.prototype.apply = function(compiler) {\n  var moduleAssets = {};\n\n  var outputFolder = compiler.options.output.path;\n  var outputFile = path.resolve(outputFolder, this.opts.fileName);\n  var outputName = path.relative(outputFolder, outputFile);\n\n  var moduleAsset = function (module, file) {\n    if (module.userRequest) {\n      moduleAssets[file] = path.join(\n        path.dirname(file),\n        path.basename(module.userRequest)\n      );\n    }\n  };\n\n\n  var emit = function(compilation, compileCallback) {\n    const emitCount = emitCountMap.get(outputFile) - 1\n    emitCountMap.set(outputFile, emitCount);\n\n    var seed = this.opts.seed || {};\n\n    var publicPath = this.opts.publicPath != null ? this.opts.publicPath : compilation.options.output.publicPath;\n    var stats = compilation.getStats().toJson({\n        // Disable data generation of everything we don't use\n        all: false,\n        // Add asset Information\n        assets: true,\n        // Show cached assets (setting this to `false` only shows emitted files)\n        cachedAssets: true,\n    });\n\n    var files = compilation.chunks.reduce(function(files, chunk) {\n      return chunk.files.reduce(function (files, path) {\n        var name = chunk.name ? chunk.name : null;\n\n        if (name) {\n          name = name + '.' + this.getFileType(path);\n        } else {\n          // For nameless chunks, just map the files directly.\n          name = path;\n        }\n\n        // Webpack 4: .isOnlyInitial()\n        // Webpack 3: .isInitial()\n        // Webpack 1/2: .initial\n        return files.concat({\n          path: path,\n          chunk: chunk,\n          name: name,\n          isInitial: chunk.isOnlyInitial ? chunk.isOnlyInitial() : (chunk.isInitial ? chunk.isInitial() : chunk.initial),\n          isChunk: true,\n          isAsset: false,\n          isModuleAsset: false\n        });\n      }.bind(this), files);\n    }.bind(this), []);\n\n    // module assets don't show up in assetsByChunkName.\n    // we're getting them this way;\n    files = stats.assets.reduce(function (files, asset) {\n      var name = moduleAssets[asset.name];\n      if (name) {\n        return files.concat({\n          path: asset.name,\n          name: name,\n          isInitial: false,\n          isChunk: false,\n          isAsset: true,\n          isModuleAsset: true\n        });\n      }\n\n      var isEntryAsset = asset.chunks.length > 0;\n      if (isEntryAsset) {\n        return files;\n      }\n\n      return files.concat({\n        path: asset.name,\n        name: asset.name,\n        isInitial: false,\n        isChunk: false,\n        isAsset: true,\n        isModuleAsset: false\n      });\n    }, files);\n\n    files = files.filter(function (file) {\n      // Don't add hot updates to manifest\n      var isUpdateChunk = file.path.indexOf('hot-update') >= 0;\n      // Don't add manifest from another instance\n      var isManifest = emitCountMap.get(path.join(outputFolder, file.name)) !== undefined;\n\n      return !isUpdateChunk && !isManifest;\n    });\n\n    // Append optional basepath onto all references.\n    // This allows output path to be reflected in the manifest.\n    if (this.opts.basePath) {\n      files = files.map(function(file) {\n        file.name = this.opts.basePath + file.name;\n        return file;\n      }.bind(this));\n    }\n\n    if (publicPath) {\n      // Similar to basePath but only affects the value (similar to how\n      // output.publicPath turns require('foo/bar') into '/public/foo/bar', see\n      // https://github.com/webpack/docs/wiki/configuration#outputpublicpath\n      files = files.map(function(file) {\n        file.path = publicPath + file.path;\n        return file;\n      }.bind(this));\n    }\n\n    files = files.map(standardizeFilePaths);\n\n    if (this.opts.filter) {\n      files = files.filter(this.opts.filter);\n    }\n\n    if (this.opts.map) {\n      files = files.map(this.opts.map).map(standardizeFilePaths);\n    }\n\n    if (this.opts.sort) {\n      files = files.sort(this.opts.sort);\n    }\n\n    var manifest;\n    if (this.opts.generate) {\n      const entrypointsArray = Array.from(\n        compilation.entrypoints instanceof Map ?\n          // Webpack 4+\n          compilation.entrypoints.entries() :\n          // Webpack 3\n          entries(compilation.entrypoints)\n      );\n      const entrypoints = entrypointsArray.reduce(\n        (e, [name, entrypoint]) => Object.assign(e, { [name]: entrypoint.getFiles() }),\n        {}\n      );\n      manifest = this.opts.generate(seed, files, entrypoints);\n    } else {\n      manifest = files.reduce(function (manifest, file) {\n        manifest[file.name] = file.path;\n        return manifest;\n      }, seed);\n    }\n\n    const isLastEmit = emitCount === 0\n    if (isLastEmit) {\n      var output = this.opts.serialize(manifest);\n\n      compilation.assets[outputName] = {\n        source: function() {\n          return output;\n        },\n        size: function() {\n          return output.length;\n        }\n      };\n\n      if (this.opts.writeToFileEmit) {\n        fse.outputFileSync(outputFile, output);\n      }\n    }\n\n    if (compiler.hooks) {\n      ManifestPlugin.getCompilerHooks(compiler).afterEmit.call(manifest);\n    } else {\n      compilation.applyPluginsAsync('webpack-manifest-plugin-after-emit', manifest, compileCallback);\n    }\n  }.bind(this);\n\n  function beforeRun (compiler, callback) {\n    let emitCount = emitCountMap.get(outputFile) || 0;\n    emitCountMap.set(outputFile, emitCount + 1);\n\n    if (callback) {\n      callback();\n    }\n  }\n\n  if (compiler.hooks) {\n    const pluginOptions = {\n      name: 'ManifestPlugin',\n      stage: Infinity\n    };\n\n    // Preserve exposure of custom hook in Webpack 4 for back compatability.\n    // Going forward, plugins should call `ManifestPlugin.getCompilerHooks(compiler)` directy.\n    if (!Object.isFrozen(compiler.hooks)) {\n      compiler.hooks.webpackManifestPluginAfterEmit = ManifestPlugin.getCompilerHooks(compiler).afterEmit;\n    }\n\n    compiler.hooks.compilation.tap(pluginOptions, function (compilation) {\n      compilation.hooks.moduleAsset.tap(pluginOptions, moduleAsset);\n    });\n    compiler.hooks.emit.tap(pluginOptions, emit);\n\n    compiler.hooks.run.tap(pluginOptions, beforeRun);\n    compiler.hooks.watchRun.tap(pluginOptions, beforeRun);\n  } else {\n    compiler.plugin('compilation', function (compilation) {\n      compilation.plugin('module-asset', moduleAsset);\n    });\n    compiler.plugin('emit', emit);\n\n    compiler.plugin('before-run', beforeRun);\n    compiler.plugin('watch-run', beforeRun);\n  }\n};\n\nmodule.exports = ManifestPlugin;\n"]},"metadata":{},"sourceType":"script"}