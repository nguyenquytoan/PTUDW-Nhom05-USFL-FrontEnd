{"ast":null,"code":"/*! http://mths.be/jsesc v0.5.0 by @mathias */\n;\n\n(function (root) {\n  // Detect free variables `exports`\n  var freeExports = typeof exports == 'object' && exports; // Detect free variable `module`\n\n  var freeModule = typeof module == 'object' && module && module.exports == freeExports && module; // Detect free variable `global`, from Node.js or Browserified code,\n  // and use it as `root`\n\n  var freeGlobal = typeof global == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n    root = freeGlobal;\n  }\n  /*--------------------------------------------------------------------------*/\n\n\n  var object = {};\n  var hasOwnProperty = object.hasOwnProperty;\n\n  var forOwn = function (object, callback) {\n    var key;\n\n    for (key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        callback(key, object[key]);\n      }\n    }\n  };\n\n  var extend = function (destination, source) {\n    if (!source) {\n      return destination;\n    }\n\n    forOwn(source, function (key, value) {\n      destination[key] = value;\n    });\n    return destination;\n  };\n\n  var forEach = function (array, callback) {\n    var length = array.length;\n    var index = -1;\n\n    while (++index < length) {\n      callback(array[index]);\n    }\n  };\n\n  var toString = object.toString;\n\n  var isArray = function (value) {\n    return toString.call(value) == '[object Array]';\n  };\n\n  var isObject = function (value) {\n    // This is a very simple check, but it’s good enough for what we need.\n    return toString.call(value) == '[object Object]';\n  };\n\n  var isString = function (value) {\n    return typeof value == 'string' || toString.call(value) == '[object String]';\n  };\n\n  var isFunction = function (value) {\n    // In a perfect world, the `typeof` check would be sufficient. However,\n    // in Chrome 1–12, `typeof /x/ == 'object'`, and in IE 6–8\n    // `typeof alert == 'object'` and similar for other host objects.\n    return typeof value == 'function' || toString.call(value) == '[object Function]';\n  };\n  /*--------------------------------------------------------------------------*/\n  // http://mathiasbynens.be/notes/javascript-escapes#single\n\n\n  var singleEscapes = {\n    '\"': '\\\\\"',\n    '\\'': '\\\\\\'',\n    '\\\\': '\\\\\\\\',\n    '\\b': '\\\\b',\n    '\\f': '\\\\f',\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t' // `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n    // '\\v': '\\\\x0B'\n\n  };\n  var regexSingleEscape = /[\"'\\\\\\b\\f\\n\\r\\t]/;\n  var regexDigit = /[0-9]/;\n  var regexWhitelist = /[ !#-&\\(-\\[\\]-~]/;\n\n  var jsesc = function (argument, options) {\n    // Handle options\n    var defaults = {\n      'escapeEverything': false,\n      'quotes': 'single',\n      'wrap': false,\n      'es6': false,\n      'json': false,\n      'compact': true,\n      'indent': '\\t',\n      '__indent__': ''\n    };\n    var json = options && options.json;\n\n    if (json) {\n      defaults.quotes = 'double';\n      defaults.wrap = true;\n    }\n\n    options = extend(defaults, options);\n\n    if (options.quotes != 'single' && options.quotes != 'double') {\n      options.quotes = 'single';\n    }\n\n    var quote = options.quotes == 'double' ? '\"' : '\\'';\n    var compact = options.compact;\n    var indent = options.indent;\n    var oldIndent;\n    var newLine = compact ? '' : '\\n';\n    var result;\n    var isEmpty = true;\n\n    if (json && argument && isFunction(argument.toJSON)) {\n      argument = argument.toJSON();\n    }\n\n    if (!isString(argument)) {\n      if (isArray(argument)) {\n        result = [];\n        options.wrap = true;\n        oldIndent = options.__indent__;\n        indent += oldIndent;\n        options.__indent__ = indent;\n        forEach(argument, function (value) {\n          isEmpty = false;\n          result.push((compact ? '' : indent) + jsesc(value, options));\n        });\n\n        if (isEmpty) {\n          return '[]';\n        }\n\n        return '[' + newLine + result.join(',' + newLine) + newLine + (compact ? '' : oldIndent) + ']';\n      } else if (!isObject(argument)) {\n        if (json) {\n          // For some values (e.g. `undefined`, `function` objects),\n          // `JSON.stringify(value)` returns `undefined` (which isn’t valid\n          // JSON) instead of `'null'`.\n          return JSON.stringify(argument) || 'null';\n        }\n\n        return String(argument);\n      } else {\n        // it’s an object\n        result = [];\n        options.wrap = true;\n        oldIndent = options.__indent__;\n        indent += oldIndent;\n        options.__indent__ = indent;\n        forOwn(argument, function (key, value) {\n          isEmpty = false;\n          result.push((compact ? '' : indent) + jsesc(key, options) + ':' + (compact ? '' : ' ') + jsesc(value, options));\n        });\n\n        if (isEmpty) {\n          return '{}';\n        }\n\n        return '{' + newLine + result.join(',' + newLine) + newLine + (compact ? '' : oldIndent) + '}';\n      }\n    }\n\n    var string = argument; // Loop over each code unit in the string and escape it\n\n    var index = -1;\n    var length = string.length;\n    var first;\n    var second;\n    var codePoint;\n    result = '';\n\n    while (++index < length) {\n      var character = string.charAt(index);\n\n      if (options.es6) {\n        first = string.charCodeAt(index);\n\n        if ( // check if it’s the start of a surrogate pair\n        first >= 0xD800 && first <= 0xDBFF && // high surrogate\n        length > index + 1 // there is a next code unit\n        ) {\n            second = string.charCodeAt(index + 1);\n\n            if (second >= 0xDC00 && second <= 0xDFFF) {\n              // low surrogate\n              // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n              codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n              result += '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n              index++;\n              continue;\n            }\n          }\n      }\n\n      if (!options.escapeEverything) {\n        if (regexWhitelist.test(character)) {\n          // It’s a printable ASCII character that is not `\"`, `'` or `\\`,\n          // so don’t escape it.\n          result += character;\n          continue;\n        }\n\n        if (character == '\"') {\n          result += quote == character ? '\\\\\"' : character;\n          continue;\n        }\n\n        if (character == '\\'') {\n          result += quote == character ? '\\\\\\'' : character;\n          continue;\n        }\n      }\n\n      if (character == '\\0' && !json && !regexDigit.test(string.charAt(index + 1))) {\n        result += '\\\\0';\n        continue;\n      }\n\n      if (regexSingleEscape.test(character)) {\n        // no need for a `hasOwnProperty` check here\n        result += singleEscapes[character];\n        continue;\n      }\n\n      var charCode = character.charCodeAt(0);\n      var hexadecimal = charCode.toString(16).toUpperCase();\n      var longhand = hexadecimal.length > 2 || json;\n      var escaped = '\\\\' + (longhand ? 'u' : 'x') + ('0000' + hexadecimal).slice(longhand ? -4 : -2);\n      result += escaped;\n      continue;\n    }\n\n    if (options.wrap) {\n      result = quote + result + quote;\n    }\n\n    return result;\n  };\n\n  jsesc.version = '0.5.0';\n  /*--------------------------------------------------------------------------*/\n  // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define(function () {\n      return jsesc;\n    });\n  } else if (freeExports && !freeExports.nodeType) {\n    if (freeModule) {\n      // in Node.js or RingoJS v0.8.0+\n      freeModule.exports = jsesc;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      freeExports.jsesc = jsesc;\n    }\n  } else {\n    // in Rhino or a web browser\n    root.jsesc = jsesc;\n  }\n})(this);","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/regjsparser/node_modules/jsesc/jsesc.js"],"names":["root","freeExports","exports","freeModule","module","freeGlobal","global","window","object","hasOwnProperty","forOwn","callback","key","call","extend","destination","source","value","forEach","array","length","index","toString","isArray","isObject","isString","isFunction","singleEscapes","regexSingleEscape","regexDigit","regexWhitelist","jsesc","argument","options","defaults","json","quotes","wrap","quote","compact","indent","oldIndent","newLine","result","isEmpty","toJSON","__indent__","push","join","JSON","stringify","String","string","first","second","codePoint","character","charAt","es6","charCodeAt","toUpperCase","escapeEverything","test","charCode","hexadecimal","longhand","escaped","slice","version","define","amd","nodeType"],"mappings":"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","sourcesContent":["/*! http://mths.be/jsesc v0.5.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar forOwn = function(object, callback) {\n\t\tvar key;\n\t\tfor (key in object) {\n\t\t\tif (hasOwnProperty.call(object, key)) {\n\t\t\t\tcallback(key, object[key]);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar extend = function(destination, source) {\n\t\tif (!source) {\n\t\t\treturn destination;\n\t\t}\n\t\tforOwn(source, function(key, value) {\n\t\t\tdestination[key] = value;\n\t\t});\n\t\treturn destination;\n\t};\n\n\tvar forEach = function(array, callback) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\twhile (++index < length) {\n\t\t\tcallback(array[index]);\n\t\t}\n\t};\n\n\tvar toString = object.toString;\n\tvar isArray = function(value) {\n\t\treturn toString.call(value) == '[object Array]';\n\t};\n\tvar isObject = function(value) {\n\t\t// This is a very simple check, but it’s good enough for what we need.\n\t\treturn toString.call(value) == '[object Object]';\n\t};\n\tvar isString = function(value) {\n\t\treturn typeof value == 'string' ||\n\t\t\ttoString.call(value) == '[object String]';\n\t};\n\tvar isFunction = function(value) {\n\t\t// In a perfect world, the `typeof` check would be sufficient. However,\n\t\t// in Chrome 1–12, `typeof /x/ == 'object'`, and in IE 6–8\n\t\t// `typeof alert == 'object'` and similar for other host objects.\n\t\treturn typeof value == 'function' ||\n\t\t\ttoString.call(value) == '[object Function]';\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// http://mathiasbynens.be/notes/javascript-escapes#single\n\tvar singleEscapes = {\n\t\t'\"': '\\\\\"',\n\t\t'\\'': '\\\\\\'',\n\t\t'\\\\': '\\\\\\\\',\n\t\t'\\b': '\\\\b',\n\t\t'\\f': '\\\\f',\n\t\t'\\n': '\\\\n',\n\t\t'\\r': '\\\\r',\n\t\t'\\t': '\\\\t'\n\t\t// `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n\t\t// '\\v': '\\\\x0B'\n\t};\n\tvar regexSingleEscape = /[\"'\\\\\\b\\f\\n\\r\\t]/;\n\n\tvar regexDigit = /[0-9]/;\n\tvar regexWhitelist = /[ !#-&\\(-\\[\\]-~]/;\n\n\tvar jsesc = function(argument, options) {\n\t\t// Handle options\n\t\tvar defaults = {\n\t\t\t'escapeEverything': false,\n\t\t\t'quotes': 'single',\n\t\t\t'wrap': false,\n\t\t\t'es6': false,\n\t\t\t'json': false,\n\t\t\t'compact': true,\n\t\t\t'indent': '\\t',\n\t\t\t'__indent__': ''\n\t\t};\n\t\tvar json = options && options.json;\n\t\tif (json) {\n\t\t\tdefaults.quotes = 'double';\n\t\t\tdefaults.wrap = true;\n\t\t}\n\t\toptions = extend(defaults, options);\n\t\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\t\toptions.quotes = 'single';\n\t\t}\n\t\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\t\tvar compact = options.compact;\n\t\tvar indent = options.indent;\n\t\tvar oldIndent;\n\t\tvar newLine = compact ? '' : '\\n';\n\t\tvar result;\n\t\tvar isEmpty = true;\n\n\t\tif (json && argument && isFunction(argument.toJSON)) {\n\t\t\targument = argument.toJSON();\n\t\t}\n\n\t\tif (!isString(argument)) {\n\t\t\tif (isArray(argument)) {\n\t\t\t\tresult = [];\n\t\t\t\toptions.wrap = true;\n\t\t\t\toldIndent = options.__indent__;\n\t\t\t\tindent += oldIndent;\n\t\t\t\toptions.__indent__ = indent;\n\t\t\t\tforEach(argument, function(value) {\n\t\t\t\t\tisEmpty = false;\n\t\t\t\t\tresult.push(\n\t\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\t\tjsesc(value, options)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tif (isEmpty) {\n\t\t\t\t\treturn '[]';\n\t\t\t\t}\n\t\t\t\treturn '[' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t\t(compact ? '' : oldIndent) + ']';\n\t\t\t} else if (!isObject(argument)) {\n\t\t\t\tif (json) {\n\t\t\t\t\t// For some values (e.g. `undefined`, `function` objects),\n\t\t\t\t\t// `JSON.stringify(value)` returns `undefined` (which isn’t valid\n\t\t\t\t\t// JSON) instead of `'null'`.\n\t\t\t\t\treturn JSON.stringify(argument) || 'null';\n\t\t\t\t}\n\t\t\t\treturn String(argument);\n\t\t\t} else { // it’s an object\n\t\t\t\tresult = [];\n\t\t\t\toptions.wrap = true;\n\t\t\t\toldIndent = options.__indent__;\n\t\t\t\tindent += oldIndent;\n\t\t\t\toptions.__indent__ = indent;\n\t\t\t\tforOwn(argument, function(key, value) {\n\t\t\t\t\tisEmpty = false;\n\t\t\t\t\tresult.push(\n\t\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\t\tjsesc(key, options) + ':' +\n\t\t\t\t\t\t(compact ? '' : ' ') +\n\t\t\t\t\t\tjsesc(value, options)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tif (isEmpty) {\n\t\t\t\t\treturn '{}';\n\t\t\t\t}\n\t\t\t\treturn '{' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t\t(compact ? '' : oldIndent) + '}';\n\t\t\t}\n\t\t}\n\n\t\tvar string = argument;\n\t\t// Loop over each code unit in the string and escape it\n\t\tvar index = -1;\n\t\tvar length = string.length;\n\t\tvar first;\n\t\tvar second;\n\t\tvar codePoint;\n\t\tresult = '';\n\t\twhile (++index < length) {\n\t\t\tvar character = string.charAt(index);\n\t\t\tif (options.es6) {\n\t\t\t\tfirst = string.charCodeAt(index);\n\t\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\t\tlength > index + 1 // there is a next code unit\n\t\t\t\t) {\n\t\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t\t// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\t\tcodePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t\t\tresult += '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!options.escapeEverything) {\n\t\t\t\tif (regexWhitelist.test(character)) {\n\t\t\t\t\t// It’s a printable ASCII character that is not `\"`, `'` or `\\`,\n\t\t\t\t\t// so don’t escape it.\n\t\t\t\t\tresult += character;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (character == '\"') {\n\t\t\t\t\tresult += quote == character ? '\\\\\"' : character;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (character == '\\'') {\n\t\t\t\t\tresult += quote == character ? '\\\\\\'' : character;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\n\t\t\t\tcharacter == '\\0' &&\n\t\t\t\t!json &&\n\t\t\t\t!regexDigit.test(string.charAt(index + 1))\n\t\t\t) {\n\t\t\t\tresult += '\\\\0';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (regexSingleEscape.test(character)) {\n\t\t\t\t// no need for a `hasOwnProperty` check here\n\t\t\t\tresult += singleEscapes[character];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar charCode = character.charCodeAt(0);\n\t\t\tvar hexadecimal = charCode.toString(16).toUpperCase();\n\t\t\tvar longhand = hexadecimal.length > 2 || json;\n\t\t\tvar escaped = '\\\\' + (longhand ? 'u' : 'x') +\n\t\t\t\t('0000' + hexadecimal).slice(longhand ? -4 : -2);\n\t\t\tresult += escaped;\n\t\t\tcontinue;\n\t\t}\n\t\tif (options.wrap) {\n\t\t\tresult = quote + result + quote;\n\t\t}\n\t\treturn result;\n\t};\n\n\tjsesc.version = '0.5.0';\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn jsesc;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = jsesc;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfreeExports.jsesc = jsesc;\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.jsesc = jsesc;\n\t}\n\n}(this));\n"]},"metadata":{},"sourceType":"script"}