{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function _jestWatcher() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _SnapshotInteractiveMode = _interopRequireDefault(require('../SnapshotInteractiveMode'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass UpdateSnapshotInteractivePlugin extends _jestWatcher().BaseWatchPlugin {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, '_snapshotInteractiveMode', new _SnapshotInteractiveMode.default(this._stdout));\n\n    _defineProperty(this, '_failedSnapshotTestAssertions', []);\n\n    _defineProperty(this, 'isInternal', true);\n  }\n\n  getFailedSnapshotTestAssertions(testResults) {\n    const failedTestPaths = [];\n\n    if (testResults.numFailedTests === 0 || !testResults.testResults) {\n      return failedTestPaths;\n    }\n\n    testResults.testResults.forEach(testResult => {\n      if (testResult.snapshot && testResult.snapshot.unmatched) {\n        testResult.testResults.forEach(result => {\n          if (result.status === 'failed') {\n            failedTestPaths.push({\n              fullName: result.fullName,\n              path: testResult.testFilePath\n            });\n          }\n        });\n      }\n    });\n    return failedTestPaths;\n  }\n\n  apply(hooks) {\n    hooks.onTestRunComplete(results => {\n      this._failedSnapshotTestAssertions = this.getFailedSnapshotTestAssertions(results);\n\n      if (this._snapshotInteractiveMode.isActive()) {\n        this._snapshotInteractiveMode.updateWithResults(results);\n      }\n    });\n  }\n\n  onKey(key) {\n    if (this._snapshotInteractiveMode.isActive()) {\n      this._snapshotInteractiveMode.put(key);\n    }\n  }\n\n  run(_globalConfig, updateConfigAndRun) {\n    if (this._failedSnapshotTestAssertions.length) {\n      return new Promise(res => {\n        this._snapshotInteractiveMode.run(this._failedSnapshotTestAssertions, (assertion, shouldUpdateSnapshot) => {\n          updateConfigAndRun({\n            mode: 'watch',\n            testNamePattern: assertion ? `^${assertion.fullName}$` : '',\n            testPathPattern: assertion ? assertion.path : '',\n            updateSnapshot: shouldUpdateSnapshot ? 'all' : 'none'\n          });\n\n          if (!this._snapshotInteractiveMode.isActive()) {\n            res();\n          }\n        });\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  getUsageInfo() {\n    if (this._failedSnapshotTestAssertions && this._failedSnapshotTestAssertions.length > 0) {\n      return {\n        key: 'i',\n        prompt: 'update failing snapshots interactively'\n      };\n    }\n\n    return null;\n  }\n\n}\n\nvar _default = UpdateSnapshotInteractivePlugin;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@jest/core/build/plugins/update_snapshots_interactive.js"],"names":["Object","defineProperty","exports","value","default","_jestWatcher","data","require","_SnapshotInteractiveMode","_interopRequireDefault","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","UpdateSnapshotInteractivePlugin","BaseWatchPlugin","constructor","args","_stdout","getFailedSnapshotTestAssertions","testResults","failedTestPaths","numFailedTests","forEach","testResult","snapshot","unmatched","result","status","push","fullName","path","testFilePath","apply","hooks","onTestRunComplete","results","_failedSnapshotTestAssertions","_snapshotInteractiveMode","isActive","updateWithResults","onKey","put","run","_globalConfig","updateConfigAndRun","length","Promise","res","assertion","shouldUpdateSnapshot","mode","testNamePattern","testPathPattern","updateSnapshot","resolve","getUsageInfo","prompt","_default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function _jestWatcher() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _SnapshotInteractiveMode = _interopRequireDefault(\n  require('../SnapshotInteractiveMode')\n);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass UpdateSnapshotInteractivePlugin extends _jestWatcher().BaseWatchPlugin {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(\n      this,\n      '_snapshotInteractiveMode',\n      new _SnapshotInteractiveMode.default(this._stdout)\n    );\n\n    _defineProperty(this, '_failedSnapshotTestAssertions', []);\n\n    _defineProperty(this, 'isInternal', true);\n  }\n\n  getFailedSnapshotTestAssertions(testResults) {\n    const failedTestPaths = [];\n\n    if (testResults.numFailedTests === 0 || !testResults.testResults) {\n      return failedTestPaths;\n    }\n\n    testResults.testResults.forEach(testResult => {\n      if (testResult.snapshot && testResult.snapshot.unmatched) {\n        testResult.testResults.forEach(result => {\n          if (result.status === 'failed') {\n            failedTestPaths.push({\n              fullName: result.fullName,\n              path: testResult.testFilePath\n            });\n          }\n        });\n      }\n    });\n    return failedTestPaths;\n  }\n\n  apply(hooks) {\n    hooks.onTestRunComplete(results => {\n      this._failedSnapshotTestAssertions = this.getFailedSnapshotTestAssertions(\n        results\n      );\n\n      if (this._snapshotInteractiveMode.isActive()) {\n        this._snapshotInteractiveMode.updateWithResults(results);\n      }\n    });\n  }\n\n  onKey(key) {\n    if (this._snapshotInteractiveMode.isActive()) {\n      this._snapshotInteractiveMode.put(key);\n    }\n  }\n\n  run(_globalConfig, updateConfigAndRun) {\n    if (this._failedSnapshotTestAssertions.length) {\n      return new Promise(res => {\n        this._snapshotInteractiveMode.run(\n          this._failedSnapshotTestAssertions,\n          (assertion, shouldUpdateSnapshot) => {\n            updateConfigAndRun({\n              mode: 'watch',\n              testNamePattern: assertion ? `^${assertion.fullName}$` : '',\n              testPathPattern: assertion ? assertion.path : '',\n              updateSnapshot: shouldUpdateSnapshot ? 'all' : 'none'\n            });\n\n            if (!this._snapshotInteractiveMode.isActive()) {\n              res();\n            }\n          }\n        );\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  getUsageInfo() {\n    if (\n      this._failedSnapshotTestAssertions &&\n      this._failedSnapshotTestAssertions.length > 0\n    ) {\n      return {\n        key: 'i',\n        prompt: 'update failing snapshots interactively'\n      };\n    }\n\n    return null;\n  }\n}\n\nvar _default = UpdateSnapshotInteractivePlugin;\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}