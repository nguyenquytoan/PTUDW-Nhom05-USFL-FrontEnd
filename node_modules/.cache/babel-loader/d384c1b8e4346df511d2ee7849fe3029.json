{"ast":null,"code":"'use strict';\n\nvar test = require('tape');\n\nvar defineProperties = require('define-properties');\n\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar functionsHaveNames = function f() {}.name === 'f';\n\nvar runTests = require('./tests');\n\ntest('native', function (t) {\n  t.equal(Object.assign.length, 2, 'Object.assign has a length of 2');\n  t.test('Function name', {\n    skip: !functionsHaveNames\n  }, function (st) {\n    st.equal(Object.assign.name, 'assign', 'Object.assign has name \"assign\"');\n    st.end();\n  });\n  t.test('enumerability', {\n    skip: !defineProperties.supportsDescriptors\n  }, function (et) {\n    et.equal(false, isEnumerable.call(Object, 'assign'), 'Object.assign is not enumerable');\n    et.end();\n  });\n\n  var supportsStrictMode = function () {\n    return typeof this === 'undefined';\n  }();\n\n  t.test('bad object value', {\n    skip: !supportsStrictMode\n  }, function (st) {\n    st['throws'](function () {\n      return Object.assign(undefined);\n    }, TypeError, 'undefined is not an object');\n    st['throws'](function () {\n      return Object.assign(null);\n    }, TypeError, 'null is not an object');\n    st.end();\n  }); // v8 in node 0.8 and 0.10 have non-enumerable string properties\n\n  var stringCharsAreEnumerable = isEnumerable.call('xy', 0);\n  t.test('when Object.assign is present and has pending exceptions', {\n    skip: !stringCharsAreEnumerable || !Object.preventExtensions\n  }, function (st) {\n    // Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n    // which is 72% slower than our shim, and Firefox 40's native implementation.\n    var thrower = Object.preventExtensions({\n      1: '2'\n    });\n    var error;\n\n    try {\n      Object.assign(thrower, 'xy');\n    } catch (e) {\n      error = e;\n    }\n\n    st.equal(error instanceof TypeError, true, 'error is TypeError');\n    st.equal(thrower[1], '2', 'thrower[1] === \"2\"');\n    st.end();\n  });\n  runTests(Object.assign, t);\n  t.end();\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/object.assign/test/native.js"],"names":["test","require","defineProperties","isEnumerable","Object","prototype","propertyIsEnumerable","functionsHaveNames","f","name","runTests","t","equal","assign","length","skip","st","end","supportsDescriptors","et","call","supportsStrictMode","undefined","TypeError","stringCharsAreEnumerable","preventExtensions","thrower","error","e"],"mappings":"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","sourcesContent":["'use strict';\n\nvar test = require('tape');\nvar defineProperties = require('define-properties');\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\nvar functionsHaveNames = function f() {}.name === 'f';\n\nvar runTests = require('./tests');\n\ntest('native', function (t) {\n\tt.equal(Object.assign.length, 2, 'Object.assign has a length of 2');\n\tt.test('Function name', { skip: !functionsHaveNames }, function (st) {\n\t\tst.equal(Object.assign.name, 'assign', 'Object.assign has name \"assign\"');\n\t\tst.end();\n\t});\n\n\tt.test('enumerability', { skip: !defineProperties.supportsDescriptors }, function (et) {\n\t\tet.equal(false, isEnumerable.call(Object, 'assign'), 'Object.assign is not enumerable');\n\t\tet.end();\n\t});\n\n\tvar supportsStrictMode = (function () { return typeof this === 'undefined'; }());\n\n\tt.test('bad object value', { skip: !supportsStrictMode }, function (st) {\n\t\tst['throws'](function () { return Object.assign(undefined); }, TypeError, 'undefined is not an object');\n\t\tst['throws'](function () { return Object.assign(null); }, TypeError, 'null is not an object');\n\t\tst.end();\n\t});\n\n\t// v8 in node 0.8 and 0.10 have non-enumerable string properties\n\tvar stringCharsAreEnumerable = isEnumerable.call('xy', 0);\n\tt.test('when Object.assign is present and has pending exceptions', { skip: !stringCharsAreEnumerable || !Object.preventExtensions }, function (st) {\n\t\t// Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t\t// which is 72% slower than our shim, and Firefox 40's native implementation.\n\t\tvar thrower = Object.preventExtensions({ 1: '2' });\n\t\tvar error;\n\t\ttry { Object.assign(thrower, 'xy'); } catch (e) { error = e; }\n\t\tst.equal(error instanceof TypeError, true, 'error is TypeError');\n\t\tst.equal(thrower[1], '2', 'thrower[1] === \"2\"');\n\n\t\tst.end();\n\t});\n\n\trunTests(Object.assign, t);\n\n\tt.end();\n});\n"]},"metadata":{},"sourceType":"script"}