{"ast":null,"code":"/**\n * @fileoverview Define the cursor which iterates tokens and comments.\n * @author Toru Nagashima\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst Cursor = require(\"./cursor\");\n\nconst utils = require(\"./utils\"); //------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\n/**\n * The cursor which iterates tokens and comments.\n */\n\n\nmodule.exports = class ForwardTokenCommentCursor extends Cursor {\n  /**\n   * Initializes this cursor.\n   * @param {Token[]} tokens The array of tokens.\n   * @param {Comment[]} comments The array of comments.\n   * @param {Object} indexMap The map from locations to indices in `tokens`.\n   * @param {number} startLoc The start location of the iteration range.\n   * @param {number} endLoc The end location of the iteration range.\n   */\n  constructor(tokens, comments, indexMap, startLoc, endLoc) {\n    super();\n    this.tokens = tokens;\n    this.comments = comments;\n    this.tokenIndex = utils.getFirstIndex(tokens, indexMap, startLoc);\n    this.commentIndex = utils.search(comments, startLoc);\n    this.border = endLoc;\n  }\n  /** @inheritdoc */\n\n\n  moveNext() {\n    const token = this.tokenIndex < this.tokens.length ? this.tokens[this.tokenIndex] : null;\n    const comment = this.commentIndex < this.comments.length ? this.comments[this.commentIndex] : null;\n\n    if (token && (!comment || token.range[0] < comment.range[0])) {\n      this.current = token;\n      this.tokenIndex += 1;\n    } else if (comment) {\n      this.current = comment;\n      this.commentIndex += 1;\n    } else {\n      this.current = null;\n    }\n\n    return Boolean(this.current) && (this.border === -1 || this.current.range[1] <= this.border);\n  }\n\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/lib/source-code/token-store/forward-token-comment-cursor.js"],"names":["Cursor","require","utils","module","exports","ForwardTokenCommentCursor","constructor","tokens","comments","indexMap","startLoc","endLoc","tokenIndex","getFirstIndex","commentIndex","search","border","moveNext","token","length","comment","range","current","Boolean"],"mappings":"AAAA;;;;AAIA,a,CAEA;AACA;AACA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB,C,CAEA;AACA;AACA;;AAEA;;;;;AAGAE,MAAM,CAACC,OAAP,GAAiB,MAAMC,yBAAN,SAAwCL,MAAxC,CAA+C;AAE5D;;;;;;;;AAQAM,EAAAA,WAAW,CAACC,MAAD,EAASC,QAAT,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuCC,MAAvC,EAA+C;AACtD;AACA,SAAKJ,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKI,UAAL,GAAkBV,KAAK,CAACW,aAAN,CAAoBN,MAApB,EAA4BE,QAA5B,EAAsCC,QAAtC,CAAlB;AACA,SAAKI,YAAL,GAAoBZ,KAAK,CAACa,MAAN,CAAaP,QAAb,EAAuBE,QAAvB,CAApB;AACA,SAAKM,MAAL,GAAcL,MAAd;AACH;AAED;;;AACAM,EAAAA,QAAQ,GAAG;AACP,UAAMC,KAAK,GAAI,KAAKN,UAAL,GAAkB,KAAKL,MAAL,CAAYY,MAA/B,GAAyC,KAAKZ,MAAL,CAAY,KAAKK,UAAjB,CAAzC,GAAwE,IAAtF;AACA,UAAMQ,OAAO,GAAI,KAAKN,YAAL,GAAoB,KAAKN,QAAL,CAAcW,MAAnC,GAA6C,KAAKX,QAAL,CAAc,KAAKM,YAAnB,CAA7C,GAAgF,IAAhG;;AAEA,QAAII,KAAK,KAAK,CAACE,OAAD,IAAYF,KAAK,CAACG,KAAN,CAAY,CAAZ,IAAiBD,OAAO,CAACC,KAAR,CAAc,CAAd,CAAlC,CAAT,EAA8D;AAC1D,WAAKC,OAAL,GAAeJ,KAAf;AACA,WAAKN,UAAL,IAAmB,CAAnB;AACH,KAHD,MAGO,IAAIQ,OAAJ,EAAa;AAChB,WAAKE,OAAL,GAAeF,OAAf;AACA,WAAKN,YAAL,IAAqB,CAArB;AACH,KAHM,MAGA;AACH,WAAKQ,OAAL,GAAe,IAAf;AACH;;AAED,WAAOC,OAAO,CAAC,KAAKD,OAAN,CAAP,KAA0B,KAAKN,MAAL,KAAgB,CAAC,CAAjB,IAAsB,KAAKM,OAAL,CAAaD,KAAb,CAAmB,CAAnB,KAAyB,KAAKL,MAA9E,CAAP;AACH;;AAnC2D,CAAhE","sourcesContent":["/**\n * @fileoverview Define the cursor which iterates tokens and comments.\n * @author Toru Nagashima\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst Cursor = require(\"./cursor\");\nconst utils = require(\"./utils\");\n\n//------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\n/**\n * The cursor which iterates tokens and comments.\n */\nmodule.exports = class ForwardTokenCommentCursor extends Cursor {\n\n    /**\n     * Initializes this cursor.\n     * @param {Token[]} tokens The array of tokens.\n     * @param {Comment[]} comments The array of comments.\n     * @param {Object} indexMap The map from locations to indices in `tokens`.\n     * @param {number} startLoc The start location of the iteration range.\n     * @param {number} endLoc The end location of the iteration range.\n     */\n    constructor(tokens, comments, indexMap, startLoc, endLoc) {\n        super();\n        this.tokens = tokens;\n        this.comments = comments;\n        this.tokenIndex = utils.getFirstIndex(tokens, indexMap, startLoc);\n        this.commentIndex = utils.search(comments, startLoc);\n        this.border = endLoc;\n    }\n\n    /** @inheritdoc */\n    moveNext() {\n        const token = (this.tokenIndex < this.tokens.length) ? this.tokens[this.tokenIndex] : null;\n        const comment = (this.commentIndex < this.comments.length) ? this.comments[this.commentIndex] : null;\n\n        if (token && (!comment || token.range[0] < comment.range[0])) {\n            this.current = token;\n            this.tokenIndex += 1;\n        } else if (comment) {\n            this.current = comment;\n            this.commentIndex += 1;\n        } else {\n            this.current = null;\n        }\n\n        return Boolean(this.current) && (this.border === -1 || this.current.range[1] <= this.border);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}