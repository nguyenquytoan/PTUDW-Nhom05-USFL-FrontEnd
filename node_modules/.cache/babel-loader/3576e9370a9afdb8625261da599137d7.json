{"ast":null,"code":"import fs from \"fs\";\nimport path from \"path\";\nimport ExtractTextPlugin from \"extract-text-webpack-plugin\";\nexport function readFileOrEmpty(path) {\n  try {\n    return fs.readFileSync(path, \"utf-8\");\n  } catch (e) {\n    return \"\";\n  }\n}\nexport const defaultConfig = {\n  entry: \"./index\",\n  module: {\n    rules: [{\n      test: /\\.css$/,\n      use: ExtractTextPlugin.extract({\n        fallback: {\n          loader: \"style-loader\"\n        },\n        use: {\n          loader: \"css-loader\"\n        }\n      })\n    }]\n  },\n  plugins: [],\n  context: __dirname,\n  output: {\n    filename: \"destination.js\",\n    path: path.resolve(__dirname, \"../\", \"js\", \"default-exports\")\n  }\n};\nexport function checkForWebpackErrors({\n  err,\n  stats,\n  done\n}) {\n  if (err) return done(err);\n  if (stats.hasErrors()) return done(new Error(stats.toString()));\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/optimize-css-assets-webpack-plugin/test/util/helpers.js"],"names":["fs","path","ExtractTextPlugin","readFileOrEmpty","readFileSync","e","defaultConfig","entry","module","rules","test","use","extract","fallback","loader","plugins","context","__dirname","output","filename","resolve","checkForWebpackErrors","err","stats","done","hasErrors","Error","toString"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AAEA,OAAO,SAASC,eAAT,CAAyBF,IAAzB,EAA+B;AACpC,MAAI;AACF,WAAOD,EAAE,CAACI,YAAH,CAAgBH,IAAhB,EAAsB,OAAtB,CAAP;AACD,GAFD,CAEE,OAAOI,CAAP,EAAU;AACV,WAAO,EAAP;AACD;AACF;AAED,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,KAAK,EAAE,SADoB;AAE3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,GAAG,EAAET,iBAAiB,CAACU,OAAlB,CAA0B;AAC7BC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SADmB;AAE7BH,QAAAA,GAAG,EAAE;AACHG,UAAAA,MAAM,EAAE;AADL;AAFwB,OAA1B;AAFP,KADK;AADD,GAFmB;AAe3BC,EAAAA,OAAO,EAAE,EAfkB;AAgB3BC,EAAAA,OAAO,EAAEC,SAhBkB;AAiB3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,gBADJ;AAENlB,IAAAA,IAAI,EAAEA,IAAI,CAACmB,OAAL,CAAaH,SAAb,EAAwB,KAAxB,EAA+B,IAA/B,EAAqC,iBAArC;AAFA;AAjBmB,CAAtB;AAuBP,OAAO,SAASI,qBAAT,CAA+B;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAA/B,EAAqD;AAC1D,MAAIF,GAAJ,EAAS,OAAOE,IAAI,CAACF,GAAD,CAAX;AACT,MAAIC,KAAK,CAACE,SAAN,EAAJ,EAAuB,OAAOD,IAAI,CAAC,IAAIE,KAAJ,CAAUH,KAAK,CAACI,QAAN,EAAV,CAAD,CAAX;AACxB","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport ExtractTextPlugin from \"extract-text-webpack-plugin\";\n\nexport function readFileOrEmpty(path) {\n  try {\n    return fs.readFileSync(path, \"utf-8\");\n  } catch (e) {\n    return \"\";\n  }\n}\n\nexport const defaultConfig = {\n  entry: \"./index\",\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: ExtractTextPlugin.extract({\n          fallback: { loader: \"style-loader\" },\n          use: {\n            loader: \"css-loader\"\n          }\n        })\n      }\n    ]\n  },\n  plugins: [],\n  context: __dirname,\n  output: {\n    filename: \"destination.js\",\n    path: path.resolve(__dirname, \"../\", \"js\", \"default-exports\")\n  }\n};\n\nexport function checkForWebpackErrors({ err, stats, done }) {\n  if (err) return done(err);\n  if (stats.hasErrors()) return done(new Error(stats.toString()));\n}\n"]},"metadata":{},"sourceType":"module"}