{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar assert = require('assert');\n\nvar util = require('../../');\n\nsuite('is');\ntest('util.isArray', function () {\n  assert.equal(true, util.isArray([]));\n  assert.equal(true, util.isArray(Array()));\n  assert.equal(true, util.isArray(new Array()));\n  assert.equal(true, util.isArray(new Array(5)));\n  assert.equal(true, util.isArray(new Array('with', 'some', 'entries')));\n  assert.equal(false, util.isArray({}));\n  assert.equal(false, util.isArray({\n    push: function () {}\n  }));\n  assert.equal(false, util.isArray(/regexp/));\n  assert.equal(false, util.isArray(new Error()));\n  assert.equal(false, util.isArray(Object.create(Array.prototype)));\n});\ntest('util.isRegExp', function () {\n  assert.equal(true, util.isRegExp(/regexp/));\n  assert.equal(true, util.isRegExp(RegExp()));\n  assert.equal(true, util.isRegExp(new RegExp()));\n  assert.equal(false, util.isRegExp({}));\n  assert.equal(false, util.isRegExp([]));\n  assert.equal(false, util.isRegExp(new Date()));\n  assert.equal(false, util.isRegExp(Object.create(RegExp.prototype)));\n});\ntest('util.isDate', function () {\n  assert.equal(true, util.isDate(new Date()));\n  assert.equal(true, util.isDate(new Date(0)));\n  assert.equal(false, util.isDate(Date()));\n  assert.equal(false, util.isDate({}));\n  assert.equal(false, util.isDate([]));\n  assert.equal(false, util.isDate(new Error()));\n  assert.equal(false, util.isDate(Object.create(Date.prototype)));\n});\ntest('util.isError', function () {\n  assert.equal(true, util.isError(new Error()));\n  assert.equal(true, util.isError(new TypeError()));\n  assert.equal(true, util.isError(new SyntaxError()));\n  assert.equal(false, util.isError({}));\n  assert.equal(false, util.isError({\n    name: 'Error',\n    message: ''\n  }));\n  assert.equal(false, util.isError([]));\n  assert.equal(true, util.isError(Object.create(Error.prototype)));\n});\ntest('util._extend', function () {\n  assert.deepEqual(util._extend({\n    a: 1\n  }), {\n    a: 1\n  });\n  assert.deepEqual(util._extend({\n    a: 1\n  }, []), {\n    a: 1\n  });\n  assert.deepEqual(util._extend({\n    a: 1\n  }, null), {\n    a: 1\n  });\n  assert.deepEqual(util._extend({\n    a: 1\n  }, true), {\n    a: 1\n  });\n  assert.deepEqual(util._extend({\n    a: 1\n  }, false), {\n    a: 1\n  });\n  assert.deepEqual(util._extend({\n    a: 1\n  }, {\n    b: 2\n  }), {\n    a: 1,\n    b: 2\n  });\n  assert.deepEqual(util._extend({\n    a: 1,\n    b: 2\n  }, {\n    b: 3\n  }), {\n    a: 1,\n    b: 3\n  });\n});\ntest('util.isBuffer', function () {\n  assert.equal(true, util.isBuffer(new Buffer(4)));\n  assert.equal(true, util.isBuffer(Buffer(4)));\n  assert.equal(true, util.isBuffer(new Buffer(4)));\n  assert.equal(true, util.isBuffer(new Buffer([1, 2, 3, 4])));\n  assert.equal(false, util.isBuffer({}));\n  assert.equal(false, util.isBuffer([]));\n  assert.equal(false, util.isBuffer(new Error()));\n  assert.equal(false, util.isRegExp(new Date()));\n  assert.equal(true, util.isBuffer(Object.create(Buffer.prototype)));\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/util/test/browser/is.js"],"names":["assert","require","util","suite","test","equal","isArray","Array","push","Error","Object","create","prototype","isRegExp","RegExp","Date","isDate","isError","TypeError","SyntaxError","name","message","deepEqual","_extend","a","b","isBuffer","Buffer"],"mappings":"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","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar assert = require('assert');\n\nvar util = require('../../');\n\nsuite('is');\n\ntest('util.isArray', function () {\n  assert.equal(true, util.isArray([]));\n  assert.equal(true, util.isArray(Array()));\n  assert.equal(true, util.isArray(new Array()));\n  assert.equal(true, util.isArray(new Array(5)));\n  assert.equal(true, util.isArray(new Array('with', 'some', 'entries')));\n  assert.equal(false, util.isArray({}));\n  assert.equal(false, util.isArray({ push: function() {} }));\n  assert.equal(false, util.isArray(/regexp/));\n  assert.equal(false, util.isArray(new Error()));\n  assert.equal(false, util.isArray(Object.create(Array.prototype)));\n});\n\ntest('util.isRegExp', function () {\n  assert.equal(true, util.isRegExp(/regexp/));\n  assert.equal(true, util.isRegExp(RegExp()));\n  assert.equal(true, util.isRegExp(new RegExp()));\n  assert.equal(false, util.isRegExp({}));\n  assert.equal(false, util.isRegExp([]));\n  assert.equal(false, util.isRegExp(new Date()));\n  assert.equal(false, util.isRegExp(Object.create(RegExp.prototype)));\n});\n\ntest('util.isDate', function () {\n  assert.equal(true, util.isDate(new Date()));\n  assert.equal(true, util.isDate(new Date(0)));\n  assert.equal(false, util.isDate(Date()));\n  assert.equal(false, util.isDate({}));\n  assert.equal(false, util.isDate([]));\n  assert.equal(false, util.isDate(new Error()));\n  assert.equal(false, util.isDate(Object.create(Date.prototype)));\n});\n\ntest('util.isError', function () {\n  assert.equal(true, util.isError(new Error()));\n  assert.equal(true, util.isError(new TypeError()));\n  assert.equal(true, util.isError(new SyntaxError()));\n  assert.equal(false, util.isError({}));\n  assert.equal(false, util.isError({ name: 'Error', message: '' }));\n  assert.equal(false, util.isError([]));\n  assert.equal(true, util.isError(Object.create(Error.prototype)));\n});\n\ntest('util._extend', function () {\n  assert.deepEqual(util._extend({a:1}),             {a:1});\n  assert.deepEqual(util._extend({a:1}, []),         {a:1});\n  assert.deepEqual(util._extend({a:1}, null),       {a:1});\n  assert.deepEqual(util._extend({a:1}, true),       {a:1});\n  assert.deepEqual(util._extend({a:1}, false),      {a:1});\n  assert.deepEqual(util._extend({a:1}, {b:2}),      {a:1, b:2});\n  assert.deepEqual(util._extend({a:1, b:2}, {b:3}), {a:1, b:3});\n});\n\ntest('util.isBuffer', function () {\n  assert.equal(true, util.isBuffer(new Buffer(4)));\n  assert.equal(true, util.isBuffer(Buffer(4)));\n  assert.equal(true, util.isBuffer(new Buffer(4)));\n  assert.equal(true, util.isBuffer(new Buffer([1, 2, 3, 4])));\n  assert.equal(false, util.isBuffer({}));\n  assert.equal(false, util.isBuffer([]));\n  assert.equal(false, util.isBuffer(new Error()));\n  assert.equal(false, util.isRegExp(new Date()));\n  assert.equal(true, util.isBuffer(Object.create(Buffer.prototype)));\n});\n"]},"metadata":{},"sourceType":"script"}