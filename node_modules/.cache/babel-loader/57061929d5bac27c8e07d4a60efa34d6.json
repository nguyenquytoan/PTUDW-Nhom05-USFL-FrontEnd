{"ast":null,"code":"var assert = require('assert');\n\nvar OffsetBuffer = require('../');\n\ndescribe('OffsetBuffer', function () {\n  var o;\n  beforeEach(function () {\n    o = new OffsetBuffer();\n  });\n  describe('.take()', function () {\n    it('should return empty buffer', function () {\n      var b = new Buffer('hello world');\n      o.push(b);\n      var r = o.take(0);\n      assert.equal(r.length, 0);\n      assert.equal(o.size, b.length);\n    });\n    it('should return the first buffer itself', function () {\n      var b = new Buffer('hello world');\n      o.push(b);\n      var r = o.take(b.length);\n      assert(r === b);\n      assert(o.isEmpty());\n    });\n    it('should return the slice of the buffer ', function () {\n      var b = new Buffer('hello world');\n      o.push(b);\n      assert.equal(o.take(5).toString(), 'hello');\n      assert.equal(o.take(1).toString(), ' ');\n      assert.equal(o.take(5).toString(), 'world');\n      assert(o.isEmpty());\n    });\n    it('should concat buffers', function () {\n      o.push(new Buffer('hello'));\n      o.push(new Buffer(' '));\n      o.push(new Buffer('world!'));\n      assert.equal(o.take(11).toString(), 'hello world');\n      assert.equal(o.take(1).toString(), '!');\n      assert(o.isEmpty());\n    });\n  });\n  describe('.skip', function () {\n    it('should skip bytes', function () {\n      o.push(new Buffer('hello '));\n      o.push(new Buffer('world'));\n      o.push(new Buffer(' oh gosh'));\n      assert.equal(o.take(2).toString(), 'he');\n      o.skip(1);\n      assert.equal(o.take(2).toString(), 'lo');\n      o.skip(1);\n      assert.equal(o.take(2).toString(), 'wo');\n      o.skip(4);\n      assert.equal(o.take(7).toString(), 'oh gosh');\n      assert(o.isEmpty());\n    });\n  });\n  describe('.peekUInt8', function () {\n    it('should return and not move by one byte', function () {\n      o.push(new Buffer([0x1, 0x2]));\n      assert.equal(o.peekUInt8(), 1);\n      assert.equal(o.readUInt8(), 1);\n      assert.equal(o.peekUInt8(), 2);\n      assert.equal(o.readUInt8(), 2);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.peekInt8', function () {\n    it('should return signed number', function () {\n      o.push(new Buffer([0x80]));\n      assert.equal(o.peekInt8(), -128);\n      assert.equal(o.readInt8(), -128);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readUInt8', function () {\n    it('should return and move by one byte', function () {\n      o.push(new Buffer([0x1, 0x2]));\n      o.push(new Buffer([0x3, 0x4]));\n      assert.equal(o.readUInt8(), 1);\n      assert.equal(o.readUInt8(), 2);\n      assert.equal(o.readUInt8(), 3);\n      assert.equal(o.readUInt8(), 4);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readInt8', function () {\n    it('should return signed number', function () {\n      o.push(new Buffer([0x8f, 0x7f]));\n      assert.equal(o.readInt8(), -113);\n      assert.equal(o.readInt8(), 127);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readUInt16LE', function () {\n    it('should return and move by two bytes', function () {\n      o.push(new Buffer([0x1, 0x2, 0x3]));\n      o.push(new Buffer([0x4, 0x5, 0x6]));\n      assert.equal(o.readUInt16LE(), 0x0201);\n      assert.equal(o.readUInt16LE(), 0x0403);\n      assert.equal(o.readUInt16LE(), 0x0605);\n      assert(o.isEmpty());\n    });\n    it('should return and move by two bytes (regression #1)', function () {\n      o.push(new Buffer([0x1]));\n      o.push(new Buffer([0x2, 0x3, 0x4]));\n      assert.equal(o.readUInt16LE(), 0x0201);\n      assert.equal(o.readUInt16LE(), 0x0403);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readInt16LE', function () {\n    it('should return signed number', function () {\n      o.push(new Buffer([0x23, 0x81]));\n      assert.equal(o.readInt16LE(), -32477);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readUInt24LE', function () {\n    it('should return and move by three bytes', function () {\n      o.push(new Buffer([0x1, 0x2, 0x3, 0x4, 0x5]));\n      o.push(new Buffer([0x6, 0x7]));\n      o.push(new Buffer([0x8, 0x9]));\n      assert.equal(o.readUInt24LE(), 0x030201);\n      assert.equal(o.readUInt24LE(), 0x060504);\n      assert.equal(o.readUInt24LE(), 0x090807);\n      assert(o.isEmpty());\n    });\n    it('should return and move by three bytes (regression #1)', function () {\n      o.push(new Buffer([0x1, 0x2]));\n      o.push(new Buffer([0x3]));\n      assert.equal(o.readUInt24LE(), 0x030201);\n      assert.equal(o.buffers.length, 0);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readInt24LE', function () {\n    it('should return signed number', function () {\n      o.push(new Buffer([0x23, 0x45, 0x81]));\n      assert.equal(o.readInt24LE(), -8305373);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readUInt32LE', function () {\n    it('should return and move by four bytes', function () {\n      o.push(new Buffer([0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7]));\n      o.push(new Buffer([0x8, 0x9, 0xa]));\n      o.push(new Buffer([0xb, 0xc, 0xd]));\n      o.push(new Buffer([0xe, 0xf, 0x10]));\n      assert.equal(o.readUInt32LE(), 0x04030201);\n      assert.equal(o.readUInt32LE(), 0x08070605);\n      assert.equal(o.readUInt32LE(), 0x0c0b0a09);\n      assert.equal(o.readUInt32LE(), 0x100f0e0d);\n      assert(o.isEmpty());\n    });\n    it('should return and move by four bytes (regression #1)', function () {\n      o.push(new Buffer([0x1, 0x2, 0x3]));\n      o.push(new Buffer([0x4]));\n      assert.equal(o.readUInt32LE(), 0x04030201);\n      assert.equal(o.buffers.length, 0);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readInt32LE', function () {\n    it('should return signed number', function () {\n      o.push(new Buffer([0xff, 0xff, 0xff, 0xff]));\n      assert.equal(o.readInt32LE(), -1);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readUInt16BE', function () {\n    it('should return and move by two bytes', function () {\n      o.push(new Buffer([0x1, 0x2, 0x3]));\n      o.push(new Buffer([0x4, 0x5, 0x6]));\n      assert.equal(o.readUInt16BE(), 0x0102);\n      assert.equal(o.readUInt16BE(), 0x0304);\n      assert.equal(o.readUInt16BE(), 0x0506);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readInt16BE', function () {\n    it('should return signed number', function () {\n      o.push(new Buffer([0x81, 0x23]));\n      assert.equal(o.readInt16BE(), -32477);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readUInt24BE', function () {\n    it('should return and move by three bytes', function () {\n      o.push(new Buffer([0x1, 0x2, 0x3, 0x4, 0x5]));\n      o.push(new Buffer([0x6, 0x7]));\n      o.push(new Buffer([0x8, 0x9]));\n      assert.equal(o.readUInt24BE(), 0x010203);\n      assert.equal(o.readUInt24BE(), 0x040506);\n      assert.equal(o.readUInt24BE(), 0x070809);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readInt24BE', function () {\n    it('should return signed number', function () {\n      o.push(new Buffer([0x81, 0x45, 0x23]));\n      assert.equal(o.readInt24BE(), -8305373);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readUInt32BE', function () {\n    it('should return and move by four bytes', function () {\n      o.push(new Buffer([0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7]));\n      o.push(new Buffer([0x8, 0x9, 0xa]));\n      o.push(new Buffer([0xb, 0xc, 0xd]));\n      o.push(new Buffer([0xe, 0xf, 0x10]));\n      assert.equal(o.readUInt32BE(), 0x01020304);\n      assert.equal(o.readUInt32BE(), 0x05060708);\n      assert.equal(o.readUInt32BE(), 0x090a0b0c);\n      assert.equal(o.readUInt32BE(), 0x0d0e0f10);\n      assert(o.isEmpty());\n    });\n    it('should return positive values', function () {\n      o.push(new Buffer([0xff, 0xff, 0xff, 0xff]));\n      assert.equal(o.readUInt32BE(), 0xffffffff);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.readInt32BE', function () {\n    it('should return signed number', function () {\n      o.push(new Buffer([0xff, 0xff, 0xff, 0xff]));\n      assert.equal(o.readInt32BE(), -1);\n      assert(o.isEmpty());\n    });\n  });\n  describe('.has', function () {\n    it('should properly check the amount of the remaining bytes', function () {\n      o.push(new Buffer([1, 2, 3]));\n      assert(o.has(3));\n      assert.equal(o.readUInt8(), 0x01);\n      assert(!o.has(3));\n      assert(o.has(2));\n      assert.equal(o.readUInt16BE(), 0x0203);\n      assert(!o.has(1));\n    });\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/obuf/test/buffer-test.js"],"names":["assert","require","OffsetBuffer","describe","o","beforeEach","it","b","Buffer","push","r","take","equal","length","size","isEmpty","toString","skip","peekUInt8","readUInt8","peekInt8","readInt8","readUInt16LE","readInt16LE","readUInt24LE","buffers","readInt24LE","readUInt32LE","readInt32LE","readUInt16BE","readInt16BE","readUInt24BE","readInt24BE","readUInt32BE","readInt32BE","has"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,KAAD,CAA1B;;AAEAE,QAAQ,CAAC,cAAD,EAAiB,YAAW;AAClC,MAAIC,CAAJ;AACAC,EAAAA,UAAU,CAAC,YAAW;AACpBD,IAAAA,CAAC,GAAG,IAAIF,YAAJ,EAAJ;AACD,GAFS,CAAV;AAIAC,EAAAA,QAAQ,CAAC,SAAD,EAAY,YAAW;AAC7BG,IAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAW;AAC1C,UAAIC,CAAC,GAAG,IAAIC,MAAJ,CAAW,aAAX,CAAR;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAOF,CAAP;AACA,UAAIG,CAAC,GAAGN,CAAC,CAACO,IAAF,CAAO,CAAP,CAAR;AACAX,MAAAA,MAAM,CAACY,KAAP,CAAaF,CAAC,CAACG,MAAf,EAAuB,CAAvB;AACAb,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACU,IAAf,EAAqBP,CAAC,CAACM,MAAvB;AACD,KANC,CAAF;AAQAP,IAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAW;AACrD,UAAIC,CAAC,GAAG,IAAIC,MAAJ,CAAW,aAAX,CAAR;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAOF,CAAP;AACA,UAAIG,CAAC,GAAGN,CAAC,CAACO,IAAF,CAAOJ,CAAC,CAACM,MAAT,CAAR;AACAb,MAAAA,MAAM,CAACU,CAAC,KAAKH,CAAP,CAAN;AACAP,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KANC,CAAF;AAQAT,IAAAA,EAAE,CAAC,wCAAD,EAA2C,YAAW;AACtD,UAAIC,CAAC,GAAG,IAAIC,MAAJ,CAAW,aAAX,CAAR;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAOF,CAAP;AACAP,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACO,IAAF,CAAO,CAAP,EAAUK,QAAV,EAAb,EAAmC,OAAnC;AACAhB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACO,IAAF,CAAO,CAAP,EAAUK,QAAV,EAAb,EAAmC,GAAnC;AACAhB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACO,IAAF,CAAO,CAAP,EAAUK,QAAV,EAAb,EAAmC,OAAnC;AACAhB,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAPC,CAAF;AASAT,IAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAW;AACrCF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,OAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,GAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,QAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACO,IAAF,CAAO,EAAP,EAAWK,QAAX,EAAb,EAAoC,aAApC;AACAhB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACO,IAAF,CAAO,CAAP,EAAUK,QAAV,EAAb,EAAmC,GAAnC;AACAhB,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAPC,CAAF;AAQD,GAlCO,CAAR;AAoCAZ,EAAAA,QAAQ,CAAC,OAAD,EAAU,YAAW;AAC3BG,IAAAA,EAAE,CAAC,mBAAD,EAAsB,YAAW;AACjCF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,QAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,OAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,UAAX,CAAP;AAEAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACO,IAAF,CAAO,CAAP,EAAUK,QAAV,EAAb,EAAmC,IAAnC;AACAZ,MAAAA,CAAC,CAACa,IAAF,CAAO,CAAP;AACAjB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACO,IAAF,CAAO,CAAP,EAAUK,QAAV,EAAb,EAAmC,IAAnC;AACAZ,MAAAA,CAAC,CAACa,IAAF,CAAO,CAAP;AACAjB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACO,IAAF,CAAO,CAAP,EAAUK,QAAV,EAAb,EAAmC,IAAnC;AACAZ,MAAAA,CAAC,CAACa,IAAF,CAAO,CAAP;AACAjB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACO,IAAF,CAAO,CAAP,EAAUK,QAAV,EAAb,EAAmC,SAAnC;AAEAhB,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAdC,CAAF;AAeD,GAhBO,CAAR;AAkBAZ,EAAAA,QAAQ,CAAC,YAAD,EAAe,YAAW;AAChCG,IAAAA,EAAE,CAAC,wCAAD,EAA2C,YAAW;AACtDF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACc,SAAF,EAAb,EAA4B,CAA5B;AACAlB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACe,SAAF,EAAb,EAA4B,CAA5B;AACAnB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACc,SAAF,EAAb,EAA4B,CAA5B;AACAlB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACe,SAAF,EAAb,EAA4B,CAA5B;AACAnB,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAPC,CAAF;AAQD,GATO,CAAR;AAWAZ,EAAAA,QAAQ,CAAC,WAAD,EAAc,YAAW;AAC/BG,IAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAW;AAC3CF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,IAAF,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACgB,QAAF,EAAb,EAA2B,CAAC,GAA5B;AACApB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACiB,QAAF,EAAb,EAA2B,CAAC,GAA5B;AACArB,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KALC,CAAF;AAMD,GAPO,CAAR;AASAZ,EAAAA,QAAQ,CAAC,YAAD,EAAe,YAAW;AAChCG,IAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAW;AAClDF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACe,SAAF,EAAb,EAA4B,CAA5B;AACAnB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACe,SAAF,EAAb,EAA4B,CAA5B;AACAnB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACe,SAAF,EAAb,EAA4B,CAA5B;AACAnB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACe,SAAF,EAAb,EAA4B,CAA5B;AACAnB,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KARC,CAAF;AASD,GAVO,CAAR;AAYAZ,EAAAA,QAAQ,CAAC,WAAD,EAAc,YAAW;AAC/BG,IAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAW;AAC3CF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,IAAF,EAAQ,IAAR,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACiB,QAAF,EAAb,EAA2B,CAAC,GAA5B;AACArB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACiB,QAAF,EAAb,EAA2B,GAA3B;AACArB,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KALC,CAAF;AAMD,GAPO,CAAR;AASAZ,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAW;AACnCG,IAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAW;AACnDF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACkB,YAAF,EAAb,EAA+B,MAA/B;AACAtB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACkB,YAAF,EAAb,EAA+B,MAA/B;AACAtB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACkB,YAAF,EAAb,EAA+B,MAA/B;AACAtB,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAPC,CAAF;AASAT,IAAAA,EAAE,CAAC,qDAAD,EAAwD,YAAW;AACnEF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACkB,YAAF,EAAb,EAA+B,MAA/B;AACAtB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACkB,YAAF,EAAb,EAA+B,MAA/B;AACAtB,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KANC,CAAF;AAOD,GAjBO,CAAR;AAmBAZ,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAW;AAClCG,IAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAW;AAC3CF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,IAAF,EAAQ,IAAR,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACmB,WAAF,EAAb,EAA8B,CAAC,KAA/B;AACAvB,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAQAZ,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAW;AACnCG,IAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAW;AACrDF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACoB,YAAF,EAAb,EAA+B,QAA/B;AACAxB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACoB,YAAF,EAAb,EAA+B,QAA/B;AACAxB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACoB,YAAF,EAAb,EAA+B,QAA/B;AACAxB,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KARC,CAAF;AAUAT,IAAAA,EAAE,CAAC,uDAAD,EAA0D,YAAW;AACrEF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACoB,YAAF,EAAb,EAA+B,QAA/B;AACAxB,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACqB,OAAF,CAAUZ,MAAvB,EAA+B,CAA/B;AACAb,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KANC,CAAF;AAOD,GAlBO,CAAR;AAoBAZ,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAW;AAClCG,IAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAW;AAC3CF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACsB,WAAF,EAAb,EAA8B,CAAC,OAA/B;AACA1B,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAQAZ,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAW;AACnCG,IAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAW;AACpDF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,IAAZ,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACuB,YAAF,EAAb,EAA+B,UAA/B;AACA3B,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACuB,YAAF,EAAb,EAA+B,UAA/B;AACA3B,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACuB,YAAF,EAAb,EAA+B,UAA/B;AACA3B,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACuB,YAAF,EAAb,EAA+B,UAA/B;AACA3B,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAVC,CAAF;AAYAT,IAAAA,EAAE,CAAC,sDAAD,EAAyD,YAAW;AACpEF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACuB,YAAF,EAAb,EAA+B,UAA/B;AACA3B,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACqB,OAAF,CAAUZ,MAAvB,EAA+B,CAA/B;AACAb,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KANC,CAAF;AAOD,GApBO,CAAR;AAsBAZ,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAW;AAClCG,IAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAW;AAC3CF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACwB,WAAF,EAAb,EAA8B,CAAC,CAA/B;AACA5B,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAQAZ,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAW;AACnCG,IAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAW;AACnDF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACyB,YAAF,EAAb,EAA+B,MAA/B;AACA7B,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACyB,YAAF,EAAb,EAA+B,MAA/B;AACA7B,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACyB,YAAF,EAAb,EAA+B,MAA/B;AACA7B,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAPC,CAAF;AAQD,GATO,CAAR;AAWAZ,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAW;AAClCG,IAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAW;AAC3CF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,IAAF,EAAQ,IAAR,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAAC0B,WAAF,EAAb,EAA8B,CAAC,KAA/B;AACA9B,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAQAZ,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAW;AACnCG,IAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAW;AACrDF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAAC2B,YAAF,EAAb,EAA+B,QAA/B;AACA/B,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAAC2B,YAAF,EAAb,EAA+B,QAA/B;AACA/B,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAAC2B,YAAF,EAAb,EAA+B,QAA/B;AACA/B,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KARC,CAAF;AASD,GAVO,CAAR;AAYAZ,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAW;AAClCG,IAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAW;AAC3CF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAAC4B,WAAF,EAAb,EAA8B,CAAC,OAA/B;AACAhC,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAQAZ,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAW;AACnCG,IAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAW;AACpDF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAX,CAAP;AACAJ,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,GAAF,EAAO,GAAP,EAAY,IAAZ,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAAC6B,YAAF,EAAb,EAA+B,UAA/B;AACAjC,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAAC6B,YAAF,EAAb,EAA+B,UAA/B;AACAjC,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAAC6B,YAAF,EAAb,EAA+B,UAA/B;AACAjC,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAAC6B,YAAF,EAAb,EAA+B,UAA/B;AACAjC,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAVC,CAAF;AAYAT,IAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAW;AAC7CF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAAC6B,YAAF,EAAb,EAA+B,UAA/B;AACAjC,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAJC,CAAF;AAKD,GAlBO,CAAR;AAoBAZ,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAW;AAClCG,IAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAW;AAC3CF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAAC8B,WAAF,EAAb,EAA8B,CAAC,CAA/B;AACAlC,MAAAA,MAAM,CAACI,CAAC,CAACW,OAAF,EAAD,CAAN;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAQAZ,EAAAA,QAAQ,CAAC,MAAD,EAAS,YAAW;AAC1BG,IAAAA,EAAE,CAAC,yDAAD,EAA4D,YAAW;AACvEF,MAAAA,CAAC,CAACK,IAAF,CAAO,IAAID,MAAJ,CAAW,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAX,CAAP;AACAR,MAAAA,MAAM,CAACI,CAAC,CAAC+B,GAAF,CAAM,CAAN,CAAD,CAAN;AACAnC,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACe,SAAF,EAAb,EAA4B,IAA5B;AACAnB,MAAAA,MAAM,CAAC,CAACI,CAAC,CAAC+B,GAAF,CAAM,CAAN,CAAF,CAAN;AACAnC,MAAAA,MAAM,CAACI,CAAC,CAAC+B,GAAF,CAAM,CAAN,CAAD,CAAN;AACAnC,MAAAA,MAAM,CAACY,KAAP,CAAaR,CAAC,CAACyB,YAAF,EAAb,EAA+B,MAA/B;AACA7B,MAAAA,MAAM,CAAC,CAACI,CAAC,CAAC+B,GAAF,CAAM,CAAN,CAAF,CAAN;AACD,KARC,CAAF;AASD,GAVO,CAAR;AAWD,CAxQO,CAAR","sourcesContent":["var assert = require('assert');\nvar OffsetBuffer = require('../');\n\ndescribe('OffsetBuffer', function() {\n  var o;\n  beforeEach(function() {\n    o = new OffsetBuffer();\n  });\n\n  describe('.take()', function() {\n    it('should return empty buffer', function() {\n      var b = new Buffer('hello world');\n      o.push(b);\n      var r = o.take(0);\n      assert.equal(r.length, 0);\n      assert.equal(o.size, b.length);\n    });\n\n    it('should return the first buffer itself', function() {\n      var b = new Buffer('hello world');\n      o.push(b);\n      var r = o.take(b.length);\n      assert(r === b);\n      assert(o.isEmpty());\n    });\n\n    it('should return the slice of the buffer ', function() {\n      var b = new Buffer('hello world');\n      o.push(b);\n      assert.equal(o.take(5).toString(), 'hello');\n      assert.equal(o.take(1).toString(), ' ');\n      assert.equal(o.take(5).toString(), 'world');\n      assert(o.isEmpty());\n    });\n\n    it('should concat buffers', function() {\n      o.push(new Buffer('hello'));\n      o.push(new Buffer(' '));\n      o.push(new Buffer('world!'));\n      assert.equal(o.take(11).toString(), 'hello world');\n      assert.equal(o.take(1).toString(), '!');\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.skip', function() {\n    it('should skip bytes', function() {\n      o.push(new Buffer('hello '));\n      o.push(new Buffer('world'));\n      o.push(new Buffer(' oh gosh'));\n\n      assert.equal(o.take(2).toString(), 'he');\n      o.skip(1);\n      assert.equal(o.take(2).toString(), 'lo');\n      o.skip(1);\n      assert.equal(o.take(2).toString(), 'wo');\n      o.skip(4);\n      assert.equal(o.take(7).toString(), 'oh gosh');\n\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.peekUInt8', function() {\n    it('should return and not move by one byte', function() {\n      o.push(new Buffer([ 0x1, 0x2 ]));\n      assert.equal(o.peekUInt8(), 1);\n      assert.equal(o.readUInt8(), 1);\n      assert.equal(o.peekUInt8(), 2);\n      assert.equal(o.readUInt8(), 2);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.peekInt8', function() {\n    it('should return signed number', function() {\n      o.push(new Buffer([ 0x80 ]));\n      assert.equal(o.peekInt8(), -128);\n      assert.equal(o.readInt8(), -128);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readUInt8', function() {\n    it('should return and move by one byte', function() {\n      o.push(new Buffer([ 0x1, 0x2 ]));\n      o.push(new Buffer([ 0x3, 0x4 ]));\n      assert.equal(o.readUInt8(), 1);\n      assert.equal(o.readUInt8(), 2);\n      assert.equal(o.readUInt8(), 3);\n      assert.equal(o.readUInt8(), 4);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readInt8', function() {\n    it('should return signed number', function() {\n      o.push(new Buffer([ 0x8f, 0x7f ]));\n      assert.equal(o.readInt8(), -113);\n      assert.equal(o.readInt8(), 127);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readUInt16LE', function() {\n    it('should return and move by two bytes', function() {\n      o.push(new Buffer([ 0x1, 0x2, 0x3 ]));\n      o.push(new Buffer([ 0x4, 0x5, 0x6 ]));\n      assert.equal(o.readUInt16LE(), 0x0201);\n      assert.equal(o.readUInt16LE(), 0x0403);\n      assert.equal(o.readUInt16LE(), 0x0605);\n      assert(o.isEmpty());\n    });\n\n    it('should return and move by two bytes (regression #1)', function() {\n      o.push(new Buffer([ 0x1 ]));\n      o.push(new Buffer([ 0x2, 0x3, 0x4 ]));\n      assert.equal(o.readUInt16LE(), 0x0201);\n      assert.equal(o.readUInt16LE(), 0x0403);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readInt16LE', function() {\n    it('should return signed number', function() {\n      o.push(new Buffer([ 0x23, 0x81 ]));\n      assert.equal(o.readInt16LE(), -32477);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readUInt24LE', function() {\n    it('should return and move by three bytes', function() {\n      o.push(new Buffer([ 0x1, 0x2, 0x3, 0x4, 0x5 ]));\n      o.push(new Buffer([ 0x6, 0x7 ]));\n      o.push(new Buffer([ 0x8, 0x9 ]));\n      assert.equal(o.readUInt24LE(), 0x030201);\n      assert.equal(o.readUInt24LE(), 0x060504);\n      assert.equal(o.readUInt24LE(), 0x090807);\n      assert(o.isEmpty());\n    });\n\n    it('should return and move by three bytes (regression #1)', function() {\n      o.push(new Buffer([ 0x1, 0x2 ]));\n      o.push(new Buffer([ 0x3 ]));\n      assert.equal(o.readUInt24LE(), 0x030201);\n      assert.equal(o.buffers.length, 0);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readInt24LE', function() {\n    it('should return signed number', function() {\n      o.push(new Buffer([ 0x23, 0x45, 0x81 ]));\n      assert.equal(o.readInt24LE(), -8305373);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readUInt32LE', function() {\n    it('should return and move by four bytes', function() {\n      o.push(new Buffer([ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7 ]));\n      o.push(new Buffer([ 0x8, 0x9, 0xa ]));\n      o.push(new Buffer([ 0xb, 0xc, 0xd ]));\n      o.push(new Buffer([ 0xe, 0xf, 0x10 ]));\n      assert.equal(o.readUInt32LE(), 0x04030201);\n      assert.equal(o.readUInt32LE(), 0x08070605);\n      assert.equal(o.readUInt32LE(), 0x0c0b0a09);\n      assert.equal(o.readUInt32LE(), 0x100f0e0d);\n      assert(o.isEmpty());\n    });\n\n    it('should return and move by four bytes (regression #1)', function() {\n      o.push(new Buffer([ 0x1, 0x2, 0x3 ]));\n      o.push(new Buffer([ 0x4 ]));\n      assert.equal(o.readUInt32LE(), 0x04030201);\n      assert.equal(o.buffers.length, 0);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readInt32LE', function() {\n    it('should return signed number', function() {\n      o.push(new Buffer([ 0xff, 0xff, 0xff, 0xff ]));\n      assert.equal(o.readInt32LE(), -1);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readUInt16BE', function() {\n    it('should return and move by two bytes', function() {\n      o.push(new Buffer([ 0x1, 0x2, 0x3 ]));\n      o.push(new Buffer([ 0x4, 0x5, 0x6 ]));\n      assert.equal(o.readUInt16BE(), 0x0102);\n      assert.equal(o.readUInt16BE(), 0x0304);\n      assert.equal(o.readUInt16BE(), 0x0506);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readInt16BE', function() {\n    it('should return signed number', function() {\n      o.push(new Buffer([ 0x81, 0x23 ]));\n      assert.equal(o.readInt16BE(), -32477);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readUInt24BE', function() {\n    it('should return and move by three bytes', function() {\n      o.push(new Buffer([ 0x1, 0x2, 0x3, 0x4, 0x5 ]));\n      o.push(new Buffer([ 0x6, 0x7 ]));\n      o.push(new Buffer([ 0x8, 0x9 ]));\n      assert.equal(o.readUInt24BE(), 0x010203);\n      assert.equal(o.readUInt24BE(), 0x040506);\n      assert.equal(o.readUInt24BE(), 0x070809);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readInt24BE', function() {\n    it('should return signed number', function() {\n      o.push(new Buffer([ 0x81, 0x45, 0x23 ]));\n      assert.equal(o.readInt24BE(), -8305373);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readUInt32BE', function() {\n    it('should return and move by four bytes', function() {\n      o.push(new Buffer([ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7 ]));\n      o.push(new Buffer([ 0x8, 0x9, 0xa ]));\n      o.push(new Buffer([ 0xb, 0xc, 0xd ]));\n      o.push(new Buffer([ 0xe, 0xf, 0x10 ]));\n      assert.equal(o.readUInt32BE(), 0x01020304);\n      assert.equal(o.readUInt32BE(), 0x05060708);\n      assert.equal(o.readUInt32BE(), 0x090a0b0c);\n      assert.equal(o.readUInt32BE(), 0x0d0e0f10);\n      assert(o.isEmpty());\n    });\n\n    it('should return positive values', function() {\n      o.push(new Buffer([ 0xff, 0xff, 0xff, 0xff ]));\n      assert.equal(o.readUInt32BE(), 0xffffffff);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.readInt32BE', function() {\n    it('should return signed number', function() {\n      o.push(new Buffer([ 0xff, 0xff, 0xff, 0xff ]));\n      assert.equal(o.readInt32BE(), -1);\n      assert(o.isEmpty());\n    });\n  });\n\n  describe('.has', function() {\n    it('should properly check the amount of the remaining bytes', function() {\n      o.push(new Buffer([ 1, 2, 3 ]));\n      assert(o.has(3));\n      assert.equal(o.readUInt8(), 0x01);\n      assert(!o.has(3));\n      assert(o.has(2));\n      assert.equal(o.readUInt16BE(), 0x0203);\n      assert(!o.has(1));\n    });\n  });\n});\n"]},"metadata":{},"sourceType":"script"}