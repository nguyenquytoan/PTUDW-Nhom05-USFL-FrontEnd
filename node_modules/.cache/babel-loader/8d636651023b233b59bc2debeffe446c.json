{"ast":null,"code":"'use strict';\n\nvar path = require('path'),\n    fs = require('fs');\n\nvar getContextDirectory = require('./utility/get-context-directory'),\n    enhancedRelative = require('./utility/enhanced-relative');\n/**\n * Codec for relative paths with respect to the context directory.\n * @type {{name:string, decode: function, encode: function, root: function}}\n */\n\n\nmodule.exports = {\n  name: 'project-relative',\n  decode: decode,\n  encode: encode,\n  root: getContextDirectory\n};\n/**\n * Decode the given uri.\n * Any path with or without leading slash is tested against context directory.\n * @this {{options: object}} A loader or compilation\n * @param {string} uri A source uri to decode\n * @returns {boolean|string} False where unmatched else the decoded path\n */\n\nfunction decode(uri) {\n  /* jshint validthis:true */\n  var base = getContextDirectory.call(this),\n      absFile = path.normalize(path.join(base, uri)),\n      isValid = !!absFile && fs.existsSync(absFile) && fs.statSync(absFile).isFile();\n  return isValid && absFile;\n}\n/**\n * Encode the given file path.\n * @this {{options: object}} A loader or compilation\n * @param {string} absolute An absolute file path to encode\n * @returns {string} A uri\n */\n\n\nfunction encode(absolute) {\n  /* jshint validthis:true */\n  var base = getContextDirectory.call(this);\n\n  if (!base) {\n    throw new Error('Cannot locate the Webpack project directory');\n  } else {\n    return '/' + enhancedRelative(base, absolute);\n  }\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/adjust-sourcemap-loader/codec/project-relative.js"],"names":["path","require","fs","getContextDirectory","enhancedRelative","module","exports","name","decode","encode","root","uri","base","call","absFile","normalize","join","isValid","existsSync","statSync","isFile","absolute","Error"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAAA,IACIC,EAAE,GAAKD,OAAO,CAAC,IAAD,CADlB;;AAGA,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,iCAAD,CAAjC;AAAA,IACIG,gBAAgB,GAAMH,OAAO,CAAC,6BAAD,CADjC;AAGA;;;;;;AAIAI,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,IAAI,EAAI,kBADO;AAEfC,EAAAA,MAAM,EAAEA,MAFO;AAGfC,EAAAA,MAAM,EAAEA,MAHO;AAIfC,EAAAA,IAAI,EAAIP;AAJO,CAAjB;AAOA;;;;;;;;AAOA,SAASK,MAAT,CAAgBG,GAAhB,EAAqB;AACnB;AACA,MAAIC,IAAI,GAAMT,mBAAmB,CAACU,IAApB,CAAyB,IAAzB,CAAd;AAAA,MACIC,OAAO,GAAGd,IAAI,CAACe,SAAL,CAAef,IAAI,CAACgB,IAAL,CAAUJ,IAAV,EAAgBD,GAAhB,CAAf,CADd;AAAA,MAEIM,OAAO,GAAG,CAAC,CAACH,OAAF,IAAaZ,EAAE,CAACgB,UAAH,CAAcJ,OAAd,CAAb,IAAuCZ,EAAE,CAACiB,QAAH,CAAYL,OAAZ,EAAqBM,MAArB,EAFrD;AAGA,SAAOH,OAAO,IAAIH,OAAlB;AACD;AAED;;;;;;;;AAMA,SAASL,MAAT,CAAgBY,QAAhB,EAA0B;AACxB;AACA,MAAIT,IAAI,GAAGT,mBAAmB,CAACU,IAApB,CAAyB,IAAzB,CAAX;;AACA,MAAI,CAACD,IAAL,EAAW;AACT,UAAM,IAAIU,KAAJ,CAAU,6CAAV,CAAN;AACD,GAFD,MAGK;AACH,WAAO,MAAMlB,gBAAgB,CAACQ,IAAD,EAAOS,QAAP,CAA7B;AACD;AACF","sourcesContent":["'use strict';\n\nvar path = require('path'),\n    fs   = require('fs');\n\nvar getContextDirectory = require('./utility/get-context-directory'),\n    enhancedRelative    = require('./utility/enhanced-relative');\n\n/**\n * Codec for relative paths with respect to the context directory.\n * @type {{name:string, decode: function, encode: function, root: function}}\n */\nmodule.exports = {\n  name  : 'project-relative',\n  decode: decode,\n  encode: encode,\n  root  : getContextDirectory\n};\n\n/**\n * Decode the given uri.\n * Any path with or without leading slash is tested against context directory.\n * @this {{options: object}} A loader or compilation\n * @param {string} uri A source uri to decode\n * @returns {boolean|string} False where unmatched else the decoded path\n */\nfunction decode(uri) {\n  /* jshint validthis:true */\n  var base    = getContextDirectory.call(this),\n      absFile = path.normalize(path.join(base, uri)),\n      isValid = !!absFile && fs.existsSync(absFile) && fs.statSync(absFile).isFile();\n  return isValid && absFile;\n}\n\n/**\n * Encode the given file path.\n * @this {{options: object}} A loader or compilation\n * @param {string} absolute An absolute file path to encode\n * @returns {string} A uri\n */\nfunction encode(absolute) {\n  /* jshint validthis:true */\n  var base = getContextDirectory.call(this);\n  if (!base) {\n    throw new Error('Cannot locate the Webpack project directory');\n  }\n  else {\n    return '/' + enhancedRelative(base, absolute);\n  }\n}"]},"metadata":{},"sourceType":"script"}