{"ast":null,"code":"var path = require('path');\n\nvar test = require('tape');\n\nvar resolve = require('../');\n\ntest('foo', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  t.equal(resolve.sync('./foo', {\n    basedir: dir\n  }), path.join(dir, 'foo.js'));\n  t.equal(resolve.sync('./foo.js', {\n    basedir: dir\n  }), path.join(dir, 'foo.js'));\n  t.equal(resolve.sync('./foo.js', {\n    basedir: dir,\n    filename: path.join(dir, 'bar.js')\n  }), path.join(dir, 'foo.js'));\n  t.throws(function () {\n    resolve.sync('foo', {\n      basedir: dir\n    });\n  }); // Test that filename is reported as the \"from\" value when passed.\n\n  t.throws(function () {\n    resolve.sync('foo', {\n      basedir: dir,\n      filename: path.join(dir, 'bar.js')\n    });\n  }, {\n    name: 'Error',\n    message: \"Cannot find module 'foo' from '\" + path.join(dir, 'bar.js') + \"'\"\n  });\n  t.end();\n});\ntest('bar', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  t.equal(resolve.sync('foo', {\n    basedir: path.join(dir, 'bar')\n  }), path.join(dir, 'bar/node_modules/foo/index.js'));\n  t.end();\n});\ntest('baz', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  t.equal(resolve.sync('./baz', {\n    basedir: dir\n  }), path.join(dir, 'baz/quux.js'));\n  t.end();\n});\ntest('biz', function (t) {\n  var dir = path.join(__dirname, 'resolver/biz/node_modules');\n  t.equal(resolve.sync('./grux', {\n    basedir: dir\n  }), path.join(dir, 'grux/index.js'));\n  t.equal(resolve.sync('tiv', {\n    basedir: path.join(dir, 'grux')\n  }), path.join(dir, 'tiv/index.js'));\n  t.equal(resolve.sync('grux', {\n    basedir: path.join(dir, 'tiv')\n  }), path.join(dir, 'grux/index.js'));\n  t.end();\n});\ntest('normalize', function (t) {\n  var dir = path.join(__dirname, 'resolver/biz/node_modules/grux');\n  t.equal(resolve.sync('../grux', {\n    basedir: dir\n  }), path.join(dir, 'index.js'));\n  t.end();\n});\ntest('cup', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  t.equal(resolve.sync('./cup', {\n    basedir: dir,\n    extensions: ['.js', '.coffee']\n  }), path.join(dir, 'cup.coffee'));\n  t.equal(resolve.sync('./cup.coffee', {\n    basedir: dir\n  }), path.join(dir, 'cup.coffee'));\n  t.throws(function () {\n    resolve.sync('./cup', {\n      basedir: dir,\n      extensions: ['.js']\n    });\n  });\n  t.end();\n});\ntest('mug', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  t.equal(resolve.sync('./mug', {\n    basedir: dir\n  }), path.join(dir, 'mug.js'));\n  t.equal(resolve.sync('./mug', {\n    basedir: dir,\n    extensions: ['.coffee', '.js']\n  }), path.join(dir, 'mug.coffee'));\n  t.equal(resolve.sync('./mug', {\n    basedir: dir,\n    extensions: ['.js', '.coffee']\n  }), path.join(dir, 'mug.js'));\n  t.end();\n});\ntest('other path', function (t) {\n  var resolverDir = path.join(__dirname, 'resolver');\n  var dir = path.join(resolverDir, 'bar');\n  var otherDir = path.join(resolverDir, 'other_path');\n  t.equal(resolve.sync('root', {\n    basedir: dir,\n    paths: [otherDir]\n  }), path.join(resolverDir, 'other_path/root.js'));\n  t.equal(resolve.sync('lib/other-lib', {\n    basedir: dir,\n    paths: [otherDir]\n  }), path.join(resolverDir, 'other_path/lib/other-lib.js'));\n  t.throws(function () {\n    resolve.sync('root', {\n      basedir: dir\n    });\n  });\n  t.throws(function () {\n    resolve.sync('zzz', {\n      basedir: dir,\n      paths: [otherDir]\n    });\n  });\n  t.end();\n});\ntest('path iterator', function (t) {\n  var resolverDir = path.join(__dirname, 'resolver');\n\n  var exactIterator = function (x, start, getPackageCandidates, opts) {\n    return [path.join(resolverDir, x)];\n  };\n\n  t.equal(resolve.sync('baz', {\n    packageIterator: exactIterator\n  }), path.join(resolverDir, 'baz/quux.js'));\n  t.end();\n});\ntest('incorrect main', function (t) {\n  var resolverDir = path.join(__dirname, 'resolver');\n  var dir = path.join(resolverDir, 'incorrect_main');\n  t.equal(resolve.sync('./incorrect_main', {\n    basedir: resolverDir\n  }), path.join(dir, 'index.js'));\n  t.end();\n});\n\nvar stubStatSync = function stubStatSync(fn) {\n  var fs = require('fs');\n\n  var statSync = fs.statSync;\n\n  try {\n    fs.statSync = function () {\n      throw new EvalError('Unknown Error');\n    };\n\n    return fn();\n  } finally {\n    fs.statSync = statSync;\n  }\n};\n\ntest('#79 - re-throw non ENOENT errors from stat', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  stubStatSync(function () {\n    t.throws(function () {\n      resolve.sync('foo', {\n        basedir: dir\n      });\n    }, /Unknown Error/);\n  });\n  t.end();\n});\ntest('#52 - incorrectly resolves module-paths like \"./someFolder/\" when there is a file of the same name', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  t.equal(resolve.sync('./foo', {\n    basedir: path.join(dir, 'same_names')\n  }), path.join(dir, 'same_names/foo.js'));\n  t.equal(resolve.sync('./foo/', {\n    basedir: path.join(dir, 'same_names')\n  }), path.join(dir, 'same_names/foo/index.js'));\n  t.end();\n});\ntest('sync: #121 - treating an existing file as a dir when no basedir', function (t) {\n  var testFile = path.basename(__filename);\n  t.test('sanity check', function (st) {\n    st.equal(resolve.sync('./' + testFile), __filename, 'sanity check');\n    st.end();\n  });\n  t.test('with a fake directory', function (st) {\n    function run() {\n      return resolve.sync('./' + testFile + '/blah');\n    }\n\n    st.throws(run, 'throws an error');\n\n    try {\n      run();\n    } catch (e) {\n      st.equal(e.code, 'MODULE_NOT_FOUND', 'error code matches require.resolve');\n      st.equal(e.message, 'Cannot find module \\'./' + testFile + '/blah\\' from \\'' + __dirname + '\\'', 'can not find nonexistent module');\n    }\n\n    st.end();\n  });\n  t.end();\n});\ntest('sync dot main', function (t) {\n  var start = new Date();\n  t.equal(resolve.sync('./resolver/dot_main'), path.join(__dirname, 'resolver/dot_main/index.js'));\n  t.ok(new Date() - start < 50, 'resolve.sync timedout');\n  t.end();\n});\ntest('sync dot slash main', function (t) {\n  var start = new Date();\n  t.equal(resolve.sync('./resolver/dot_slash_main'), path.join(__dirname, 'resolver/dot_slash_main/index.js'));\n  t.ok(new Date() - start < 50, 'resolve.sync timedout');\n  t.end();\n});\ntest('not a directory', function (t) {\n  var path = './foo';\n\n  try {\n    resolve.sync(path, {\n      basedir: __filename\n    });\n    t.fail();\n  } catch (err) {\n    t.ok(err, 'a non-directory errors');\n    t.equal(err && err.message, 'Cannot find module \\'' + path + \"' from '\" + __filename + \"'\");\n    t.equal(err && err.code, 'MODULE_NOT_FOUND');\n  }\n\n  t.end();\n});\ntest('non-string \"main\" field in package.json', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n\n  try {\n    var result = resolve.sync('./invalid_main', {\n      basedir: dir\n    });\n    t.equal(result, undefined, 'result should not exist');\n    t.fail('should not get here');\n  } catch (err) {\n    t.ok(err, 'errors on non-string main');\n    t.equal(err.message, 'package “invalid main” `main` must be a string');\n    t.equal(err.code, 'INVALID_PACKAGE_MAIN');\n  }\n\n  t.end();\n});\ntest('non-string \"main\" field in package.json', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n\n  try {\n    var result = resolve.sync('./invalid_main', {\n      basedir: dir\n    });\n    t.equal(result, undefined, 'result should not exist');\n    t.fail('should not get here');\n  } catch (err) {\n    t.ok(err, 'errors on non-string main');\n    t.equal(err.message, 'package “invalid main” `main` must be a string');\n    t.equal(err.code, 'INVALID_PACKAGE_MAIN');\n  }\n\n  t.end();\n});\ntest('browser field in package.json', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  var res = resolve.sync('./browser_field', {\n    basedir: dir,\n    packageFilter: function packageFilter(pkg) {\n      if (pkg.browser) {\n        pkg.main = pkg.browser; // eslint-disable-line no-param-reassign\n\n        delete pkg.browser; // eslint-disable-line no-param-reassign\n      }\n\n      return pkg;\n    }\n  });\n  t.equal(res, path.join(dir, 'browser_field', 'b.js'));\n  t.end();\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/resolve/test/resolver_sync.js"],"names":["path","require","test","resolve","t","dir","join","__dirname","equal","sync","basedir","filename","throws","name","message","end","extensions","resolverDir","otherDir","paths","exactIterator","x","start","getPackageCandidates","opts","packageIterator","stubStatSync","fn","fs","statSync","EvalError","testFile","basename","__filename","st","run","e","code","Date","ok","fail","err","result","undefined","res","packageFilter","pkg","browser","main"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,KAAD,CAArB;;AAEAC,IAAI,CAAC,KAAD,EAAQ,UAAUE,CAAV,EAAa;AACrB,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;AAEAH,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,OAAb,EAAsB;AAAEC,IAAAA,OAAO,EAAEL;AAAX,GAAtB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,QAAf,CAFJ;AAKAD,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,UAAb,EAAyB;AAAEC,IAAAA,OAAO,EAAEL;AAAX,GAAzB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,QAAf,CAFJ;AAKAD,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,UAAb,EAAyB;AAAEC,IAAAA,OAAO,EAAEL,GAAX;AAAgBM,IAAAA,QAAQ,EAAEX,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,QAAf;AAA1B,GAAzB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,QAAf,CAFJ;AAKAD,EAAAA,CAAC,CAACQ,MAAF,CAAS,YAAY;AACjBT,IAAAA,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoB;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAApB;AACH,GAFD,EAlBqB,CAsBrB;;AACAD,EAAAA,CAAC,CAACQ,MAAF,CACI,YAAY;AACRT,IAAAA,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoB;AAAEC,MAAAA,OAAO,EAAEL,GAAX;AAAgBM,MAAAA,QAAQ,EAAEX,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,QAAf;AAA1B,KAApB;AACH,GAHL,EAII;AACIQ,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,OAAO,EAAE,oCAAoCd,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,QAAf,CAApC,GAA+D;AAF5E,GAJJ;AAUAD,EAAAA,CAAC,CAACW,GAAF;AACH,CAlCG,CAAJ;AAoCAb,IAAI,CAAC,KAAD,EAAQ,UAAUE,CAAV,EAAa;AACrB,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;AAEAH,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoB;AAAEC,IAAAA,OAAO,EAAEV,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,KAAf;AAAX,GAApB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,+BAAf,CAFJ;AAIAD,EAAAA,CAAC,CAACW,GAAF;AACH,CARG,CAAJ;AAUAb,IAAI,CAAC,KAAD,EAAQ,UAAUE,CAAV,EAAa;AACrB,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;AAEAH,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,OAAb,EAAsB;AAAEC,IAAAA,OAAO,EAAEL;AAAX,GAAtB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,aAAf,CAFJ;AAIAD,EAAAA,CAAC,CAACW,GAAF;AACH,CARG,CAAJ;AAUAb,IAAI,CAAC,KAAD,EAAQ,UAAUE,CAAV,EAAa;AACrB,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,2BAArB,CAAV;AACAH,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,QAAb,EAAuB;AAAEC,IAAAA,OAAO,EAAEL;AAAX,GAAvB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,eAAf,CAFJ;AAKAD,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoB;AAAEC,IAAAA,OAAO,EAAEV,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,MAAf;AAAX,GAApB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,cAAf,CAFJ;AAKAD,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,MAAb,EAAqB;AAAEC,IAAAA,OAAO,EAAEV,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,KAAf;AAAX,GAArB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,eAAf,CAFJ;AAIAD,EAAAA,CAAC,CAACW,GAAF;AACH,CAjBG,CAAJ;AAmBAb,IAAI,CAAC,WAAD,EAAc,UAAUE,CAAV,EAAa;AAC3B,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,gCAArB,CAAV;AACAH,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,SAAb,EAAwB;AAAEC,IAAAA,OAAO,EAAEL;AAAX,GAAxB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,UAAf,CAFJ;AAIAD,EAAAA,CAAC,CAACW,GAAF;AACH,CAPG,CAAJ;AASAb,IAAI,CAAC,KAAD,EAAQ,UAAUE,CAAV,EAAa;AACrB,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;AACAH,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,OAAb,EAAsB;AAClBC,IAAAA,OAAO,EAAEL,GADS;AAElBW,IAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,SAAR;AAFM,GAAtB,CADJ,EAKIhB,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,YAAf,CALJ;AAQAD,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,cAAb,EAA6B;AAAEC,IAAAA,OAAO,EAAEL;AAAX,GAA7B,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,YAAf,CAFJ;AAKAD,EAAAA,CAAC,CAACQ,MAAF,CAAS,YAAY;AACjBT,IAAAA,OAAO,CAACM,IAAR,CAAa,OAAb,EAAsB;AAClBC,MAAAA,OAAO,EAAEL,GADS;AAElBW,MAAAA,UAAU,EAAE,CAAC,KAAD;AAFM,KAAtB;AAIH,GALD;AAOAZ,EAAAA,CAAC,CAACW,GAAF;AACH,CAvBG,CAAJ;AAyBAb,IAAI,CAAC,KAAD,EAAQ,UAAUE,CAAV,EAAa;AACrB,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;AACAH,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,OAAb,EAAsB;AAAEC,IAAAA,OAAO,EAAEL;AAAX,GAAtB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,QAAf,CAFJ;AAKAD,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,OAAb,EAAsB;AAClBC,IAAAA,OAAO,EAAEL,GADS;AAElBW,IAAAA,UAAU,EAAE,CAAC,SAAD,EAAY,KAAZ;AAFM,GAAtB,CADJ,EAKIhB,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,YAAf,CALJ;AAQAD,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,OAAb,EAAsB;AAClBC,IAAAA,OAAO,EAAEL,GADS;AAElBW,IAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,SAAR;AAFM,GAAtB,CADJ,EAKIhB,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,QAAf,CALJ;AAQAD,EAAAA,CAAC,CAACW,GAAF;AACH,CAxBG,CAAJ;AA0BAb,IAAI,CAAC,YAAD,EAAe,UAAUE,CAAV,EAAa;AAC5B,MAAIa,WAAW,GAAGjB,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAlB;AACA,MAAIF,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUW,WAAV,EAAuB,KAAvB,CAAV;AACA,MAAIC,QAAQ,GAAGlB,IAAI,CAACM,IAAL,CAAUW,WAAV,EAAuB,YAAvB,CAAf;AAEAb,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,MAAb,EAAqB;AACjBC,IAAAA,OAAO,EAAEL,GADQ;AAEjBc,IAAAA,KAAK,EAAE,CAACD,QAAD;AAFU,GAArB,CADJ,EAKIlB,IAAI,CAACM,IAAL,CAAUW,WAAV,EAAuB,oBAAvB,CALJ;AAQAb,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,eAAb,EAA8B;AAC1BC,IAAAA,OAAO,EAAEL,GADiB;AAE1Bc,IAAAA,KAAK,EAAE,CAACD,QAAD;AAFmB,GAA9B,CADJ,EAKIlB,IAAI,CAACM,IAAL,CAAUW,WAAV,EAAuB,6BAAvB,CALJ;AAQAb,EAAAA,CAAC,CAACQ,MAAF,CAAS,YAAY;AACjBT,IAAAA,OAAO,CAACM,IAAR,CAAa,MAAb,EAAqB;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAArB;AACH,GAFD;AAIAD,EAAAA,CAAC,CAACQ,MAAF,CAAS,YAAY;AACjBT,IAAAA,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoB;AAChBC,MAAAA,OAAO,EAAEL,GADO;AAEhBc,MAAAA,KAAK,EAAE,CAACD,QAAD;AAFS,KAApB;AAIH,GALD;AAOAd,EAAAA,CAAC,CAACW,GAAF;AACH,CAjCG,CAAJ;AAmCAb,IAAI,CAAC,eAAD,EAAkB,UAAUE,CAAV,EAAa;AAC/B,MAAIa,WAAW,GAAGjB,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAlB;;AAEA,MAAIa,aAAa,GAAG,UAAUC,CAAV,EAAaC,KAAb,EAAoBC,oBAApB,EAA0CC,IAA1C,EAAgD;AAChE,WAAO,CAACxB,IAAI,CAACM,IAAL,CAAUW,WAAV,EAAuBI,CAAvB,CAAD,CAAP;AACH,GAFD;;AAIAjB,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoB;AAAEgB,IAAAA,eAAe,EAAEL;AAAnB,GAApB,CADJ,EAEIpB,IAAI,CAACM,IAAL,CAAUW,WAAV,EAAuB,aAAvB,CAFJ;AAKAb,EAAAA,CAAC,CAACW,GAAF;AACH,CAbG,CAAJ;AAeAb,IAAI,CAAC,gBAAD,EAAmB,UAAUE,CAAV,EAAa;AAChC,MAAIa,WAAW,GAAGjB,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAlB;AACA,MAAIF,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUW,WAAV,EAAuB,gBAAvB,CAAV;AAEAb,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,kBAAb,EAAiC;AAAEC,IAAAA,OAAO,EAAEO;AAAX,GAAjC,CADJ,EAEIjB,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,UAAf,CAFJ;AAKAD,EAAAA,CAAC,CAACW,GAAF;AACH,CAVG,CAAJ;;AAYA,IAAIW,YAAY,GAAG,SAASA,YAAT,CAAsBC,EAAtB,EAA0B;AACzC,MAAIC,EAAE,GAAG3B,OAAO,CAAC,IAAD,CAAhB;;AACA,MAAI4B,QAAQ,GAAGD,EAAE,CAACC,QAAlB;;AACA,MAAI;AACAD,IAAAA,EAAE,CAACC,QAAH,GAAc,YAAY;AACtB,YAAM,IAAIC,SAAJ,CAAc,eAAd,CAAN;AACH,KAFD;;AAGA,WAAOH,EAAE,EAAT;AACH,GALD,SAKU;AACNC,IAAAA,EAAE,CAACC,QAAH,GAAcA,QAAd;AACH;AACJ,CAXD;;AAaA3B,IAAI,CAAC,4CAAD,EAA+C,UAAUE,CAAV,EAAa;AAC5D,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;AAEAmB,EAAAA,YAAY,CAAC,YAAY;AACrBtB,IAAAA,CAAC,CAACQ,MAAF,CAAS,YAAY;AACjBT,MAAAA,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoB;AAAEC,QAAAA,OAAO,EAAEL;AAAX,OAApB;AACH,KAFD,EAEG,eAFH;AAGH,GAJW,CAAZ;AAMAD,EAAAA,CAAC,CAACW,GAAF;AACH,CAVG,CAAJ;AAYAb,IAAI,CAAC,oGAAD,EAAuG,UAAUE,CAAV,EAAa;AACpH,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;AAEAH,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,OAAb,EAAsB;AAAEC,IAAAA,OAAO,EAAEV,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,YAAf;AAAX,GAAtB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,mBAAf,CAFJ;AAIAD,EAAAA,CAAC,CAACI,KAAF,CACIL,OAAO,CAACM,IAAR,CAAa,QAAb,EAAuB;AAAEC,IAAAA,OAAO,EAAEV,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,YAAf;AAAX,GAAvB,CADJ,EAEIL,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,yBAAf,CAFJ;AAIAD,EAAAA,CAAC,CAACW,GAAF;AACH,CAZG,CAAJ;AAcAb,IAAI,CAAC,iEAAD,EAAoE,UAAUE,CAAV,EAAa;AACjF,MAAI2B,QAAQ,GAAG/B,IAAI,CAACgC,QAAL,CAAcC,UAAd,CAAf;AAEA7B,EAAAA,CAAC,CAACF,IAAF,CAAO,cAAP,EAAuB,UAAUgC,EAAV,EAAc;AACjCA,IAAAA,EAAE,CAAC1B,KAAH,CACIL,OAAO,CAACM,IAAR,CAAa,OAAOsB,QAApB,CADJ,EAEIE,UAFJ,EAGI,cAHJ;AAKAC,IAAAA,EAAE,CAACnB,GAAH;AACH,GAPD;AASAX,EAAAA,CAAC,CAACF,IAAF,CAAO,uBAAP,EAAgC,UAAUgC,EAAV,EAAc;AAC1C,aAASC,GAAT,GAAe;AAAE,aAAOhC,OAAO,CAACM,IAAR,CAAa,OAAOsB,QAAP,GAAkB,OAA/B,CAAP;AAAiD;;AAElEG,IAAAA,EAAE,CAACtB,MAAH,CAAUuB,GAAV,EAAe,iBAAf;;AAEA,QAAI;AACAA,MAAAA,GAAG;AACN,KAFD,CAEE,OAAOC,CAAP,EAAU;AACRF,MAAAA,EAAE,CAAC1B,KAAH,CAAS4B,CAAC,CAACC,IAAX,EAAiB,kBAAjB,EAAqC,oCAArC;AACAH,MAAAA,EAAE,CAAC1B,KAAH,CACI4B,CAAC,CAACtB,OADN,EAEI,4BAA4BiB,QAA5B,GAAuC,iBAAvC,GAA2DxB,SAA3D,GAAuE,IAF3E,EAGI,iCAHJ;AAKH;;AAED2B,IAAAA,EAAE,CAACnB,GAAH;AACH,GAjBD;AAmBAX,EAAAA,CAAC,CAACW,GAAF;AACH,CAhCG,CAAJ;AAkCAb,IAAI,CAAC,eAAD,EAAkB,UAAUE,CAAV,EAAa;AAC/B,MAAIkB,KAAK,GAAG,IAAIgB,IAAJ,EAAZ;AACAlC,EAAAA,CAAC,CAACI,KAAF,CAAQL,OAAO,CAACM,IAAR,CAAa,qBAAb,CAAR,EAA6CT,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,4BAArB,CAA7C;AACAH,EAAAA,CAAC,CAACmC,EAAF,CAAK,IAAID,IAAJ,KAAahB,KAAb,GAAqB,EAA1B,EAA8B,uBAA9B;AACAlB,EAAAA,CAAC,CAACW,GAAF;AACH,CALG,CAAJ;AAOAb,IAAI,CAAC,qBAAD,EAAwB,UAAUE,CAAV,EAAa;AACrC,MAAIkB,KAAK,GAAG,IAAIgB,IAAJ,EAAZ;AACAlC,EAAAA,CAAC,CAACI,KAAF,CAAQL,OAAO,CAACM,IAAR,CAAa,2BAAb,CAAR,EAAmDT,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,kCAArB,CAAnD;AACAH,EAAAA,CAAC,CAACmC,EAAF,CAAK,IAAID,IAAJ,KAAahB,KAAb,GAAqB,EAA1B,EAA8B,uBAA9B;AACAlB,EAAAA,CAAC,CAACW,GAAF;AACH,CALG,CAAJ;AAOAb,IAAI,CAAC,iBAAD,EAAoB,UAAUE,CAAV,EAAa;AACjC,MAAIJ,IAAI,GAAG,OAAX;;AACA,MAAI;AACAG,IAAAA,OAAO,CAACM,IAAR,CAAaT,IAAb,EAAmB;AAAEU,MAAAA,OAAO,EAAEuB;AAAX,KAAnB;AACA7B,IAAAA,CAAC,CAACoC,IAAF;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACVrC,IAAAA,CAAC,CAACmC,EAAF,CAAKE,GAAL,EAAU,wBAAV;AACArC,IAAAA,CAAC,CAACI,KAAF,CAAQiC,GAAG,IAAIA,GAAG,CAAC3B,OAAnB,EAA4B,0BAA0Bd,IAA1B,GAAiC,UAAjC,GAA8CiC,UAA9C,GAA2D,GAAvF;AACA7B,IAAAA,CAAC,CAACI,KAAF,CAAQiC,GAAG,IAAIA,GAAG,CAACJ,IAAnB,EAAyB,kBAAzB;AACH;;AACDjC,EAAAA,CAAC,CAACW,GAAF;AACH,CAXG,CAAJ;AAaAb,IAAI,CAAC,yCAAD,EAA4C,UAAUE,CAAV,EAAa;AACzD,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;;AACA,MAAI;AACA,QAAImC,MAAM,GAAGvC,OAAO,CAACM,IAAR,CAAa,gBAAb,EAA+B;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAA/B,CAAb;AACAD,IAAAA,CAAC,CAACI,KAAF,CAAQkC,MAAR,EAAgBC,SAAhB,EAA2B,yBAA3B;AACAvC,IAAAA,CAAC,CAACoC,IAAF,CAAO,qBAAP;AACH,GAJD,CAIE,OAAOC,GAAP,EAAY;AACVrC,IAAAA,CAAC,CAACmC,EAAF,CAAKE,GAAL,EAAU,2BAAV;AACArC,IAAAA,CAAC,CAACI,KAAF,CAAQiC,GAAG,CAAC3B,OAAZ,EAAqB,gDAArB;AACAV,IAAAA,CAAC,CAACI,KAAF,CAAQiC,GAAG,CAACJ,IAAZ,EAAkB,sBAAlB;AACH;;AACDjC,EAAAA,CAAC,CAACW,GAAF;AACH,CAZG,CAAJ;AAcAb,IAAI,CAAC,yCAAD,EAA4C,UAAUE,CAAV,EAAa;AACzD,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;;AACA,MAAI;AACA,QAAImC,MAAM,GAAGvC,OAAO,CAACM,IAAR,CAAa,gBAAb,EAA+B;AAAEC,MAAAA,OAAO,EAAEL;AAAX,KAA/B,CAAb;AACAD,IAAAA,CAAC,CAACI,KAAF,CAAQkC,MAAR,EAAgBC,SAAhB,EAA2B,yBAA3B;AACAvC,IAAAA,CAAC,CAACoC,IAAF,CAAO,qBAAP;AACH,GAJD,CAIE,OAAOC,GAAP,EAAY;AACVrC,IAAAA,CAAC,CAACmC,EAAF,CAAKE,GAAL,EAAU,2BAAV;AACArC,IAAAA,CAAC,CAACI,KAAF,CAAQiC,GAAG,CAAC3B,OAAZ,EAAqB,gDAArB;AACAV,IAAAA,CAAC,CAACI,KAAF,CAAQiC,GAAG,CAACJ,IAAZ,EAAkB,sBAAlB;AACH;;AACDjC,EAAAA,CAAC,CAACW,GAAF;AACH,CAZG,CAAJ;AAcAb,IAAI,CAAC,+BAAD,EAAkC,UAAUE,CAAV,EAAa;AAC/C,MAAIC,GAAG,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;AACA,MAAIqC,GAAG,GAAGzC,OAAO,CAACM,IAAR,CAAa,iBAAb,EAAgC;AACtCC,IAAAA,OAAO,EAAEL,GAD6B;AAEtCwC,IAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;AACvC,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACbD,QAAAA,GAAG,CAACE,IAAJ,GAAWF,GAAG,CAACC,OAAf,CADa,CACW;;AACxB,eAAOD,GAAG,CAACC,OAAX,CAFa,CAEO;AACvB;;AACD,aAAOD,GAAP;AACH;AARqC,GAAhC,CAAV;AAUA1C,EAAAA,CAAC,CAACI,KAAF,CAAQoC,GAAR,EAAa5C,IAAI,CAACM,IAAL,CAAUD,GAAV,EAAe,eAAf,EAAgC,MAAhC,CAAb;AACAD,EAAAA,CAAC,CAACW,GAAF;AACH,CAdG,CAAJ","sourcesContent":["var path = require('path');\nvar test = require('tape');\nvar resolve = require('../');\n\ntest('foo', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n\n    t.equal(\n        resolve.sync('./foo', { basedir: dir }),\n        path.join(dir, 'foo.js')\n    );\n\n    t.equal(\n        resolve.sync('./foo.js', { basedir: dir }),\n        path.join(dir, 'foo.js')\n    );\n\n    t.equal(\n        resolve.sync('./foo.js', { basedir: dir, filename: path.join(dir, 'bar.js') }),\n        path.join(dir, 'foo.js')\n    );\n\n    t.throws(function () {\n        resolve.sync('foo', { basedir: dir });\n    });\n\n    // Test that filename is reported as the \"from\" value when passed.\n    t.throws(\n        function () {\n            resolve.sync('foo', { basedir: dir, filename: path.join(dir, 'bar.js') });\n        },\n        {\n            name: 'Error',\n            message: \"Cannot find module 'foo' from '\" + path.join(dir, 'bar.js') + \"'\"\n        }\n    );\n\n    t.end();\n});\n\ntest('bar', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n\n    t.equal(\n        resolve.sync('foo', { basedir: path.join(dir, 'bar') }),\n        path.join(dir, 'bar/node_modules/foo/index.js')\n    );\n    t.end();\n});\n\ntest('baz', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n\n    t.equal(\n        resolve.sync('./baz', { basedir: dir }),\n        path.join(dir, 'baz/quux.js')\n    );\n    t.end();\n});\n\ntest('biz', function (t) {\n    var dir = path.join(__dirname, 'resolver/biz/node_modules');\n    t.equal(\n        resolve.sync('./grux', { basedir: dir }),\n        path.join(dir, 'grux/index.js')\n    );\n\n    t.equal(\n        resolve.sync('tiv', { basedir: path.join(dir, 'grux') }),\n        path.join(dir, 'tiv/index.js')\n    );\n\n    t.equal(\n        resolve.sync('grux', { basedir: path.join(dir, 'tiv') }),\n        path.join(dir, 'grux/index.js')\n    );\n    t.end();\n});\n\ntest('normalize', function (t) {\n    var dir = path.join(__dirname, 'resolver/biz/node_modules/grux');\n    t.equal(\n        resolve.sync('../grux', { basedir: dir }),\n        path.join(dir, 'index.js')\n    );\n    t.end();\n});\n\ntest('cup', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n    t.equal(\n        resolve.sync('./cup', {\n            basedir: dir,\n            extensions: ['.js', '.coffee']\n        }),\n        path.join(dir, 'cup.coffee')\n    );\n\n    t.equal(\n        resolve.sync('./cup.coffee', { basedir: dir }),\n        path.join(dir, 'cup.coffee')\n    );\n\n    t.throws(function () {\n        resolve.sync('./cup', {\n            basedir: dir,\n            extensions: ['.js']\n        });\n    });\n\n    t.end();\n});\n\ntest('mug', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n    t.equal(\n        resolve.sync('./mug', { basedir: dir }),\n        path.join(dir, 'mug.js')\n    );\n\n    t.equal(\n        resolve.sync('./mug', {\n            basedir: dir,\n            extensions: ['.coffee', '.js']\n        }),\n        path.join(dir, 'mug.coffee')\n    );\n\n    t.equal(\n        resolve.sync('./mug', {\n            basedir: dir,\n            extensions: ['.js', '.coffee']\n        }),\n        path.join(dir, 'mug.js')\n    );\n\n    t.end();\n});\n\ntest('other path', function (t) {\n    var resolverDir = path.join(__dirname, 'resolver');\n    var dir = path.join(resolverDir, 'bar');\n    var otherDir = path.join(resolverDir, 'other_path');\n\n    t.equal(\n        resolve.sync('root', {\n            basedir: dir,\n            paths: [otherDir]\n        }),\n        path.join(resolverDir, 'other_path/root.js')\n    );\n\n    t.equal(\n        resolve.sync('lib/other-lib', {\n            basedir: dir,\n            paths: [otherDir]\n        }),\n        path.join(resolverDir, 'other_path/lib/other-lib.js')\n    );\n\n    t.throws(function () {\n        resolve.sync('root', { basedir: dir });\n    });\n\n    t.throws(function () {\n        resolve.sync('zzz', {\n            basedir: dir,\n            paths: [otherDir]\n        });\n    });\n\n    t.end();\n});\n\ntest('path iterator', function (t) {\n    var resolverDir = path.join(__dirname, 'resolver');\n\n    var exactIterator = function (x, start, getPackageCandidates, opts) {\n        return [path.join(resolverDir, x)];\n    };\n\n    t.equal(\n        resolve.sync('baz', { packageIterator: exactIterator }),\n        path.join(resolverDir, 'baz/quux.js')\n    );\n\n    t.end();\n});\n\ntest('incorrect main', function (t) {\n    var resolverDir = path.join(__dirname, 'resolver');\n    var dir = path.join(resolverDir, 'incorrect_main');\n\n    t.equal(\n        resolve.sync('./incorrect_main', { basedir: resolverDir }),\n        path.join(dir, 'index.js')\n    );\n\n    t.end();\n});\n\nvar stubStatSync = function stubStatSync(fn) {\n    var fs = require('fs');\n    var statSync = fs.statSync;\n    try {\n        fs.statSync = function () {\n            throw new EvalError('Unknown Error');\n        };\n        return fn();\n    } finally {\n        fs.statSync = statSync;\n    }\n};\n\ntest('#79 - re-throw non ENOENT errors from stat', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n\n    stubStatSync(function () {\n        t.throws(function () {\n            resolve.sync('foo', { basedir: dir });\n        }, /Unknown Error/);\n    });\n\n    t.end();\n});\n\ntest('#52 - incorrectly resolves module-paths like \"./someFolder/\" when there is a file of the same name', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n\n    t.equal(\n        resolve.sync('./foo', { basedir: path.join(dir, 'same_names') }),\n        path.join(dir, 'same_names/foo.js')\n    );\n    t.equal(\n        resolve.sync('./foo/', { basedir: path.join(dir, 'same_names') }),\n        path.join(dir, 'same_names/foo/index.js')\n    );\n    t.end();\n});\n\ntest('sync: #121 - treating an existing file as a dir when no basedir', function (t) {\n    var testFile = path.basename(__filename);\n\n    t.test('sanity check', function (st) {\n        st.equal(\n            resolve.sync('./' + testFile),\n            __filename,\n            'sanity check'\n        );\n        st.end();\n    });\n\n    t.test('with a fake directory', function (st) {\n        function run() { return resolve.sync('./' + testFile + '/blah'); }\n\n        st.throws(run, 'throws an error');\n\n        try {\n            run();\n        } catch (e) {\n            st.equal(e.code, 'MODULE_NOT_FOUND', 'error code matches require.resolve');\n            st.equal(\n                e.message,\n                'Cannot find module \\'./' + testFile + '/blah\\' from \\'' + __dirname + '\\'',\n                'can not find nonexistent module'\n            );\n        }\n\n        st.end();\n    });\n\n    t.end();\n});\n\ntest('sync dot main', function (t) {\n    var start = new Date();\n    t.equal(resolve.sync('./resolver/dot_main'), path.join(__dirname, 'resolver/dot_main/index.js'));\n    t.ok(new Date() - start < 50, 'resolve.sync timedout');\n    t.end();\n});\n\ntest('sync dot slash main', function (t) {\n    var start = new Date();\n    t.equal(resolve.sync('./resolver/dot_slash_main'), path.join(__dirname, 'resolver/dot_slash_main/index.js'));\n    t.ok(new Date() - start < 50, 'resolve.sync timedout');\n    t.end();\n});\n\ntest('not a directory', function (t) {\n    var path = './foo';\n    try {\n        resolve.sync(path, { basedir: __filename });\n        t.fail();\n    } catch (err) {\n        t.ok(err, 'a non-directory errors');\n        t.equal(err && err.message, 'Cannot find module \\'' + path + \"' from '\" + __filename + \"'\");\n        t.equal(err && err.code, 'MODULE_NOT_FOUND');\n    }\n    t.end();\n});\n\ntest('non-string \"main\" field in package.json', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n    try {\n        var result = resolve.sync('./invalid_main', { basedir: dir });\n        t.equal(result, undefined, 'result should not exist');\n        t.fail('should not get here');\n    } catch (err) {\n        t.ok(err, 'errors on non-string main');\n        t.equal(err.message, 'package “invalid main” `main` must be a string');\n        t.equal(err.code, 'INVALID_PACKAGE_MAIN');\n    }\n    t.end();\n});\n\ntest('non-string \"main\" field in package.json', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n    try {\n        var result = resolve.sync('./invalid_main', { basedir: dir });\n        t.equal(result, undefined, 'result should not exist');\n        t.fail('should not get here');\n    } catch (err) {\n        t.ok(err, 'errors on non-string main');\n        t.equal(err.message, 'package “invalid main” `main` must be a string');\n        t.equal(err.code, 'INVALID_PACKAGE_MAIN');\n    }\n    t.end();\n});\n\ntest('browser field in package.json', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n    var res = resolve.sync('./browser_field', {\n        basedir: dir,\n        packageFilter: function packageFilter(pkg) {\n            if (pkg.browser) {\n                pkg.main = pkg.browser; // eslint-disable-line no-param-reassign\n                delete pkg.browser; // eslint-disable-line no-param-reassign\n            }\n            return pkg;\n        }\n    });\n    t.equal(res, path.join(dir, 'browser_field', 'b.js'));\n    t.end();\n});\n"]},"metadata":{},"sourceType":"script"}