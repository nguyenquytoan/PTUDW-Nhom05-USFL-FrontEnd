{"ast":null,"code":"const handler = {\n  scheme: \"http\",\n  domainHost: true,\n  parse: function (components, options) {\n    //report missing host\n    if (!components.host) {\n      components.error = components.error || \"HTTP URIs must have a host.\";\n    }\n\n    return components;\n  },\n  serialize: function (components, options) {\n    //normalize the default port\n    if (components.port === (String(components.scheme).toLowerCase() !== \"https\" ? 80 : 443) || components.port === \"\") {\n      components.port = undefined;\n    } //normalize the empty path\n\n\n    if (!components.path) {\n      components.path = \"/\";\n    } //NOTE: We do not parse query strings for HTTP URIs\n    //as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n    //and not the HTTP spec.\n\n\n    return components;\n  }\n};\nexport default handler;","map":{"version":3,"sources":["../../../src/schemes/http.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,GAAoB;AAChC,EAAA,MAAM,EAAG,MADuB;AAGhC,EAAA,UAAU,EAAG,IAHmB;AAKhC,EAAA,KAAK,EAAG,UAAU,UAAV,EAAoC,OAApC,EAAsD;AAC7D;AACA,QAAI,CAAC,UAAU,CAAC,IAAhB,EAAsB;AACrB,MAAA,UAAU,CAAC,KAAX,GAAmB,UAAU,CAAC,KAAX,IAAoB,6BAAvC;AACA;;AAED,WAAO,UAAP;AACA,GAZ+B;AAchC,EAAA,SAAS,EAAG,UAAU,UAAV,EAAoC,OAApC,EAAsD;AACjE;AACA,QAAI,UAAU,CAAC,IAAX,MAAqB,MAAM,CAAC,UAAU,CAAC,MAAZ,CAAN,CAA0B,WAA1B,OAA4C,OAA5C,GAAsD,EAAtD,GAA2D,GAAhF,KAAwF,UAAU,CAAC,IAAX,KAAoB,EAAhH,EAAoH;AACnH,MAAA,UAAU,CAAC,IAAX,GAAkB,SAAlB;AACA,KAJgE,CAMjE;;;AACA,QAAI,CAAC,UAAU,CAAC,IAAhB,EAAsB;AACrB,MAAA,UAAU,CAAC,IAAX,GAAkB,GAAlB;AACA,KATgE,CAWjE;AACA;AACA;;;AAEA,WAAO,UAAP;AACA;AA9B+B,CAAjC;AAiCA,eAAe,OAAf","sourceRoot":"","sourcesContent":["const handler = {\r\n    scheme: \"http\",\r\n    domainHost: true,\r\n    parse: function (components, options) {\r\n        //report missing host\r\n        if (!components.host) {\r\n            components.error = components.error || \"HTTP URIs must have a host.\";\r\n        }\r\n        return components;\r\n    },\r\n    serialize: function (components, options) {\r\n        //normalize the default port\r\n        if (components.port === (String(components.scheme).toLowerCase() !== \"https\" ? 80 : 443) || components.port === \"\") {\r\n            components.port = undefined;\r\n        }\r\n        //normalize the empty path\r\n        if (!components.path) {\r\n            components.path = \"/\";\r\n        }\r\n        //NOTE: We do not parse query strings for HTTP URIs\r\n        //as WWW Form Url Encoded query strings are part of the HTML4+ spec,\r\n        //and not the HTTP spec.\r\n        return components;\r\n    }\r\n};\r\nexport default handler;\r\n//# sourceMappingURL=http.js.map"]},"metadata":{},"sourceType":"module"}