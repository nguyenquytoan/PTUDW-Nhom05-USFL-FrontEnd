{"ast":null,"code":"'use strict';\n\nvar regexParser = require('regex-parser');\n\nvar REGEXP = /(\\/?)(.+)\\1([a-z]*)/i;\n/**\n * Parse the give value as a regular expression or give a pass-none expression where it is invalid\n * @param {RegExp|string|*} value An existing expression, or its string representation, or degenerate value\n * @returns {RegExp} The given expression or one matching the RegExp string else a pass-none expression\n */\n\nfunction toRegExp(value) {\n  return typeof value === 'object' && typeof value.test === 'function' && value || typeof value === 'string' && REGEXP.test(value) && regexParser(value) || /^true$|^$/.test(value) && /.*/ || /matchnone^/;\n}\n\nmodule.exports = toRegExp;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/adjust-sourcemap-loader/lib/process/to-reg-exp.js"],"names":["regexParser","require","REGEXP","toRegExp","value","test","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AAEA,IAAIC,MAAM,GAAG,sBAAb;AAEA;;;;;;AAKA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAS,OAAOA,KAAP,KAAiB,QAAlB,IAAgC,OAAOA,KAAK,CAACC,IAAb,KAAsB,UAAtD,IAAqED,KAAtE,IACH,OAAOA,KAAP,KAAiB,QAAlB,IAA+BF,MAAM,CAACG,IAAP,CAAYD,KAAZ,CAA/B,IAAqDJ,WAAW,CAACI,KAAD,CAD5D,IAEJ,YAAYC,IAAZ,CAAiBD,KAAjB,KAA2B,IAFvB,IAGL,YAHF;AAID;;AAEDE,MAAM,CAACC,OAAP,GAAiBJ,QAAjB","sourcesContent":["'use strict';\n\nvar regexParser = require('regex-parser');\n\nvar REGEXP = /(\\/?)(.+)\\1([a-z]*)/i;\n\n/**\n * Parse the give value as a regular expression or give a pass-none expression where it is invalid\n * @param {RegExp|string|*} value An existing expression, or its string representation, or degenerate value\n * @returns {RegExp} The given expression or one matching the RegExp string else a pass-none expression\n */\nfunction toRegExp(value) {\n  return ((typeof value === 'object') && (typeof value.test === 'function') && value) ||\n    ((typeof value === 'string') && REGEXP.test(value) && regexParser(value)) ||\n    (/^true$|^$/.test(value) && /.*/) ||\n    /matchnone^/;\n}\n\nmodule.exports = toRegExp;"]},"metadata":{},"sourceType":"script"}