{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _colorize = _interopRequireDefault(require('./colorize'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst DOTS = '...';\nconst ENTER = '⏎';\n\nvar _default = (testName, pattern, width) => {\n  const inlineTestName = testName.replace(/(\\r\\n|\\n|\\r)/gm, ENTER);\n  let regexp;\n\n  try {\n    regexp = new RegExp(pattern, 'i');\n  } catch (e) {\n    return _chalk().default.dim(inlineTestName);\n  }\n\n  const match = inlineTestName.match(regexp);\n\n  if (!match) {\n    return _chalk().default.dim(inlineTestName);\n  }\n\n  const startPatternIndex = Math.max(match.index || 0, 0);\n  const endPatternIndex = startPatternIndex + match[0].length;\n\n  if (inlineTestName.length <= width) {\n    return (0, _colorize.default)(inlineTestName, startPatternIndex, endPatternIndex);\n  }\n\n  const slicedTestName = inlineTestName.slice(0, width - DOTS.length);\n\n  if (startPatternIndex < slicedTestName.length) {\n    if (endPatternIndex > slicedTestName.length) {\n      return (0, _colorize.default)(slicedTestName + DOTS, startPatternIndex, slicedTestName.length + DOTS.length);\n    } else {\n      return (0, _colorize.default)(slicedTestName + DOTS, Math.min(startPatternIndex, slicedTestName.length), endPatternIndex);\n    }\n  }\n\n  return `${_chalk().default.dim(slicedTestName)}${_chalk().default.reset(DOTS)}`;\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-watcher/build/lib/formatTestNameByPattern.js"],"names":["Object","defineProperty","exports","value","default","_chalk","data","_interopRequireDefault","require","_colorize","obj","__esModule","DOTS","ENTER","_default","testName","pattern","width","inlineTestName","replace","regexp","RegExp","e","dim","match","startPatternIndex","Math","max","index","endPatternIndex","length","slicedTestName","slice","min","reset"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEAH,EAAAA,MAAM,GAAG,SAASA,MAAT,GAAkB;AACzB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIG,SAAS,GAAGF,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAtC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAACN,IAAAA,OAAO,EAAEM;AAAV,GAArC;AACD;AAED;;;;;;;;AAMA,MAAME,IAAI,GAAG,KAAb;AACA,MAAMC,KAAK,GAAG,GAAd;;AAEA,IAAIC,QAAQ,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,KAApB,KAA8B;AAC3C,QAAMC,cAAc,GAAGH,QAAQ,CAACI,OAAT,CAAiB,gBAAjB,EAAmCN,KAAnC,CAAvB;AACA,MAAIO,MAAJ;;AAEA,MAAI;AACFA,IAAAA,MAAM,GAAG,IAAIC,MAAJ,CAAWL,OAAX,EAAoB,GAApB,CAAT;AACD,GAFD,CAEE,OAAOM,CAAP,EAAU;AACV,WAAOjB,MAAM,GAAGD,OAAT,CAAiBmB,GAAjB,CAAqBL,cAArB,CAAP;AACD;;AAED,QAAMM,KAAK,GAAGN,cAAc,CAACM,KAAf,CAAqBJ,MAArB,CAAd;;AAEA,MAAI,CAACI,KAAL,EAAY;AACV,WAAOnB,MAAM,GAAGD,OAAT,CAAiBmB,GAAjB,CAAqBL,cAArB,CAAP;AACD;;AAED,QAAMO,iBAAiB,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAK,CAACI,KAAN,IAAe,CAAxB,EAA2B,CAA3B,CAA1B;AACA,QAAMC,eAAe,GAAGJ,iBAAiB,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASM,MAArD;;AAEA,MAAIZ,cAAc,CAACY,MAAf,IAAyBb,KAA7B,EAAoC;AAClC,WAAO,CAAC,GAAGR,SAAS,CAACL,OAAd,EACLc,cADK,EAELO,iBAFK,EAGLI,eAHK,CAAP;AAKD;;AAED,QAAME,cAAc,GAAGb,cAAc,CAACc,KAAf,CAAqB,CAArB,EAAwBf,KAAK,GAAGL,IAAI,CAACkB,MAArC,CAAvB;;AAEA,MAAIL,iBAAiB,GAAGM,cAAc,CAACD,MAAvC,EAA+C;AAC7C,QAAID,eAAe,GAAGE,cAAc,CAACD,MAArC,EAA6C;AAC3C,aAAO,CAAC,GAAGrB,SAAS,CAACL,OAAd,EACL2B,cAAc,GAAGnB,IADZ,EAELa,iBAFK,EAGLM,cAAc,CAACD,MAAf,GAAwBlB,IAAI,CAACkB,MAHxB,CAAP;AAKD,KAND,MAMO;AACL,aAAO,CAAC,GAAGrB,SAAS,CAACL,OAAd,EACL2B,cAAc,GAAGnB,IADZ,EAELc,IAAI,CAACO,GAAL,CAASR,iBAAT,EAA4BM,cAAc,CAACD,MAA3C,CAFK,EAGLD,eAHK,CAAP;AAKD;AACF;;AAED,SAAQ,GAAExB,MAAM,GAAGD,OAAT,CAAiBmB,GAAjB,CAAqBQ,cAArB,CAAqC,GAAE1B,MAAM,GAAGD,OAAT,CAAiB8B,KAAjB,CAC/CtB,IAD+C,CAE/C,EAFF;AAGD,CAhDD;;AAkDAV,OAAO,CAACE,OAAR,GAAkBU,QAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _colorize = _interopRequireDefault(require('./colorize'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst DOTS = '...';\nconst ENTER = '⏎';\n\nvar _default = (testName, pattern, width) => {\n  const inlineTestName = testName.replace(/(\\r\\n|\\n|\\r)/gm, ENTER);\n  let regexp;\n\n  try {\n    regexp = new RegExp(pattern, 'i');\n  } catch (e) {\n    return _chalk().default.dim(inlineTestName);\n  }\n\n  const match = inlineTestName.match(regexp);\n\n  if (!match) {\n    return _chalk().default.dim(inlineTestName);\n  }\n\n  const startPatternIndex = Math.max(match.index || 0, 0);\n  const endPatternIndex = startPatternIndex + match[0].length;\n\n  if (inlineTestName.length <= width) {\n    return (0, _colorize.default)(\n      inlineTestName,\n      startPatternIndex,\n      endPatternIndex\n    );\n  }\n\n  const slicedTestName = inlineTestName.slice(0, width - DOTS.length);\n\n  if (startPatternIndex < slicedTestName.length) {\n    if (endPatternIndex > slicedTestName.length) {\n      return (0, _colorize.default)(\n        slicedTestName + DOTS,\n        startPatternIndex,\n        slicedTestName.length + DOTS.length\n      );\n    } else {\n      return (0, _colorize.default)(\n        slicedTestName + DOTS,\n        Math.min(startPatternIndex, slicedTestName.length),\n        endPatternIndex\n      );\n    }\n  }\n\n  return `${_chalk().default.dim(slicedTestName)}${_chalk().default.reset(\n    DOTS\n  )}`;\n};\n\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}