{"ast":null,"code":"var hasOwnProperty = Object.prototype.hasOwnProperty;\nvar shape = {\n  generic: true,\n  types: {},\n  properties: {},\n  parseContext: {},\n  scope: {},\n  atrule: ['parse'],\n  pseudo: ['parse'],\n  node: ['name', 'structure', 'parse', 'generate', 'walkContext']\n};\n\nfunction isObject(value) {\n  return value && value.constructor === Object;\n}\n\nfunction copy(value) {\n  if (isObject(value)) {\n    var res = {};\n\n    for (var key in value) {\n      if (hasOwnProperty.call(value, key)) {\n        res[key] = value[key];\n      }\n    }\n\n    return res;\n  } else {\n    return value;\n  }\n}\n\nfunction extend(dest, src) {\n  for (var key in src) {\n    if (hasOwnProperty.call(src, key)) {\n      if (isObject(dest[key])) {\n        extend(dest[key], copy(src[key]));\n      } else {\n        dest[key] = copy(src[key]);\n      }\n    }\n  }\n}\n\nfunction mix(dest, src, shape) {\n  for (var key in shape) {\n    if (hasOwnProperty.call(shape, key) === false) {\n      continue;\n    }\n\n    if (shape[key] === true) {\n      if (key in src) {\n        if (hasOwnProperty.call(src, key)) {\n          dest[key] = copy(src[key]);\n        }\n      }\n    } else if (shape[key]) {\n      if (isObject(shape[key])) {\n        var res = {};\n        extend(res, dest[key]);\n        extend(res, src[key]);\n        dest[key] = res;\n      } else if (Array.isArray(shape[key])) {\n        var res = {};\n        var innerShape = shape[key].reduce(function (s, k) {\n          s[k] = true;\n          return s;\n        }, {});\n\n        for (var name in dest[key]) {\n          if (hasOwnProperty.call(dest[key], name)) {\n            res[name] = {};\n\n            if (dest[key] && dest[key][name]) {\n              mix(res[name], dest[key][name], innerShape);\n            }\n          }\n        }\n\n        for (var name in src[key]) {\n          if (hasOwnProperty.call(src[key], name)) {\n            if (!res[name]) {\n              res[name] = {};\n            }\n\n            if (src[key] && src[key][name]) {\n              mix(res[name], src[key][name], innerShape);\n            }\n          }\n        }\n\n        dest[key] = res;\n      }\n    }\n  }\n\n  return dest;\n}\n\nmodule.exports = function (dest, src) {\n  return mix(dest, src, shape);\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/css-tree/lib/syntax/config/mix.js"],"names":["hasOwnProperty","Object","prototype","shape","generic","types","properties","parseContext","scope","atrule","pseudo","node","isObject","value","constructor","copy","res","key","call","extend","dest","src","mix","Array","isArray","innerShape","reduce","s","k","name","module","exports"],"mappings":"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","sourcesContent":["var hasOwnProperty = Object.prototype.hasOwnProperty;\nvar shape = {\n    generic: true,\n    types: {},\n    properties: {},\n    parseContext: {},\n    scope: {},\n    atrule: ['parse'],\n    pseudo: ['parse'],\n    node: ['name', 'structure', 'parse', 'generate', 'walkContext']\n};\n\nfunction isObject(value) {\n    return value && value.constructor === Object;\n}\n\nfunction copy(value) {\n    if (isObject(value)) {\n        var res = {};\n        for (var key in value) {\n            if (hasOwnProperty.call(value, key)) {\n                res[key] = value[key];\n            }\n        }\n        return res;\n    } else {\n        return value;\n    }\n}\n\nfunction extend(dest, src) {\n    for (var key in src) {\n        if (hasOwnProperty.call(src, key)) {\n            if (isObject(dest[key])) {\n                extend(dest[key], copy(src[key]));\n            } else {\n                dest[key] = copy(src[key]);\n            }\n        }\n    }\n}\n\nfunction mix(dest, src, shape) {\n    for (var key in shape) {\n        if (hasOwnProperty.call(shape, key) === false) {\n            continue;\n        }\n\n        if (shape[key] === true) {\n            if (key in src) {\n                if (hasOwnProperty.call(src, key)) {\n                    dest[key] = copy(src[key]);\n                }\n            }\n        } else if (shape[key]) {\n            if (isObject(shape[key])) {\n                var res = {};\n                extend(res, dest[key]);\n                extend(res, src[key]);\n                dest[key] = res;\n            } else if (Array.isArray(shape[key])) {\n                var res = {};\n                var innerShape = shape[key].reduce(function(s, k) {\n                    s[k] = true;\n                    return s;\n                }, {});\n                for (var name in dest[key]) {\n                    if (hasOwnProperty.call(dest[key], name)) {\n                        res[name] = {};\n                        if (dest[key] && dest[key][name]) {\n                            mix(res[name], dest[key][name], innerShape);\n                        }\n                    }\n                }\n                for (var name in src[key]) {\n                    if (hasOwnProperty.call(src[key], name)) {\n                        if (!res[name]) {\n                            res[name] = {};\n                        }\n                        if (src[key] && src[key][name]) {\n                            mix(res[name], src[key][name], innerShape);\n                        }\n                    }\n                }\n                dest[key] = res;\n            }\n        }\n    }\n    return dest;\n}\n\nmodule.exports = function(dest, src) {\n    return mix(dest, src, shape);\n};\n"]},"metadata":{},"sourceType":"script"}