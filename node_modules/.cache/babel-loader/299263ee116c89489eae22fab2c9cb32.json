{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _postcss = require(\"postcss\");\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _list = require(\"postcss/lib/list\");\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _balancedMatch = require(\"balanced-match\");\n\nvar _balancedMatch2 = _interopRequireDefault(_balancedMatch);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction explodeSelector(pseudoClass, selector) {\n  var position = locatePseudoClass(selector, pseudoClass);\n\n  if (selector && position > -1) {\n    var pre = selector.slice(0, position);\n    var matches = (0, _balancedMatch2.default)(\"(\", \")\", selector.slice(position));\n    var bodySelectors = matches.body ? _list2.default.comma(matches.body).map(function (s) {\n      return explodeSelector(pseudoClass, s);\n    }).join(`)${pseudoClass}(`) : \"\";\n    var postSelectors = matches.post ? explodeSelector(pseudoClass, matches.post) : \"\";\n    return `${pre}${pseudoClass}(${bodySelectors})${postSelectors}`;\n  }\n\n  return selector;\n}\n\nvar patternCache = {};\n\nfunction locatePseudoClass(selector, pseudoClass) {\n  patternCache[pseudoClass] = patternCache[pseudoClass] || new RegExp(`([^\\\\\\\\]|^)${pseudoClass}`); // The regex is used to ensure that selectors with\n  // escaped colons in them are treated properly\n  // Ex: .foo\\:not-bar is a valid CSS selector\n  // But it is not a reference to a pseudo selector\n\n  var pattern = patternCache[pseudoClass];\n  var position = selector.search(pattern);\n\n  if (position === -1) {\n    return -1;\n  } // The offset returned by the regex may be off by one because\n  // of it including the negated character match in the position\n\n\n  return position + selector.slice(position).indexOf(pseudoClass);\n}\n\nfunction explodeSelectors(pseudoClass) {\n  return function () {\n    return function (css) {\n      css.walkRules(function (rule) {\n        if (rule.selector && rule.selector.indexOf(pseudoClass) > -1) {\n          rule.selector = explodeSelector(pseudoClass, rule.selector);\n        }\n      });\n    };\n  };\n}\n\nexports.default = _postcss2.default.plugin(\"postcss-selector-not\", explodeSelectors(\":not\"));\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-selector-not/dist/index.js"],"names":["Object","defineProperty","exports","value","_postcss","require","_postcss2","_interopRequireDefault","_list","_list2","_balancedMatch","_balancedMatch2","obj","__esModule","default","explodeSelector","pseudoClass","selector","position","locatePseudoClass","pre","slice","matches","bodySelectors","body","comma","map","s","join","postSelectors","post","patternCache","RegExp","pattern","search","indexOf","explodeSelectors","css","walkRules","rule","plugin","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACH,QAAD,CAAtC;;AAEA,IAAII,KAAK,GAAGH,OAAO,CAAC,kBAAD,CAAnB;;AAEA,IAAII,MAAM,GAAGF,sBAAsB,CAACC,KAAD,CAAnC;;AAEA,IAAIE,cAAc,GAAGL,OAAO,CAAC,gBAAD,CAA5B;;AAEA,IAAIM,eAAe,GAAGJ,sBAAsB,CAACG,cAAD,CAA5C;;AAEA,SAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,SAASG,eAAT,CAAyBC,WAAzB,EAAsCC,QAAtC,EAAgD;AAC9C,MAAIC,QAAQ,GAAGC,iBAAiB,CAACF,QAAD,EAAWD,WAAX,CAAhC;;AACA,MAAIC,QAAQ,IAAIC,QAAQ,GAAG,CAAC,CAA5B,EAA+B;AAC7B,QAAIE,GAAG,GAAGH,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkBH,QAAlB,CAAV;AACA,QAAII,OAAO,GAAG,CAAC,GAAGX,eAAe,CAACG,OAApB,EAA6B,GAA7B,EAAkC,GAAlC,EAAuCG,QAAQ,CAACI,KAAT,CAAeH,QAAf,CAAvC,CAAd;AACA,QAAIK,aAAa,GAAGD,OAAO,CAACE,IAAR,GAAef,MAAM,CAACK,OAAP,CAAeW,KAAf,CAAqBH,OAAO,CAACE,IAA7B,EAAmCE,GAAnC,CAAuC,UAAUC,CAAV,EAAa;AACrF,aAAOZ,eAAe,CAACC,WAAD,EAAcW,CAAd,CAAtB;AACD,KAFkC,EAEhCC,IAFgC,CAE1B,IAAGZ,WAAY,GAFW,CAAf,GAEU,EAF9B;AAGA,QAAIa,aAAa,GAAGP,OAAO,CAACQ,IAAR,GAAef,eAAe,CAACC,WAAD,EAAcM,OAAO,CAACQ,IAAtB,CAA9B,GAA4D,EAAhF;AAEA,WAAQ,GAAEV,GAAI,GAAEJ,WAAY,IAAGO,aAAc,IAAGM,aAAc,EAA9D;AACD;;AACD,SAAOZ,QAAP;AACD;;AAED,IAAIc,YAAY,GAAG,EAAnB;;AAEA,SAASZ,iBAAT,CAA2BF,QAA3B,EAAqCD,WAArC,EAAkD;AAChDe,EAAAA,YAAY,CAACf,WAAD,CAAZ,GAA4Be,YAAY,CAACf,WAAD,CAAZ,IAA6B,IAAIgB,MAAJ,CAAY,cAAahB,WAAY,EAArC,CAAzD,CADgD,CAGhD;AACA;AACA;AACA;;AACA,MAAIiB,OAAO,GAAGF,YAAY,CAACf,WAAD,CAA1B;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACiB,MAAT,CAAgBD,OAAhB,CAAf;;AAEA,MAAIf,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnB,WAAO,CAAC,CAAR;AACD,GAZ+C,CAchD;AACA;;;AACA,SAAOA,QAAQ,GAAGD,QAAQ,CAACI,KAAT,CAAeH,QAAf,EAAyBiB,OAAzB,CAAiCnB,WAAjC,CAAlB;AACD;;AAED,SAASoB,gBAAT,CAA0BpB,WAA1B,EAAuC;AACrC,SAAO,YAAY;AACjB,WAAO,UAAUqB,GAAV,EAAe;AACpBA,MAAAA,GAAG,CAACC,SAAJ,CAAc,UAAUC,IAAV,EAAgB;AAC5B,YAAIA,IAAI,CAACtB,QAAL,IAAiBsB,IAAI,CAACtB,QAAL,CAAckB,OAAd,CAAsBnB,WAAtB,IAAqC,CAAC,CAA3D,EAA8D;AAC5DuB,UAAAA,IAAI,CAACtB,QAAL,GAAgBF,eAAe,CAACC,WAAD,EAAcuB,IAAI,CAACtB,QAAnB,CAA/B;AACD;AACF,OAJD;AAKD,KAND;AAOD,GARD;AASD;;AAEDf,OAAO,CAACY,OAAR,GAAkBR,SAAS,CAACQ,OAAV,CAAkB0B,MAAlB,CAAyB,sBAAzB,EAAiDJ,gBAAgB,CAAC,MAAD,CAAjE,CAAlB;AACAK,MAAM,CAACvC,OAAP,GAAiBA,OAAO,CAACY,OAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _postcss = require(\"postcss\");\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _list = require(\"postcss/lib/list\");\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _balancedMatch = require(\"balanced-match\");\n\nvar _balancedMatch2 = _interopRequireDefault(_balancedMatch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction explodeSelector(pseudoClass, selector) {\n  var position = locatePseudoClass(selector, pseudoClass);\n  if (selector && position > -1) {\n    var pre = selector.slice(0, position);\n    var matches = (0, _balancedMatch2.default)(\"(\", \")\", selector.slice(position));\n    var bodySelectors = matches.body ? _list2.default.comma(matches.body).map(function (s) {\n      return explodeSelector(pseudoClass, s);\n    }).join(`)${pseudoClass}(`) : \"\";\n    var postSelectors = matches.post ? explodeSelector(pseudoClass, matches.post) : \"\";\n\n    return `${pre}${pseudoClass}(${bodySelectors})${postSelectors}`;\n  }\n  return selector;\n}\n\nvar patternCache = {};\n\nfunction locatePseudoClass(selector, pseudoClass) {\n  patternCache[pseudoClass] = patternCache[pseudoClass] || new RegExp(`([^\\\\\\\\]|^)${pseudoClass}`);\n\n  // The regex is used to ensure that selectors with\n  // escaped colons in them are treated properly\n  // Ex: .foo\\:not-bar is a valid CSS selector\n  // But it is not a reference to a pseudo selector\n  var pattern = patternCache[pseudoClass];\n  var position = selector.search(pattern);\n\n  if (position === -1) {\n    return -1;\n  }\n\n  // The offset returned by the regex may be off by one because\n  // of it including the negated character match in the position\n  return position + selector.slice(position).indexOf(pseudoClass);\n}\n\nfunction explodeSelectors(pseudoClass) {\n  return function () {\n    return function (css) {\n      css.walkRules(function (rule) {\n        if (rule.selector && rule.selector.indexOf(pseudoClass) > -1) {\n          rule.selector = explodeSelector(pseudoClass, rule.selector);\n        }\n      });\n    };\n  };\n}\n\nexports.default = _postcss2.default.plugin(\"postcss-selector-not\", explodeSelectors(\":not\"));\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}