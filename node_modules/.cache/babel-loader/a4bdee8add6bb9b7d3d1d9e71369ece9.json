{"ast":null,"code":"\"use strict\";\n\nvar _helpers = require(\"./util/helpers\");\n\n(0, _helpers.test)('universal selector', '*', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n});\n(0, _helpers.test)('lobotomized owl selector', ' * + * ', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 2);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 2);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 4);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 4);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 3);\n  t.deepEqual(tree.nodes[0].nodes[2].source.start.column, 6);\n  t.deepEqual(tree.nodes[0].nodes[2].source.end.column, 6);\n  t.deepEqual(tree.nodes[0].nodes[2].sourceIndex, 5);\n});\n(0, _helpers.test)('comment', '/**\\n * Hello!\\n */', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n});\n(0, _helpers.test)('comment & universal selectors', '*/*test*/*', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 2);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 9);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 1);\n  t.deepEqual(tree.nodes[0].nodes[2].source.start.column, 10);\n  t.deepEqual(tree.nodes[0].nodes[2].source.end.column, 10);\n  t.deepEqual(tree.nodes[0].nodes[2].sourceIndex, 9);\n});\n(0, _helpers.test)('tag selector', 'h1', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 2);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n});\n(0, _helpers.test)('id selector', '#id', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n});\n(0, _helpers.test)('tag selector followed by id selector', 'h1, #id', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 2);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.column, 5);\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.column, 7);\n  t.deepEqual(tree.nodes[1].nodes[0].sourceIndex, 4);\n});\n(0, _helpers.test)('multiple id selectors', '#one#two', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 4);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 5);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 8);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 4);\n});\n(0, _helpers.test)('multiple id selectors (2)', '#one#two#three#four', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[2].source.start.column, 9);\n  t.deepEqual(tree.nodes[0].nodes[2].source.end.column, 14);\n  t.deepEqual(tree.nodes[0].nodes[2].sourceIndex, 8);\n  t.deepEqual(tree.nodes[0].nodes[3].source.start.column, 15);\n  t.deepEqual(tree.nodes[0].nodes[3].source.end.column, 19);\n  t.deepEqual(tree.nodes[0].nodes[3].sourceIndex, 14);\n});\n(0, _helpers.test)('multiple id selectors (3)', '#one#two,#three#four', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 5);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 8);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 4);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.column, 16);\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.column, 20);\n  t.deepEqual(tree.nodes[1].nodes[1].sourceIndex, 15);\n});\n(0, _helpers.test)('multiple class selectors', '.one.two,.three.four', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 5);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 8);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 4);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.column, 16);\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.column, 20);\n  t.deepEqual(tree.nodes[1].nodes[1].sourceIndex, 15);\n});\n(0, _helpers.test)('attribute selector', '[name=\"james\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 14);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n});\n(0, _helpers.test)('multiple attribute selectors', '[name=\"james\"][name=\"ed\"],[name=\"snakeman\"][name=\"a\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 14);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 15);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 25);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 14);\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.line, 1);\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.column, 27);\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.line, 1);\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.column, 43);\n  t.deepEqual(tree.nodes[1].nodes[0].sourceIndex, 26);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.column, 44);\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.line, 1);\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.column, 53);\n  t.deepEqual(tree.nodes[1].nodes[1].sourceIndex, 43);\n});\n(0, _helpers.test)('pseudo-class', 'h1:first-child', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 14);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 2);\n});\n(0, _helpers.test)('pseudo-class with argument', 'h1:not(.strudel, .food)', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 23);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 2);\n});\n(0, _helpers.test)('pseudo-element', 'h1::before', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 10);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 2);\n});\n(0, _helpers.test)('multiple pseudos', 'h1:not(.food)::before, a:first-child', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 13);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 2);\n  t.deepEqual(tree.nodes[0].nodes[2].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[2].source.start.column, 14);\n  t.deepEqual(tree.nodes[0].nodes[2].source.end.column, 21);\n  t.deepEqual(tree.nodes[0].nodes[2].sourceIndex, 13);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.column, 25);\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.column, 36);\n  t.deepEqual(tree.nodes[1].nodes[1].sourceIndex, 24);\n});\n(0, _helpers.test)('combinators', 'div > h1 span', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1, \"> start line\");\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 5, \"> start column\");\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 5, \"> end column\");\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 4, \"> sourceIndex\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.start.line, 1, \"' ' start line\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.start.column, 9, \"' ' start column\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.end.column, 9, \"' ' end column\");\n  t.deepEqual(tree.nodes[0].nodes[3].sourceIndex, 8, \"' ' sourceIndex\");\n});\n(0, _helpers.test)('combinators surrounded by superfluous spaces', 'div   >  h1 ~   span   a', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1, \"> start line\");\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 7, \"> start column\");\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 7, \"> end column\");\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 6, \"> sourceIndex\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.start.line, 1, \"~ start line\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.start.column, 13, \"~ start column\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.end.column, 13, \"~ end column\");\n  t.deepEqual(tree.nodes[0].nodes[3].sourceIndex, 12, \"~ sourceIndex\");\n  t.deepEqual(tree.nodes[0].nodes[5].source.start.line, 1, \"' ' start line\");\n  t.deepEqual(tree.nodes[0].nodes[5].source.start.column, 21, \"' ' start column\");\n  t.deepEqual(tree.nodes[0].nodes[5].source.end.column, 23, \"' ' end column\");\n  t.deepEqual(tree.nodes[0].nodes[5].sourceIndex, 20, \"' ' sourceIndex\");\n});\n(0, _helpers.test)('multiple id selectors on different lines', '#one,\\n#two', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 4);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.line, 2);\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.column, 4);\n  t.deepEqual(tree.nodes[1].nodes[0].sourceIndex, 6);\n});\n(0, _helpers.test)('multiple id selectors on different CRLF lines', '#one,\\r\\n#two,\\r\\n#three', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.line, 1, '#one start line');\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1, '#one start column');\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 4, '#one end column');\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0, '#one sourceIndex');\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.line, 2, '#two start line');\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.column, 1, '#two start column');\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.column, 4, '#two end column');\n  t.deepEqual(tree.nodes[1].nodes[0].sourceIndex, 7, '#two sourceIndex');\n  t.deepEqual(tree.nodes[2].nodes[0].source.start.line, 3, '#three start line');\n  t.deepEqual(tree.nodes[2].nodes[0].source.start.column, 1, '#three start column');\n  t.deepEqual(tree.nodes[2].nodes[0].source.end.column, 6, '#three end column');\n  t.deepEqual(tree.nodes[2].nodes[0].sourceIndex, 14, '#three sourceIndex');\n});\n(0, _helpers.test)('id, tag, pseudo, and class selectors on different lines with indentation', '\\t#one,\\n\\th1:after,\\n\\t\\t.two', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.line, 1, '#one start line');\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 2, '#one start column');\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 5, '#one end column');\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 1, '#one sourceIndex');\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.line, 2, 'h1 start line');\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.column, 2, 'h1 start column');\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.column, 3, 'h1 end column');\n  t.deepEqual(tree.nodes[1].nodes[0].sourceIndex, 8, 'h1 sourceIndex');\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.line, 2, ':after start line');\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.column, 4, ':after start column');\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.column, 9, ':after end column');\n  t.deepEqual(tree.nodes[1].nodes[1].sourceIndex, 10, ':after sourceIndex');\n  t.deepEqual(tree.nodes[2].nodes[0].source.start.line, 3, '.two start line');\n  t.deepEqual(tree.nodes[2].nodes[0].source.start.column, 3, '.two start column');\n  t.deepEqual(tree.nodes[2].nodes[0].source.end.column, 6, '.two end column');\n  t.deepEqual(tree.nodes[2].nodes[0].sourceIndex, 20, '.two sourceIndex');\n});\n(0, _helpers.test)('pseudo with arguments spanning multiple lines', 'h1:not(\\n\\t.one,\\n\\t.two\\n)', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1, ':not start line');\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 3, ':not start column');\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.line, 4, ':not end line');\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 1, ':not end column');\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 2, ':not sourceIndex');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[0].nodes[0].source.start.line, 2, '.one start line');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[0].nodes[0].source.start.column, 2, '.one start column');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[0].nodes[0].source.end.line, 2, '.one end line');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[0].nodes[0].source.end.column, 5, '.one end column');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[0].nodes[0].sourceIndex, 9, '.one sourceIndex');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[1].nodes[0].source.start.line, 3, '.two start line');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[1].nodes[0].source.start.column, 2, '.two start column');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[1].nodes[0].source.end.line, 3, '.two end line');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[1].nodes[0].source.end.column, 5, '.two end column');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[1].nodes[0].sourceIndex, 16, '.two sourceIndex');\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-selector-parser/dist/__tests__/sourceIndex.js"],"names":["_helpers","require","test","t","tree","deepEqual","nodes","source","start","column","end","sourceIndex","line"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _helpers = require(\"./util/helpers\");\n\n(0, _helpers.test)('universal selector', '*', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n});\n(0, _helpers.test)('lobotomized owl selector', ' * + * ', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 2);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 2);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 4);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 4);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 3);\n  t.deepEqual(tree.nodes[0].nodes[2].source.start.column, 6);\n  t.deepEqual(tree.nodes[0].nodes[2].source.end.column, 6);\n  t.deepEqual(tree.nodes[0].nodes[2].sourceIndex, 5);\n});\n(0, _helpers.test)('comment', '/**\\n * Hello!\\n */', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n});\n(0, _helpers.test)('comment & universal selectors', '*/*test*/*', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 2);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 9);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 1);\n  t.deepEqual(tree.nodes[0].nodes[2].source.start.column, 10);\n  t.deepEqual(tree.nodes[0].nodes[2].source.end.column, 10);\n  t.deepEqual(tree.nodes[0].nodes[2].sourceIndex, 9);\n});\n(0, _helpers.test)('tag selector', 'h1', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 2);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n});\n(0, _helpers.test)('id selector', '#id', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n});\n(0, _helpers.test)('tag selector followed by id selector', 'h1, #id', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 2);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.column, 5);\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.column, 7);\n  t.deepEqual(tree.nodes[1].nodes[0].sourceIndex, 4);\n});\n(0, _helpers.test)('multiple id selectors', '#one#two', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 4);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 5);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 8);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 4);\n});\n(0, _helpers.test)('multiple id selectors (2)', '#one#two#three#four', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[2].source.start.column, 9);\n  t.deepEqual(tree.nodes[0].nodes[2].source.end.column, 14);\n  t.deepEqual(tree.nodes[0].nodes[2].sourceIndex, 8);\n  t.deepEqual(tree.nodes[0].nodes[3].source.start.column, 15);\n  t.deepEqual(tree.nodes[0].nodes[3].source.end.column, 19);\n  t.deepEqual(tree.nodes[0].nodes[3].sourceIndex, 14);\n});\n(0, _helpers.test)('multiple id selectors (3)', '#one#two,#three#four', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 5);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 8);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 4);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.column, 16);\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.column, 20);\n  t.deepEqual(tree.nodes[1].nodes[1].sourceIndex, 15);\n});\n(0, _helpers.test)('multiple class selectors', '.one.two,.three.four', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 5);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 8);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 4);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.column, 16);\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.column, 20);\n  t.deepEqual(tree.nodes[1].nodes[1].sourceIndex, 15);\n});\n(0, _helpers.test)('attribute selector', '[name=\"james\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 14);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n});\n(0, _helpers.test)('multiple attribute selectors', '[name=\"james\"][name=\"ed\"],[name=\"snakeman\"][name=\"a\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 14);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 15);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 25);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 14);\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.line, 1);\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.column, 27);\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.line, 1);\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.column, 43);\n  t.deepEqual(tree.nodes[1].nodes[0].sourceIndex, 26);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.column, 44);\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.line, 1);\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.column, 53);\n  t.deepEqual(tree.nodes[1].nodes[1].sourceIndex, 43);\n});\n(0, _helpers.test)('pseudo-class', 'h1:first-child', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 14);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 2);\n});\n(0, _helpers.test)('pseudo-class with argument', 'h1:not(.strudel, .food)', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 23);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 2);\n});\n(0, _helpers.test)('pseudo-element', 'h1::before', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 10);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 2);\n});\n(0, _helpers.test)('multiple pseudos', 'h1:not(.food)::before, a:first-child', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 3);\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 13);\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 2);\n  t.deepEqual(tree.nodes[0].nodes[2].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[2].source.start.column, 14);\n  t.deepEqual(tree.nodes[0].nodes[2].source.end.column, 21);\n  t.deepEqual(tree.nodes[0].nodes[2].sourceIndex, 13);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.line, 1);\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.column, 25);\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.column, 36);\n  t.deepEqual(tree.nodes[1].nodes[1].sourceIndex, 24);\n});\n(0, _helpers.test)('combinators', 'div > h1 span', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1, \"> start line\");\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 5, \"> start column\");\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 5, \"> end column\");\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 4, \"> sourceIndex\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.start.line, 1, \"' ' start line\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.start.column, 9, \"' ' start column\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.end.column, 9, \"' ' end column\");\n  t.deepEqual(tree.nodes[0].nodes[3].sourceIndex, 8, \"' ' sourceIndex\");\n});\n(0, _helpers.test)('combinators surrounded by superfluous spaces', 'div   >  h1 ~   span   a', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1, \"> start line\");\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 7, \"> start column\");\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 7, \"> end column\");\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 6, \"> sourceIndex\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.start.line, 1, \"~ start line\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.start.column, 13, \"~ start column\");\n  t.deepEqual(tree.nodes[0].nodes[3].source.end.column, 13, \"~ end column\");\n  t.deepEqual(tree.nodes[0].nodes[3].sourceIndex, 12, \"~ sourceIndex\");\n  t.deepEqual(tree.nodes[0].nodes[5].source.start.line, 1, \"' ' start line\");\n  t.deepEqual(tree.nodes[0].nodes[5].source.start.column, 21, \"' ' start column\");\n  t.deepEqual(tree.nodes[0].nodes[5].source.end.column, 23, \"' ' end column\");\n  t.deepEqual(tree.nodes[0].nodes[5].sourceIndex, 20, \"' ' sourceIndex\");\n});\n(0, _helpers.test)('multiple id selectors on different lines', '#one,\\n#two', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.line, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 4);\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0);\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.line, 2);\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.column, 1);\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.column, 4);\n  t.deepEqual(tree.nodes[1].nodes[0].sourceIndex, 6);\n});\n(0, _helpers.test)('multiple id selectors on different CRLF lines', '#one,\\r\\n#two,\\r\\n#three', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.line, 1, '#one start line');\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 1, '#one start column');\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 4, '#one end column');\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 0, '#one sourceIndex');\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.line, 2, '#two start line');\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.column, 1, '#two start column');\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.column, 4, '#two end column');\n  t.deepEqual(tree.nodes[1].nodes[0].sourceIndex, 7, '#two sourceIndex');\n  t.deepEqual(tree.nodes[2].nodes[0].source.start.line, 3, '#three start line');\n  t.deepEqual(tree.nodes[2].nodes[0].source.start.column, 1, '#three start column');\n  t.deepEqual(tree.nodes[2].nodes[0].source.end.column, 6, '#three end column');\n  t.deepEqual(tree.nodes[2].nodes[0].sourceIndex, 14, '#three sourceIndex');\n});\n(0, _helpers.test)('id, tag, pseudo, and class selectors on different lines with indentation', '\\t#one,\\n\\th1:after,\\n\\t\\t.two', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.line, 1, '#one start line');\n  t.deepEqual(tree.nodes[0].nodes[0].source.start.column, 2, '#one start column');\n  t.deepEqual(tree.nodes[0].nodes[0].source.end.column, 5, '#one end column');\n  t.deepEqual(tree.nodes[0].nodes[0].sourceIndex, 1, '#one sourceIndex');\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.line, 2, 'h1 start line');\n  t.deepEqual(tree.nodes[1].nodes[0].source.start.column, 2, 'h1 start column');\n  t.deepEqual(tree.nodes[1].nodes[0].source.end.column, 3, 'h1 end column');\n  t.deepEqual(tree.nodes[1].nodes[0].sourceIndex, 8, 'h1 sourceIndex');\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.line, 2, ':after start line');\n  t.deepEqual(tree.nodes[1].nodes[1].source.start.column, 4, ':after start column');\n  t.deepEqual(tree.nodes[1].nodes[1].source.end.column, 9, ':after end column');\n  t.deepEqual(tree.nodes[1].nodes[1].sourceIndex, 10, ':after sourceIndex');\n  t.deepEqual(tree.nodes[2].nodes[0].source.start.line, 3, '.two start line');\n  t.deepEqual(tree.nodes[2].nodes[0].source.start.column, 3, '.two start column');\n  t.deepEqual(tree.nodes[2].nodes[0].source.end.column, 6, '.two end column');\n  t.deepEqual(tree.nodes[2].nodes[0].sourceIndex, 20, '.two sourceIndex');\n});\n(0, _helpers.test)('pseudo with arguments spanning multiple lines', 'h1:not(\\n\\t.one,\\n\\t.two\\n)', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.line, 1, ':not start line');\n  t.deepEqual(tree.nodes[0].nodes[1].source.start.column, 3, ':not start column');\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.line, 4, ':not end line');\n  t.deepEqual(tree.nodes[0].nodes[1].source.end.column, 1, ':not end column');\n  t.deepEqual(tree.nodes[0].nodes[1].sourceIndex, 2, ':not sourceIndex');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[0].nodes[0].source.start.line, 2, '.one start line');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[0].nodes[0].source.start.column, 2, '.one start column');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[0].nodes[0].source.end.line, 2, '.one end line');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[0].nodes[0].source.end.column, 5, '.one end column');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[0].nodes[0].sourceIndex, 9, '.one sourceIndex');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[1].nodes[0].source.start.line, 3, '.two start line');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[1].nodes[0].source.start.column, 2, '.two start column');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[1].nodes[0].source.end.line, 3, '.two end line');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[1].nodes[0].source.end.column, 5, '.two end column');\n  t.deepEqual(tree.nodes[0].nodes[1].nodes[1].nodes[0].sourceIndex, 16, '.two sourceIndex');\n});"]},"metadata":{},"sourceType":"script"}