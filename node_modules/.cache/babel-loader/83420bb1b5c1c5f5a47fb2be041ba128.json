{"ast":null,"code":"(function (global, factory) {\n  /*jshint -W030 */\n  'use strict';\n\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : global.async ? factory(global.neo_async = global.neo_async || {}) : factory(global.async = global.async || {});\n})(this, function (exports) {\n  'use strict';\n\n  var noop = function noop() {};\n\n  var throwError = function throwError() {\n    throw new Error('Callback was already called.');\n  };\n\n  var DEFAULT_TIMES = 5;\n  var DEFAULT_INTERVAL = 0;\n  var obj = 'object';\n  var func = 'function';\n  var isArray = Array.isArray;\n  var nativeKeys = Object.keys;\n  var nativePush = Array.prototype.push;\n  var iteratorSymbol = typeof Symbol === func && Symbol.iterator;\n  var nextTick, asyncNextTick, asyncSetImmediate;\n  createImmediate();\n  /**\n   * @memberof async\n   * @namespace each\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 2);\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   */\n\n  var each = createEach(arrayEach, baseEach, symbolEach);\n  /**\n   * @memberof async\n   * @namespace map\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var map = createMap(arrayEachIndex, baseEachIndex, symbolEachIndex, true);\n  /**\n   * @memberof async\n   * @namespace mapValues\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var mapValues = createMap(arrayEachIndex, baseEachKey, symbolEachKey, false);\n  /**\n   * @memberof async\n   * @namespace filter\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var filter = createFilter(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue, true);\n  /**\n   * @memberof async\n   * @namespace filterSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n  var filterSeries = createFilterSeries(true);\n  /**\n   * @memberof async\n   * @namespace filterLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n  var filterLimit = createFilterLimit(true);\n  /**\n   * @memberof async\n   * @namespace reject\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var reject = createFilter(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue, false);\n  /**\n   * @memberof async\n   * @namespace rejectSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n  var rejectSeries = createFilterSeries(false);\n  /**\n   * @memberof async\n   * @namespace rejectLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n  var rejectLimit = createFilterLimit(false);\n  /**\n   * @memberof async\n   * @namespace detect\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n  var detect = createDetect(arrayEachValue, baseEachValue, symbolEachValue, true);\n  /**\n   * @memberof async\n   * @namespace detectSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n  var detectSeries = createDetectSeries(true);\n  /**\n   * @memberof async\n   * @namespace detectLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n  var detectLimit = createDetectLimit(true);\n  /**\n   * @memberof async\n   * @namespace every\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [2, 'c']]\n   * });\n   *\n   */\n\n  var every = createEvery(arrayEachValue, baseEachValue, symbolEachValue);\n  /**\n   * @memberof async\n   * @namespace everySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [3, 'b'] [2, 'c']]\n   * });\n   *\n   */\n\n  var everySeries = createEverySeries();\n  /**\n   * @memberof async\n   * @namespace everyLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 5, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 5, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e']]\n   * });\n   *\n   */\n\n  var everyLimit = createEveryLimit();\n  /**\n   * @memberof async\n   * @namespace pick\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [[0, 1], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n\n  var pick = createPick(arrayEachIndexValue, baseEachKeyValue, symbolEachKeyValue, true);\n  /**\n   * @memberof async\n   * @namespace pickSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [[0, 1], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c'], [4, 'd']]\n   * });\n   *\n   */\n\n  var pickSeries = createPickSeries(true);\n  /**\n   * @memberof async\n   * @namespace pickLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n  var pickLimit = createPickLimit(true);\n  /**\n   * @memberof async\n   * @namespace omit\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [[0, 1], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n\n  var omit = createPick(arrayEachIndexValue, baseEachKeyValue, symbolEachKeyValue, false);\n  /**\n   * @memberof async\n   * @namespace omitSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [[0, 1], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c'], [4, 'd']]\n   * });\n   *\n   */\n\n  var omitSeries = createPickSeries(false);\n  /**\n   * @memberof async\n   * @namespace omitLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '3': 4, '4': 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { d: 4, e: 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { d: 4, e: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n  var omitLimit = createPickLimit(false);\n  /**\n   * @memberof async\n   * @namespace transform\n   * @param {Array|Object} collection\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num)\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4]\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2, '3': 4 }\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4]\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, iterator, function(err, res) {\n   *   console.log(res); //  { a: 1, b: 3, c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n\n  var transform = createTransform(arrayEachResult, baseEachResult, symbolEachResult);\n  /**\n   * @memberof async\n   * @namespace sortBy\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var sortBy = createSortBy(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue);\n  /**\n   * @memberof async\n   * @namespace concat\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var concat = createConcat(arrayEachIndex, baseEachIndex, symbolEachIndex);\n  /**\n   * @memberof async\n   * @namespace groupBy\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [4.2, 6.1, 6.4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [[4.2, 0], [6.1, 2], [6.4, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [4.2, 6.1, 6.4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [[4.2, 'a'], [6.1, 'c'], [6.4, 'b']]\n   * });\n   *\n   */\n\n  var groupBy = createGroupBy(arrayEachValue, baseEachValue, symbolEachValue);\n  /**\n   * @memberof async\n   * @namespace parallel\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 40);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 20);\n   *  }\n   * ];\n   * async.parallel(tasks, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 30);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 40);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 20);\n   *   }\n   * };\n   * async.parallel(tasks, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   */\n\n  var parallel = createParallel(arrayEachFunc, baseEachFunc);\n  /**\n   * @memberof async\n   * @namespace applyEach\n   */\n\n  var applyEach = createApplyEach(map);\n  /**\n   * @memberof async\n   * @namespace applyEachSeries\n   */\n\n  var applyEachSeries = createApplyEach(mapSeries);\n  /**\n   * @memberof async\n   * @namespace log\n   */\n\n  var log = createLogger('log');\n  /**\n   * @memberof async\n   * @namespace dir\n   */\n\n  var dir = createLogger('dir');\n  /**\n   * @version 2.6.1\n   * @namespace async\n   */\n\n  var index = {\n    VERSION: '2.6.1',\n    // Collections\n    each: each,\n    eachSeries: eachSeries,\n    eachLimit: eachLimit,\n    forEach: each,\n    forEachSeries: eachSeries,\n    forEachLimit: eachLimit,\n    eachOf: each,\n    eachOfSeries: eachSeries,\n    eachOfLimit: eachLimit,\n    forEachOf: each,\n    forEachOfSeries: eachSeries,\n    forEachOfLimit: eachLimit,\n    map: map,\n    mapSeries: mapSeries,\n    mapLimit: mapLimit,\n    mapValues: mapValues,\n    mapValuesSeries: mapValuesSeries,\n    mapValuesLimit: mapValuesLimit,\n    filter: filter,\n    filterSeries: filterSeries,\n    filterLimit: filterLimit,\n    select: filter,\n    selectSeries: filterSeries,\n    selectLimit: filterLimit,\n    reject: reject,\n    rejectSeries: rejectSeries,\n    rejectLimit: rejectLimit,\n    detect: detect,\n    detectSeries: detectSeries,\n    detectLimit: detectLimit,\n    find: detect,\n    findSeries: detectSeries,\n    findLimit: detectLimit,\n    pick: pick,\n    pickSeries: pickSeries,\n    pickLimit: pickLimit,\n    omit: omit,\n    omitSeries: omitSeries,\n    omitLimit: omitLimit,\n    reduce: reduce,\n    inject: reduce,\n    foldl: reduce,\n    reduceRight: reduceRight,\n    foldr: reduceRight,\n    transform: transform,\n    transformSeries: transformSeries,\n    transformLimit: transformLimit,\n    sortBy: sortBy,\n    sortBySeries: sortBySeries,\n    sortByLimit: sortByLimit,\n    some: some,\n    someSeries: someSeries,\n    someLimit: someLimit,\n    any: some,\n    anySeries: someSeries,\n    anyLimit: someLimit,\n    every: every,\n    everySeries: everySeries,\n    everyLimit: everyLimit,\n    all: every,\n    allSeries: everySeries,\n    allLimit: everyLimit,\n    concat: concat,\n    concatSeries: concatSeries,\n    concatLimit: concatLimit,\n    groupBy: groupBy,\n    groupBySeries: groupBySeries,\n    groupByLimit: groupByLimit,\n    // Control Flow\n    parallel: parallel,\n    series: series,\n    parallelLimit: parallelLimit,\n    tryEach: tryEach,\n    waterfall: waterfall,\n    angelFall: angelFall,\n    angelfall: angelFall,\n    whilst: whilst,\n    doWhilst: doWhilst,\n    until: until,\n    doUntil: doUntil,\n    during: during,\n    doDuring: doDuring,\n    forever: forever,\n    compose: compose,\n    seq: seq,\n    applyEach: applyEach,\n    applyEachSeries: applyEachSeries,\n    queue: queue,\n    priorityQueue: priorityQueue,\n    cargo: cargo,\n    auto: auto,\n    autoInject: autoInject,\n    retry: retry,\n    retryable: retryable,\n    iterator: iterator,\n    times: times,\n    timesSeries: timesSeries,\n    timesLimit: timesLimit,\n    race: race,\n    // Utils\n    apply: apply,\n    nextTick: asyncNextTick,\n    setImmediate: asyncSetImmediate,\n    memoize: memoize,\n    unmemoize: unmemoize,\n    ensureAsync: ensureAsync,\n    constant: constant,\n    asyncify: asyncify,\n    wrapSync: asyncify,\n    log: log,\n    dir: dir,\n    reflect: reflect,\n    reflectAll: reflectAll,\n    timeout: timeout,\n    createLogger: createLogger,\n    // Mode\n    safe: safe,\n    fast: fast\n  };\n  exports['default'] = index;\n  baseEachSync(index, function (func, key) {\n    exports[key] = func;\n  }, nativeKeys(index));\n  /**\n   * @private\n   */\n\n  function createImmediate(safeMode) {\n    var delay = function delay(fn) {\n      var args = slice(arguments, 1);\n      setTimeout(function () {\n        fn.apply(null, args);\n      });\n    };\n\n    asyncSetImmediate = typeof setImmediate === func ? setImmediate : delay;\n\n    if (typeof process === obj && typeof process.nextTick === func) {\n      nextTick = /^v0.10/.test(process.version) ? asyncSetImmediate : process.nextTick;\n      asyncNextTick = /^v0/.test(process.version) ? asyncSetImmediate : process.nextTick;\n    } else {\n      asyncNextTick = nextTick = asyncSetImmediate;\n    }\n\n    if (safeMode === false) {\n      nextTick = function (cb) {\n        cb();\n      };\n    }\n  }\n  /* sync functions based on lodash */\n\n  /**\n   * Converts `arguments` to an array.\n   *\n   * @private\n   * @param {Array} array = The array to slice.\n   */\n\n\n  function createArray(array) {\n    var index = -1;\n    var size = array.length;\n    var result = Array(size);\n\n    while (++index < size) {\n      result[index] = array[index];\n    }\n\n    return result;\n  }\n  /**\n   * Create an array from `start`\n   *\n   * @private\n   * @param {Array} array - The array to slice.\n   * @param {number} start - The start position.\n   */\n\n\n  function slice(array, start) {\n    var end = array.length;\n    var index = -1;\n    var size = end - start;\n\n    if (size <= 0) {\n      return [];\n    }\n\n    var result = Array(size);\n\n    while (++index < size) {\n      result[index] = array[index + start];\n    }\n\n    return result;\n  }\n  /**\n   * @private\n   * @param {Object} object\n   */\n\n\n  function objectClone(object) {\n    var keys = nativeKeys(object);\n    var size = keys.length;\n    var index = -1;\n    var result = {};\n\n    while (++index < size) {\n      var key = keys[index];\n      result[key] = object[key];\n    }\n\n    return result;\n  }\n  /**\n   * Create an array with all falsey values removed.\n   *\n   * @private\n   * @param {Array} array - The array to compact.\n   */\n\n\n  function compact(array) {\n    var index = -1;\n    var size = array.length;\n    var result = [];\n\n    while (++index < size) {\n      var value = array[index];\n\n      if (value) {\n        result[result.length] = value;\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Create an array of reverse sequence.\n   *\n   * @private\n   * @param {Array} array - The array to reverse.\n   */\n\n\n  function reverse(array) {\n    var index = -1;\n    var size = array.length;\n    var result = Array(size);\n    var resIndex = size;\n\n    while (++index < size) {\n      result[--resIndex] = array[index];\n    }\n\n    return result;\n  }\n  /**\n   * Checks if key exists in object property.\n   *\n   * @private\n   * @param {Object} object - The object to inspect.\n   * @param {string} key - The key to check.\n   */\n\n\n  function has(object, key) {\n    return object.hasOwnProperty(key);\n  }\n  /**\n   * Check if target exists in array.\n   * @private\n   * @param {Array} array\n   * @param {*} target\n   */\n\n\n  function notInclude(array, target) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      if (array[index] === target) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * @private\n   * @param {Array} array - The array to iterate over.\n   * @param {Function} iterator - The function invoked per iteration.\n   */\n\n\n  function arrayEachSync(array, iterator) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      iterator(array[index], index);\n    }\n\n    return array;\n  }\n  /**\n   * @private\n   * @param {Object} object - The object to iterate over.\n   * @param {Function} iterator - The function invoked per iteration.\n   * @param {Array} keys\n   */\n\n\n  function baseEachSync(object, iterator, keys) {\n    var index = -1;\n    var size = keys.length;\n\n    while (++index < size) {\n      var key = keys[index];\n      iterator(object[key], key);\n    }\n\n    return object;\n  }\n  /**\n   * @private\n   * @param {number} n\n   * @param {Function} iterator\n   */\n\n\n  function timesSync(n, iterator) {\n    var index = -1;\n\n    while (++index < n) {\n      iterator(index);\n    }\n  }\n  /**\n   * @private\n   * @param {Array} array\n   * @param {number[]} criteria\n   */\n\n\n  function sortByCriteria(array, criteria) {\n    var l = array.length;\n    var indices = Array(l);\n    var i;\n\n    for (i = 0; i < l; i++) {\n      indices[i] = i;\n    }\n\n    quickSort(criteria, 0, l - 1, indices);\n    var result = Array(l);\n\n    for (var n = 0; n < l; n++) {\n      i = indices[n];\n      result[n] = i === undefined ? array[n] : array[i];\n    }\n\n    return result;\n  }\n\n  function partition(array, i, j, mid, indices) {\n    var l = i;\n    var r = j;\n\n    while (l <= r) {\n      i = l;\n\n      while (l < r && array[l] < mid) {\n        l++;\n      }\n\n      while (r >= i && array[r] >= mid) {\n        r--;\n      }\n\n      if (l > r) {\n        break;\n      }\n\n      swap(array, indices, l++, r--);\n    }\n\n    return l;\n  }\n\n  function swap(array, indices, l, r) {\n    var n = array[l];\n    array[l] = array[r];\n    array[r] = n;\n    var i = indices[l];\n    indices[l] = indices[r];\n    indices[r] = i;\n  }\n\n  function quickSort(array, i, j, indices) {\n    if (i === j) {\n      return;\n    }\n\n    var k = i;\n\n    while (++k <= j && array[i] === array[k]) {\n      var l = k - 1;\n\n      if (indices[l] > indices[k]) {\n        var index = indices[l];\n        indices[l] = indices[k];\n        indices[k] = index;\n      }\n    }\n\n    if (k > j) {\n      return;\n    }\n\n    var p = array[i] > array[k] ? i : k;\n    k = partition(array, i, j, array[p], indices);\n    quickSort(array, i, k - 1, indices);\n    quickSort(array, k, j, indices);\n  }\n  /**\n   * @Private\n   */\n\n\n  function makeConcatResult(array) {\n    var result = [];\n    arrayEachSync(array, function (value) {\n      if (value === noop) {\n        return;\n      }\n\n      if (isArray(value)) {\n        nativePush.apply(result, value);\n      } else {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n  /* async functions */\n\n  /**\n   * @private\n   */\n\n\n  function arrayEach(array, iterator, callback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        iterator(array[index], index, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(array[index], onlyOnce(callback));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEach(object, iterator, callback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(object[keys[index]], onlyOnce(callback));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEach(collection, iterator, callback) {\n    var iter = collection[iteratorSymbol]();\n    var index = 0;\n    var item;\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index++, onlyOnce(callback));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        iterator(item.value, onlyOnce(callback));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function arrayEachResult(array, result, iterator, callback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 4) {\n      while (++index < size) {\n        iterator(result, array[index], index, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(result, array[index], onlyOnce(callback));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachResult(object, result, iterator, callback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 4) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(result, object[key], key, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(result, object[keys[index]], onlyOnce(callback));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachResult(collection, result, iterator, callback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 4) {\n      while ((item = iter.next()).done === false) {\n        iterator(result, item.value, index++, onlyOnce(callback));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        iterator(result, item.value, onlyOnce(callback));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function arrayEachFunc(array, createCallback) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      array[index](createCallback(index));\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachFunc(object, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    while (++index < size) {\n      key = keys[index];\n      object[key](createCallback(key));\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function arrayEachIndex(array, iterator, createCallback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        iterator(array[index], index, createCallback(index));\n      }\n    } else {\n      while (++index < size) {\n        iterator(array[index], createCallback(index));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachIndex(object, iterator, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, createCallback(index));\n      }\n    } else {\n      while (++index < size) {\n        iterator(object[keys[index]], createCallback(index));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachIndex(collection, iterator, createCallback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index, createCallback(index++));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, createCallback(index++));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachKey(object, iterator, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, createCallback(key));\n      }\n    } else {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], createCallback(key));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachKey(collection, iterator, createCallback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index, createCallback(index++));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, createCallback(index++));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function arrayEachValue(array, iterator, createCallback) {\n    var value;\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, index, createCallback(value));\n      }\n    } else {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, createCallback(value));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(value));\n      }\n    } else {\n      while (++index < size) {\n        value = object[keys[index]];\n        iterator(value, createCallback(value));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index++, createCallback(value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        value = item.value;\n        iterator(value, createCallback(value));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function arrayEachIndexValue(array, iterator, createCallback) {\n    var value;\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, index, createCallback(index, value));\n      }\n    } else {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, createCallback(index, value));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachIndexValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(index, value));\n      }\n    } else {\n      while (++index < size) {\n        value = object[keys[index]];\n        iterator(value, createCallback(index, value));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachIndexValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index, createCallback(index++, value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, createCallback(index++, value));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachKeyValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(key, value));\n      }\n    } else {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, createCallback(key, value));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachKeyValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index, createCallback(index++, value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, createCallback(index++, value));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   * @param {Function} func\n   */\n\n\n  function onlyOnce(func) {\n    return function (err, res) {\n      var fn = func;\n      func = throwError;\n      fn(err, res);\n    };\n  }\n  /**\n   * @private\n   * @param {Function} func\n   */\n\n\n  function once(func) {\n    return function (err, res) {\n      var fn = func;\n      func = noop;\n      fn(err, res);\n    };\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   */\n\n\n  function createEach(arrayEach, baseEach, symbolEach) {\n    return function each(collection, iterator, callback) {\n      callback = once(callback || noop);\n      var size, keys;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, done);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, done);\n        size && size === completed && callback(null);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, done, keys);\n      }\n\n      if (!size) {\n        callback(null);\n      }\n\n      function done(err, bool) {\n        if (err) {\n          callback = once(callback);\n          callback(err);\n        } else if (++completed === size) {\n          callback(null);\n        } else if (bool === false) {\n          callback = once(callback);\n          callback(null);\n        }\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n\n\n  function createMap(arrayEach, baseEach, symbolEach, useArray) {\n    var init, clone;\n\n    if (useArray) {\n      init = Array;\n      clone = createArray;\n    } else {\n      init = function () {\n        return {};\n      };\n\n      clone = objectClone;\n    }\n\n    return function (collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = init(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        // TODO: size could be changed\n        result = init(0);\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = init(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null, init());\n      }\n\n      function createCallback(key) {\n        return function done(err, res) {\n          if (key === null) {\n            throwError();\n          }\n\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, clone(result));\n            return;\n          }\n\n          result[key] = res;\n          key = null;\n\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n\n\n  function createFilter(arrayEach, baseEach, symbolEach, bool) {\n    return function (collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, compact(result));\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        return callback(null, []);\n      }\n\n      function createCallback(index, value) {\n        return function done(err, res) {\n          if (index === null) {\n            throwError();\n          }\n\n          if (err) {\n            index = null;\n            callback = once(callback);\n            callback(err);\n            return;\n          }\n\n          if (!!res === bool) {\n            result[index] = value;\n          }\n\n          index = null;\n\n          if (++completed === size) {\n            callback(null, compact(result));\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createFilterSeries(bool) {\n    return function (collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var completed = 0;\n      var result = [];\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size) {\n        return callback(null, []);\n      }\n\n      iterate();\n\n      function arrayIterator() {\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, completed, done);\n      }\n\n      function objectIterator() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        if (!!res === bool) {\n          result[result.length] = value;\n        }\n\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createFilterLimit(bool) {\n    return function (collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate, result;\n      var sync = false;\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        result = [];\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null, []);\n      }\n\n      result = result || Array(size);\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value, index));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, compact(result));\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, compact(result));\n        }\n      }\n\n      function objectIterator() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[keys[index]];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        index = started++;\n\n        if (index < size) {\n          key = keys[index];\n          value = collection[key];\n          iterator(value, key, createCallback(value, index));\n        }\n      }\n\n      function createCallback(value, index) {\n        return function (err, res) {\n          if (index === null) {\n            throwError();\n          }\n\n          if (err) {\n            index = null;\n            iterate = noop;\n            callback = once(callback);\n            callback(err);\n            return;\n          }\n\n          if (!!res === bool) {\n            result[index] = value;\n          }\n\n          index = null;\n\n          if (++completed === size) {\n            callback = onlyOnce(callback);\n            callback(null, compact(result));\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n\n          sync = false;\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace eachSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 3);\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3]\n   * });\n   */\n\n\n  function eachSeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, bool) {\n      if (err) {\n        callback(err);\n      } else if (++completed === size || bool === false) {\n        iterate = throwError;\n        callback(null);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace eachLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 5);\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5]\n   * });\n   *\n   */\n\n\n  function eachLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    } else {\n      return callback(null);\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null);\n    }\n\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        iterator(collection[started++], done);\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[index], index, done);\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        started++;\n        iterator(item.value, done);\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, started++, done);\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null);\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        iterator(collection[keys[started++]], done);\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, done);\n      }\n    }\n\n    function done(err, bool) {\n      if (err || bool === false) {\n        iterate = noop;\n        callback = once(callback);\n        callback(err);\n      } else if (++completed === size) {\n        iterator = noop;\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(null);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace mapSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n\n  function mapSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    var size, key, keys, iter, item, result, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, []);\n    }\n\n    result = result || Array(size);\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, createArray(result));\n        return;\n      }\n\n      result[completed] = res;\n\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace mapLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function mapLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, result, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n\n    result = result || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[index], createCallback(index));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[index], index, createCallback(index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[keys[index]], createCallback(index));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, createCallback(index));\n      }\n    }\n\n    function createCallback(index) {\n      return function (err, res) {\n        if (index === null) {\n          throwError();\n        }\n\n        if (err) {\n          index = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, createArray(result));\n          return;\n        }\n\n        result[index] = res;\n        index = null;\n\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace mapValuesSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n\n  function mapValuesSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = {};\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, result);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      key = completed;\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      key = completed;\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      key = completed;\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      key = completed;\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      key = keys[completed];\n      iterator(collection[key], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, objectClone(result));\n        return;\n      }\n\n      result[key] = res;\n\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace mapValuesLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function mapValuesLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = {};\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[index], createCallback(index));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[index], index, createCallback(index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], createCallback(key));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, createCallback(key));\n      }\n    }\n\n    function createCallback(key) {\n      return function (err, res) {\n        if (key === null) {\n          throwError();\n        }\n\n        if (err) {\n          key = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, objectClone(result));\n          return;\n        }\n\n        result[key] = res;\n        key = null;\n\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n\n\n  function createDetect(arrayEach, baseEach, symbolEach, bool) {\n    return function (collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null);\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function done(err, res) {\n          if (called) {\n            throwError();\n          }\n\n          called = true;\n\n          if (err) {\n            callback = once(callback);\n            callback(err);\n          } else if (!!res === bool) {\n            callback = once(callback);\n            callback(null, value);\n          } else if (++completed === size) {\n            callback(null);\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createDetectSeries(bool) {\n    return function (collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size) {\n        return callback(null);\n      }\n\n      iterate();\n\n      function arrayIterator() {\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null) : iterator(value, completed, done);\n      }\n\n      function objectIterator() {\n        value = collection[keys[completed]];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err);\n        } else if (!!res === bool) {\n          iterate = throwError;\n          callback(null, value);\n        } else if (++completed === size) {\n          iterate = throwError;\n          callback(null);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createDetectLimit(bool) {\n    return function (collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null);\n      }\n\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n\n        if (item.done === false) {\n          started++;\n          value = item.value;\n          iterator(value, createCallback(value));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null);\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started++, createCallback(value));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null);\n        }\n      }\n\n      function objectIterator() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[keys[index]];\n          iterator(value, createCallback(value));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, key, createCallback(value));\n        }\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function (err, res) {\n          if (called) {\n            throwError();\n          }\n\n          called = true;\n\n          if (err) {\n            iterate = noop;\n            callback = once(callback);\n            callback(err);\n          } else if (!!res === bool) {\n            iterate = noop;\n            callback = once(callback);\n            callback(null, value);\n          } else if (++completed === size) {\n            callback(null);\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n\n          sync = false;\n        };\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n\n\n  function createPick(arrayEach, baseEach, symbolEach, bool) {\n    return function (collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys;\n      var completed = 0;\n      var result = {};\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        return callback(null, {});\n      }\n\n      function createCallback(key, value) {\n        return function done(err, res) {\n          if (key === null) {\n            throwError();\n          }\n\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n\n          if (!!res === bool) {\n            result[key] = value;\n          }\n\n          key = null;\n\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createPickSeries(bool) {\n    return function (collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var result = {};\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size) {\n        return callback(null, {});\n      }\n\n      iterate();\n\n      function arrayIterator() {\n        key = completed;\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        key = completed;\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        key = completed;\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        key = completed;\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, key, done);\n      }\n\n      function objectIterator() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err, result);\n          return;\n        }\n\n        if (!!res === bool) {\n          result[key] = value;\n        }\n\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createPickLimit(bool) {\n    return function (collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var result = {};\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null, {});\n      }\n\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value, index));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, result);\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, result);\n        }\n      }\n\n      function objectIterator() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, createCallback(value, key));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, key, createCallback(value, key));\n        }\n      }\n\n      function createCallback(value, key) {\n        return function (err, res) {\n          if (key === null) {\n            throwError();\n          }\n\n          if (err) {\n            key = null;\n            iterate = noop;\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n\n          if (!!res === bool) {\n            result[key] = value;\n          }\n\n          key = null;\n\n          if (++completed === size) {\n            iterate = throwError;\n            callback = onlyOnce(callback);\n            callback(null, result);\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n\n          sync = false;\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace reduce\n   * @param {Array|Object} collection\n   * @param {*} result\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '1324'\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '1324'\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function reduce(collection, result, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, result);\n    }\n\n    iterate(result);\n\n    function arrayIterator(result) {\n      iterator(result, collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex(result) {\n      iterator(result, collection[completed], completed, done);\n    }\n\n    function symbolIterator(result) {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, done);\n    }\n\n    function symbolIteratorWithKey(result) {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, completed, done);\n    }\n\n    function objectIterator(result) {\n      iterator(result, collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey(result) {\n      key = keys[completed];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, result) {\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size) {\n        iterator = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(function () {\n          iterate(result);\n        });\n      } else {\n        sync = true;\n        iterate(result);\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace reduceRight\n   * @param {Array|Object} collection\n   * @param {*} result\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [4, 2, 3, 1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '4231'\n   *   console.log(order); // [[4, 3], [2, 2], [3, 1], [1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '4231'\n   *   console.log(order); // [4, 2, 3, 1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [[4, 3], [2, 2], [3, 1], [1, 0]]\n   * });\n   *\n   */\n\n\n  function reduceRight(collection, result, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var resIndex, index, key, keys, iter, item, col, iterate;\n    var sync = false;\n\n    if (isArray(collection)) {\n      resIndex = collection.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      col = [];\n      iter = collection[iteratorSymbol]();\n      index = -1;\n\n      while ((item = iter.next()).done === false) {\n        col[++index] = item.value;\n      }\n\n      collection = col;\n      resIndex = col.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      resIndex = keys.length;\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!resIndex) {\n      return callback(null, result);\n    }\n\n    iterate(result);\n\n    function arrayIterator(result) {\n      iterator(result, collection[--resIndex], done);\n    }\n\n    function arrayIteratorWithIndex(result) {\n      iterator(result, collection[--resIndex], resIndex, done);\n    }\n\n    function objectIterator(result) {\n      iterator(result, collection[keys[--resIndex]], done);\n    }\n\n    function objectIteratorWithKey(result) {\n      key = keys[--resIndex];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, result) {\n      if (err) {\n        callback(err, result);\n      } else if (resIndex === 0) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(function () {\n          iterate(result);\n        });\n      } else {\n        sync = true;\n        iterate(result);\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n\n\n  function createTransform(arrayEach, baseEach, symbolEach) {\n    return function transform(collection, accumulator, iterator, callback) {\n      if (arguments.length === 3) {\n        callback = iterator;\n        iterator = accumulator;\n        accumulator = undefined;\n      }\n\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = accumulator !== undefined ? accumulator : [];\n        arrayEach(collection, result, iterator, done);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = accumulator !== undefined ? accumulator : {};\n        size = symbolEach(collection, result, iterator, done);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = accumulator !== undefined ? accumulator : {};\n        baseEach(collection, result, iterator, done, keys);\n      }\n\n      if (!size) {\n        callback(null, accumulator !== undefined ? accumulator : result || {});\n      }\n\n      function done(err, bool) {\n        if (err) {\n          callback = once(callback);\n          callback(err, isArray(result) ? createArray(result) : objectClone(result));\n        } else if (++completed === size) {\n          callback(null, result);\n        } else if (bool === false) {\n          callback = once(callback);\n          callback(null, isArray(result) ? createArray(result) : objectClone(result));\n        }\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace transformSeries\n   * @param {Array|Object} collection\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num)\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2, 4]\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2, '3': 4 }\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2, 4]\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, iterator, function(err, res) {\n   *   console.log(res); //  { a: 1, b: 3, c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function transformSeries(collection, accumulator, iterator, callback) {\n    if (arguments.length === 3) {\n      callback = iterator;\n      iterator = accumulator;\n      accumulator = undefined;\n    }\n\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate, result;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      result = accumulator !== undefined ? accumulator : [];\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, accumulator !== undefined ? accumulator : result || {});\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      iterator(result, collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(result, collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(result, collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, bool) {\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size || bool === false) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace transformLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = key;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(array, 2, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(object, 2, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function transformLimit(collection, limit, accumulator, iterator, callback) {\n    if (arguments.length === 4) {\n      callback = iterator;\n      iterator = accumulator;\n      accumulator = undefined;\n    }\n\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate, result;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      result = accumulator !== undefined ? accumulator : [];\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, accumulator !== undefined ? accumulator : result || {});\n    }\n\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n\n      if (index < size) {\n        iterator(result, collection[index], onlyOnce(done));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        iterator(result, collection[index], index, onlyOnce(done));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        started++;\n        iterator(result, item.value, onlyOnce(done));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(result, item.value, started++, onlyOnce(done));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n\n      if (index < size) {\n        iterator(result, collection[keys[index]], onlyOnce(done));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n\n      if (index < size) {\n        key = keys[index];\n        iterator(result, collection[key], key, onlyOnce(done));\n      }\n    }\n\n    function done(err, bool) {\n      if (err || bool === false) {\n        iterate = noop;\n        callback(err || null, isArray(result) ? createArray(result) : objectClone(result));\n        callback = noop;\n      } else if (++completed === size) {\n        iterator = noop;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @private\n   * @param {function} arrayEach\n   * @param {function} baseEach\n   * @param {function} symbolEach\n   */\n\n\n  function createSortBy(arrayEach, baseEach, symbolEach) {\n    return function sortBy(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, array, criteria;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        array = Array(size);\n        criteria = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        array = [];\n        criteria = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, sortByCriteria(array, criteria));\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        array = Array(size);\n        criteria = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null, []);\n      }\n\n      function createCallback(index, value) {\n        var called = false;\n        array[index] = value;\n        return function done(err, criterion) {\n          if (called) {\n            throwError();\n          }\n\n          called = true;\n          criteria[index] = criterion;\n\n          if (err) {\n            callback = once(callback);\n            callback(err);\n          } else if (++completed === size) {\n            callback(null, sortByCriteria(array, criteria));\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace sortBySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n\n  function sortBySeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, value, keys, iter, item, array, criteria, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      array = collection;\n      criteria = Array(size);\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      array = [];\n      criteria = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      array = Array(size);\n      criteria = Array(size);\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, []);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      value = collection[completed];\n      iterator(value, done);\n    }\n\n    function arrayIteratorWithIndex() {\n      value = collection[completed];\n      iterator(value, completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done) {\n        return callback(null, sortByCriteria(array, criteria));\n      }\n\n      value = item.value;\n      array[completed] = value;\n      iterator(value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done) {\n        return callback(null, sortByCriteria(array, criteria));\n      }\n\n      value = item.value;\n      array[completed] = value;\n      iterator(value, completed, done);\n    }\n\n    function objectIterator() {\n      value = collection[keys[completed]];\n      array[completed] = value;\n      iterator(value, done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      value = collection[key];\n      array[completed] = value;\n      iterator(value, key, done);\n    }\n\n    function done(err, criterion) {\n      criteria[completed] = criterion;\n\n      if (err) {\n        callback(err);\n      } else if (++completed === size) {\n        iterate = throwError;\n        callback(null, sortByCriteria(array, criteria));\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace sortByLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function sortByLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, value, array, keys, iter, item, criteria, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      array = collection;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      array = [];\n      criteria = [];\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      array = Array(size);\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n\n    criteria = criteria || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        value = collection[started];\n        iterator(value, createCallback(value, started++));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        value = collection[index];\n        iterator(value, index, createCallback(value, index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        value = item.value;\n        array[started] = value;\n        iterator(value, createCallback(value, started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, sortByCriteria(array, criteria));\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        value = item.value;\n        array[started] = value;\n        iterator(value, started, createCallback(value, started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, sortByCriteria(array, criteria));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        value = collection[keys[started]];\n        array[started] = value;\n        iterator(value, createCallback(value, started++));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started];\n        value = collection[key];\n        array[started] = value;\n        iterator(value, key, createCallback(value, started++));\n      }\n    }\n\n    function createCallback(value, index) {\n      var called = false;\n      return function (err, criterion) {\n        if (called) {\n          throwError();\n        }\n\n        called = true;\n        criteria[index] = criterion;\n\n        if (err) {\n          iterate = noop;\n          callback(err);\n          callback = noop;\n        } else if (++completed === size) {\n          callback(null, sortByCriteria(array, criteria));\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace some\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n\n  function some(collection, iterator, callback) {\n    callback = callback || noop;\n    detect(collection, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n\n      callback(null, !!res);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace someSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n\n  function someSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    detectSeries(collection, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n\n      callback(null, !!res);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace someLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n\n  function someLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    detectLimit(collection, limit, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n\n      callback(null, !!res);\n    }\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n\n\n  function createEvery(arrayEach, baseEach, symbolEach) {\n    var deny = createDetect(arrayEach, baseEach, symbolEach, false);\n    return function every(collection, iterator, callback) {\n      callback = callback || noop;\n      deny(collection, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n\n        callback(null, !res);\n      }\n    };\n  }\n  /**\n   * @private\n   */\n\n\n  function createEverySeries() {\n    var denySeries = createDetectSeries(false);\n    return function everySeries(collection, iterator, callback) {\n      callback = callback || noop;\n      denySeries(collection, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n\n        callback(null, !res);\n      }\n    };\n  }\n  /**\n   * @private\n   */\n\n\n  function createEveryLimit() {\n    var denyLimit = createDetectLimit(false);\n    return function everyLimit(collection, limit, iterator, callback) {\n      callback = callback || noop;\n      denyLimit(collection, limit, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n\n        callback(null, !res);\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n\n\n  function createConcat(arrayEach, baseEach, symbolEach) {\n    return function concat(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        result = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null, []);\n      }\n\n      function createCallback(index) {\n        return function done(err, res) {\n          if (index === null) {\n            throwError();\n          }\n\n          if (err) {\n            index = null;\n            callback = once(callback);\n            arrayEachSync(result, function (array, index) {\n              if (array === undefined) {\n                result[index] = noop;\n              }\n            });\n            callback(err, makeConcatResult(result));\n            return;\n          }\n\n          switch (arguments.length) {\n            case 0:\n            case 1:\n              result[index] = noop;\n              break;\n\n            case 2:\n              result[index] = res;\n              break;\n\n            default:\n              result[index] = slice(arguments, 1);\n              break;\n          }\n\n          index = null;\n\n          if (++completed === size) {\n            callback(null, makeConcatResult(result));\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace concatSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n\n  function concatSeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = [];\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, result);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, array) {\n      if (isArray(array)) {\n        nativePush.apply(result, array);\n      } else if (arguments.length >= 2) {\n        nativePush.apply(result, slice(arguments, 1));\n      }\n\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace concatLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.cocnatLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.cocnatLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function concatLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, key, iter, item, iterate, result;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      var keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n\n    result = result || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        iterator(collection[started], createCallback(started++));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      if (started < size) {\n        iterator(collection[started], started, createCallback(started++));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, makeConcatResult(result));\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, makeConcatResult(result));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        iterator(collection[keys[started]], createCallback(started++));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started];\n        iterator(collection[key], key, createCallback(started++));\n      }\n    }\n\n    function createCallback(index) {\n      return function (err, res) {\n        if (index === null) {\n          throwError();\n        }\n\n        if (err) {\n          index = null;\n          iterate = noop;\n          callback = once(callback);\n          arrayEachSync(result, function (array, index) {\n            if (array === undefined) {\n              result[index] = noop;\n            }\n          });\n          callback(err, makeConcatResult(result));\n          return;\n        }\n\n        switch (arguments.length) {\n          case 0:\n          case 1:\n            result[index] = noop;\n            break;\n\n          case 2:\n            result[index] = res;\n            break;\n\n          default:\n            result[index] = slice(arguments, 1);\n            break;\n        }\n\n        index = null;\n\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, makeConcatResult(result));\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n\n\n  function createGroupBy(arrayEach, baseEach, symbolEach) {\n    return function groupBy(collection, iterator, callback) {\n      callback = callback || noop;\n      var size;\n      var completed = 0;\n      var result = {};\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null, {});\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function done(err, key) {\n          if (called) {\n            throwError();\n          }\n\n          called = true;\n\n          if (err) {\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n\n          var array = result[key];\n\n          if (!array) {\n            result[key] = [value];\n          } else {\n            array.push(value);\n          }\n\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace groupBySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [4.2, 6.4, 6.1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [[4.2, 0], [6.4, 1], [6.1, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [4.2, 6.4, 6.1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [[4.2, 'a'], [6.4, 'b'], [6.1, 'c']]\n   * });\n   *\n   */\n\n\n  function groupBySeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, value, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n    var result = {};\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, result);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      value = collection[completed];\n      iterator(value, done);\n    }\n\n    function arrayIteratorWithIndex() {\n      value = collection[completed];\n      iterator(value, completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      value = item.value;\n      item.done ? callback(null, result) : iterator(value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      value = item.value;\n      item.done ? callback(null, result) : iterator(value, completed, done);\n    }\n\n    function objectIterator() {\n      value = collection[keys[completed]];\n      iterator(value, done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      value = collection[key];\n      iterator(value, key, done);\n    }\n\n    function done(err, key) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, objectClone(result));\n        return;\n      }\n\n      var array = result[key];\n\n      if (!array) {\n        result[key] = [value];\n      } else {\n        array.push(value);\n      }\n\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace groupByLimit\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1.1, 5.9, 3.2, 3.9, 2.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [1.1, 3.2, 5.9, 2.1, 3.9]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1.1, 5.9, 3.2, 3.9, 2.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [[1.1, 0], [3.2, 2], [5.9, 1], [2.1, 4], [3.9, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1.1, b: 5.9, c: 3.2, d: 3.9, e: 2.1 }\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [1.1, 3.2, 5.9, 2.1, 3.9]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1.1, b: 5.9, c: 3.2, d: 3.9, e: 2.1 }\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [[1.1, 'a'], [3.2, 'c'], [5.9, 'b'], [2.1, 'e'], [3.9, 'd']]\n   * });\n   *\n   */\n\n\n  function groupByLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, value, keys, iter, item, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n    var result = {};\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        value = collection[started++];\n        iterator(value, createCallback(value));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        value = collection[index];\n        iterator(value, index, createCallback(value));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        started++;\n        value = item.value;\n        iterator(value, createCallback(value));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        value = item.value;\n        iterator(value, started++, createCallback(value));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        value = collection[keys[started++]];\n        iterator(value, createCallback(value));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started++];\n        value = collection[key];\n        iterator(value, key, createCallback(value));\n      }\n    }\n\n    function createCallback(value) {\n      var called = false;\n      return function (err, key) {\n        if (called) {\n          throwError();\n        }\n\n        called = true;\n\n        if (err) {\n          iterate = noop;\n          callback = once(callback);\n          callback(err, objectClone(result));\n          return;\n        }\n\n        var array = result[key];\n\n        if (!array) {\n          result[key] = [value];\n        } else {\n          array.push(value);\n        }\n\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   */\n\n\n  function createParallel(arrayEach, baseEach) {\n    return function parallel(tasks, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(tasks)) {\n        size = tasks.length;\n        result = Array(size);\n        arrayEach(tasks, createCallback);\n      } else if (tasks && typeof tasks === obj) {\n        keys = nativeKeys(tasks);\n        size = keys.length;\n        result = {};\n        baseEach(tasks, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null, result);\n      }\n\n      function createCallback(key) {\n        return function (err, res) {\n          if (key === null) {\n            throwError();\n          }\n\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, result);\n            return;\n          }\n\n          result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n          key = null;\n\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace series\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 40);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 20);\n   *  }\n   * ];\n   * async.series(tasks, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 30);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 40);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 20);\n   *   }\n   * };\n   * async.series(tasks, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   */\n\n\n  function series(tasks, callback) {\n    callback = callback || noop;\n    var size, key, keys, result, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      result = Array(size);\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      result = {};\n      iterate = objectIterator;\n    } else {\n      return callback(null);\n    }\n\n    if (!size) {\n      return callback(null, result);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      key = completed;\n      tasks[completed](done);\n    }\n\n    function objectIterator() {\n      key = keys[completed];\n      tasks[key](done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, result);\n        return;\n      }\n\n      result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace parallelLimit\n   * @param {Array|Object} tasks - functions\n   * @param {number} limit - limit >= 1\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 50);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 40);\n   *  }\n   * ];\n   * async.parallelLimit(tasks, 2, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 50);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 20);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 40);\n   *   }\n   * };\n   * async.parallelLimit(tasks, 2, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   */\n\n\n  function parallelLimit(tasks, limit, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, result, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      result = Array(size);\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      result = {};\n      iterate = objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n\n      if (index < size) {\n        tasks[index](createCallback(index));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        key = keys[started++];\n        tasks[key](createCallback(key));\n      }\n    }\n\n    function createCallback(key) {\n      return function (err, res) {\n        if (key === null) {\n          throwError();\n        }\n\n        if (err) {\n          key = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, result);\n          return;\n        }\n\n        result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n        key = null;\n\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace tryEach\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error'));\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(null, 2);\n   *    }, 10);\n   *  }\n   * ];\n   * async.tryEach(tasks, function(err, res) {\n   *   console.log(res); // 2\n   * });\n   *\n   * @example\n   *\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error1'));\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error2');\n   *    }, 10);\n   *  }\n   * ];\n   * async.tryEach(tasks, function(err, res) {\n   *   console.log(err); // error2\n   *   console.log(res); // undefined\n   * });\n   *\n   */\n\n\n  function tryEach(tasks, callback) {\n    callback = callback || noop;\n    var size, keys, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      iterate = objectIterator;\n    }\n\n    if (!size) {\n      return callback(null);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      tasks[completed](done);\n    }\n\n    function objectIterator() {\n      tasks[keys[completed]](done);\n    }\n\n    function done(err, res) {\n      if (!err) {\n        if (arguments.length <= 2) {\n          callback(null, res);\n        } else {\n          callback(null, slice(arguments, 1));\n        }\n      } else if (++completed === size) {\n        callback(err);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * check for waterfall tasks\n   * @private\n   * @param {Array} tasks\n   * @param {Function} callback\n   * @return {boolean}\n   */\n\n\n  function checkWaterfallTasks(tasks, callback) {\n    if (!isArray(tasks)) {\n      callback(new Error('First argument to waterfall must be an array of functions'));\n      return false;\n    }\n\n    if (tasks.length === 0) {\n      callback(null);\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * check for waterfall tasks\n   * @private\n   * @param {function} func\n   * @param {Array|Object} args - arguments\n   * @return {function} next\n   */\n\n\n  function waterfallIterator(func, args, next) {\n    switch (args.length) {\n      case 0:\n      case 1:\n        return func(next);\n\n      case 2:\n        return func(args[1], next);\n\n      case 3:\n        return func(args[1], args[2], next);\n\n      case 4:\n        return func(args[1], args[2], args[3], next);\n\n      case 5:\n        return func(args[1], args[2], args[3], args[4], next);\n\n      case 6:\n        return func(args[1], args[2], args[3], args[4], args[5], next);\n\n      default:\n        args = slice(args, 1);\n        args.push(next);\n        return func.apply(null, args);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace waterfall\n   * @param {Array} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       next(null, 1);\n   *     }, 10);\n   *   },\n   *   function(arg1, next) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       next(null, 1, 2);\n   *     }, 30);\n   *   },\n   *   function(arg1, arg2, next) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       next(null, 3);\n   *     }, 20);\n   *   },\n   *   function(arg1, next) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       next(null, 1, 2, 3, 4);\n   *     }, 40);\n   *   }\n   * ];\n   * async.waterfall(tasks, function(err, arg1, arg2, arg3, arg4) {\n   *   console.log(arg1, arg2, arg3, arg4); // 1 2 3 4\n   * });\n   *\n   */\n\n\n  function waterfall(tasks, callback) {\n    callback = callback || noop;\n\n    if (!checkWaterfallTasks(tasks, callback)) {\n      return;\n    }\n\n    var func, args, done, sync;\n    var completed = 0;\n    var size = tasks.length;\n    waterfallIterator(tasks[0], [], createCallback(0));\n\n    function iterate() {\n      waterfallIterator(func, args, createCallback(func));\n    }\n\n    function createCallback(index) {\n      return function next(err, res) {\n        if (index === undefined) {\n          callback = noop;\n          throwError();\n        }\n\n        index = undefined;\n\n        if (err) {\n          done = callback;\n          callback = throwError;\n          done(err);\n          return;\n        }\n\n        if (++completed === size) {\n          done = callback;\n          callback = throwError;\n\n          if (arguments.length <= 2) {\n            done(err, res);\n          } else {\n            done.apply(null, createArray(arguments));\n          }\n\n          return;\n        }\n\n        if (sync) {\n          args = arguments;\n          func = tasks[completed] || throwError;\n          nextTick(iterate);\n        } else {\n          sync = true;\n          waterfallIterator(tasks[completed] || throwError, arguments, createCallback(completed));\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * `angelFall` is like `waterfall` and inject callback to last argument of next task.\n   *\n   * @memberof async\n   * @namespace angelFall\n   * @param {Array} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       next(null, 1);\n   *     }, 10);\n   *   },\n   *   function(arg1, empty, next) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       next(null, 1, 2);\n   *     }, 30);\n   *   },\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       next(null, 3);\n   *     }, 20);\n   *   },\n   *   function(arg1, empty1, empty2, empty3, next) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       next(null, 1, 2, 3, 4);\n   *     }, 40);\n   *   }\n   * ];\n   * async.angelFall(tasks, function(err, arg1, arg2, arg3, arg4) {\n   *   console.log(arg1, arg2, arg3, arg4); // 1 2 3 4\n   * });\n   *\n   */\n\n\n  function angelFall(tasks, callback) {\n    callback = callback || noop;\n\n    if (!checkWaterfallTasks(tasks, callback)) {\n      return;\n    }\n\n    var completed = 0;\n    var sync = false;\n    var size = tasks.length;\n    var func = tasks[completed];\n    var args = [];\n\n    var iterate = function () {\n      switch (func.length) {\n        case 0:\n          try {\n            next(null, func());\n          } catch (e) {\n            next(e);\n          }\n\n          return;\n\n        case 1:\n          return func(next);\n\n        case 2:\n          return func(args[1], next);\n\n        case 3:\n          return func(args[1], args[2], next);\n\n        case 4:\n          return func(args[1], args[2], args[3], next);\n\n        case 5:\n          return func(args[1], args[2], args[3], args[4], next);\n\n        default:\n          args = slice(args, 1);\n          args[func.length - 1] = next;\n          return func.apply(null, args);\n      }\n    };\n\n    iterate();\n\n    function next(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err);\n        return;\n      }\n\n      if (++completed === size) {\n        iterate = throwError;\n        var done = callback;\n        callback = throwError;\n\n        if (arguments.length === 2) {\n          done(err, res);\n        } else {\n          done.apply(null, createArray(arguments));\n        }\n\n        return;\n      }\n\n      func = tasks[completed];\n      args = arguments;\n\n      if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace whilst\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n\n\n  function whilst(test, iterator, callback) {\n    callback = callback || noop;\n    var sync = false;\n\n    if (test()) {\n      iterate();\n    } else {\n      callback(null);\n    }\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (arguments.length <= 2) {\n        if (test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n\n        return;\n      }\n\n      arg = slice(arguments, 1);\n\n      if (test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace doWhilst\n   * @param {Function} iterator\n   * @param {Function} test\n   * @param {Function} callback\n   */\n\n\n  function doWhilst(iterator, test, callback) {\n    callback = callback || noop;\n    var sync = false;\n    next();\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (arguments.length <= 2) {\n        if (test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n\n        return;\n      }\n\n      arg = slice(arguments, 1);\n\n      if (test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace until\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n\n\n  function until(test, iterator, callback) {\n    callback = callback || noop;\n    var sync = false;\n\n    if (!test()) {\n      iterate();\n    } else {\n      callback(null);\n    }\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (arguments.length <= 2) {\n        if (!test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n\n        return;\n      }\n\n      arg = slice(arguments, 1);\n\n      if (!test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace doUntil\n   * @param {Function} iterator\n   * @param {Function} test\n   * @param {Function} callback\n   */\n\n\n  function doUntil(iterator, test, callback) {\n    callback = callback || noop;\n    var sync = false;\n    next();\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (arguments.length <= 2) {\n        if (!test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n\n        return;\n      }\n\n      arg = slice(arguments, 1);\n\n      if (!test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace during\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n\n\n  function during(test, iterator, callback) {\n    callback = callback || noop;\n\n    _test();\n\n    function _test() {\n      test(iterate);\n    }\n\n    function iterate(err, truth) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (truth) {\n        iterator(done);\n      } else {\n        callback(null);\n      }\n    }\n\n    function done(err) {\n      if (err) {\n        return callback(err);\n      }\n\n      _test();\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace doDuring\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n\n\n  function doDuring(iterator, test, callback) {\n    callback = callback || noop;\n    iterate(null, true);\n\n    function iterate(err, truth) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (truth) {\n        iterator(done);\n      } else {\n        callback(null);\n      }\n    }\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n\n      switch (arguments.length) {\n        case 0:\n        case 1:\n          test(iterate);\n          break;\n\n        case 2:\n          test(res, iterate);\n          break;\n\n        default:\n          var args = slice(arguments, 1);\n          args.push(iterate);\n          test.apply(null, args);\n          break;\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace forever\n   */\n\n\n  function forever(iterator, callback) {\n    var sync = false;\n    iterate();\n\n    function iterate() {\n      iterator(next);\n    }\n\n    function next(err) {\n      if (err) {\n        if (callback) {\n          return callback(err);\n        }\n\n        throw err;\n      }\n\n      if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace compose\n   */\n\n\n  function compose() {\n    return seq.apply(null, reverse(arguments));\n  }\n  /**\n   * @memberof async\n   * @namespace seq\n   */\n\n\n  function seq()\n  /* functions... */\n  {\n    var fns = createArray(arguments);\n    return function () {\n      var self = this;\n      var args = createArray(arguments);\n      var callback = args[args.length - 1];\n\n      if (typeof callback === func) {\n        args.pop();\n      } else {\n        callback = noop;\n      }\n\n      reduce(fns, args, iterator, done);\n\n      function iterator(newargs, fn, callback) {\n        var func = function (err) {\n          var nextargs = slice(arguments, 1);\n          callback(err, nextargs);\n        };\n\n        newargs.push(func);\n        fn.apply(self, newargs);\n      }\n\n      function done(err, res) {\n        res = isArray(res) ? res : [res];\n        res.unshift(err);\n        callback.apply(self, res);\n      }\n    };\n  }\n\n  function createApplyEach(func) {\n    return function applyEach(fns\n    /* arguments */\n    ) {\n      var go = function () {\n        var self = this;\n        var args = createArray(arguments);\n        var callback = args.pop() || noop;\n        return func(fns, iterator, callback);\n\n        function iterator(fn, done) {\n          fn.apply(self, args.concat([done]));\n        }\n      };\n\n      if (arguments.length > 1) {\n        var args = slice(arguments, 1);\n        return go.apply(this, args);\n      } else {\n        return go;\n      }\n    };\n  }\n  /**\n   * @see https://github.com/caolan/async/blob/master/lib/internal/DoublyLinkedList.js\n   */\n\n\n  function DLL() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  DLL.prototype._removeLink = function (node) {\n    var prev = node.prev;\n    var next = node.next;\n\n    if (prev) {\n      prev.next = next;\n    } else {\n      this.head = next;\n    }\n\n    if (next) {\n      next.prev = prev;\n    } else {\n      this.tail = prev;\n    }\n\n    node.prev = null;\n    node.next = null;\n    this.length--;\n    return node;\n  };\n\n  DLL.prototype.empty = DLL;\n\n  DLL.prototype._setInitial = function (node) {\n    this.length = 1;\n    this.head = this.tail = node;\n  };\n\n  DLL.prototype.insertBefore = function (node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n\n    if (node.prev) {\n      node.prev.next = newNode;\n    } else {\n      this.head = newNode;\n    }\n\n    node.prev = newNode;\n    this.length++;\n  };\n\n  DLL.prototype.unshift = function (node) {\n    if (this.head) {\n      this.insertBefore(this.head, node);\n    } else {\n      this._setInitial(node);\n    }\n  };\n\n  DLL.prototype.push = function (node) {\n    var tail = this.tail;\n\n    if (tail) {\n      node.prev = tail;\n      node.next = tail.next;\n      this.tail = node;\n      tail.next = node;\n      this.length++;\n    } else {\n      this._setInitial(node);\n    }\n  };\n\n  DLL.prototype.shift = function () {\n    return this.head && this._removeLink(this.head);\n  };\n\n  DLL.prototype.splice = function (end) {\n    var task;\n    var tasks = [];\n\n    while (end-- && (task = this.shift())) {\n      tasks.push(task);\n    }\n\n    return tasks;\n  };\n\n  DLL.prototype.remove = function (test) {\n    var node = this.head;\n\n    while (node) {\n      if (test(node)) {\n        this._removeLink(node);\n      }\n\n      node = node.next;\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   */\n\n\n  function baseQueue(isQueue, worker, concurrency, payload) {\n    if (concurrency === undefined) {\n      concurrency = 1;\n    } else if (isNaN(concurrency) || concurrency < 1) {\n      throw new Error('Concurrency must not be zero');\n    }\n\n    var workers = 0;\n    var workersList = [];\n\n    var _callback, _unshift;\n\n    var q = {\n      _tasks: new DLL(),\n      concurrency: concurrency,\n      payload: payload,\n      saturated: noop,\n      unsaturated: noop,\n      buffer: concurrency / 4,\n      empty: noop,\n      drain: noop,\n      error: noop,\n      started: false,\n      paused: false,\n      push: push,\n      kill: kill,\n      unshift: unshift,\n      remove: remove,\n      process: isQueue ? runQueue : runCargo,\n      length: getLength,\n      running: running,\n      workersList: getWorkersList,\n      idle: idle,\n      pause: pause,\n      resume: resume,\n      _worker: worker\n    };\n    return q;\n\n    function push(tasks, callback) {\n      _insert(tasks, callback);\n    }\n\n    function unshift(tasks, callback) {\n      _insert(tasks, callback, true);\n    }\n\n    function _exec(task) {\n      var item = {\n        data: task,\n        callback: _callback\n      };\n\n      if (_unshift) {\n        q._tasks.unshift(item);\n      } else {\n        q._tasks.push(item);\n      }\n\n      nextTick(q.process);\n    }\n\n    function _insert(tasks, callback, unshift) {\n      if (callback == null) {\n        callback = noop;\n      } else if (typeof callback !== 'function') {\n        throw new Error('task callback must be a function');\n      }\n\n      q.started = true;\n\n      var _tasks = isArray(tasks) ? tasks : [tasks];\n\n      if (tasks === undefined || !_tasks.length) {\n        if (q.idle()) {\n          nextTick(q.drain);\n        }\n\n        return;\n      }\n\n      _unshift = unshift;\n      _callback = callback;\n      arrayEachSync(_tasks, _exec);\n    }\n\n    function kill() {\n      q.drain = noop;\n\n      q._tasks.empty();\n    }\n\n    function _next(q, tasks) {\n      var called = false;\n      return function done(err, res) {\n        if (called) {\n          throwError();\n        }\n\n        called = true;\n        workers--;\n        var task;\n        var index = -1;\n        var size = workersList.length;\n        var taskIndex = -1;\n        var taskSize = tasks.length;\n        var useApply = arguments.length > 2;\n        var args = useApply && createArray(arguments);\n\n        while (++taskIndex < taskSize) {\n          task = tasks[taskIndex];\n\n          while (++index < size) {\n            if (workersList[index] === task) {\n              if (index === 0) {\n                workersList.shift();\n              } else {\n                workersList.splice(index, 1);\n              }\n\n              index = size;\n              size--;\n            }\n          }\n\n          index = -1;\n\n          if (useApply) {\n            task.callback.apply(task, args);\n          } else {\n            task.callback(err, res);\n          }\n\n          if (err) {\n            q.error(err, task.data);\n          }\n        }\n\n        if (workers <= q.concurrency - q.buffer) {\n          q.unsaturated();\n        }\n\n        if (q._tasks.length + workers === 0) {\n          q.drain();\n        }\n\n        q.process();\n      };\n    }\n\n    function runQueue() {\n      while (!q.paused && workers < q.concurrency && q._tasks.length) {\n        var task = q._tasks.shift();\n\n        workers++;\n        workersList.push(task);\n\n        if (q._tasks.length === 0) {\n          q.empty();\n        }\n\n        if (workers === q.concurrency) {\n          q.saturated();\n        }\n\n        var done = _next(q, [task]);\n\n        worker(task.data, done);\n      }\n    }\n\n    function runCargo() {\n      while (!q.paused && workers < q.concurrency && q._tasks.length) {\n        var tasks = q._tasks.splice(q.payload || q._tasks.length);\n\n        var index = -1;\n        var size = tasks.length;\n        var data = Array(size);\n\n        while (++index < size) {\n          data[index] = tasks[index].data;\n        }\n\n        workers++;\n        nativePush.apply(workersList, tasks);\n\n        if (q._tasks.length === 0) {\n          q.empty();\n        }\n\n        if (workers === q.concurrency) {\n          q.saturated();\n        }\n\n        var done = _next(q, tasks);\n\n        worker(data, done);\n      }\n    }\n\n    function getLength() {\n      return q._tasks.length;\n    }\n\n    function running() {\n      return workers;\n    }\n\n    function getWorkersList() {\n      return workersList;\n    }\n\n    function idle() {\n      return q.length() + workers === 0;\n    }\n\n    function pause() {\n      q.paused = true;\n    }\n\n    function _resume() {\n      nextTick(q.process);\n    }\n\n    function resume() {\n      if (q.paused === false) {\n        return;\n      }\n\n      q.paused = false;\n      var count = q.concurrency < q._tasks.length ? q.concurrency : q._tasks.length;\n      timesSync(count, _resume);\n    }\n    /**\n     * @param {Function} test\n     */\n\n\n    function remove(test) {\n      q._tasks.remove(test);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace queue\n   */\n\n\n  function queue(worker, concurrency) {\n    return baseQueue(true, worker, concurrency);\n  }\n  /**\n   * @memberof async\n   * @namespace priorityQueue\n   */\n\n\n  function priorityQueue(worker, concurrency) {\n    var q = baseQueue(true, worker, concurrency);\n    q.push = push;\n    delete q.unshift;\n    return q;\n\n    function push(tasks, priority, callback) {\n      q.started = true;\n      priority = priority || 0;\n\n      var _tasks = isArray(tasks) ? tasks : [tasks];\n\n      var taskSize = _tasks.length;\n\n      if (tasks === undefined || taskSize === 0) {\n        if (q.idle()) {\n          nextTick(q.drain);\n        }\n\n        return;\n      }\n\n      callback = typeof callback === func ? callback : noop;\n      var nextNode = q._tasks.head;\n\n      while (nextNode && priority >= nextNode.priority) {\n        nextNode = nextNode.next;\n      }\n\n      while (taskSize--) {\n        var item = {\n          data: _tasks[taskSize],\n          priority: priority,\n          callback: callback\n        };\n\n        if (nextNode) {\n          q._tasks.insertBefore(nextNode, item);\n        } else {\n          q._tasks.push(item);\n        }\n\n        nextTick(q.process);\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace cargo\n   */\n\n\n  function cargo(worker, payload) {\n    return baseQueue(false, worker, 1, payload);\n  }\n  /**\n   * @memberof async\n   * @namespace auto\n   * @param {Object} tasks\n   * @param {number} [concurrency]\n   * @param {Function} [callback]\n   */\n\n\n  function auto(tasks, concurrency, callback) {\n    if (typeof concurrency === func) {\n      callback = concurrency;\n      concurrency = null;\n    }\n\n    var keys = nativeKeys(tasks);\n    var rest = keys.length;\n    var results = {};\n\n    if (rest === 0) {\n      return callback(null, results);\n    }\n\n    var runningTasks = 0;\n    var readyTasks = [];\n    var listeners = Object.create(null);\n    callback = onlyOnce(callback || noop);\n    concurrency = concurrency || rest;\n    baseEachSync(tasks, iterator, keys);\n    proceedQueue();\n\n    function iterator(task, key) {\n      // no dependencies\n      var _task, _taskSize;\n\n      if (!isArray(task)) {\n        _task = task;\n        _taskSize = 0;\n        readyTasks.push([_task, _taskSize, done]);\n        return;\n      }\n\n      var dependencySize = task.length - 1;\n      _task = task[dependencySize];\n      _taskSize = dependencySize;\n\n      if (dependencySize === 0) {\n        readyTasks.push([_task, _taskSize, done]);\n        return;\n      } // dependencies\n\n\n      var index = -1;\n\n      while (++index < dependencySize) {\n        var dependencyName = task[index];\n\n        if (notInclude(keys, dependencyName)) {\n          var msg = 'async.auto task `' + key + '` has non-existent dependency `' + dependencyName + '` in ' + task.join(', ');\n          throw new Error(msg);\n        }\n\n        var taskListeners = listeners[dependencyName];\n\n        if (!taskListeners) {\n          taskListeners = listeners[dependencyName] = [];\n        }\n\n        taskListeners.push(taskListener);\n      }\n\n      function done(err, arg) {\n        if (key === null) {\n          throwError();\n        }\n\n        arg = arguments.length <= 2 ? arg : slice(arguments, 1);\n\n        if (err) {\n          rest = 0;\n          runningTasks = 0;\n          readyTasks.length = 0;\n          var safeResults = objectClone(results);\n          safeResults[key] = arg;\n          key = null;\n          var _callback = callback;\n          callback = noop;\n\n          _callback(err, safeResults);\n\n          return;\n        }\n\n        runningTasks--;\n        rest--;\n        results[key] = arg;\n        taskComplete(key);\n        key = null;\n      }\n\n      function taskListener() {\n        if (--dependencySize === 0) {\n          readyTasks.push([_task, _taskSize, done]);\n        }\n      }\n    }\n\n    function proceedQueue() {\n      if (readyTasks.length === 0 && runningTasks === 0) {\n        if (rest !== 0) {\n          throw new Error('async.auto task has cyclic dependencies');\n        }\n\n        return callback(null, results);\n      }\n\n      while (readyTasks.length && runningTasks < concurrency && callback !== noop) {\n        runningTasks++;\n        var array = readyTasks.shift();\n\n        if (array[1] === 0) {\n          array[0](array[2]);\n        } else {\n          array[0](results, array[2]);\n        }\n      }\n    }\n\n    function taskComplete(key) {\n      var taskListeners = listeners[key] || [];\n      arrayEachSync(taskListeners, function (task) {\n        task();\n      });\n      proceedQueue();\n    }\n  }\n\n  var FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\n  var FN_ARG_SPLIT = /,/;\n  var FN_ARG = /(=.+)?(\\s*)$/;\n  var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\n  /**\n   * parse function arguments for `autoInject`\n   *\n   * @private\n   */\n\n  function parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg) {\n      return arg.replace(FN_ARG, '').trim();\n    });\n    return func;\n  }\n  /**\n   * @memberof async\n   * @namespace autoInject\n   * @param {Object} tasks\n   * @param {number} [concurrency]\n   * @param {Function} [callback]\n   */\n\n\n  function autoInject(tasks, concurrency, callback) {\n    var newTasks = {};\n    baseEachSync(tasks, iterator, nativeKeys(tasks));\n    auto(newTasks, concurrency, callback);\n\n    function iterator(task, key) {\n      var params;\n      var taskLength = task.length;\n\n      if (isArray(task)) {\n        if (taskLength === 0) {\n          throw new Error('autoInject task functions require explicit parameters.');\n        }\n\n        params = createArray(task);\n        taskLength = params.length - 1;\n        task = params[taskLength];\n\n        if (taskLength === 0) {\n          newTasks[key] = task;\n          return;\n        }\n      } else if (taskLength === 1) {\n        newTasks[key] = task;\n        return;\n      } else {\n        params = parseParams(task);\n\n        if (taskLength === 0 && params.length === 0) {\n          throw new Error('autoInject task functions require explicit parameters.');\n        }\n\n        taskLength = params.length - 1;\n      }\n\n      params[taskLength] = newTask;\n      newTasks[key] = params;\n\n      function newTask(results, done) {\n        switch (taskLength) {\n          case 1:\n            task(results[params[0]], done);\n            break;\n\n          case 2:\n            task(results[params[0]], results[params[1]], done);\n            break;\n\n          case 3:\n            task(results[params[0]], results[params[1]], results[params[2]], done);\n            break;\n\n          default:\n            var i = -1;\n\n            while (++i < taskLength) {\n              params[i] = results[params[i]];\n            }\n\n            params[i] = done;\n            task.apply(null, params);\n            break;\n        }\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace retry\n   * @param {integer|Object|Function} opts\n   * @param {Function} [task]\n   * @param {Function} [callback]\n   */\n\n\n  function retry(opts, task, callback) {\n    var times, intervalFunc, errorFilter;\n    var count = 0;\n\n    if (arguments.length < 3 && typeof opts === func) {\n      callback = task || noop;\n      task = opts;\n      opts = null;\n      times = DEFAULT_TIMES;\n    } else {\n      callback = callback || noop;\n\n      switch (typeof opts) {\n        case 'object':\n          if (typeof opts.errorFilter === func) {\n            errorFilter = opts.errorFilter;\n          }\n\n          var interval = opts.interval;\n\n          switch (typeof interval) {\n            case func:\n              intervalFunc = interval;\n              break;\n\n            case 'string':\n            case 'number':\n              interval = +interval;\n              intervalFunc = interval ? function () {\n                return interval;\n              } : function () {\n                return DEFAULT_INTERVAL;\n              };\n              break;\n          }\n\n          times = +opts.times || DEFAULT_TIMES;\n          break;\n\n        case 'number':\n          times = opts || DEFAULT_TIMES;\n          break;\n\n        case 'string':\n          times = +opts || DEFAULT_TIMES;\n          break;\n\n        default:\n          throw new Error('Invalid arguments for async.retry');\n      }\n    }\n\n    if (typeof task !== 'function') {\n      throw new Error('Invalid arguments for async.retry');\n    }\n\n    if (intervalFunc) {\n      task(intervalCallback);\n    } else {\n      task(simpleCallback);\n    }\n\n    function simpleIterator() {\n      task(simpleCallback);\n    }\n\n    function simpleCallback(err, res) {\n      if (++count === times || !err || errorFilter && !errorFilter(err)) {\n        if (arguments.length <= 2) {\n          return callback(err, res);\n        }\n\n        var args = createArray(arguments);\n        return callback.apply(null, args);\n      }\n\n      simpleIterator();\n    }\n\n    function intervalIterator() {\n      task(intervalCallback);\n    }\n\n    function intervalCallback(err, res) {\n      if (++count === times || !err || errorFilter && !errorFilter(err)) {\n        if (arguments.length <= 2) {\n          return callback(err, res);\n        }\n\n        var args = createArray(arguments);\n        return callback.apply(null, args);\n      }\n\n      setTimeout(intervalIterator, intervalFunc(count));\n    }\n  }\n\n  function retryable(opts, task) {\n    if (!task) {\n      task = opts;\n      opts = null;\n    }\n\n    return done;\n\n    function done() {\n      var taskFn;\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      var callback = args[lastIndex];\n\n      switch (task.length) {\n        case 1:\n          taskFn = task1;\n          break;\n\n        case 2:\n          taskFn = task2;\n          break;\n\n        case 3:\n          taskFn = task3;\n          break;\n\n        default:\n          taskFn = task4;\n      }\n\n      if (opts) {\n        retry(opts, taskFn, callback);\n      } else {\n        retry(taskFn, callback);\n      }\n\n      function task1(done) {\n        task(done);\n      }\n\n      function task2(done) {\n        task(args[0], done);\n      }\n\n      function task3(done) {\n        task(args[0], args[1], done);\n      }\n\n      function task4(callback) {\n        args[lastIndex] = callback;\n        task.apply(null, args);\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace iterator\n   */\n\n\n  function iterator(tasks) {\n    var size = 0;\n    var keys = [];\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n    } else {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n    }\n\n    return makeCallback(0);\n\n    function makeCallback(index) {\n      var fn = function () {\n        if (size) {\n          var key = keys[index] || index;\n          tasks[key].apply(null, createArray(arguments));\n        }\n\n        return fn.next();\n      };\n\n      fn.next = function () {\n        return index < size - 1 ? makeCallback(index + 1) : null;\n      };\n\n      return fn;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace apply\n   */\n\n\n  function apply(func) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return func;\n\n      case 2:\n        return func.bind(null, arguments[1]);\n\n      case 3:\n        return func.bind(null, arguments[1], arguments[2]);\n\n      case 4:\n        return func.bind(null, arguments[1], arguments[2], arguments[3]);\n\n      case 5:\n        return func.bind(null, arguments[1], arguments[2], arguments[3], arguments[4]);\n\n      default:\n        var size = arguments.length;\n        var index = 0;\n        var args = Array(size);\n        args[index] = null;\n\n        while (++index < size) {\n          args[index] = arguments[index];\n        }\n\n        return func.bind.apply(func, args);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace timeout\n   * @param {Function} func\n   * @param {number} millisec\n   * @param {*} info\n   */\n\n\n  function timeout(func, millisec, info) {\n    var callback, timer;\n    return wrappedFunc;\n\n    function wrappedFunc() {\n      timer = setTimeout(timeoutCallback, millisec);\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      callback = args[lastIndex];\n      args[lastIndex] = injectedCallback;\n      simpleApply(func, args);\n    }\n\n    function timeoutCallback() {\n      var name = func.name || 'anonymous';\n      var err = new Error('Callback function \"' + name + '\" timed out.');\n      err.code = 'ETIMEDOUT';\n\n      if (info) {\n        err.info = info;\n      }\n\n      timer = null;\n      callback(err);\n    }\n\n    function injectedCallback() {\n      if (timer !== null) {\n        simpleApply(callback, createArray(arguments));\n        clearTimeout(timer);\n      }\n    }\n\n    function simpleApply(func, args) {\n      switch (args.length) {\n        case 0:\n          func();\n          break;\n\n        case 1:\n          func(args[0]);\n          break;\n\n        case 2:\n          func(args[0], args[1]);\n          break;\n\n        default:\n          func.apply(null, args);\n          break;\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace times\n   * @param {number} n - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.times(4, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n\n\n  function times(n, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n\n    if (isNaN(n) || n < 1) {\n      return callback(null, []);\n    }\n\n    var result = Array(n);\n    timesSync(n, iterate);\n\n    function iterate(num) {\n      iterator(num, createCallback(num));\n    }\n\n    function createCallback(index) {\n      return function (err, res) {\n        if (index === null) {\n          throwError();\n        }\n\n        result[index] = res;\n        index = null;\n\n        if (err) {\n          callback(err);\n          callback = noop;\n        } else if (--n === 0) {\n          callback(null, result);\n        }\n      };\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace timesSeries\n   * @param {number} n - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.timesSeries(4, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n\n\n  function timesSeries(n, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n\n    if (isNaN(n) || n < 1) {\n      return callback(null, []);\n    }\n\n    var result = Array(n);\n    var sync = false;\n    var completed = 0;\n    iterate();\n\n    function iterate() {\n      iterator(completed, done);\n    }\n\n    function done(err, res) {\n      result[completed] = res;\n\n      if (err) {\n        callback(err);\n        callback = throwError;\n      } else if (++completed >= n) {\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace timesLimit\n   * @param {number} n - n >= 1\n   * @param {number} limit - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.timesLimit(4, 2, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n\n\n  function timesLimit(n, limit, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n\n    if (isNaN(n) || n < 1 || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n\n    var result = Array(n);\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n    timesSync(limit > n ? n : limit, iterate);\n\n    function iterate() {\n      var index = started++;\n\n      if (index < n) {\n        iterator(index, createCallback(index));\n      }\n    }\n\n    function createCallback(index) {\n      return function (err, res) {\n        if (index === null) {\n          throwError();\n        }\n\n        result[index] = res;\n        index = null;\n\n        if (err) {\n          callback(err);\n          callback = noop;\n        } else if (++completed >= n) {\n          callback(null, result);\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace race\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var called = 0;\n   * var tasks = [\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '1');\n   *     }, 30);\n   *   },\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '2');\n   *     }, 20);\n   *   },\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '3');\n   *     }, 10);\n   *   }\n   * ];\n   * async.race(tasks, function(err, res) {\n   *   console.log(res); // '3'\n   *   console.log(called); // 1\n   *   setTimeout(function() {\n   *     console.log(called); // 3\n   *   }, 50);\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var called = 0;\n   * var tasks = {\n   *   'test1': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '1');\n   *     }, 30);\n   *   },\n   *   'test2': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '2');\n   *     }, 20);\n   *   },\n   *   'test3': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '3');\n   *     }, 10);\n   *   }\n   * };\n   * async.race(tasks, function(err, res) {\n   *   console.log(res); // '3'\n   *   console.log(called); // 1\n   *   setTimeout(function() {\n   *     console.log(called); // 3\n   *     done();\n   *   }, 50);\n   * });\n   *\n   */\n\n\n  function race(tasks, callback) {\n    callback = once(callback || noop);\n    var size, keys;\n    var index = -1;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n\n      while (++index < size) {\n        tasks[index](callback);\n      }\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n\n      while (++index < size) {\n        tasks[keys[index]](callback);\n      }\n    } else {\n      return callback(new TypeError('First argument to race must be a collection of functions'));\n    }\n\n    if (!size) {\n      callback(null);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace memoize\n   */\n\n\n  function memoize(fn, hasher) {\n    hasher = hasher || function (hash) {\n      return hash;\n    };\n\n    var memo = {};\n    var queues = {};\n\n    var memoized = function () {\n      var args = createArray(arguments);\n      var callback = args.pop();\n      var key = hasher.apply(null, args);\n\n      if (has(memo, key)) {\n        nextTick(function () {\n          callback.apply(null, memo[key]);\n        });\n        return;\n      }\n\n      if (has(queues, key)) {\n        return queues[key].push(callback);\n      }\n\n      queues[key] = [callback];\n      args.push(done);\n      fn.apply(null, args);\n\n      function done(err) {\n        var args = createArray(arguments);\n\n        if (!err) {\n          memo[key] = args;\n        }\n\n        var q = queues[key];\n        delete queues[key];\n        var i = -1;\n        var size = q.length;\n\n        while (++i < size) {\n          q[i].apply(null, args);\n        }\n      }\n    };\n\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n  }\n  /**\n   * @memberof async\n   * @namespace unmemoize\n   */\n\n\n  function unmemoize(fn) {\n    return function () {\n      return (fn.unmemoized || fn).apply(null, arguments);\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace ensureAsync\n   */\n\n\n  function ensureAsync(fn) {\n    return function ()\n    /* ...args, callback */\n    {\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      var callback = args[lastIndex];\n      var sync = true;\n      args[lastIndex] = done;\n      fn.apply(this, args);\n      sync = false;\n\n      function done() {\n        var innerArgs = createArray(arguments);\n\n        if (sync) {\n          nextTick(function () {\n            callback.apply(null, innerArgs);\n          });\n        } else {\n          callback.apply(null, innerArgs);\n        }\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace constant\n   */\n\n\n  function constant()\n  /* values... */\n  {\n    var args = [null].concat(createArray(arguments));\n    return function (callback) {\n      callback = arguments[arguments.length - 1];\n      callback.apply(this, args);\n    };\n  }\n\n  function asyncify(fn) {\n    return function ()\n    /* args..., callback */\n    {\n      var args = createArray(arguments);\n      var callback = args.pop();\n      var result;\n\n      try {\n        result = fn.apply(this, args);\n      } catch (e) {\n        return callback(e);\n      }\n\n      if (result && typeof result.then === func) {\n        result.then(function (value) {\n          invokeCallback(callback, null, value);\n        }, function (err) {\n          invokeCallback(callback, err && err.message ? err : new Error(err));\n        });\n      } else {\n        callback(null, result);\n      }\n    };\n  }\n\n  function invokeCallback(callback, err, value) {\n    try {\n      callback(err, value);\n    } catch (e) {\n      nextTick(rethrow, e);\n    }\n  }\n\n  function rethrow(error) {\n    throw error;\n  }\n  /**\n   * @memberof async\n   * @namespace reflect\n   * @param {Function} func\n   * @return {Function}\n   */\n\n\n  function reflect(func) {\n    return function ()\n    /* args..., callback */\n    {\n      var callback;\n\n      switch (arguments.length) {\n        case 1:\n          callback = arguments[0];\n          return func(done);\n\n        case 2:\n          callback = arguments[1];\n          return func(arguments[0], done);\n\n        default:\n          var args = createArray(arguments);\n          var lastIndex = args.length - 1;\n          callback = args[lastIndex];\n          args[lastIndex] = done;\n          func.apply(this, args);\n      }\n\n      function done(err, res) {\n        if (err) {\n          return callback(null, {\n            error: err\n          });\n        }\n\n        if (arguments.length > 2) {\n          res = slice(arguments, 1);\n        }\n\n        callback(null, {\n          value: res\n        });\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace reflectAll\n   * @param {Array[]|Object} tasks\n   * @return {Function}\n   */\n\n\n  function reflectAll(tasks) {\n    var newTasks, keys;\n\n    if (isArray(tasks)) {\n      newTasks = Array(tasks.length);\n      arrayEachSync(tasks, iterate);\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      newTasks = {};\n      baseEachSync(tasks, iterate, keys);\n    }\n\n    return newTasks;\n\n    function iterate(func, key) {\n      newTasks[key] = reflect(func);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace createLogger\n   */\n\n\n  function createLogger(name) {\n    return function (fn) {\n      var args = slice(arguments, 1);\n      args.push(done);\n      fn.apply(null, args);\n    };\n\n    function done(err) {\n      if (typeof console === obj) {\n        if (err) {\n          if (console.error) {\n            console.error(err);\n          }\n\n          return;\n        }\n\n        if (console[name]) {\n          var args = slice(arguments, 1);\n          arrayEachSync(args, function (arg) {\n            console[name](arg);\n          });\n        }\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace safe\n   */\n\n\n  function safe() {\n    createImmediate();\n    return exports;\n  }\n  /**\n   * @memberof async\n   * @namespace fast\n   */\n\n\n  function fast() {\n    createImmediate(false);\n    return exports;\n  }\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/neo-async/async.js"],"names":["global","factory","exports","module","define","amd","async","neo_async","noop","throwError","Error","DEFAULT_TIMES","DEFAULT_INTERVAL","obj","func","isArray","Array","nativeKeys","Object","keys","nativePush","prototype","push","iteratorSymbol","Symbol","iterator","nextTick","asyncNextTick","asyncSetImmediate","createImmediate","each","createEach","arrayEach","baseEach","symbolEach","map","createMap","arrayEachIndex","baseEachIndex","symbolEachIndex","mapValues","baseEachKey","symbolEachKey","filter","createFilter","arrayEachIndexValue","baseEachIndexValue","symbolEachIndexValue","filterSeries","createFilterSeries","filterLimit","createFilterLimit","reject","rejectSeries","rejectLimit","detect","createDetect","arrayEachValue","baseEachValue","symbolEachValue","detectSeries","createDetectSeries","detectLimit","createDetectLimit","every","createEvery","everySeries","createEverySeries","everyLimit","createEveryLimit","pick","createPick","baseEachKeyValue","symbolEachKeyValue","pickSeries","createPickSeries","pickLimit","createPickLimit","omit","omitSeries","omitLimit","transform","createTransform","arrayEachResult","baseEachResult","symbolEachResult","sortBy","createSortBy","concat","createConcat","groupBy","createGroupBy","parallel","createParallel","arrayEachFunc","baseEachFunc","applyEach","createApplyEach","applyEachSeries","mapSeries","log","createLogger","dir","index","VERSION","eachSeries","eachLimit","forEach","forEachSeries","forEachLimit","eachOf","eachOfSeries","eachOfLimit","forEachOf","forEachOfSeries","forEachOfLimit","mapLimit","mapValuesSeries","mapValuesLimit","select","selectSeries","selectLimit","find","findSeries","findLimit","reduce","inject","foldl","reduceRight","foldr","transformSeries","transformLimit","sortBySeries","sortByLimit","some","someSeries","someLimit","any","anySeries","anyLimit","all","allSeries","allLimit","concatSeries","concatLimit","groupBySeries","groupByLimit","series","parallelLimit","tryEach","waterfall","angelFall","angelfall","whilst","doWhilst","until","doUntil","during","doDuring","forever","compose","seq","queue","priorityQueue","cargo","auto","autoInject","retry","retryable","times","timesSeries","timesLimit","race","apply","setImmediate","memoize","unmemoize","ensureAsync","constant","asyncify","wrapSync","reflect","reflectAll","timeout","safe","fast","baseEachSync","key","safeMode","delay","fn","args","slice","arguments","setTimeout","process","test","version","cb","createArray","array","size","length","result","start","end","objectClone","object","compact","value","reverse","resIndex","has","hasOwnProperty","notInclude","target","arrayEachSync","timesSync","n","sortByCriteria","criteria","l","indices","i","quickSort","undefined","partition","j","mid","r","swap","k","p","makeConcatResult","callback","onlyOnce","collection","iter","item","next","done","createCallback","err","res","once","completed","bool","useArray","init","clone","iterate","sync","arrayIteratorWithIndex","arrayIterator","Infinity","symbolIteratorWithKey","symbolIterator","objectIteratorWithKey","objectIterator","limit","started","isNaN","called","col","accumulator","criterion","deny","denySeries","denyLimit","tasks","checkWaterfallTasks","waterfallIterator","e","arg","_test","truth","fns","self","pop","newargs","nextargs","unshift","go","DLL","head","tail","_removeLink","node","prev","empty","_setInitial","insertBefore","newNode","shift","splice","task","remove","baseQueue","isQueue","worker","concurrency","payload","workers","workersList","_callback","_unshift","q","_tasks","saturated","unsaturated","buffer","drain","error","paused","kill","runQueue","runCargo","getLength","running","getWorkersList","idle","pause","resume","_worker","_insert","_exec","data","_next","taskIndex","taskSize","useApply","_resume","count","priority","nextNode","rest","results","runningTasks","readyTasks","listeners","create","proceedQueue","_task","_taskSize","dependencySize","dependencyName","msg","join","taskListeners","taskListener","safeResults","taskComplete","FN_ARGS","FN_ARG_SPLIT","FN_ARG","STRIP_COMMENTS","parseParams","toString","replace","match","split","trim","newTasks","params","taskLength","newTask","opts","intervalFunc","errorFilter","interval","intervalCallback","simpleCallback","simpleIterator","intervalIterator","taskFn","lastIndex","task1","task2","task3","task4","makeCallback","bind","millisec","info","timer","wrappedFunc","timeoutCallback","injectedCallback","simpleApply","name","code","clearTimeout","num","TypeError","hasher","hash","memo","queues","memoized","unmemoized","innerArgs","then","invokeCallback","message","rethrow","console"],"mappings":"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","sourcesContent":["(function(global, factory) {\n  /*jshint -W030 */\n  'use strict';\n  typeof exports === 'object' && typeof module !== 'undefined'\n    ? factory(exports)\n    : typeof define === 'function' && define.amd\n    ? define(['exports'], factory)\n    : global.async\n    ? factory((global.neo_async = global.neo_async || {}))\n    : factory((global.async = global.async || {}));\n})(this, function(exports) {\n  'use strict';\n\n  var noop = function noop() {};\n  var throwError = function throwError() {\n    throw new Error('Callback was already called.');\n  };\n\n  var DEFAULT_TIMES = 5;\n  var DEFAULT_INTERVAL = 0;\n\n  var obj = 'object';\n  var func = 'function';\n  var isArray = Array.isArray;\n  var nativeKeys = Object.keys;\n  var nativePush = Array.prototype.push;\n  var iteratorSymbol = typeof Symbol === func && Symbol.iterator;\n\n  var nextTick, asyncNextTick, asyncSetImmediate;\n  createImmediate();\n\n  /**\n   * @memberof async\n   * @namespace each\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 2);\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   */\n  var each = createEach(arrayEach, baseEach, symbolEach);\n\n  /**\n   * @memberof async\n   * @namespace map\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var map = createMap(arrayEachIndex, baseEachIndex, symbolEachIndex, true);\n\n  /**\n   * @memberof async\n   * @namespace mapValues\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var mapValues = createMap(arrayEachIndex, baseEachKey, symbolEachKey, false);\n\n  /**\n   * @memberof async\n   * @namespace filter\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var filter = createFilter(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue, true);\n\n  /**\n   * @memberof async\n   * @namespace filterSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  var filterSeries = createFilterSeries(true);\n\n  /**\n   * @memberof async\n   * @namespace filterLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  var filterLimit = createFilterLimit(true);\n\n  /**\n   * @memberof async\n   * @namespace reject\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var reject = createFilter(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue, false);\n\n  /**\n   * @memberof async\n   * @namespace rejectSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  var rejectSeries = createFilterSeries(false);\n\n  /**\n   * @memberof async\n   * @namespace rejectLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  var rejectLimit = createFilterLimit(false);\n\n  /**\n   * @memberof async\n   * @namespace detect\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  var detect = createDetect(arrayEachValue, baseEachValue, symbolEachValue, true);\n\n  /**\n   * @memberof async\n   * @namespace detectSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  var detectSeries = createDetectSeries(true);\n\n  /**\n   * @memberof async\n   * @namespace detectLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  var detectLimit = createDetectLimit(true);\n\n  /**\n   * @memberof async\n   * @namespace every\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [2, 'c']]\n   * });\n   *\n   */\n  var every = createEvery(arrayEachValue, baseEachValue, symbolEachValue);\n\n  /**\n   * @memberof async\n   * @namespace everySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [3, 'b'] [2, 'c']]\n   * });\n   *\n   */\n  var everySeries = createEverySeries();\n\n  /**\n   * @memberof async\n   * @namespace everyLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 5, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 5, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e']]\n   * });\n   *\n   */\n  var everyLimit = createEveryLimit();\n\n  /**\n   * @memberof async\n   * @namespace pick\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [[0, 1], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n  var pick = createPick(arrayEachIndexValue, baseEachKeyValue, symbolEachKeyValue, true);\n\n  /**\n   * @memberof async\n   * @namespace pickSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [[0, 1], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c'], [4, 'd']]\n   * });\n   *\n   */\n  var pickSeries = createPickSeries(true);\n\n  /**\n   * @memberof async\n   * @namespace pickLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  var pickLimit = createPickLimit(true);\n\n  /**\n   * @memberof async\n   * @namespace omit\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [[0, 1], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n  var omit = createPick(arrayEachIndexValue, baseEachKeyValue, symbolEachKeyValue, false);\n\n  /**\n   * @memberof async\n   * @namespace omitSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [[0, 1], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c'], [4, 'd']]\n   * });\n   *\n   */\n  var omitSeries = createPickSeries(false);\n\n  /**\n   * @memberof async\n   * @namespace omitLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '3': 4, '4': 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { d: 4, e: 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { d: 4, e: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  var omitLimit = createPickLimit(false);\n\n  /**\n   * @memberof async\n   * @namespace transform\n   * @param {Array|Object} collection\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num)\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4]\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2, '3': 4 }\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4]\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, iterator, function(err, res) {\n   *   console.log(res); //  { a: 1, b: 3, c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n  var transform = createTransform(arrayEachResult, baseEachResult, symbolEachResult);\n\n  /**\n   * @memberof async\n   * @namespace sortBy\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var sortBy = createSortBy(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue);\n\n  /**\n   * @memberof async\n   * @namespace concat\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var concat = createConcat(arrayEachIndex, baseEachIndex, symbolEachIndex);\n\n  /**\n   * @memberof async\n   * @namespace groupBy\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [4.2, 6.1, 6.4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [[4.2, 0], [6.1, 2], [6.4, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [4.2, 6.1, 6.4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [[4.2, 'a'], [6.1, 'c'], [6.4, 'b']]\n   * });\n   *\n   */\n  var groupBy = createGroupBy(arrayEachValue, baseEachValue, symbolEachValue);\n\n  /**\n   * @memberof async\n   * @namespace parallel\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 40);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 20);\n   *  }\n   * ];\n   * async.parallel(tasks, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 30);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 40);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 20);\n   *   }\n   * };\n   * async.parallel(tasks, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   */\n  var parallel = createParallel(arrayEachFunc, baseEachFunc);\n\n  /**\n   * @memberof async\n   * @namespace applyEach\n   */\n  var applyEach = createApplyEach(map);\n\n  /**\n   * @memberof async\n   * @namespace applyEachSeries\n   */\n  var applyEachSeries = createApplyEach(mapSeries);\n\n  /**\n   * @memberof async\n   * @namespace log\n   */\n  var log = createLogger('log');\n\n  /**\n   * @memberof async\n   * @namespace dir\n   */\n  var dir = createLogger('dir');\n\n  /**\n   * @version 2.6.1\n   * @namespace async\n   */\n  var index = {\n    VERSION: '2.6.1',\n\n    // Collections\n    each: each,\n    eachSeries: eachSeries,\n    eachLimit: eachLimit,\n    forEach: each,\n    forEachSeries: eachSeries,\n    forEachLimit: eachLimit,\n    eachOf: each,\n    eachOfSeries: eachSeries,\n    eachOfLimit: eachLimit,\n    forEachOf: each,\n    forEachOfSeries: eachSeries,\n    forEachOfLimit: eachLimit,\n    map: map,\n    mapSeries: mapSeries,\n    mapLimit: mapLimit,\n    mapValues: mapValues,\n    mapValuesSeries: mapValuesSeries,\n    mapValuesLimit: mapValuesLimit,\n    filter: filter,\n    filterSeries: filterSeries,\n    filterLimit: filterLimit,\n    select: filter,\n    selectSeries: filterSeries,\n    selectLimit: filterLimit,\n    reject: reject,\n    rejectSeries: rejectSeries,\n    rejectLimit: rejectLimit,\n    detect: detect,\n    detectSeries: detectSeries,\n    detectLimit: detectLimit,\n    find: detect,\n    findSeries: detectSeries,\n    findLimit: detectLimit,\n    pick: pick,\n    pickSeries: pickSeries,\n    pickLimit: pickLimit,\n    omit: omit,\n    omitSeries: omitSeries,\n    omitLimit: omitLimit,\n    reduce: reduce,\n    inject: reduce,\n    foldl: reduce,\n    reduceRight: reduceRight,\n    foldr: reduceRight,\n    transform: transform,\n    transformSeries: transformSeries,\n    transformLimit: transformLimit,\n    sortBy: sortBy,\n    sortBySeries: sortBySeries,\n    sortByLimit: sortByLimit,\n    some: some,\n    someSeries: someSeries,\n    someLimit: someLimit,\n    any: some,\n    anySeries: someSeries,\n    anyLimit: someLimit,\n    every: every,\n    everySeries: everySeries,\n    everyLimit: everyLimit,\n    all: every,\n    allSeries: everySeries,\n    allLimit: everyLimit,\n    concat: concat,\n    concatSeries: concatSeries,\n    concatLimit: concatLimit,\n    groupBy: groupBy,\n    groupBySeries: groupBySeries,\n    groupByLimit: groupByLimit,\n\n    // Control Flow\n    parallel: parallel,\n    series: series,\n    parallelLimit: parallelLimit,\n    tryEach: tryEach,\n    waterfall: waterfall,\n    angelFall: angelFall,\n    angelfall: angelFall,\n    whilst: whilst,\n    doWhilst: doWhilst,\n    until: until,\n    doUntil: doUntil,\n    during: during,\n    doDuring: doDuring,\n    forever: forever,\n    compose: compose,\n    seq: seq,\n    applyEach: applyEach,\n    applyEachSeries: applyEachSeries,\n    queue: queue,\n    priorityQueue: priorityQueue,\n    cargo: cargo,\n    auto: auto,\n    autoInject: autoInject,\n    retry: retry,\n    retryable: retryable,\n    iterator: iterator,\n    times: times,\n    timesSeries: timesSeries,\n    timesLimit: timesLimit,\n    race: race,\n\n    // Utils\n    apply: apply,\n    nextTick: asyncNextTick,\n    setImmediate: asyncSetImmediate,\n    memoize: memoize,\n    unmemoize: unmemoize,\n    ensureAsync: ensureAsync,\n    constant: constant,\n    asyncify: asyncify,\n    wrapSync: asyncify,\n    log: log,\n    dir: dir,\n    reflect: reflect,\n    reflectAll: reflectAll,\n    timeout: timeout,\n    createLogger: createLogger,\n\n    // Mode\n    safe: safe,\n    fast: fast\n  };\n\n  exports['default'] = index;\n  baseEachSync(\n    index,\n    function(func, key) {\n      exports[key] = func;\n    },\n    nativeKeys(index)\n  );\n\n  /**\n   * @private\n   */\n  function createImmediate(safeMode) {\n    var delay = function delay(fn) {\n      var args = slice(arguments, 1);\n      setTimeout(function() {\n        fn.apply(null, args);\n      });\n    };\n    asyncSetImmediate = typeof setImmediate === func ? setImmediate : delay;\n    if (typeof process === obj && typeof process.nextTick === func) {\n      nextTick = /^v0.10/.test(process.version) ? asyncSetImmediate : process.nextTick;\n      asyncNextTick = /^v0/.test(process.version) ? asyncSetImmediate : process.nextTick;\n    } else {\n      asyncNextTick = nextTick = asyncSetImmediate;\n    }\n    if (safeMode === false) {\n      nextTick = function(cb) {\n        cb();\n      };\n    }\n  }\n\n  /* sync functions based on lodash */\n\n  /**\n   * Converts `arguments` to an array.\n   *\n   * @private\n   * @param {Array} array = The array to slice.\n   */\n  function createArray(array) {\n    var index = -1;\n    var size = array.length;\n    var result = Array(size);\n\n    while (++index < size) {\n      result[index] = array[index];\n    }\n    return result;\n  }\n\n  /**\n   * Create an array from `start`\n   *\n   * @private\n   * @param {Array} array - The array to slice.\n   * @param {number} start - The start position.\n   */\n  function slice(array, start) {\n    var end = array.length;\n    var index = -1;\n    var size = end - start;\n    if (size <= 0) {\n      return [];\n    }\n    var result = Array(size);\n\n    while (++index < size) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * @private\n   * @param {Object} object\n   */\n  function objectClone(object) {\n    var keys = nativeKeys(object);\n    var size = keys.length;\n    var index = -1;\n    var result = {};\n\n    while (++index < size) {\n      var key = keys[index];\n      result[key] = object[key];\n    }\n    return result;\n  }\n\n  /**\n   * Create an array with all falsey values removed.\n   *\n   * @private\n   * @param {Array} array - The array to compact.\n   */\n  function compact(array) {\n    var index = -1;\n    var size = array.length;\n    var result = [];\n\n    while (++index < size) {\n      var value = array[index];\n      if (value) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Create an array of reverse sequence.\n   *\n   * @private\n   * @param {Array} array - The array to reverse.\n   */\n  function reverse(array) {\n    var index = -1;\n    var size = array.length;\n    var result = Array(size);\n    var resIndex = size;\n\n    while (++index < size) {\n      result[--resIndex] = array[index];\n    }\n    return result;\n  }\n\n  /**\n   * Checks if key exists in object property.\n   *\n   * @private\n   * @param {Object} object - The object to inspect.\n   * @param {string} key - The key to check.\n   */\n  function has(object, key) {\n    return object.hasOwnProperty(key);\n  }\n\n  /**\n   * Check if target exists in array.\n   * @private\n   * @param {Array} array\n   * @param {*} target\n   */\n  function notInclude(array, target) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      if (array[index] === target) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {Array} array - The array to iterate over.\n   * @param {Function} iterator - The function invoked per iteration.\n   */\n  function arrayEachSync(array, iterator) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      iterator(array[index], index);\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   * @param {Object} object - The object to iterate over.\n   * @param {Function} iterator - The function invoked per iteration.\n   * @param {Array} keys\n   */\n  function baseEachSync(object, iterator, keys) {\n    var index = -1;\n    var size = keys.length;\n\n    while (++index < size) {\n      var key = keys[index];\n      iterator(object[key], key);\n    }\n    return object;\n  }\n\n  /**\n   * @private\n   * @param {number} n\n   * @param {Function} iterator\n   */\n  function timesSync(n, iterator) {\n    var index = -1;\n    while (++index < n) {\n      iterator(index);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Array} array\n   * @param {number[]} criteria\n   */\n  function sortByCriteria(array, criteria) {\n    var l = array.length;\n    var indices = Array(l);\n    var i;\n    for (i = 0; i < l; i++) {\n      indices[i] = i;\n    }\n    quickSort(criteria, 0, l - 1, indices);\n    var result = Array(l);\n    for (var n = 0; n < l; n++) {\n      i = indices[n];\n      result[n] = i === undefined ? array[n] : array[i];\n    }\n    return result;\n  }\n\n  function partition(array, i, j, mid, indices) {\n    var l = i;\n    var r = j;\n    while (l <= r) {\n      i = l;\n      while (l < r && array[l] < mid) {\n        l++;\n      }\n      while (r >= i && array[r] >= mid) {\n        r--;\n      }\n      if (l > r) {\n        break;\n      }\n      swap(array, indices, l++, r--);\n    }\n    return l;\n  }\n\n  function swap(array, indices, l, r) {\n    var n = array[l];\n    array[l] = array[r];\n    array[r] = n;\n    var i = indices[l];\n    indices[l] = indices[r];\n    indices[r] = i;\n  }\n\n  function quickSort(array, i, j, indices) {\n    if (i === j) {\n      return;\n    }\n    var k = i;\n    while (++k <= j && array[i] === array[k]) {\n      var l = k - 1;\n      if (indices[l] > indices[k]) {\n        var index = indices[l];\n        indices[l] = indices[k];\n        indices[k] = index;\n      }\n    }\n    if (k > j) {\n      return;\n    }\n    var p = array[i] > array[k] ? i : k;\n    k = partition(array, i, j, array[p], indices);\n    quickSort(array, i, k - 1, indices);\n    quickSort(array, k, j, indices);\n  }\n\n  /**\n   * @Private\n   */\n  function makeConcatResult(array) {\n    var result = [];\n    arrayEachSync(array, function(value) {\n      if (value === noop) {\n        return;\n      }\n      if (isArray(value)) {\n        nativePush.apply(result, value);\n      } else {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /* async functions */\n\n  /**\n   * @private\n   */\n  function arrayEach(array, iterator, callback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        iterator(array[index], index, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(array[index], onlyOnce(callback));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEach(object, iterator, callback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(object[keys[index]], onlyOnce(callback));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEach(collection, iterator, callback) {\n    var iter = collection[iteratorSymbol]();\n    var index = 0;\n    var item;\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index++, onlyOnce(callback));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        iterator(item.value, onlyOnce(callback));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function arrayEachResult(array, result, iterator, callback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 4) {\n      while (++index < size) {\n        iterator(result, array[index], index, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(result, array[index], onlyOnce(callback));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEachResult(object, result, iterator, callback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 4) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(result, object[key], key, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(result, object[keys[index]], onlyOnce(callback));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachResult(collection, result, iterator, callback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 4) {\n      while ((item = iter.next()).done === false) {\n        iterator(result, item.value, index++, onlyOnce(callback));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        iterator(result, item.value, onlyOnce(callback));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function arrayEachFunc(array, createCallback) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      array[index](createCallback(index));\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEachFunc(object, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    while (++index < size) {\n      key = keys[index];\n      object[key](createCallback(key));\n    }\n  }\n\n  /**\n   * @private\n   */\n  function arrayEachIndex(array, iterator, createCallback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        iterator(array[index], index, createCallback(index));\n      }\n    } else {\n      while (++index < size) {\n        iterator(array[index], createCallback(index));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEachIndex(object, iterator, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, createCallback(index));\n      }\n    } else {\n      while (++index < size) {\n        iterator(object[keys[index]], createCallback(index));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachIndex(collection, iterator, createCallback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index, createCallback(index++));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, createCallback(index++));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function baseEachKey(object, iterator, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, createCallback(key));\n      }\n    } else {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], createCallback(key));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachKey(collection, iterator, createCallback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index, createCallback(index++));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, createCallback(index++));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function arrayEachValue(array, iterator, createCallback) {\n    var value;\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, index, createCallback(value));\n      }\n    } else {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, createCallback(value));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEachValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(value));\n      }\n    } else {\n      while (++index < size) {\n        value = object[keys[index]];\n        iterator(value, createCallback(value));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index++, createCallback(value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        value = item.value;\n        iterator(value, createCallback(value));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function arrayEachIndexValue(array, iterator, createCallback) {\n    var value;\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, index, createCallback(index, value));\n      }\n    } else {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, createCallback(index, value));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEachIndexValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(index, value));\n      }\n    } else {\n      while (++index < size) {\n        value = object[keys[index]];\n        iterator(value, createCallback(index, value));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachIndexValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index, createCallback(index++, value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, createCallback(index++, value));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function baseEachKeyValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(key, value));\n      }\n    } else {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, createCallback(key, value));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachKeyValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index, createCallback(index++, value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, createCallback(index++, value));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   * @param {Function} func\n   */\n  function onlyOnce(func) {\n    return function(err, res) {\n      var fn = func;\n      func = throwError;\n      fn(err, res);\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} func\n   */\n  function once(func) {\n    return function(err, res) {\n      var fn = func;\n      func = noop;\n      fn(err, res);\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   */\n  function createEach(arrayEach, baseEach, symbolEach) {\n    return function each(collection, iterator, callback) {\n      callback = once(callback || noop);\n      var size, keys;\n      var completed = 0;\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, done);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, done);\n        size && size === completed && callback(null);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, done, keys);\n      }\n      if (!size) {\n        callback(null);\n      }\n\n      function done(err, bool) {\n        if (err) {\n          callback = once(callback);\n          callback(err);\n        } else if (++completed === size) {\n          callback(null);\n        } else if (bool === false) {\n          callback = once(callback);\n          callback(null);\n        }\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n  function createMap(arrayEach, baseEach, symbolEach, useArray) {\n    var init, clone;\n    if (useArray) {\n      init = Array;\n      clone = createArray;\n    } else {\n      init = function() {\n        return {};\n      };\n      clone = objectClone;\n    }\n\n    return function(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = init(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        // TODO: size could be changed\n        result = init(0);\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = init(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        callback(null, init());\n      }\n\n      function createCallback(key) {\n        return function done(err, res) {\n          if (key === null) {\n            throwError();\n          }\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, clone(result));\n            return;\n          }\n          result[key] = res;\n          key = null;\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n  function createFilter(arrayEach, baseEach, symbolEach, bool) {\n    return function(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, compact(result));\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        return callback(null, []);\n      }\n\n      function createCallback(index, value) {\n        return function done(err, res) {\n          if (index === null) {\n            throwError();\n          }\n          if (err) {\n            index = null;\n            callback = once(callback);\n            callback(err);\n            return;\n          }\n          if (!!res === bool) {\n            result[index] = value;\n          }\n          index = null;\n          if (++completed === size) {\n            callback(null, compact(result));\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createFilterSeries(bool) {\n    return function(collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var completed = 0;\n      var result = [];\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size) {\n        return callback(null, []);\n      }\n      iterate();\n\n      function arrayIterator() {\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, completed, done);\n      }\n\n      function objectIterator() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err);\n          return;\n        }\n        if (!!res === bool) {\n          result[result.length] = value;\n        }\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createFilterLimit(bool) {\n    return function(collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate, result;\n      var sync = false;\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        result = [];\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null, []);\n      }\n      result = result || Array(size);\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value, index));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, compact(result));\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, compact(result));\n        }\n      }\n\n      function objectIterator() {\n        index = started++;\n        if (index < size) {\n          value = collection[keys[index]];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        index = started++;\n        if (index < size) {\n          key = keys[index];\n          value = collection[key];\n          iterator(value, key, createCallback(value, index));\n        }\n      }\n\n      function createCallback(value, index) {\n        return function(err, res) {\n          if (index === null) {\n            throwError();\n          }\n          if (err) {\n            index = null;\n            iterate = noop;\n            callback = once(callback);\n            callback(err);\n            return;\n          }\n          if (!!res === bool) {\n            result[index] = value;\n          }\n          index = null;\n          if (++completed === size) {\n            callback = onlyOnce(callback);\n            callback(null, compact(result));\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n          sync = false;\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace eachSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 3);\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3]\n   * });\n   */\n  function eachSeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null);\n    }\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, bool) {\n      if (err) {\n        callback(err);\n      } else if (++completed === size || bool === false) {\n        iterate = throwError;\n        callback(null);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace eachLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 5);\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5]\n   * });\n   *\n   */\n  function eachLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    } else {\n      return callback(null);\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null);\n    }\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        iterator(collection[started++], done);\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[index], index, done);\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        started++;\n        iterator(item.value, done);\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, started++, done);\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null);\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        iterator(collection[keys[started++]], done);\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, done);\n      }\n    }\n\n    function done(err, bool) {\n      if (err || bool === false) {\n        iterate = noop;\n        callback = once(callback);\n        callback(err);\n      } else if (++completed === size) {\n        iterator = noop;\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(null);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace mapSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  function mapSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    var size, key, keys, iter, item, result, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, []);\n    }\n    result = result || Array(size);\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, createArray(result));\n        return;\n      }\n      result[completed] = res;\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace mapLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  function mapLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, result, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n    result = result || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[index], createCallback(index));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[index], index, createCallback(index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[keys[index]], createCallback(index));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, createCallback(index));\n      }\n    }\n\n    function createCallback(index) {\n      return function(err, res) {\n        if (index === null) {\n          throwError();\n        }\n        if (err) {\n          index = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, createArray(result));\n          return;\n        }\n        result[index] = res;\n        index = null;\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace mapValuesSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  function mapValuesSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = {};\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, result);\n    }\n    iterate();\n\n    function arrayIterator() {\n      key = completed;\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      key = completed;\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      key = completed;\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      key = completed;\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      key = keys[completed];\n      iterator(collection[key], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, objectClone(result));\n        return;\n      }\n      result[key] = res;\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace mapValuesLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  function mapValuesLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = {};\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[index], createCallback(index));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[index], index, createCallback(index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], createCallback(key));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, createCallback(key));\n      }\n    }\n\n    function createCallback(key) {\n      return function(err, res) {\n        if (key === null) {\n          throwError();\n        }\n        if (err) {\n          key = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, objectClone(result));\n          return;\n        }\n        result[key] = res;\n        key = null;\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n  function createDetect(arrayEach, baseEach, symbolEach, bool) {\n    return function(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        callback(null);\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function done(err, res) {\n          if (called) {\n            throwError();\n          }\n          called = true;\n          if (err) {\n            callback = once(callback);\n            callback(err);\n          } else if (!!res === bool) {\n            callback = once(callback);\n            callback(null, value);\n          } else if (++completed === size) {\n            callback(null);\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createDetectSeries(bool) {\n    return function(collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size) {\n        return callback(null);\n      }\n      iterate();\n\n      function arrayIterator() {\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null) : iterator(value, completed, done);\n      }\n\n      function objectIterator() {\n        value = collection[keys[completed]];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err);\n        } else if (!!res === bool) {\n          iterate = throwError;\n          callback(null, value);\n        } else if (++completed === size) {\n          iterate = throwError;\n          callback(null);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createDetectLimit(bool) {\n    return function(collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null);\n      }\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        if (item.done === false) {\n          started++;\n          value = item.value;\n          iterator(value, createCallback(value));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null);\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started++, createCallback(value));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null);\n        }\n      }\n\n      function objectIterator() {\n        index = started++;\n        if (index < size) {\n          value = collection[keys[index]];\n          iterator(value, createCallback(value));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, key, createCallback(value));\n        }\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function(err, res) {\n          if (called) {\n            throwError();\n          }\n          called = true;\n          if (err) {\n            iterate = noop;\n            callback = once(callback);\n            callback(err);\n          } else if (!!res === bool) {\n            iterate = noop;\n            callback = once(callback);\n            callback(null, value);\n          } else if (++completed === size) {\n            callback(null);\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n          sync = false;\n        };\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n  function createPick(arrayEach, baseEach, symbolEach, bool) {\n    return function(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys;\n      var completed = 0;\n      var result = {};\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        return callback(null, {});\n      }\n\n      function createCallback(key, value) {\n        return function done(err, res) {\n          if (key === null) {\n            throwError();\n          }\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n          if (!!res === bool) {\n            result[key] = value;\n          }\n          key = null;\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createPickSeries(bool) {\n    return function(collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var result = {};\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size) {\n        return callback(null, {});\n      }\n      iterate();\n\n      function arrayIterator() {\n        key = completed;\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        key = completed;\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        key = completed;\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        key = completed;\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, key, done);\n      }\n\n      function objectIterator() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err, result);\n          return;\n        }\n        if (!!res === bool) {\n          result[key] = value;\n        }\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createPickLimit(bool) {\n    return function(collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var result = {};\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null, {});\n      }\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value, index));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, result);\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, result);\n        }\n      }\n\n      function objectIterator() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, createCallback(value, key));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, key, createCallback(value, key));\n        }\n      }\n\n      function createCallback(value, key) {\n        return function(err, res) {\n          if (key === null) {\n            throwError();\n          }\n          if (err) {\n            key = null;\n            iterate = noop;\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n          if (!!res === bool) {\n            result[key] = value;\n          }\n          key = null;\n          if (++completed === size) {\n            iterate = throwError;\n            callback = onlyOnce(callback);\n            callback(null, result);\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n          sync = false;\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace reduce\n   * @param {Array|Object} collection\n   * @param {*} result\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '1324'\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '1324'\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b'], [4, 'd']]\n   * });\n   *\n   */\n  function reduce(collection, result, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, result);\n    }\n    iterate(result);\n\n    function arrayIterator(result) {\n      iterator(result, collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex(result) {\n      iterator(result, collection[completed], completed, done);\n    }\n\n    function symbolIterator(result) {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, done);\n    }\n\n    function symbolIteratorWithKey(result) {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, completed, done);\n    }\n\n    function objectIterator(result) {\n      iterator(result, collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey(result) {\n      key = keys[completed];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, result) {\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size) {\n        iterator = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(function() {\n          iterate(result);\n        });\n      } else {\n        sync = true;\n        iterate(result);\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace reduceRight\n   * @param {Array|Object} collection\n   * @param {*} result\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [4, 2, 3, 1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '4231'\n   *   console.log(order); // [[4, 3], [2, 2], [3, 1], [1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '4231'\n   *   console.log(order); // [4, 2, 3, 1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [[4, 3], [2, 2], [3, 1], [1, 0]]\n   * });\n   *\n   */\n  function reduceRight(collection, result, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var resIndex, index, key, keys, iter, item, col, iterate;\n    var sync = false;\n\n    if (isArray(collection)) {\n      resIndex = collection.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      col = [];\n      iter = collection[iteratorSymbol]();\n      index = -1;\n      while ((item = iter.next()).done === false) {\n        col[++index] = item.value;\n      }\n      collection = col;\n      resIndex = col.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      resIndex = keys.length;\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!resIndex) {\n      return callback(null, result);\n    }\n    iterate(result);\n\n    function arrayIterator(result) {\n      iterator(result, collection[--resIndex], done);\n    }\n\n    function arrayIteratorWithIndex(result) {\n      iterator(result, collection[--resIndex], resIndex, done);\n    }\n\n    function objectIterator(result) {\n      iterator(result, collection[keys[--resIndex]], done);\n    }\n\n    function objectIteratorWithKey(result) {\n      key = keys[--resIndex];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, result) {\n      if (err) {\n        callback(err, result);\n      } else if (resIndex === 0) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(function() {\n          iterate(result);\n        });\n      } else {\n        sync = true;\n        iterate(result);\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n  function createTransform(arrayEach, baseEach, symbolEach) {\n    return function transform(collection, accumulator, iterator, callback) {\n      if (arguments.length === 3) {\n        callback = iterator;\n        iterator = accumulator;\n        accumulator = undefined;\n      }\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = accumulator !== undefined ? accumulator : [];\n        arrayEach(collection, result, iterator, done);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = accumulator !== undefined ? accumulator : {};\n        size = symbolEach(collection, result, iterator, done);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = accumulator !== undefined ? accumulator : {};\n        baseEach(collection, result, iterator, done, keys);\n      }\n      if (!size) {\n        callback(null, accumulator !== undefined ? accumulator : result || {});\n      }\n\n      function done(err, bool) {\n        if (err) {\n          callback = once(callback);\n          callback(err, isArray(result) ? createArray(result) : objectClone(result));\n        } else if (++completed === size) {\n          callback(null, result);\n        } else if (bool === false) {\n          callback = once(callback);\n          callback(null, isArray(result) ? createArray(result) : objectClone(result));\n        }\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace transformSeries\n   * @param {Array|Object} collection\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num)\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2, 4]\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2, '3': 4 }\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2, 4]\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, iterator, function(err, res) {\n   *   console.log(res); //  { a: 1, b: 3, c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b'], [4, 'd']]\n   * });\n   *\n   */\n  function transformSeries(collection, accumulator, iterator, callback) {\n    if (arguments.length === 3) {\n      callback = iterator;\n      iterator = accumulator;\n      accumulator = undefined;\n    }\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate, result;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      result = accumulator !== undefined ? accumulator : [];\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, accumulator !== undefined ? accumulator : result || {});\n    }\n    iterate();\n\n    function arrayIterator() {\n      iterator(result, collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(result, collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(result, collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, bool) {\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size || bool === false) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace transformLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = key;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(array, 2, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(object, 2, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  function transformLimit(collection, limit, accumulator, iterator, callback) {\n    if (arguments.length === 4) {\n      callback = iterator;\n      iterator = accumulator;\n      accumulator = undefined;\n    }\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate, result;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      result = accumulator !== undefined ? accumulator : [];\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, accumulator !== undefined ? accumulator : result || {});\n    }\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n      if (index < size) {\n        iterator(result, collection[index], onlyOnce(done));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        iterator(result, collection[index], index, onlyOnce(done));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        started++;\n        iterator(result, item.value, onlyOnce(done));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(result, item.value, started++, onlyOnce(done));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n      if (index < size) {\n        iterator(result, collection[keys[index]], onlyOnce(done));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n      if (index < size) {\n        key = keys[index];\n        iterator(result, collection[key], key, onlyOnce(done));\n      }\n    }\n\n    function done(err, bool) {\n      if (err || bool === false) {\n        iterate = noop;\n        callback(err || null, isArray(result) ? createArray(result) : objectClone(result));\n        callback = noop;\n      } else if (++completed === size) {\n        iterator = noop;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {function} arrayEach\n   * @param {function} baseEach\n   * @param {function} symbolEach\n   */\n  function createSortBy(arrayEach, baseEach, symbolEach) {\n    return function sortBy(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, array, criteria;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        array = Array(size);\n        criteria = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        array = [];\n        criteria = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, sortByCriteria(array, criteria));\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        array = Array(size);\n        criteria = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        callback(null, []);\n      }\n\n      function createCallback(index, value) {\n        var called = false;\n        array[index] = value;\n        return function done(err, criterion) {\n          if (called) {\n            throwError();\n          }\n          called = true;\n          criteria[index] = criterion;\n          if (err) {\n            callback = once(callback);\n            callback(err);\n          } else if (++completed === size) {\n            callback(null, sortByCriteria(array, criteria));\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace sortBySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  function sortBySeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, value, keys, iter, item, array, criteria, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      array = collection;\n      criteria = Array(size);\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      array = [];\n      criteria = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      array = Array(size);\n      criteria = Array(size);\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, []);\n    }\n    iterate();\n\n    function arrayIterator() {\n      value = collection[completed];\n      iterator(value, done);\n    }\n\n    function arrayIteratorWithIndex() {\n      value = collection[completed];\n      iterator(value, completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done) {\n        return callback(null, sortByCriteria(array, criteria));\n      }\n      value = item.value;\n      array[completed] = value;\n      iterator(value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done) {\n        return callback(null, sortByCriteria(array, criteria));\n      }\n      value = item.value;\n      array[completed] = value;\n      iterator(value, completed, done);\n    }\n\n    function objectIterator() {\n      value = collection[keys[completed]];\n      array[completed] = value;\n      iterator(value, done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      value = collection[key];\n      array[completed] = value;\n      iterator(value, key, done);\n    }\n\n    function done(err, criterion) {\n      criteria[completed] = criterion;\n      if (err) {\n        callback(err);\n      } else if (++completed === size) {\n        iterate = throwError;\n        callback(null, sortByCriteria(array, criteria));\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace sortByLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  function sortByLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, value, array, keys, iter, item, criteria, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      array = collection;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      array = [];\n      criteria = [];\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      array = Array(size);\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n    criteria = criteria || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        value = collection[started];\n        iterator(value, createCallback(value, started++));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        value = collection[index];\n        iterator(value, index, createCallback(value, index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        value = item.value;\n        array[started] = value;\n        iterator(value, createCallback(value, started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, sortByCriteria(array, criteria));\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        value = item.value;\n        array[started] = value;\n        iterator(value, started, createCallback(value, started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, sortByCriteria(array, criteria));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        value = collection[keys[started]];\n        array[started] = value;\n        iterator(value, createCallback(value, started++));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started];\n        value = collection[key];\n        array[started] = value;\n        iterator(value, key, createCallback(value, started++));\n      }\n    }\n\n    function createCallback(value, index) {\n      var called = false;\n      return function(err, criterion) {\n        if (called) {\n          throwError();\n        }\n        called = true;\n        criteria[index] = criterion;\n        if (err) {\n          iterate = noop;\n          callback(err);\n          callback = noop;\n        } else if (++completed === size) {\n          callback(null, sortByCriteria(array, criteria));\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace some\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  function some(collection, iterator, callback) {\n    callback = callback || noop;\n    detect(collection, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n      callback(null, !!res);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace someSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  function someSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    detectSeries(collection, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n      callback(null, !!res);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace someLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  function someLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    detectLimit(collection, limit, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n      callback(null, !!res);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n  function createEvery(arrayEach, baseEach, symbolEach) {\n    var deny = createDetect(arrayEach, baseEach, symbolEach, false);\n\n    return function every(collection, iterator, callback) {\n      callback = callback || noop;\n      deny(collection, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n        callback(null, !res);\n      }\n    };\n  }\n\n  /**\n   * @private\n   */\n  function createEverySeries() {\n    var denySeries = createDetectSeries(false);\n\n    return function everySeries(collection, iterator, callback) {\n      callback = callback || noop;\n      denySeries(collection, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n        callback(null, !res);\n      }\n    };\n  }\n\n  /**\n   * @private\n   */\n  function createEveryLimit() {\n    var denyLimit = createDetectLimit(false);\n\n    return function everyLimit(collection, limit, iterator, callback) {\n      callback = callback || noop;\n      denyLimit(collection, limit, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n        callback(null, !res);\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n  function createConcat(arrayEach, baseEach, symbolEach) {\n    return function concat(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        result = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        callback(null, []);\n      }\n\n      function createCallback(index) {\n        return function done(err, res) {\n          if (index === null) {\n            throwError();\n          }\n          if (err) {\n            index = null;\n            callback = once(callback);\n            arrayEachSync(result, function(array, index) {\n              if (array === undefined) {\n                result[index] = noop;\n              }\n            });\n            callback(err, makeConcatResult(result));\n            return;\n          }\n          switch (arguments.length) {\n            case 0:\n            case 1:\n              result[index] = noop;\n              break;\n            case 2:\n              result[index] = res;\n              break;\n            default:\n              result[index] = slice(arguments, 1);\n              break;\n          }\n          index = null;\n          if (++completed === size) {\n            callback(null, makeConcatResult(result));\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace concatSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  function concatSeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = [];\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, result);\n    }\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, array) {\n      if (isArray(array)) {\n        nativePush.apply(result, array);\n      } else if (arguments.length >= 2) {\n        nativePush.apply(result, slice(arguments, 1));\n      }\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace concatLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.cocnatLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.cocnatLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  function concatLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, key, iter, item, iterate, result;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      var keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n    result = result || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        iterator(collection[started], createCallback(started++));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      if (started < size) {\n        iterator(collection[started], started, createCallback(started++));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, makeConcatResult(result));\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, makeConcatResult(result));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        iterator(collection[keys[started]], createCallback(started++));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started];\n        iterator(collection[key], key, createCallback(started++));\n      }\n    }\n\n    function createCallback(index) {\n      return function(err, res) {\n        if (index === null) {\n          throwError();\n        }\n        if (err) {\n          index = null;\n          iterate = noop;\n          callback = once(callback);\n          arrayEachSync(result, function(array, index) {\n            if (array === undefined) {\n              result[index] = noop;\n            }\n          });\n          callback(err, makeConcatResult(result));\n          return;\n        }\n        switch (arguments.length) {\n          case 0:\n          case 1:\n            result[index] = noop;\n            break;\n          case 2:\n            result[index] = res;\n            break;\n          default:\n            result[index] = slice(arguments, 1);\n            break;\n        }\n        index = null;\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, makeConcatResult(result));\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n  function createGroupBy(arrayEach, baseEach, symbolEach) {\n    return function groupBy(collection, iterator, callback) {\n      callback = callback || noop;\n      var size;\n      var completed = 0;\n      var result = {};\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        callback(null, {});\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function done(err, key) {\n          if (called) {\n            throwError();\n          }\n          called = true;\n          if (err) {\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n          var array = result[key];\n          if (!array) {\n            result[key] = [value];\n          } else {\n            array.push(value);\n          }\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace groupBySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [4.2, 6.4, 6.1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [[4.2, 0], [6.4, 1], [6.1, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [4.2, 6.4, 6.1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [[4.2, 'a'], [6.4, 'b'], [6.1, 'c']]\n   * });\n   *\n   */\n  function groupBySeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, value, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n    var result = {};\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, result);\n    }\n    iterate();\n\n    function arrayIterator() {\n      value = collection[completed];\n      iterator(value, done);\n    }\n\n    function arrayIteratorWithIndex() {\n      value = collection[completed];\n      iterator(value, completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      value = item.value;\n      item.done ? callback(null, result) : iterator(value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      value = item.value;\n      item.done ? callback(null, result) : iterator(value, completed, done);\n    }\n\n    function objectIterator() {\n      value = collection[keys[completed]];\n      iterator(value, done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      value = collection[key];\n      iterator(value, key, done);\n    }\n\n    function done(err, key) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, objectClone(result));\n        return;\n      }\n      var array = result[key];\n      if (!array) {\n        result[key] = [value];\n      } else {\n        array.push(value);\n      }\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace groupByLimit\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1.1, 5.9, 3.2, 3.9, 2.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [1.1, 3.2, 5.9, 2.1, 3.9]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1.1, 5.9, 3.2, 3.9, 2.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [[1.1, 0], [3.2, 2], [5.9, 1], [2.1, 4], [3.9, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1.1, b: 5.9, c: 3.2, d: 3.9, e: 2.1 }\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [1.1, 3.2, 5.9, 2.1, 3.9]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1.1, b: 5.9, c: 3.2, d: 3.9, e: 2.1 }\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [[1.1, 'a'], [3.2, 'c'], [5.9, 'b'], [2.1, 'e'], [3.9, 'd']]\n   * });\n   *\n   */\n  function groupByLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, value, keys, iter, item, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n    var result = {};\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        value = collection[started++];\n        iterator(value, createCallback(value));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        value = collection[index];\n        iterator(value, index, createCallback(value));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        started++;\n        value = item.value;\n        iterator(value, createCallback(value));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        value = item.value;\n        iterator(value, started++, createCallback(value));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        value = collection[keys[started++]];\n        iterator(value, createCallback(value));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started++];\n        value = collection[key];\n        iterator(value, key, createCallback(value));\n      }\n    }\n\n    function createCallback(value) {\n      var called = false;\n      return function(err, key) {\n        if (called) {\n          throwError();\n        }\n        called = true;\n        if (err) {\n          iterate = noop;\n          callback = once(callback);\n          callback(err, objectClone(result));\n          return;\n        }\n        var array = result[key];\n        if (!array) {\n          result[key] = [value];\n        } else {\n          array.push(value);\n        }\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   */\n  function createParallel(arrayEach, baseEach) {\n    return function parallel(tasks, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(tasks)) {\n        size = tasks.length;\n        result = Array(size);\n        arrayEach(tasks, createCallback);\n      } else if (tasks && typeof tasks === obj) {\n        keys = nativeKeys(tasks);\n        size = keys.length;\n        result = {};\n        baseEach(tasks, createCallback, keys);\n      }\n      if (!size) {\n        callback(null, result);\n      }\n\n      function createCallback(key) {\n        return function(err, res) {\n          if (key === null) {\n            throwError();\n          }\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, result);\n            return;\n          }\n          result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n          key = null;\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace series\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 40);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 20);\n   *  }\n   * ];\n   * async.series(tasks, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 30);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 40);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 20);\n   *   }\n   * };\n   * async.series(tasks, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   */\n  function series(tasks, callback) {\n    callback = callback || noop;\n    var size, key, keys, result, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      result = Array(size);\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      result = {};\n      iterate = objectIterator;\n    } else {\n      return callback(null);\n    }\n    if (!size) {\n      return callback(null, result);\n    }\n    iterate();\n\n    function arrayIterator() {\n      key = completed;\n      tasks[completed](done);\n    }\n\n    function objectIterator() {\n      key = keys[completed];\n      tasks[key](done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, result);\n        return;\n      }\n      result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace parallelLimit\n   * @param {Array|Object} tasks - functions\n   * @param {number} limit - limit >= 1\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 50);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 40);\n   *  }\n   * ];\n   * async.parallelLimit(tasks, 2, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 50);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 20);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 40);\n   *   }\n   * };\n   * async.parallelLimit(tasks, 2, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   */\n  function parallelLimit(tasks, limit, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, result, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      result = Array(size);\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      result = {};\n      iterate = objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n      if (index < size) {\n        tasks[index](createCallback(index));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        key = keys[started++];\n        tasks[key](createCallback(key));\n      }\n    }\n\n    function createCallback(key) {\n      return function(err, res) {\n        if (key === null) {\n          throwError();\n        }\n        if (err) {\n          key = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, result);\n          return;\n        }\n        result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n        key = null;\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace tryEach\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error'));\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(null, 2);\n   *    }, 10);\n   *  }\n   * ];\n   * async.tryEach(tasks, function(err, res) {\n   *   console.log(res); // 2\n   * });\n   *\n   * @example\n   *\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error1'));\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error2');\n   *    }, 10);\n   *  }\n   * ];\n   * async.tryEach(tasks, function(err, res) {\n   *   console.log(err); // error2\n   *   console.log(res); // undefined\n   * });\n   *\n   */\n  function tryEach(tasks, callback) {\n    callback = callback || noop;\n    var size, keys, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      iterate = objectIterator;\n    }\n    if (!size) {\n      return callback(null);\n    }\n    iterate();\n\n    function arrayIterator() {\n      tasks[completed](done);\n    }\n\n    function objectIterator() {\n      tasks[keys[completed]](done);\n    }\n\n    function done(err, res) {\n      if (!err) {\n        if (arguments.length <= 2) {\n          callback(null, res);\n        } else {\n          callback(null, slice(arguments, 1));\n        }\n      } else if (++completed === size) {\n        callback(err);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * check for waterfall tasks\n   * @private\n   * @param {Array} tasks\n   * @param {Function} callback\n   * @return {boolean}\n   */\n  function checkWaterfallTasks(tasks, callback) {\n    if (!isArray(tasks)) {\n      callback(new Error('First argument to waterfall must be an array of functions'));\n      return false;\n    }\n    if (tasks.length === 0) {\n      callback(null);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * check for waterfall tasks\n   * @private\n   * @param {function} func\n   * @param {Array|Object} args - arguments\n   * @return {function} next\n   */\n  function waterfallIterator(func, args, next) {\n    switch (args.length) {\n      case 0:\n      case 1:\n        return func(next);\n      case 2:\n        return func(args[1], next);\n      case 3:\n        return func(args[1], args[2], next);\n      case 4:\n        return func(args[1], args[2], args[3], next);\n      case 5:\n        return func(args[1], args[2], args[3], args[4], next);\n      case 6:\n        return func(args[1], args[2], args[3], args[4], args[5], next);\n      default:\n        args = slice(args, 1);\n        args.push(next);\n        return func.apply(null, args);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace waterfall\n   * @param {Array} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       next(null, 1);\n   *     }, 10);\n   *   },\n   *   function(arg1, next) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       next(null, 1, 2);\n   *     }, 30);\n   *   },\n   *   function(arg1, arg2, next) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       next(null, 3);\n   *     }, 20);\n   *   },\n   *   function(arg1, next) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       next(null, 1, 2, 3, 4);\n   *     }, 40);\n   *   }\n   * ];\n   * async.waterfall(tasks, function(err, arg1, arg2, arg3, arg4) {\n   *   console.log(arg1, arg2, arg3, arg4); // 1 2 3 4\n   * });\n   *\n   */\n  function waterfall(tasks, callback) {\n    callback = callback || noop;\n    if (!checkWaterfallTasks(tasks, callback)) {\n      return;\n    }\n    var func, args, done, sync;\n    var completed = 0;\n    var size = tasks.length;\n    waterfallIterator(tasks[0], [], createCallback(0));\n\n    function iterate() {\n      waterfallIterator(func, args, createCallback(func));\n    }\n\n    function createCallback(index) {\n      return function next(err, res) {\n        if (index === undefined) {\n          callback = noop;\n          throwError();\n        }\n        index = undefined;\n        if (err) {\n          done = callback;\n          callback = throwError;\n          done(err);\n          return;\n        }\n        if (++completed === size) {\n          done = callback;\n          callback = throwError;\n          if (arguments.length <= 2) {\n            done(err, res);\n          } else {\n            done.apply(null, createArray(arguments));\n          }\n          return;\n        }\n        if (sync) {\n          args = arguments;\n          func = tasks[completed] || throwError;\n          nextTick(iterate);\n        } else {\n          sync = true;\n          waterfallIterator(tasks[completed] || throwError, arguments, createCallback(completed));\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * `angelFall` is like `waterfall` and inject callback to last argument of next task.\n   *\n   * @memberof async\n   * @namespace angelFall\n   * @param {Array} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       next(null, 1);\n   *     }, 10);\n   *   },\n   *   function(arg1, empty, next) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       next(null, 1, 2);\n   *     }, 30);\n   *   },\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       next(null, 3);\n   *     }, 20);\n   *   },\n   *   function(arg1, empty1, empty2, empty3, next) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       next(null, 1, 2, 3, 4);\n   *     }, 40);\n   *   }\n   * ];\n   * async.angelFall(tasks, function(err, arg1, arg2, arg3, arg4) {\n   *   console.log(arg1, arg2, arg3, arg4); // 1 2 3 4\n   * });\n   *\n   */\n  function angelFall(tasks, callback) {\n    callback = callback || noop;\n    if (!checkWaterfallTasks(tasks, callback)) {\n      return;\n    }\n    var completed = 0;\n    var sync = false;\n    var size = tasks.length;\n    var func = tasks[completed];\n    var args = [];\n    var iterate = function() {\n      switch (func.length) {\n        case 0:\n          try {\n            next(null, func());\n          } catch (e) {\n            next(e);\n          }\n          return;\n        case 1:\n          return func(next);\n        case 2:\n          return func(args[1], next);\n        case 3:\n          return func(args[1], args[2], next);\n        case 4:\n          return func(args[1], args[2], args[3], next);\n        case 5:\n          return func(args[1], args[2], args[3], args[4], next);\n        default:\n          args = slice(args, 1);\n          args[func.length - 1] = next;\n          return func.apply(null, args);\n      }\n    };\n    iterate();\n\n    function next(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err);\n        return;\n      }\n      if (++completed === size) {\n        iterate = throwError;\n        var done = callback;\n        callback = throwError;\n        if (arguments.length === 2) {\n          done(err, res);\n        } else {\n          done.apply(null, createArray(arguments));\n        }\n        return;\n      }\n      func = tasks[completed];\n      args = arguments;\n      if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace whilst\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n  function whilst(test, iterator, callback) {\n    callback = callback || noop;\n    var sync = false;\n    if (test()) {\n      iterate();\n    } else {\n      callback(null);\n    }\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n      if (arguments.length <= 2) {\n        if (test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n        return;\n      }\n      arg = slice(arguments, 1);\n      if (test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace doWhilst\n   * @param {Function} iterator\n   * @param {Function} test\n   * @param {Function} callback\n   */\n  function doWhilst(iterator, test, callback) {\n    callback = callback || noop;\n    var sync = false;\n    next();\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n      if (arguments.length <= 2) {\n        if (test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n        return;\n      }\n      arg = slice(arguments, 1);\n      if (test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace until\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n  function until(test, iterator, callback) {\n    callback = callback || noop;\n    var sync = false;\n    if (!test()) {\n      iterate();\n    } else {\n      callback(null);\n    }\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n      if (arguments.length <= 2) {\n        if (!test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n        return;\n      }\n      arg = slice(arguments, 1);\n      if (!test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace doUntil\n   * @param {Function} iterator\n   * @param {Function} test\n   * @param {Function} callback\n   */\n  function doUntil(iterator, test, callback) {\n    callback = callback || noop;\n    var sync = false;\n    next();\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n      if (arguments.length <= 2) {\n        if (!test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n        return;\n      }\n      arg = slice(arguments, 1);\n      if (!test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace during\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n  function during(test, iterator, callback) {\n    callback = callback || noop;\n    _test();\n\n    function _test() {\n      test(iterate);\n    }\n\n    function iterate(err, truth) {\n      if (err) {\n        return callback(err);\n      }\n      if (truth) {\n        iterator(done);\n      } else {\n        callback(null);\n      }\n    }\n\n    function done(err) {\n      if (err) {\n        return callback(err);\n      }\n      _test();\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace doDuring\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n  function doDuring(iterator, test, callback) {\n    callback = callback || noop;\n    iterate(null, true);\n\n    function iterate(err, truth) {\n      if (err) {\n        return callback(err);\n      }\n      if (truth) {\n        iterator(done);\n      } else {\n        callback(null);\n      }\n    }\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n      switch (arguments.length) {\n        case 0:\n        case 1:\n          test(iterate);\n          break;\n        case 2:\n          test(res, iterate);\n          break;\n        default:\n          var args = slice(arguments, 1);\n          args.push(iterate);\n          test.apply(null, args);\n          break;\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace forever\n   */\n  function forever(iterator, callback) {\n    var sync = false;\n    iterate();\n\n    function iterate() {\n      iterator(next);\n    }\n\n    function next(err) {\n      if (err) {\n        if (callback) {\n          return callback(err);\n        }\n        throw err;\n      }\n      if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace compose\n   */\n  function compose() {\n    return seq.apply(null, reverse(arguments));\n  }\n\n  /**\n   * @memberof async\n   * @namespace seq\n   */\n  function seq(/* functions... */) {\n    var fns = createArray(arguments);\n\n    return function() {\n      var self = this;\n      var args = createArray(arguments);\n      var callback = args[args.length - 1];\n      if (typeof callback === func) {\n        args.pop();\n      } else {\n        callback = noop;\n      }\n      reduce(fns, args, iterator, done);\n\n      function iterator(newargs, fn, callback) {\n        var func = function(err) {\n          var nextargs = slice(arguments, 1);\n          callback(err, nextargs);\n        };\n        newargs.push(func);\n        fn.apply(self, newargs);\n      }\n\n      function done(err, res) {\n        res = isArray(res) ? res : [res];\n        res.unshift(err);\n        callback.apply(self, res);\n      }\n    };\n  }\n\n  function createApplyEach(func) {\n    return function applyEach(fns /* arguments */) {\n      var go = function() {\n        var self = this;\n        var args = createArray(arguments);\n        var callback = args.pop() || noop;\n        return func(fns, iterator, callback);\n\n        function iterator(fn, done) {\n          fn.apply(self, args.concat([done]));\n        }\n      };\n      if (arguments.length > 1) {\n        var args = slice(arguments, 1);\n        return go.apply(this, args);\n      } else {\n        return go;\n      }\n    };\n  }\n\n  /**\n   * @see https://github.com/caolan/async/blob/master/lib/internal/DoublyLinkedList.js\n   */\n  function DLL() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  DLL.prototype._removeLink = function(node) {\n    var prev = node.prev;\n    var next = node.next;\n    if (prev) {\n      prev.next = next;\n    } else {\n      this.head = next;\n    }\n    if (next) {\n      next.prev = prev;\n    } else {\n      this.tail = prev;\n    }\n    node.prev = null;\n    node.next = null;\n    this.length--;\n    return node;\n  };\n\n  DLL.prototype.empty = DLL;\n\n  DLL.prototype._setInitial = function(node) {\n    this.length = 1;\n    this.head = this.tail = node;\n  };\n\n  DLL.prototype.insertBefore = function(node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) {\n      node.prev.next = newNode;\n    } else {\n      this.head = newNode;\n    }\n    node.prev = newNode;\n    this.length++;\n  };\n\n  DLL.prototype.unshift = function(node) {\n    if (this.head) {\n      this.insertBefore(this.head, node);\n    } else {\n      this._setInitial(node);\n    }\n  };\n\n  DLL.prototype.push = function(node) {\n    var tail = this.tail;\n    if (tail) {\n      node.prev = tail;\n      node.next = tail.next;\n      this.tail = node;\n      tail.next = node;\n      this.length++;\n    } else {\n      this._setInitial(node);\n    }\n  };\n\n  DLL.prototype.shift = function() {\n    return this.head && this._removeLink(this.head);\n  };\n\n  DLL.prototype.splice = function(end) {\n    var task;\n    var tasks = [];\n    while (end-- && (task = this.shift())) {\n      tasks.push(task);\n    }\n    return tasks;\n  };\n\n  DLL.prototype.remove = function(test) {\n    var node = this.head;\n    while (node) {\n      if (test(node)) {\n        this._removeLink(node);\n      }\n      node = node.next;\n    }\n    return this;\n  };\n\n  /**\n   * @private\n   */\n  function baseQueue(isQueue, worker, concurrency, payload) {\n    if (concurrency === undefined) {\n      concurrency = 1;\n    } else if (isNaN(concurrency) || concurrency < 1) {\n      throw new Error('Concurrency must not be zero');\n    }\n\n    var workers = 0;\n    var workersList = [];\n    var _callback, _unshift;\n\n    var q = {\n      _tasks: new DLL(),\n      concurrency: concurrency,\n      payload: payload,\n      saturated: noop,\n      unsaturated: noop,\n      buffer: concurrency / 4,\n      empty: noop,\n      drain: noop,\n      error: noop,\n      started: false,\n      paused: false,\n      push: push,\n      kill: kill,\n      unshift: unshift,\n      remove: remove,\n      process: isQueue ? runQueue : runCargo,\n      length: getLength,\n      running: running,\n      workersList: getWorkersList,\n      idle: idle,\n      pause: pause,\n      resume: resume,\n      _worker: worker\n    };\n    return q;\n\n    function push(tasks, callback) {\n      _insert(tasks, callback);\n    }\n\n    function unshift(tasks, callback) {\n      _insert(tasks, callback, true);\n    }\n\n    function _exec(task) {\n      var item = {\n        data: task,\n        callback: _callback\n      };\n      if (_unshift) {\n        q._tasks.unshift(item);\n      } else {\n        q._tasks.push(item);\n      }\n      nextTick(q.process);\n    }\n\n    function _insert(tasks, callback, unshift) {\n      if (callback == null) {\n        callback = noop;\n      } else if (typeof callback !== 'function') {\n        throw new Error('task callback must be a function');\n      }\n      q.started = true;\n      var _tasks = isArray(tasks) ? tasks : [tasks];\n\n      if (tasks === undefined || !_tasks.length) {\n        if (q.idle()) {\n          nextTick(q.drain);\n        }\n        return;\n      }\n\n      _unshift = unshift;\n      _callback = callback;\n      arrayEachSync(_tasks, _exec);\n    }\n\n    function kill() {\n      q.drain = noop;\n      q._tasks.empty();\n    }\n\n    function _next(q, tasks) {\n      var called = false;\n      return function done(err, res) {\n        if (called) {\n          throwError();\n        }\n        called = true;\n\n        workers--;\n        var task;\n        var index = -1;\n        var size = workersList.length;\n        var taskIndex = -1;\n        var taskSize = tasks.length;\n        var useApply = arguments.length > 2;\n        var args = useApply && createArray(arguments);\n        while (++taskIndex < taskSize) {\n          task = tasks[taskIndex];\n          while (++index < size) {\n            if (workersList[index] === task) {\n              if (index === 0) {\n                workersList.shift();\n              } else {\n                workersList.splice(index, 1);\n              }\n              index = size;\n              size--;\n            }\n          }\n          index = -1;\n          if (useApply) {\n            task.callback.apply(task, args);\n          } else {\n            task.callback(err, res);\n          }\n          if (err) {\n            q.error(err, task.data);\n          }\n        }\n\n        if (workers <= q.concurrency - q.buffer) {\n          q.unsaturated();\n        }\n\n        if (q._tasks.length + workers === 0) {\n          q.drain();\n        }\n        q.process();\n      };\n    }\n\n    function runQueue() {\n      while (!q.paused && workers < q.concurrency && q._tasks.length) {\n        var task = q._tasks.shift();\n        workers++;\n        workersList.push(task);\n        if (q._tasks.length === 0) {\n          q.empty();\n        }\n        if (workers === q.concurrency) {\n          q.saturated();\n        }\n        var done = _next(q, [task]);\n        worker(task.data, done);\n      }\n    }\n\n    function runCargo() {\n      while (!q.paused && workers < q.concurrency && q._tasks.length) {\n        var tasks = q._tasks.splice(q.payload || q._tasks.length);\n        var index = -1;\n        var size = tasks.length;\n        var data = Array(size);\n        while (++index < size) {\n          data[index] = tasks[index].data;\n        }\n        workers++;\n        nativePush.apply(workersList, tasks);\n        if (q._tasks.length === 0) {\n          q.empty();\n        }\n        if (workers === q.concurrency) {\n          q.saturated();\n        }\n        var done = _next(q, tasks);\n        worker(data, done);\n      }\n    }\n\n    function getLength() {\n      return q._tasks.length;\n    }\n\n    function running() {\n      return workers;\n    }\n\n    function getWorkersList() {\n      return workersList;\n    }\n\n    function idle() {\n      return q.length() + workers === 0;\n    }\n\n    function pause() {\n      q.paused = true;\n    }\n\n    function _resume() {\n      nextTick(q.process);\n    }\n\n    function resume() {\n      if (q.paused === false) {\n        return;\n      }\n      q.paused = false;\n      var count = q.concurrency < q._tasks.length ? q.concurrency : q._tasks.length;\n      timesSync(count, _resume);\n    }\n\n    /**\n     * @param {Function} test\n     */\n    function remove(test) {\n      q._tasks.remove(test);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace queue\n   */\n  function queue(worker, concurrency) {\n    return baseQueue(true, worker, concurrency);\n  }\n\n  /**\n   * @memberof async\n   * @namespace priorityQueue\n   */\n  function priorityQueue(worker, concurrency) {\n    var q = baseQueue(true, worker, concurrency);\n    q.push = push;\n    delete q.unshift;\n    return q;\n\n    function push(tasks, priority, callback) {\n      q.started = true;\n      priority = priority || 0;\n      var _tasks = isArray(tasks) ? tasks : [tasks];\n      var taskSize = _tasks.length;\n\n      if (tasks === undefined || taskSize === 0) {\n        if (q.idle()) {\n          nextTick(q.drain);\n        }\n        return;\n      }\n\n      callback = typeof callback === func ? callback : noop;\n      var nextNode = q._tasks.head;\n      while (nextNode && priority >= nextNode.priority) {\n        nextNode = nextNode.next;\n      }\n      while (taskSize--) {\n        var item = {\n          data: _tasks[taskSize],\n          priority: priority,\n          callback: callback\n        };\n        if (nextNode) {\n          q._tasks.insertBefore(nextNode, item);\n        } else {\n          q._tasks.push(item);\n        }\n        nextTick(q.process);\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace cargo\n   */\n  function cargo(worker, payload) {\n    return baseQueue(false, worker, 1, payload);\n  }\n\n  /**\n   * @memberof async\n   * @namespace auto\n   * @param {Object} tasks\n   * @param {number} [concurrency]\n   * @param {Function} [callback]\n   */\n  function auto(tasks, concurrency, callback) {\n    if (typeof concurrency === func) {\n      callback = concurrency;\n      concurrency = null;\n    }\n    var keys = nativeKeys(tasks);\n    var rest = keys.length;\n    var results = {};\n    if (rest === 0) {\n      return callback(null, results);\n    }\n    var runningTasks = 0;\n    var readyTasks = [];\n    var listeners = Object.create(null);\n    callback = onlyOnce(callback || noop);\n    concurrency = concurrency || rest;\n\n    baseEachSync(tasks, iterator, keys);\n    proceedQueue();\n\n    function iterator(task, key) {\n      // no dependencies\n      var _task, _taskSize;\n      if (!isArray(task)) {\n        _task = task;\n        _taskSize = 0;\n        readyTasks.push([_task, _taskSize, done]);\n        return;\n      }\n      var dependencySize = task.length - 1;\n      _task = task[dependencySize];\n      _taskSize = dependencySize;\n      if (dependencySize === 0) {\n        readyTasks.push([_task, _taskSize, done]);\n        return;\n      }\n      // dependencies\n      var index = -1;\n      while (++index < dependencySize) {\n        var dependencyName = task[index];\n        if (notInclude(keys, dependencyName)) {\n          var msg =\n            'async.auto task `' +\n            key +\n            '` has non-existent dependency `' +\n            dependencyName +\n            '` in ' +\n            task.join(', ');\n          throw new Error(msg);\n        }\n        var taskListeners = listeners[dependencyName];\n        if (!taskListeners) {\n          taskListeners = listeners[dependencyName] = [];\n        }\n        taskListeners.push(taskListener);\n      }\n\n      function done(err, arg) {\n        if (key === null) {\n          throwError();\n        }\n        arg = arguments.length <= 2 ? arg : slice(arguments, 1);\n        if (err) {\n          rest = 0;\n          runningTasks = 0;\n          readyTasks.length = 0;\n          var safeResults = objectClone(results);\n          safeResults[key] = arg;\n          key = null;\n          var _callback = callback;\n          callback = noop;\n          _callback(err, safeResults);\n          return;\n        }\n        runningTasks--;\n        rest--;\n        results[key] = arg;\n        taskComplete(key);\n        key = null;\n      }\n\n      function taskListener() {\n        if (--dependencySize === 0) {\n          readyTasks.push([_task, _taskSize, done]);\n        }\n      }\n    }\n\n    function proceedQueue() {\n      if (readyTasks.length === 0 && runningTasks === 0) {\n        if (rest !== 0) {\n          throw new Error('async.auto task has cyclic dependencies');\n        }\n        return callback(null, results);\n      }\n      while (readyTasks.length && runningTasks < concurrency && callback !== noop) {\n        runningTasks++;\n        var array = readyTasks.shift();\n        if (array[1] === 0) {\n          array[0](array[2]);\n        } else {\n          array[0](results, array[2]);\n        }\n      }\n    }\n\n    function taskComplete(key) {\n      var taskListeners = listeners[key] || [];\n      arrayEachSync(taskListeners, function(task) {\n        task();\n      });\n      proceedQueue();\n    }\n  }\n\n  var FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\n  var FN_ARG_SPLIT = /,/;\n  var FN_ARG = /(=.+)?(\\s*)$/;\n  var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\n\n  /**\n   * parse function arguments for `autoInject`\n   *\n   * @private\n   */\n  function parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function(arg) {\n      return arg.replace(FN_ARG, '').trim();\n    });\n    return func;\n  }\n\n  /**\n   * @memberof async\n   * @namespace autoInject\n   * @param {Object} tasks\n   * @param {number} [concurrency]\n   * @param {Function} [callback]\n   */\n  function autoInject(tasks, concurrency, callback) {\n    var newTasks = {};\n    baseEachSync(tasks, iterator, nativeKeys(tasks));\n    auto(newTasks, concurrency, callback);\n\n    function iterator(task, key) {\n      var params;\n      var taskLength = task.length;\n\n      if (isArray(task)) {\n        if (taskLength === 0) {\n          throw new Error('autoInject task functions require explicit parameters.');\n        }\n        params = createArray(task);\n        taskLength = params.length - 1;\n        task = params[taskLength];\n        if (taskLength === 0) {\n          newTasks[key] = task;\n          return;\n        }\n      } else if (taskLength === 1) {\n        newTasks[key] = task;\n        return;\n      } else {\n        params = parseParams(task);\n        if (taskLength === 0 && params.length === 0) {\n          throw new Error('autoInject task functions require explicit parameters.');\n        }\n        taskLength = params.length - 1;\n      }\n      params[taskLength] = newTask;\n      newTasks[key] = params;\n\n      function newTask(results, done) {\n        switch (taskLength) {\n          case 1:\n            task(results[params[0]], done);\n            break;\n          case 2:\n            task(results[params[0]], results[params[1]], done);\n            break;\n          case 3:\n            task(results[params[0]], results[params[1]], results[params[2]], done);\n            break;\n          default:\n            var i = -1;\n            while (++i < taskLength) {\n              params[i] = results[params[i]];\n            }\n            params[i] = done;\n            task.apply(null, params);\n            break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace retry\n   * @param {integer|Object|Function} opts\n   * @param {Function} [task]\n   * @param {Function} [callback]\n   */\n  function retry(opts, task, callback) {\n    var times, intervalFunc, errorFilter;\n    var count = 0;\n    if (arguments.length < 3 && typeof opts === func) {\n      callback = task || noop;\n      task = opts;\n      opts = null;\n      times = DEFAULT_TIMES;\n    } else {\n      callback = callback || noop;\n      switch (typeof opts) {\n        case 'object':\n          if (typeof opts.errorFilter === func) {\n            errorFilter = opts.errorFilter;\n          }\n          var interval = opts.interval;\n          switch (typeof interval) {\n            case func:\n              intervalFunc = interval;\n              break;\n            case 'string':\n            case 'number':\n              interval = +interval;\n              intervalFunc = interval\n                ? function() {\n                    return interval;\n                  }\n                : function() {\n                    return DEFAULT_INTERVAL;\n                  };\n              break;\n          }\n          times = +opts.times || DEFAULT_TIMES;\n          break;\n        case 'number':\n          times = opts || DEFAULT_TIMES;\n          break;\n        case 'string':\n          times = +opts || DEFAULT_TIMES;\n          break;\n        default:\n          throw new Error('Invalid arguments for async.retry');\n      }\n    }\n    if (typeof task !== 'function') {\n      throw new Error('Invalid arguments for async.retry');\n    }\n\n    if (intervalFunc) {\n      task(intervalCallback);\n    } else {\n      task(simpleCallback);\n    }\n\n    function simpleIterator() {\n      task(simpleCallback);\n    }\n\n    function simpleCallback(err, res) {\n      if (++count === times || !err || (errorFilter && !errorFilter(err))) {\n        if (arguments.length <= 2) {\n          return callback(err, res);\n        }\n        var args = createArray(arguments);\n        return callback.apply(null, args);\n      }\n      simpleIterator();\n    }\n\n    function intervalIterator() {\n      task(intervalCallback);\n    }\n\n    function intervalCallback(err, res) {\n      if (++count === times || !err || (errorFilter && !errorFilter(err))) {\n        if (arguments.length <= 2) {\n          return callback(err, res);\n        }\n        var args = createArray(arguments);\n        return callback.apply(null, args);\n      }\n      setTimeout(intervalIterator, intervalFunc(count));\n    }\n  }\n\n  function retryable(opts, task) {\n    if (!task) {\n      task = opts;\n      opts = null;\n    }\n    return done;\n\n    function done() {\n      var taskFn;\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      var callback = args[lastIndex];\n      switch (task.length) {\n        case 1:\n          taskFn = task1;\n          break;\n        case 2:\n          taskFn = task2;\n          break;\n        case 3:\n          taskFn = task3;\n          break;\n        default:\n          taskFn = task4;\n      }\n      if (opts) {\n        retry(opts, taskFn, callback);\n      } else {\n        retry(taskFn, callback);\n      }\n\n      function task1(done) {\n        task(done);\n      }\n\n      function task2(done) {\n        task(args[0], done);\n      }\n\n      function task3(done) {\n        task(args[0], args[1], done);\n      }\n\n      function task4(callback) {\n        args[lastIndex] = callback;\n        task.apply(null, args);\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace iterator\n   */\n  function iterator(tasks) {\n    var size = 0;\n    var keys = [];\n    if (isArray(tasks)) {\n      size = tasks.length;\n    } else {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n    }\n    return makeCallback(0);\n\n    function makeCallback(index) {\n      var fn = function() {\n        if (size) {\n          var key = keys[index] || index;\n          tasks[key].apply(null, createArray(arguments));\n        }\n        return fn.next();\n      };\n      fn.next = function() {\n        return index < size - 1 ? makeCallback(index + 1) : null;\n      };\n      return fn;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace apply\n   */\n  function apply(func) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return func;\n      case 2:\n        return func.bind(null, arguments[1]);\n      case 3:\n        return func.bind(null, arguments[1], arguments[2]);\n      case 4:\n        return func.bind(null, arguments[1], arguments[2], arguments[3]);\n      case 5:\n        return func.bind(null, arguments[1], arguments[2], arguments[3], arguments[4]);\n      default:\n        var size = arguments.length;\n        var index = 0;\n        var args = Array(size);\n        args[index] = null;\n        while (++index < size) {\n          args[index] = arguments[index];\n        }\n        return func.bind.apply(func, args);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace timeout\n   * @param {Function} func\n   * @param {number} millisec\n   * @param {*} info\n   */\n  function timeout(func, millisec, info) {\n    var callback, timer;\n    return wrappedFunc;\n\n    function wrappedFunc() {\n      timer = setTimeout(timeoutCallback, millisec);\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      callback = args[lastIndex];\n      args[lastIndex] = injectedCallback;\n      simpleApply(func, args);\n    }\n\n    function timeoutCallback() {\n      var name = func.name || 'anonymous';\n      var err = new Error('Callback function \"' + name + '\" timed out.');\n      err.code = 'ETIMEDOUT';\n      if (info) {\n        err.info = info;\n      }\n      timer = null;\n      callback(err);\n    }\n\n    function injectedCallback() {\n      if (timer !== null) {\n        simpleApply(callback, createArray(arguments));\n        clearTimeout(timer);\n      }\n    }\n\n    function simpleApply(func, args) {\n      switch (args.length) {\n        case 0:\n          func();\n          break;\n        case 1:\n          func(args[0]);\n          break;\n        case 2:\n          func(args[0], args[1]);\n          break;\n        default:\n          func.apply(null, args);\n          break;\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace times\n   * @param {number} n - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.times(4, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n  function times(n, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n    if (isNaN(n) || n < 1) {\n      return callback(null, []);\n    }\n    var result = Array(n);\n    timesSync(n, iterate);\n\n    function iterate(num) {\n      iterator(num, createCallback(num));\n    }\n\n    function createCallback(index) {\n      return function(err, res) {\n        if (index === null) {\n          throwError();\n        }\n        result[index] = res;\n        index = null;\n        if (err) {\n          callback(err);\n          callback = noop;\n        } else if (--n === 0) {\n          callback(null, result);\n        }\n      };\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace timesSeries\n   * @param {number} n - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.timesSeries(4, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n  function timesSeries(n, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n    if (isNaN(n) || n < 1) {\n      return callback(null, []);\n    }\n    var result = Array(n);\n    var sync = false;\n    var completed = 0;\n    iterate();\n\n    function iterate() {\n      iterator(completed, done);\n    }\n\n    function done(err, res) {\n      result[completed] = res;\n      if (err) {\n        callback(err);\n        callback = throwError;\n      } else if (++completed >= n) {\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace timesLimit\n   * @param {number} n - n >= 1\n   * @param {number} limit - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.timesLimit(4, 2, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n  function timesLimit(n, limit, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n    if (isNaN(n) || n < 1 || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n    var result = Array(n);\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n    timesSync(limit > n ? n : limit, iterate);\n\n    function iterate() {\n      var index = started++;\n      if (index < n) {\n        iterator(index, createCallback(index));\n      }\n    }\n\n    function createCallback(index) {\n      return function(err, res) {\n        if (index === null) {\n          throwError();\n        }\n        result[index] = res;\n        index = null;\n        if (err) {\n          callback(err);\n          callback = noop;\n        } else if (++completed >= n) {\n          callback(null, result);\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace race\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var called = 0;\n   * var tasks = [\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '1');\n   *     }, 30);\n   *   },\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '2');\n   *     }, 20);\n   *   },\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '3');\n   *     }, 10);\n   *   }\n   * ];\n   * async.race(tasks, function(err, res) {\n   *   console.log(res); // '3'\n   *   console.log(called); // 1\n   *   setTimeout(function() {\n   *     console.log(called); // 3\n   *   }, 50);\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var called = 0;\n   * var tasks = {\n   *   'test1': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '1');\n   *     }, 30);\n   *   },\n   *   'test2': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '2');\n   *     }, 20);\n   *   },\n   *   'test3': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '3');\n   *     }, 10);\n   *   }\n   * };\n   * async.race(tasks, function(err, res) {\n   *   console.log(res); // '3'\n   *   console.log(called); // 1\n   *   setTimeout(function() {\n   *     console.log(called); // 3\n   *     done();\n   *   }, 50);\n   * });\n   *\n   */\n  function race(tasks, callback) {\n    callback = once(callback || noop);\n    var size, keys;\n    var index = -1;\n    if (isArray(tasks)) {\n      size = tasks.length;\n      while (++index < size) {\n        tasks[index](callback);\n      }\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      while (++index < size) {\n        tasks[keys[index]](callback);\n      }\n    } else {\n      return callback(new TypeError('First argument to race must be a collection of functions'));\n    }\n    if (!size) {\n      callback(null);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace memoize\n   */\n  function memoize(fn, hasher) {\n    hasher =\n      hasher ||\n      function(hash) {\n        return hash;\n      };\n\n    var memo = {};\n    var queues = {};\n    var memoized = function() {\n      var args = createArray(arguments);\n      var callback = args.pop();\n      var key = hasher.apply(null, args);\n      if (has(memo, key)) {\n        nextTick(function() {\n          callback.apply(null, memo[key]);\n        });\n        return;\n      }\n      if (has(queues, key)) {\n        return queues[key].push(callback);\n      }\n\n      queues[key] = [callback];\n      args.push(done);\n      fn.apply(null, args);\n\n      function done(err) {\n        var args = createArray(arguments);\n        if (!err) {\n          memo[key] = args;\n        }\n        var q = queues[key];\n        delete queues[key];\n\n        var i = -1;\n        var size = q.length;\n        while (++i < size) {\n          q[i].apply(null, args);\n        }\n      }\n    };\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n  }\n\n  /**\n   * @memberof async\n   * @namespace unmemoize\n   */\n  function unmemoize(fn) {\n    return function() {\n      return (fn.unmemoized || fn).apply(null, arguments);\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace ensureAsync\n   */\n  function ensureAsync(fn) {\n    return function(/* ...args, callback */) {\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      var callback = args[lastIndex];\n      var sync = true;\n      args[lastIndex] = done;\n      fn.apply(this, args);\n      sync = false;\n\n      function done() {\n        var innerArgs = createArray(arguments);\n        if (sync) {\n          nextTick(function() {\n            callback.apply(null, innerArgs);\n          });\n        } else {\n          callback.apply(null, innerArgs);\n        }\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace constant\n   */\n  function constant(/* values... */) {\n    var args = [null].concat(createArray(arguments));\n    return function(callback) {\n      callback = arguments[arguments.length - 1];\n      callback.apply(this, args);\n    };\n  }\n\n  function asyncify(fn) {\n    return function(/* args..., callback */) {\n      var args = createArray(arguments);\n      var callback = args.pop();\n      var result;\n      try {\n        result = fn.apply(this, args);\n      } catch (e) {\n        return callback(e);\n      }\n      if (result && typeof result.then === func) {\n        result.then(\n          function(value) {\n            invokeCallback(callback, null, value);\n          },\n          function(err) {\n            invokeCallback(callback, err && err.message ? err : new Error(err));\n          }\n        );\n      } else {\n        callback(null, result);\n      }\n    };\n  }\n\n  function invokeCallback(callback, err, value) {\n    try {\n      callback(err, value);\n    } catch (e) {\n      nextTick(rethrow, e);\n    }\n  }\n\n  function rethrow(error) {\n    throw error;\n  }\n\n  /**\n   * @memberof async\n   * @namespace reflect\n   * @param {Function} func\n   * @return {Function}\n   */\n  function reflect(func) {\n    return function(/* args..., callback */) {\n      var callback;\n      switch (arguments.length) {\n        case 1:\n          callback = arguments[0];\n          return func(done);\n        case 2:\n          callback = arguments[1];\n          return func(arguments[0], done);\n        default:\n          var args = createArray(arguments);\n          var lastIndex = args.length - 1;\n          callback = args[lastIndex];\n          args[lastIndex] = done;\n          func.apply(this, args);\n      }\n\n      function done(err, res) {\n        if (err) {\n          return callback(null, {\n            error: err\n          });\n        }\n        if (arguments.length > 2) {\n          res = slice(arguments, 1);\n        }\n        callback(null, {\n          value: res\n        });\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace reflectAll\n   * @param {Array[]|Object} tasks\n   * @return {Function}\n   */\n  function reflectAll(tasks) {\n    var newTasks, keys;\n    if (isArray(tasks)) {\n      newTasks = Array(tasks.length);\n      arrayEachSync(tasks, iterate);\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      newTasks = {};\n      baseEachSync(tasks, iterate, keys);\n    }\n    return newTasks;\n\n    function iterate(func, key) {\n      newTasks[key] = reflect(func);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace createLogger\n   */\n  function createLogger(name) {\n    return function(fn) {\n      var args = slice(arguments, 1);\n      args.push(done);\n      fn.apply(null, args);\n    };\n\n    function done(err) {\n      if (typeof console === obj) {\n        if (err) {\n          if (console.error) {\n            console.error(err);\n          }\n          return;\n        }\n        if (console[name]) {\n          var args = slice(arguments, 1);\n          arrayEachSync(args, function(arg) {\n            console[name](arg);\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace safe\n   */\n  function safe() {\n    createImmediate();\n    return exports;\n  }\n\n  /**\n   * @memberof async\n   * @namespace fast\n   */\n  function fast() {\n    createImmediate(false);\n    return exports;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}