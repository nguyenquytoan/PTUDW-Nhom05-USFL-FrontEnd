{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observable_1 = require(\"../Observable\");\n\nvar async_1 = require(\"../scheduler/async\");\n\nvar isNumeric_1 = require(\"../util/isNumeric\");\n\nfunction interval(period, scheduler) {\n  if (period === void 0) {\n    period = 0;\n  }\n\n  if (scheduler === void 0) {\n    scheduler = async_1.async;\n  }\n\n  if (!isNumeric_1.isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async_1.async;\n  }\n\n  return new Observable_1.Observable(function (subscriber) {\n    subscriber.add(scheduler.schedule(dispatch, period, {\n      subscriber: subscriber,\n      counter: 0,\n      period: period\n    }));\n    return subscriber;\n  });\n}\n\nexports.interval = interval;\n\nfunction dispatch(state) {\n  var subscriber = state.subscriber,\n      counter = state.counter,\n      period = state.period;\n  subscriber.next(counter);\n  this.schedule({\n    subscriber: subscriber,\n    counter: counter + 1,\n    period: period\n  }, period);\n}","map":{"version":3,"sources":["../../src/internal/observable/interval.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAmDA,SAAgB,QAAhB,CAAyB,MAAzB,EACyB,SADzB,EACyD;AADhC,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAU;;AACV,MAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAA2B,OAAA,CAAA,KAA3B;AAAgC;;AACvD,MAAI,CAAC,WAAA,CAAA,SAAA,CAAU,MAAV,CAAD,IAAsB,MAAM,GAAG,CAAnC,EAAsC;AACpC,IAAA,MAAM,GAAG,CAAT;AACD;;AAED,MAAI,CAAC,SAAD,IAAc,OAAO,SAAS,CAAC,QAAjB,KAA8B,UAAhD,EAA4D;AAC1D,IAAA,SAAS,GAAG,OAAA,CAAA,KAAZ;AACD;;AAED,SAAO,IAAI,YAAA,CAAA,UAAJ,CAAuB,UAAA,UAAA,EAAU;AACtC,IAAA,UAAU,CAAC,GAAX,CACE,SAAS,CAAC,QAAV,CAAmB,QAAnB,EAA6B,MAA7B,EAAqC;AAAE,MAAA,UAAU,EAAA,UAAZ;AAAc,MAAA,OAAO,EAAE,CAAvB;AAA0B,MAAA,MAAM,EAAA;AAAhC,KAArC,CADF;AAGA,WAAO,UAAP;AACD,GALM,CAAP;AAMD;;AAhBD,OAAA,CAAA,QAAA,GAAA,QAAA;;AAkBA,SAAS,QAAT,CAAwD,KAAxD,EAA4E;AAClE,MAAA,UAAA,GAAA,KAAA,CAAA,UAAA;AAAA,MAAY,OAAA,GAAA,KAAA,CAAA,OAAZ;AAAA,MAAqB,MAAA,GAAA,KAAA,CAAA,MAArB;AACR,EAAA,UAAU,CAAC,IAAX,CAAgB,OAAhB;AACA,OAAK,QAAL,CAAc;AAAE,IAAA,UAAU,EAAA,UAAZ;AAAc,IAAA,OAAO,EAAE,OAAO,GAAG,CAAjC;AAAoC,IAAA,MAAM,EAAA;AAA1C,GAAd,EAA4D,MAA5D;AACD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar async_1 = require(\"../scheduler/async\");\nvar isNumeric_1 = require(\"../util/isNumeric\");\nfunction interval(period, scheduler) {\n    if (period === void 0) { period = 0; }\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    if (!isNumeric_1.isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async_1.async;\n    }\n    return new Observable_1.Observable(function (subscriber) {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));\n        return subscriber;\n    });\n}\nexports.interval = interval;\nfunction dispatch(state) {\n    var subscriber = state.subscriber, counter = state.counter, period = state.period;\n    subscriber.next(counter);\n    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);\n}\n//# sourceMappingURL=interval.js.map"]},"metadata":{},"sourceType":"script"}