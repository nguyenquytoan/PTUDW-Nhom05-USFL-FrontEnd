{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.createReporterError = createReporterError;\nexports.createArrayReporterError = createArrayReporterError;\nexports.validateReporters = validateReporters;\n\nfunction _jestValidate() {\n  const data = require('jest-validate');\n\n  _jestValidate = function _jestValidate() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestGetType() {\n  const data = _interopRequireDefault(require('jest-get-type'));\n\n  _jestGetType = function _jestGetType() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError('Invalid attempt to destructure non-iterable instance');\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i['return'] != null) _i['return']();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nconst validReporterTypes = ['array', 'string'];\nconst ERROR = `${_utils.BULLET}Reporter Validation Error`;\n/**\n * Reporter Validation Error is thrown if the given arguments\n * within the reporter are not valid.\n *\n * This is a highly specific reporter error and in the future will be\n * merged with jest-validate. Till then, we can make use of it. It works\n * and that's what counts most at this time.\n */\n\nfunction createReporterError(reporterIndex, reporterValue) {\n  const errorMessage = `  Reporter at index ${reporterIndex} must be of type:\\n` + `    ${_chalk().default.bold.green(validReporterTypes.join(' or '))}\\n` + `  but instead received:\\n` + `    ${_chalk().default.bold.red((0, _jestGetType().default)(reporterValue))}`;\n  return new (_jestValidate().ValidationError)(ERROR, errorMessage, _utils.DOCUMENTATION_NOTE);\n}\n\nfunction createArrayReporterError(arrayReporter, reporterIndex, valueIndex, value, expectedType, valueName) {\n  const errorMessage = `  Unexpected value for ${valueName} ` + `at index ${valueIndex} of reporter at index ${reporterIndex}\\n` + '  Expected:\\n' + `    ${_chalk().default.bold.red(expectedType)}\\n` + '  Got:\\n' + `    ${_chalk().default.bold.green((0, _jestGetType().default)(value))}\\n` + `  Reporter configuration:\\n` + `    ${_chalk().default.bold.green(JSON.stringify(arrayReporter, null, 2).split('\\n').join('\\n    '))}`;\n  return new (_jestValidate().ValidationError)(ERROR, errorMessage, _utils.DOCUMENTATION_NOTE);\n}\n\nfunction validateReporters(reporterConfig) {\n  return reporterConfig.every((reporter, index) => {\n    if (Array.isArray(reporter)) {\n      validateArrayReporter(reporter, index);\n    } else if (typeof reporter !== 'string') {\n      throw createReporterError(index, reporter);\n    }\n\n    return true;\n  });\n}\n\nfunction validateArrayReporter(arrayReporter, reporterIndex) {\n  const _arrayReporter = _slicedToArray(arrayReporter, 2),\n        path = _arrayReporter[0],\n        options = _arrayReporter[1];\n\n  if (typeof path !== 'string') {\n    throw createArrayReporterError(arrayReporter, reporterIndex, 0, path, 'string', 'Path');\n  } else if (typeof options !== 'object') {\n    throw createArrayReporterError(arrayReporter, reporterIndex, 1, options, 'object', 'Reporter Configuration');\n  }\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-config/build/ReporterValidationErrors.js"],"names":["Object","defineProperty","exports","value","createReporterError","createArrayReporterError","validateReporters","_jestValidate","data","require","_chalk","_interopRequireDefault","_jestGetType","_utils","obj","__esModule","default","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","validReporterTypes","ERROR","BULLET","reporterIndex","reporterValue","errorMessage","bold","green","join","red","ValidationError","DOCUMENTATION_NOTE","arrayReporter","valueIndex","expectedType","valueName","JSON","stringify","split","reporterConfig","every","reporter","index","validateArrayReporter","_arrayReporter","path","options"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.createReporterError = createReporterError;\nexports.createArrayReporterError = createArrayReporterError;\nexports.validateReporters = validateReporters;\n\nfunction _jestValidate() {\n  const data = require('jest-validate');\n\n  _jestValidate = function _jestValidate() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestGetType() {\n  const data = _interopRequireDefault(require('jest-get-type'));\n\n  _jestGetType = function _jestGetType() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _slicedToArray(arr, i) {\n  return (\n    _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest()\n  );\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError('Invalid attempt to destructure non-iterable instance');\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (\n      var _i = arr[Symbol.iterator](), _s;\n      !(_n = (_s = _i.next()).done);\n      _n = true\n    ) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i['return'] != null) _i['return']();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nconst validReporterTypes = ['array', 'string'];\nconst ERROR = `${_utils.BULLET}Reporter Validation Error`;\n/**\n * Reporter Validation Error is thrown if the given arguments\n * within the reporter are not valid.\n *\n * This is a highly specific reporter error and in the future will be\n * merged with jest-validate. Till then, we can make use of it. It works\n * and that's what counts most at this time.\n */\n\nfunction createReporterError(reporterIndex, reporterValue) {\n  const errorMessage =\n    `  Reporter at index ${reporterIndex} must be of type:\\n` +\n    `    ${_chalk().default.bold.green(validReporterTypes.join(' or '))}\\n` +\n    `  but instead received:\\n` +\n    `    ${_chalk().default.bold.red(\n      (0, _jestGetType().default)(reporterValue)\n    )}`;\n  return new (_jestValidate()).ValidationError(\n    ERROR,\n    errorMessage,\n    _utils.DOCUMENTATION_NOTE\n  );\n}\n\nfunction createArrayReporterError(\n  arrayReporter,\n  reporterIndex,\n  valueIndex,\n  value,\n  expectedType,\n  valueName\n) {\n  const errorMessage =\n    `  Unexpected value for ${valueName} ` +\n    `at index ${valueIndex} of reporter at index ${reporterIndex}\\n` +\n    '  Expected:\\n' +\n    `    ${_chalk().default.bold.red(expectedType)}\\n` +\n    '  Got:\\n' +\n    `    ${_chalk().default.bold.green((0, _jestGetType().default)(value))}\\n` +\n    `  Reporter configuration:\\n` +\n    `    ${_chalk().default.bold.green(\n      JSON.stringify(arrayReporter, null, 2)\n        .split('\\n')\n        .join('\\n    ')\n    )}`;\n  return new (_jestValidate()).ValidationError(\n    ERROR,\n    errorMessage,\n    _utils.DOCUMENTATION_NOTE\n  );\n}\n\nfunction validateReporters(reporterConfig) {\n  return reporterConfig.every((reporter, index) => {\n    if (Array.isArray(reporter)) {\n      validateArrayReporter(reporter, index);\n    } else if (typeof reporter !== 'string') {\n      throw createReporterError(index, reporter);\n    }\n\n    return true;\n  });\n}\n\nfunction validateArrayReporter(arrayReporter, reporterIndex) {\n  const _arrayReporter = _slicedToArray(arrayReporter, 2),\n    path = _arrayReporter[0],\n    options = _arrayReporter[1];\n\n  if (typeof path !== 'string') {\n    throw createArrayReporterError(\n      arrayReporter,\n      reporterIndex,\n      0,\n      path,\n      'string',\n      'Path'\n    );\n  } else if (typeof options !== 'object') {\n    throw createArrayReporterError(\n      arrayReporter,\n      reporterIndex,\n      1,\n      options,\n      'object',\n      'Reporter Configuration'\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}