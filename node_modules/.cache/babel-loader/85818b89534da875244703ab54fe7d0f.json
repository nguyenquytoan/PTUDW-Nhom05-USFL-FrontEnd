{"ast":null,"code":"\"use strict\";\n\nvar assert = require(\"chai\").assert,\n    isError = require(\"../../error/is\");\n\ndescribe(\"error/is\", function () {\n  it(\"Should return true on error\", function () {\n    assert.equal(isError(new Error()), true);\n  });\n  it(\"Should return false on native error with no common API exposed\", function () {\n    var value = new Error();\n    value.message = null;\n    assert.equal(isError(value), false);\n  });\n  it(\"Should return false on Error.prototype\", function () {\n    assert.equal(isError(Error.prototype), false);\n  });\n\n  if (typeof Object.create === \"function\") {\n    it(\"Should return true on custom built ES5 era error\", function () {\n      var CustomEs5Error = function () {\n        Error.call(this);\n      };\n\n      CustomEs5Error.prototype = Object.create(Error.prototype);\n      assert.equal(isError(new CustomEs5Error()), true);\n    });\n    it(\"Should return false on object with no prototype\", function () {\n      assert.equal(isError(Object.create(null)), false);\n    });\n  }\n\n  it(\"Should return false on plain object\", function () {\n    assert.equal(isError({}), false);\n  });\n  it(\"Should return false on function\", function () {\n    assert.equal(isError(function () {\n      return true;\n    }), false);\n  });\n  it(\"Should return false on array\", function () {\n    assert.equal(isError([]), false);\n  });\n  it(\"Should return false on string\", function () {\n    assert.equal(isError(\"foo\"), false);\n  });\n  it(\"Should return false on empty string\", function () {\n    assert.equal(isError(\"\"), false);\n  });\n  it(\"Should return false on number\", function () {\n    assert.equal(isError(123), false);\n  });\n  it(\"Should return false on NaN\", function () {\n    assert.equal(isError(NaN), false);\n  });\n  it(\"Should return false on boolean\", function () {\n    assert.equal(isError(true), false);\n  });\n\n  if (typeof Symbol === \"function\") {\n    it(\"Should return false on symbol\", function () {\n      assert.equal(isError(Symbol(\"foo\")), false);\n    });\n  }\n\n  it(\"Should return false on null\", function () {\n    assert.equal(isError(null), false);\n  });\n  it(\"Should return false on undefined\", function () {\n    assert.equal(isError(void 0), false);\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/type/test/error/is.js"],"names":["assert","require","isError","describe","it","equal","Error","value","message","prototype","Object","create","CustomEs5Error","call","NaN","Symbol"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar assert  = require(\"chai\").assert\n  , isError = require(\"../../error/is\");\n\ndescribe(\"error/is\", function () {\n\tit(\"Should return true on error\", function () { assert.equal(isError(new Error()), true); });\n\n\tit(\"Should return false on native error with no common API exposed\", function () {\n\t\tvar value = new Error();\n\t\tvalue.message = null;\n\t\tassert.equal(isError(value), false);\n\t});\n\tit(\"Should return false on Error.prototype\", function () {\n\t\tassert.equal(isError(Error.prototype), false);\n\t});\n\n\tif (typeof Object.create === \"function\") {\n\t\tit(\"Should return true on custom built ES5 era error\", function () {\n\t\t\tvar CustomEs5Error = function () { Error.call(this); };\n\t\t\tCustomEs5Error.prototype = Object.create(Error.prototype);\n\t\t\tassert.equal(isError(new CustomEs5Error()), true);\n\t\t});\n\n\t\tit(\"Should return false on object with no prototype\", function () {\n\t\t\tassert.equal(isError(Object.create(null)), false);\n\t\t});\n\t}\n\n\tit(\"Should return false on plain object\", function () { assert.equal(isError({}), false); });\n\tit(\"Should return false on function\", function () {\n\t\tassert.equal(isError(function () { return true; }), false);\n\t});\n\n\tit(\"Should return false on array\", function () { assert.equal(isError([]), false); });\n\n\tit(\"Should return false on string\", function () { assert.equal(isError(\"foo\"), false); });\n\tit(\"Should return false on empty string\", function () { assert.equal(isError(\"\"), false); });\n\tit(\"Should return false on number\", function () { assert.equal(isError(123), false); });\n\tit(\"Should return false on NaN\", function () { assert.equal(isError(NaN), false); });\n\tit(\"Should return false on boolean\", function () { assert.equal(isError(true), false); });\n\tif (typeof Symbol === \"function\") {\n\t\tit(\"Should return false on symbol\", function () {\n\t\t\tassert.equal(isError(Symbol(\"foo\")), false);\n\t\t});\n\t}\n\n\tit(\"Should return false on null\", function () { assert.equal(isError(null), false); });\n\tit(\"Should return false on undefined\", function () { assert.equal(isError(void 0), false); });\n});\n"]},"metadata":{},"sourceType":"script"}