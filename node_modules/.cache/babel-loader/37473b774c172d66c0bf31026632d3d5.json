{"ast":null,"code":"import { noCase } from \".\";\nvar TEST_CASES = [// Single words.\n[\"test\", \"test\"], [\"TEST\", \"test\"], // Camel case.\n[\"testString\", \"test string\"], [\"testString123\", \"test string123\"], [\"testString_1_2_3\", \"test string 1 2 3\"], [\"x_256\", \"x 256\"], [\"anHTMLTag\", \"an html tag\"], [\"ID123String\", \"id123 string\"], [\"Id123String\", \"id123 string\"], [\"foo bar123\", \"foo bar123\"], [\"a1bStar\", \"a1b star\"], // Constant case.\n[\"CONSTANT_CASE \", \"constant case\"], [\"CONST123_FOO\", \"const123 foo\"], // Random cases.\n[\"FOO_bar\", \"foo bar\"], [\"XMLHttpRequest\", \"xml http request\"], [\"IQueryAArgs\", \"i query a args\"], // Non-alphanumeric separators.\n[\"dot.case\", \"dot case\"], [\"path/case\", \"path case\"], [\"snake_case\", \"snake case\"], [\"snake_case123\", \"snake case123\"], [\"snake_case_123\", \"snake case 123\"], // Punctuation.\n['\"quotes\"', \"quotes\"], // Space between number parts.\n[\"version 0.45.0\", \"version 0 45 0\"], [\"version 0..78..9\", \"version 0 78 9\"], [\"version 4_99/4\", \"version 4 99 4\"], // Whitespace.\n[\"  test  \", \"test\"], // Number string input.\n[\"something_2014_other\", \"something 2014 other\"], // https://github.com/blakeembrey/change-case/issues/21\n[\"amazon s3 data\", \"amazon s3 data\"], [\"foo_13_bar\", \"foo 13 bar\"], // Customization.\n[\"camel2019\", \"camel 2019\", {\n  splitRegexp: /([a-z])([A-Z0-9])/g\n}], [\"minifyURLs\", \"minify urls\", {\n  splitRegexp: /([a-z])([A-Z0-9])/g\n}]];\ndescribe(\"no case\", function () {\n  var _loop_1 = function (input, result, options) {\n    it(input + \" -> \" + result, function () {\n      expect(noCase(input, options)).toEqual(result);\n    });\n  };\n\n  for (var _i = 0, TEST_CASES_1 = TEST_CASES; _i < TEST_CASES_1.length; _i++) {\n    var _a = TEST_CASES_1[_i],\n        input = _a[0],\n        result = _a[1],\n        options = _a[2];\n\n    _loop_1(input, result, options);\n  }\n});","map":{"version":3,"sources":["../src/index.spec.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAgC,GAAhC;AAEA,IAAM,UAAU,GAAiC,CAC/C;AACA,CAAC,MAAD,EAAS,MAAT,CAF+C,EAG/C,CAAC,MAAD,EAAS,MAAT,CAH+C,EAK/C;AACA,CAAC,YAAD,EAAe,aAAf,CAN+C,EAO/C,CAAC,eAAD,EAAkB,gBAAlB,CAP+C,EAQ/C,CAAC,kBAAD,EAAqB,mBAArB,CAR+C,EAS/C,CAAC,OAAD,EAAU,OAAV,CAT+C,EAU/C,CAAC,WAAD,EAAc,aAAd,CAV+C,EAW/C,CAAC,aAAD,EAAgB,cAAhB,CAX+C,EAY/C,CAAC,aAAD,EAAgB,cAAhB,CAZ+C,EAa/C,CAAC,YAAD,EAAe,YAAf,CAb+C,EAc/C,CAAC,SAAD,EAAY,UAAZ,CAd+C,EAgB/C;AACA,CAAC,gBAAD,EAAmB,eAAnB,CAjB+C,EAkB/C,CAAC,cAAD,EAAiB,cAAjB,CAlB+C,EAoB/C;AACA,CAAC,SAAD,EAAY,SAAZ,CArB+C,EAsB/C,CAAC,gBAAD,EAAmB,kBAAnB,CAtB+C,EAuB/C,CAAC,aAAD,EAAgB,gBAAhB,CAvB+C,EAyB/C;AACA,CAAC,UAAD,EAAa,UAAb,CA1B+C,EA2B/C,CAAC,WAAD,EAAc,WAAd,CA3B+C,EA4B/C,CAAC,YAAD,EAAe,YAAf,CA5B+C,EA6B/C,CAAC,eAAD,EAAkB,eAAlB,CA7B+C,EA8B/C,CAAC,gBAAD,EAAmB,gBAAnB,CA9B+C,EAgC/C;AACA,CAAC,UAAD,EAAa,QAAb,CAjC+C,EAmC/C;AACA,CAAC,gBAAD,EAAmB,gBAAnB,CApC+C,EAqC/C,CAAC,kBAAD,EAAqB,gBAArB,CArC+C,EAsC/C,CAAC,gBAAD,EAAmB,gBAAnB,CAtC+C,EAwC/C;AACA,CAAC,UAAD,EAAa,MAAb,CAzC+C,EA2C/C;AACA,CAAC,sBAAD,EAAyB,sBAAzB,CA5C+C,EA8C/C;AACA,CAAC,gBAAD,EAAmB,gBAAnB,CA/C+C,EAgD/C,CAAC,YAAD,EAAe,YAAf,CAhD+C,EAkD/C;AACA,CAAC,WAAD,EAAc,YAAd,EAA4B;AAAE,EAAA,WAAW,EAAE;AAAf,CAA5B,CAnD+C,EAoD/C,CAAC,YAAD,EAAe,aAAf,EAA8B;AAAE,EAAA,WAAW,EAAE;AAAf,CAA9B,CApD+C,CAAjD;AAuDA,QAAQ,CAAC,SAAD,EAAY,YAAA;0BACN,K,EAAO,M,EAAQ,O,EAAO;AAChC,IAAA,EAAE,CAAI,KAAK,GAAA,MAAL,GAAY,MAAhB,EAA0B,YAAA;AAC1B,MAAA,MAAM,CAAC,MAAM,CAAC,KAAD,EAAQ,OAAR,CAAP,CAAN,CAA+B,OAA/B,CAAuC,MAAvC;AACD,KAFC,CAAF;;;AADF,OAAuC,IAAA,EAAA,GAAA,CAAA,EAAA,YAAA,GAAA,UAAvC,EAAuC,EAAA,GAAA,YAAA,CAAA,MAAvC,EAAuC,EAAA,EAAvC,EAAiD;AAAtC,QAAA,EAAA,GAAA,YAAA,CAAA,EAAA,CAAA;AAAA,QAAC,KAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,QAAQ,MAAA,GAAA,EAAA,CAAA,CAAA,CAAR;AAAA,QAAgB,OAAA,GAAA,EAAA,CAAA,CAAA,CAAhB;;YAAC,K,EAAO,M,EAAQ,O;AAI1B;AACF,CANO,CAAR","sourcesContent":["import { noCase, Options } from \".\";\n\nconst TEST_CASES: [string, string, Options?][] = [\n  // Single words.\n  [\"test\", \"test\"],\n  [\"TEST\", \"test\"],\n\n  // Camel case.\n  [\"testString\", \"test string\"],\n  [\"testString123\", \"test string123\"],\n  [\"testString_1_2_3\", \"test string 1 2 3\"],\n  [\"x_256\", \"x 256\"],\n  [\"anHTMLTag\", \"an html tag\"],\n  [\"ID123String\", \"id123 string\"],\n  [\"Id123String\", \"id123 string\"],\n  [\"foo bar123\", \"foo bar123\"],\n  [\"a1bStar\", \"a1b star\"],\n\n  // Constant case.\n  [\"CONSTANT_CASE \", \"constant case\"],\n  [\"CONST123_FOO\", \"const123 foo\"],\n\n  // Random cases.\n  [\"FOO_bar\", \"foo bar\"],\n  [\"XMLHttpRequest\", \"xml http request\"],\n  [\"IQueryAArgs\", \"i query a args\"],\n\n  // Non-alphanumeric separators.\n  [\"dot.case\", \"dot case\"],\n  [\"path/case\", \"path case\"],\n  [\"snake_case\", \"snake case\"],\n  [\"snake_case123\", \"snake case123\"],\n  [\"snake_case_123\", \"snake case 123\"],\n\n  // Punctuation.\n  ['\"quotes\"', \"quotes\"],\n\n  // Space between number parts.\n  [\"version 0.45.0\", \"version 0 45 0\"],\n  [\"version 0..78..9\", \"version 0 78 9\"],\n  [\"version 4_99/4\", \"version 4 99 4\"],\n\n  // Whitespace.\n  [\"  test  \", \"test\"],\n\n  // Number string input.\n  [\"something_2014_other\", \"something 2014 other\"],\n\n  // https://github.com/blakeembrey/change-case/issues/21\n  [\"amazon s3 data\", \"amazon s3 data\"],\n  [\"foo_13_bar\", \"foo 13 bar\"],\n\n  // Customization.\n  [\"camel2019\", \"camel 2019\", { splitRegexp: /([a-z])([A-Z0-9])/g }],\n  [\"minifyURLs\", \"minify urls\", { splitRegexp: /([a-z])([A-Z0-9])/g }]\n];\n\ndescribe(\"no case\", () => {\n  for (const [input, result, options] of TEST_CASES) {\n    it(`${input} -> ${result}`, () => {\n      expect(noCase(input, options)).toEqual(result);\n    });\n  }\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}