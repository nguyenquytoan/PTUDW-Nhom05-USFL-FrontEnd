{"ast":null,"code":"// @remove-on-eject-begin\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst webpack = require('webpack');\n\nconst resolve = require('resolve');\n\nconst PnpWebpackPlugin = require('pnp-webpack-plugin');\n\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\nconst CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');\n\nconst InlineChunkHtmlPlugin = require('react-dev-utils/InlineChunkHtmlPlugin');\n\nconst TerserPlugin = require('terser-webpack-plugin');\n\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin');\n\nconst safePostCssParser = require('postcss-safe-parser');\n\nconst ManifestPlugin = require('webpack-manifest-plugin');\n\nconst InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');\n\nconst WorkboxWebpackPlugin = require('workbox-webpack-plugin');\n\nconst WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');\n\nconst ModuleScopePlugin = require('react-dev-utils/ModuleScopePlugin');\n\nconst getCSSModuleLocalIdent = require('react-dev-utils/getCSSModuleLocalIdent');\n\nconst paths = require('./paths');\n\nconst modules = require('./modules');\n\nconst getClientEnvironment = require('./env');\n\nconst ModuleNotFoundPlugin = require('react-dev-utils/ModuleNotFoundPlugin');\n\nconst ForkTsCheckerWebpackPlugin = require('react-dev-utils/ForkTsCheckerWebpackPlugin');\n\nconst typescriptFormatter = require('react-dev-utils/typescriptFormatter'); // @remove-on-eject-begin\n\n\nconst getCacheIdentifier = require('react-dev-utils/getCacheIdentifier'); // @remove-on-eject-end\n\n\nconst postcssNormalize = require('postcss-normalize');\n\nconst appPackageJson = require(paths.appPackageJson); // Source maps are resource heavy and can cause out of memory issue for large source files.\n\n\nconst shouldUseSourceMap = process.env.GENERATE_SOURCEMAP !== 'false'; // Some apps do not need the benefits of saving a web request, so not inlining the chunk\n// makes for a smoother build process.\n\nconst shouldInlineRuntimeChunk = process.env.INLINE_RUNTIME_CHUNK !== 'false';\nconst isExtendingEslintConfig = process.env.EXTEND_ESLINT === 'true';\nconst imageInlineSizeLimit = parseInt(process.env.IMAGE_INLINE_SIZE_LIMIT || '10000'); // Check if TypeScript is setup\n\nconst useTypeScript = fs.existsSync(paths.appTsConfig); // style files regexes\n\nconst cssRegex = /\\.css$/;\nconst cssModuleRegex = /\\.module\\.css$/;\nconst sassRegex = /\\.(scss|sass)$/;\nconst sassModuleRegex = /\\.module\\.(scss|sass)$/; // This is the production and development configuration.\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\n\nmodule.exports = function (webpackEnv) {\n  const isEnvDevelopment = webpackEnv === 'development';\n  const isEnvProduction = webpackEnv === 'production'; // Variable used for enabling profiling in Production\n  // passed into alias object. Uses a flag if passed into the build command\n\n  const isEnvProductionProfile = isEnvProduction && process.argv.includes('--profile'); // We will provide `paths.publicUrlOrPath` to our app\n  // as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.\n  // Omit trailing slash as %PUBLIC_URL%/xyz looks better than %PUBLIC_URL%xyz.\n  // Get environment variables to inject into our app.\n\n  const env = getClientEnvironment(paths.publicUrlOrPath.slice(0, -1)); // common function to get style loaders\n\n  const getStyleLoaders = (cssOptions, preProcessor) => {\n    const loaders = [isEnvDevelopment && require.resolve('style-loader'), isEnvProduction && {\n      loader: MiniCssExtractPlugin.loader,\n      // css is located in `static/css`, use '../../' to locate index.html folder\n      // in production `paths.publicUrlOrPath` can be a relative path\n      options: paths.publicUrlOrPath.startsWith('.') ? {\n        publicPath: '../../'\n      } : {}\n    }, {\n      loader: require.resolve('css-loader'),\n      options: cssOptions\n    }, {\n      // Options for PostCSS as we reference these options twice\n      // Adds vendor prefixing based on your specified browser support in\n      // package.json\n      loader: require.resolve('postcss-loader'),\n      options: {\n        // Necessary for external CSS imports to work\n        // https://github.com/facebook/create-react-app/issues/2677\n        ident: 'postcss',\n        plugins: () => [require('postcss-flexbugs-fixes'), require('postcss-preset-env')({\n          autoprefixer: {\n            flexbox: 'no-2009'\n          },\n          stage: 3\n        }), // Adds PostCSS Normalize as the reset css with default options,\n        // so that it honors browserslist config in package.json\n        // which in turn let's users customize the target behavior as per their needs.\n        postcssNormalize()],\n        sourceMap: isEnvProduction && shouldUseSourceMap\n      }\n    }].filter(Boolean);\n\n    if (preProcessor) {\n      loaders.push({\n        loader: require.resolve('resolve-url-loader'),\n        options: {\n          sourceMap: isEnvProduction && shouldUseSourceMap\n        }\n      }, {\n        loader: require.resolve(preProcessor),\n        options: {\n          sourceMap: true\n        }\n      });\n    }\n\n    return loaders;\n  };\n\n  return {\n    mode: isEnvProduction ? 'production' : isEnvDevelopment && 'development',\n    // Stop compilation early in production\n    bail: isEnvProduction,\n    devtool: isEnvProduction ? shouldUseSourceMap ? 'source-map' : false : isEnvDevelopment && 'cheap-module-source-map',\n    // These are the \"entry points\" to our application.\n    // This means they will be the \"root\" imports that are included in JS bundle.\n    entry: [// Include an alternative client for WebpackDevServer. A client's job is to\n    // connect to WebpackDevServer by a socket and get notified about changes.\n    // When you save a file, the client will either apply hot updates (in case\n    // of CSS changes), or refresh the page (in case of JS changes). When you\n    // make a syntax error, this client will display a syntax error overlay.\n    // Note: instead of the default WebpackDevServer client, we use a custom one\n    // to bring better experience for Create React App users. You can replace\n    // the line below with these two lines if you prefer the stock client:\n    // require.resolve('webpack-dev-server/client') + '?/',\n    // require.resolve('webpack/hot/dev-server'),\n    isEnvDevelopment && require.resolve('react-dev-utils/webpackHotDevClient'), // Finally, this is your app's code:\n    paths.appIndexJs // We include the app code last so that if there is a runtime error during\n    // initialization, it doesn't blow up the WebpackDevServer client, and\n    // changing JS code would still trigger a refresh.\n    ].filter(Boolean),\n    output: {\n      // The build folder.\n      path: isEnvProduction ? paths.appBuild : undefined,\n      // Add /* filename */ comments to generated require()s in the output.\n      pathinfo: isEnvDevelopment,\n      // There will be one main bundle, and one file per asynchronous chunk.\n      // In development, it does not produce real files.\n      filename: isEnvProduction ? 'static/js/[name].[contenthash:8].js' : isEnvDevelopment && 'static/js/bundle.js',\n      // TODO: remove this when upgrading to webpack 5\n      futureEmitAssets: true,\n      // There are also additional JS chunk files if you use code splitting.\n      chunkFilename: isEnvProduction ? 'static/js/[name].[contenthash:8].chunk.js' : isEnvDevelopment && 'static/js/[name].chunk.js',\n      // webpack uses `publicPath` to determine where the app is being served from.\n      // It requires a trailing slash, or the file assets will get an incorrect path.\n      // We inferred the \"public path\" (such as / or /my-project) from homepage.\n      publicPath: paths.publicUrlOrPath,\n      // Point sourcemap entries to original disk location (format as URL on Windows)\n      devtoolModuleFilenameTemplate: isEnvProduction ? info => path.relative(paths.appSrc, info.absoluteResourcePath).replace(/\\\\/g, '/') : isEnvDevelopment && (info => path.resolve(info.absoluteResourcePath).replace(/\\\\/g, '/')),\n      // Prevents conflicts when multiple webpack runtimes (from different apps)\n      // are used on the same page.\n      jsonpFunction: `webpackJsonp${appPackageJson.name}`,\n      // this defaults to 'window', but by setting it to 'this' then\n      // module chunks which are built will work in web workers as well.\n      globalObject: 'this'\n    },\n    optimization: {\n      minimize: isEnvProduction,\n      minimizer: [// This is only used in production mode\n      new TerserPlugin({\n        terserOptions: {\n          parse: {\n            // We want terser to parse ecma 8 code. However, we don't want it\n            // to apply any minification steps that turns valid ecma 5 code\n            // into invalid ecma 5 code. This is why the 'compress' and 'output'\n            // sections only apply transformations that are ecma 5 safe\n            // https://github.com/facebook/create-react-app/pull/4234\n            ecma: 8\n          },\n          compress: {\n            ecma: 5,\n            warnings: false,\n            // Disabled because of an issue with Uglify breaking seemingly valid code:\n            // https://github.com/facebook/create-react-app/issues/2376\n            // Pending further investigation:\n            // https://github.com/mishoo/UglifyJS2/issues/2011\n            comparisons: false,\n            // Disabled because of an issue with Terser breaking valid code:\n            // https://github.com/facebook/create-react-app/issues/5250\n            // Pending further investigation:\n            // https://github.com/terser-js/terser/issues/120\n            inline: 2\n          },\n          mangle: {\n            safari10: true\n          },\n          // Added for profiling in devtools\n          keep_classnames: isEnvProductionProfile,\n          keep_fnames: isEnvProductionProfile,\n          output: {\n            ecma: 5,\n            comments: false,\n            // Turned on because emoji and regex is not minified properly using default\n            // https://github.com/facebook/create-react-app/issues/2488\n            ascii_only: true\n          }\n        },\n        sourceMap: shouldUseSourceMap\n      }), // This is only used in production mode\n      new OptimizeCSSAssetsPlugin({\n        cssProcessorOptions: {\n          parser: safePostCssParser,\n          map: shouldUseSourceMap ? {\n            // `inline: false` forces the sourcemap to be output into a\n            // separate file\n            inline: false,\n            // `annotation: true` appends the sourceMappingURL to the end of\n            // the css file, helping the browser find the sourcemap\n            annotation: true\n          } : false\n        },\n        cssProcessorPluginOptions: {\n          preset: ['default', {\n            minifyFontValues: {\n              removeQuotes: false\n            }\n          }]\n        }\n      })],\n      // Automatically split vendor and commons\n      // https://twitter.com/wSokra/status/969633336732905474\n      // https://medium.com/webpack/webpack-4-code-splitting-chunk-graph-and-the-splitchunks-optimization-be739a861366\n      splitChunks: {\n        chunks: 'all',\n        name: false\n      },\n      // Keep the runtime chunk separated to enable long term caching\n      // https://twitter.com/wSokra/status/969679223278505985\n      // https://github.com/facebook/create-react-app/issues/5358\n      runtimeChunk: {\n        name: entrypoint => `runtime-${entrypoint.name}`\n      }\n    },\n    resolve: {\n      // This allows you to set a fallback for where webpack should look for modules.\n      // We placed these paths second because we want `node_modules` to \"win\"\n      // if there are any conflicts. This matches Node resolution mechanism.\n      // https://github.com/facebook/create-react-app/issues/253\n      modules: ['node_modules', paths.appNodeModules].concat(modules.additionalModulePaths || []),\n      // These are the reasonable defaults supported by the Node ecosystem.\n      // We also include JSX as a common component filename extension to support\n      // some tools, although we do not recommend using it, see:\n      // https://github.com/facebook/create-react-app/issues/290\n      // `web` extension prefixes have been added for better support\n      // for React Native Web.\n      extensions: paths.moduleFileExtensions.map(ext => `.${ext}`).filter(ext => useTypeScript || !ext.includes('ts')),\n      alias: {\n        // Support React Native Web\n        // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\n        'react-native': 'react-native-web',\n        // Allows for better profiling with ReactDevTools\n        ...(isEnvProductionProfile && {\n          'react-dom$': 'react-dom/profiling',\n          'scheduler/tracing': 'scheduler/tracing-profiling'\n        }),\n        ...(modules.webpackAliases || {})\n      },\n      plugins: [// Adds support for installing with Plug'n'Play, leading to faster installs and adding\n      // guards against forgotten dependencies and such.\n      PnpWebpackPlugin, // Prevents users from importing files from outside of src/ (or node_modules/).\n      // This often causes confusion because we only process files within src/ with babel.\n      // To fix this, we prevent you from importing files out of src/ -- if you'd like to,\n      // please link the files into your node_modules/ and let module-resolution kick in.\n      // Make sure your source files are compiled, as they will not be processed in any way.\n      new ModuleScopePlugin(paths.appSrc, [paths.appPackageJson])]\n    },\n    resolveLoader: {\n      plugins: [// Also related to Plug'n'Play, but this time it tells webpack to load its loaders\n      // from the current package.\n      PnpWebpackPlugin.moduleLoader(module)]\n    },\n    module: {\n      strictExportPresence: true,\n      rules: [// Disable require.ensure as it's not a standard language feature.\n      {\n        parser: {\n          requireEnsure: false\n        }\n      }, // First, run the linter.\n      // It's important to do this before Babel processes the JS.\n      {\n        test: /\\.(js|mjs|jsx|ts|tsx)$/,\n        enforce: 'pre',\n        use: [{\n          options: {\n            cache: true,\n            formatter: require.resolve('react-dev-utils/eslintFormatter'),\n            eslintPath: require.resolve('eslint'),\n            resolvePluginsRelativeTo: __dirname,\n            // @remove-on-eject-begin\n            ignore: isExtendingEslintConfig,\n            baseConfig: isExtendingEslintConfig ? undefined : {\n              extends: [require.resolve('eslint-config-react-app')]\n            },\n            useEslintrc: isExtendingEslintConfig // @remove-on-eject-end\n\n          },\n          loader: require.resolve('eslint-loader')\n        }],\n        include: paths.appSrc\n      }, {\n        // \"oneOf\" will traverse all following loaders until one will\n        // match the requirements. When no loader matches it will fall\n        // back to the \"file\" loader at the end of the loader list.\n        oneOf: [// \"url\" loader works like \"file\" loader except that it embeds assets\n        // smaller than specified limit in bytes as data URLs to avoid requests.\n        // A missing `test` is equivalent to a match.\n        {\n          test: [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/],\n          loader: require.resolve('url-loader'),\n          options: {\n            limit: imageInlineSizeLimit,\n            name: 'static/media/[name].[hash:8].[ext]'\n          }\n        }, // Process application JS with Babel.\n        // The preset includes JSX, Flow, TypeScript, and some ESnext features.\n        {\n          test: /\\.(js|mjs|jsx|ts|tsx)$/,\n          include: paths.appSrc,\n          loader: require.resolve('babel-loader'),\n          options: {\n            customize: require.resolve('babel-preset-react-app/webpack-overrides'),\n            // @remove-on-eject-begin\n            babelrc: false,\n            configFile: false,\n            presets: [require.resolve('babel-preset-react-app')],\n            // Make sure we have a unique cache identifier, erring on the\n            // side of caution.\n            // We remove this when the user ejects because the default\n            // is sane and uses Babel options. Instead of options, we use\n            // the react-scripts and babel-preset-react-app versions.\n            cacheIdentifier: getCacheIdentifier(isEnvProduction ? 'production' : isEnvDevelopment && 'development', ['babel-plugin-named-asset-import', 'babel-preset-react-app', 'react-dev-utils', 'react-scripts']),\n            // @remove-on-eject-end\n            plugins: [[require.resolve('babel-plugin-named-asset-import'), {\n              loaderMap: {\n                svg: {\n                  ReactComponent: '@svgr/webpack?-svgo,+titleProp,+ref![path]'\n                }\n              }\n            }]],\n            // This is a feature of `babel-loader` for webpack (not Babel itself).\n            // It enables caching results in ./node_modules/.cache/babel-loader/\n            // directory for faster rebuilds.\n            cacheDirectory: true,\n            // See #6846 for context on why cacheCompression is disabled\n            cacheCompression: false,\n            compact: isEnvProduction\n          }\n        }, // Process any JS outside of the app with Babel.\n        // Unlike the application JS, we only compile the standard ES features.\n        {\n          test: /\\.(js|mjs)$/,\n          exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\n          loader: require.resolve('babel-loader'),\n          options: {\n            babelrc: false,\n            configFile: false,\n            compact: false,\n            presets: [[require.resolve('babel-preset-react-app/dependencies'), {\n              helpers: true\n            }]],\n            cacheDirectory: true,\n            // See #6846 for context on why cacheCompression is disabled\n            cacheCompression: false,\n            // @remove-on-eject-begin\n            cacheIdentifier: getCacheIdentifier(isEnvProduction ? 'production' : isEnvDevelopment && 'development', ['babel-plugin-named-asset-import', 'babel-preset-react-app', 'react-dev-utils', 'react-scripts']),\n            // @remove-on-eject-end\n            // Babel sourcemaps are needed for debugging into node_modules\n            // code.  Without the options below, debuggers like VSCode\n            // show incorrect code and set breakpoints on the wrong lines.\n            sourceMaps: shouldUseSourceMap,\n            inputSourceMap: shouldUseSourceMap\n          }\n        }, // \"postcss\" loader applies autoprefixer to our CSS.\n        // \"css\" loader resolves paths in CSS and adds assets as dependencies.\n        // \"style\" loader turns CSS into JS modules that inject <style> tags.\n        // In production, we use MiniCSSExtractPlugin to extract that CSS\n        // to a file, but in development \"style\" loader enables hot editing\n        // of CSS.\n        // By default we support CSS Modules with the extension .module.css\n        {\n          test: cssRegex,\n          exclude: cssModuleRegex,\n          use: getStyleLoaders({\n            importLoaders: 1,\n            sourceMap: isEnvProduction && shouldUseSourceMap\n          }),\n          // Don't consider CSS imports dead code even if the\n          // containing package claims to have no side effects.\n          // Remove this when webpack adds a warning or an error for this.\n          // See https://github.com/webpack/webpack/issues/6571\n          sideEffects: true\n        }, // Adds support for CSS Modules (https://github.com/css-modules/css-modules)\n        // using the extension .module.css\n        {\n          test: cssModuleRegex,\n          use: getStyleLoaders({\n            importLoaders: 1,\n            sourceMap: isEnvProduction && shouldUseSourceMap,\n            modules: {\n              getLocalIdent: getCSSModuleLocalIdent\n            }\n          })\n        }, // Opt-in support for SASS (using .scss or .sass extensions).\n        // By default we support SASS Modules with the\n        // extensions .module.scss or .module.sass\n        {\n          test: sassRegex,\n          exclude: sassModuleRegex,\n          use: getStyleLoaders({\n            importLoaders: 3,\n            sourceMap: isEnvProduction && shouldUseSourceMap\n          }, 'sass-loader'),\n          // Don't consider CSS imports dead code even if the\n          // containing package claims to have no side effects.\n          // Remove this when webpack adds a warning or an error for this.\n          // See https://github.com/webpack/webpack/issues/6571\n          sideEffects: true\n        }, // Adds support for CSS Modules, but using SASS\n        // using the extension .module.scss or .module.sass\n        {\n          test: sassModuleRegex,\n          use: getStyleLoaders({\n            importLoaders: 3,\n            sourceMap: isEnvProduction && shouldUseSourceMap,\n            modules: {\n              getLocalIdent: getCSSModuleLocalIdent\n            }\n          }, 'sass-loader')\n        }, // \"file\" loader makes sure those assets get served by WebpackDevServer.\n        // When you `import` an asset, you get its (virtual) filename.\n        // In production, they would get copied to the `build` folder.\n        // This loader doesn't use a \"test\" so it will catch all modules\n        // that fall through the other loaders.\n        {\n          loader: require.resolve('file-loader'),\n          // Exclude `js` files to keep \"css\" loader working as it injects\n          // its runtime that would otherwise be processed through \"file\" loader.\n          // Also exclude `html` and `json` extensions so they get processed\n          // by webpacks internal loaders.\n          exclude: [/\\.(js|mjs|jsx|ts|tsx)$/, /\\.html$/, /\\.json$/],\n          options: {\n            name: 'static/media/[name].[hash:8].[ext]'\n          }\n        } // ** STOP ** Are you adding a new loader?\n        // Make sure to add the new loader(s) before the \"file\" loader.\n        ]\n      }]\n    },\n    plugins: [// Generates an `index.html` file with the <script> injected.\n    new HtmlWebpackPlugin(Object.assign({}, {\n      inject: true,\n      template: paths.appHtml\n    }, isEnvProduction ? {\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeRedundantAttributes: true,\n        useShortDoctype: true,\n        removeEmptyAttributes: true,\n        removeStyleLinkTypeAttributes: true,\n        keepClosingSlash: true,\n        minifyJS: true,\n        minifyCSS: true,\n        minifyURLs: true\n      }\n    } : undefined)), // Inlines the webpack runtime script. This script is too small to warrant\n    // a network request.\n    // https://github.com/facebook/create-react-app/issues/5358\n    isEnvProduction && shouldInlineRuntimeChunk && new InlineChunkHtmlPlugin(HtmlWebpackPlugin, [/runtime-.+[.]js/]), // Makes some environment variables available in index.html.\n    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:\n    // <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n    // It will be an empty string unless you specify \"homepage\"\n    // in `package.json`, in which case it will be the pathname of that URL.\n    new InterpolateHtmlPlugin(HtmlWebpackPlugin, env.raw), // This gives some necessary context to module not found errors, such as\n    // the requesting resource.\n    new ModuleNotFoundPlugin(paths.appPath), // Makes some environment variables available to the JS code, for example:\n    // if (process.env.NODE_ENV === 'production') { ... }. See `./env.js`.\n    // It is absolutely essential that NODE_ENV is set to production\n    // during a production build.\n    // Otherwise React will be compiled in the very slow development mode.\n    new webpack.DefinePlugin(env.stringified), // This is necessary to emit hot updates (currently CSS only):\n    isEnvDevelopment && new webpack.HotModuleReplacementPlugin(), // Watcher doesn't work well if you mistype casing in a path so we use\n    // a plugin that prints an error when you attempt to do this.\n    // See https://github.com/facebook/create-react-app/issues/240\n    isEnvDevelopment && new CaseSensitivePathsPlugin(), // If you require a missing module and then `npm install` it, you still have\n    // to restart the development server for webpack to discover it. This plugin\n    // makes the discovery automatic so you don't have to restart.\n    // See https://github.com/facebook/create-react-app/issues/186\n    isEnvDevelopment && new WatchMissingNodeModulesPlugin(paths.appNodeModules), isEnvProduction && new MiniCssExtractPlugin({\n      // Options similar to the same options in webpackOptions.output\n      // both options are optional\n      filename: 'static/css/[name].[contenthash:8].css',\n      chunkFilename: 'static/css/[name].[contenthash:8].chunk.css'\n    }), // Generate an asset manifest file with the following content:\n    // - \"files\" key: Mapping of all asset filenames to their corresponding\n    //   output file so that tools can pick it up without having to parse\n    //   `index.html`\n    // - \"entrypoints\" key: Array of files which are included in `index.html`,\n    //   can be used to reconstruct the HTML if necessary\n    new ManifestPlugin({\n      fileName: 'asset-manifest.json',\n      publicPath: paths.publicUrlOrPath,\n      generate: (seed, files, entrypoints) => {\n        const manifestFiles = files.reduce((manifest, file) => {\n          manifest[file.name] = file.path;\n          return manifest;\n        }, seed);\n        const entrypointFiles = entrypoints.main.filter(fileName => !fileName.endsWith('.map'));\n        return {\n          files: manifestFiles,\n          entrypoints: entrypointFiles\n        };\n      }\n    }), // Moment.js is an extremely popular library that bundles large locale files\n    // by default due to how webpack interprets its code. This is a practical\n    // solution that requires the user to opt into importing specific locales.\n    // https://github.com/jmblog/how-to-optimize-momentjs-with-webpack\n    // You can remove this if you don't use Moment.js:\n    new webpack.IgnorePlugin(/^\\.\\/locale$/, /moment$/), // Generate a service worker script that will precache, and keep up to date,\n    // the HTML & assets that are part of the webpack build.\n    isEnvProduction && new WorkboxWebpackPlugin.GenerateSW({\n      clientsClaim: true,\n      exclude: [/\\.map$/, /asset-manifest\\.json$/],\n      importWorkboxFrom: 'cdn',\n      navigateFallback: paths.publicUrlOrPath + 'index.html',\n      navigateFallbackBlacklist: [// Exclude URLs starting with /_, as they're likely an API call\n      new RegExp('^/_'), // Exclude any URLs whose last part seems to be a file extension\n      // as they're likely a resource and not a SPA route.\n      // URLs containing a \"?\" character won't be blacklisted as they're likely\n      // a route with query params (e.g. auth callbacks).\n      new RegExp('/[^/?]+\\\\.[^/]+$')]\n    }), // TypeScript type checking\n    useTypeScript && new ForkTsCheckerWebpackPlugin({\n      typescript: resolve.sync('typescript', {\n        basedir: paths.appNodeModules\n      }),\n      async: isEnvDevelopment,\n      useTypescriptIncrementalApi: true,\n      checkSyntacticErrors: true,\n      resolveModuleNameModule: process.versions.pnp ? `${__dirname}/pnpTs.js` : undefined,\n      resolveTypeReferenceDirectiveModule: process.versions.pnp ? `${__dirname}/pnpTs.js` : undefined,\n      tsconfig: paths.appTsConfig,\n      reportFiles: ['**', '!**/__tests__/**', '!**/?(*.)(spec|test).*', '!**/src/setupProxy.*', '!**/src/setupTests.*'],\n      silent: true,\n      // The formatter is invoked directly in WebpackDevServerUtils during development\n      formatter: isEnvProduction ? typescriptFormatter : undefined\n    })].filter(Boolean),\n    // Some libraries import Node modules but don't use them in the browser.\n    // Tell webpack to provide empty mocks for them so importing them works.\n    node: {\n      module: 'empty',\n      dgram: 'empty',\n      dns: 'mock',\n      fs: 'empty',\n      http2: 'empty',\n      net: 'empty',\n      tls: 'empty',\n      child_process: 'empty'\n    },\n    // Turn off performance processing because we utilize\n    // our own hints via the FileSizeReporter\n    performance: false\n  };\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/react-scripts/config/webpack.config.js"],"names":["fs","require","path","webpack","resolve","PnpWebpackPlugin","HtmlWebpackPlugin","CaseSensitivePathsPlugin","InlineChunkHtmlPlugin","TerserPlugin","MiniCssExtractPlugin","OptimizeCSSAssetsPlugin","safePostCssParser","ManifestPlugin","InterpolateHtmlPlugin","WorkboxWebpackPlugin","WatchMissingNodeModulesPlugin","ModuleScopePlugin","getCSSModuleLocalIdent","paths","modules","getClientEnvironment","ModuleNotFoundPlugin","ForkTsCheckerWebpackPlugin","typescriptFormatter","getCacheIdentifier","postcssNormalize","appPackageJson","shouldUseSourceMap","process","env","GENERATE_SOURCEMAP","shouldInlineRuntimeChunk","INLINE_RUNTIME_CHUNK","isExtendingEslintConfig","EXTEND_ESLINT","imageInlineSizeLimit","parseInt","IMAGE_INLINE_SIZE_LIMIT","useTypeScript","existsSync","appTsConfig","cssRegex","cssModuleRegex","sassRegex","sassModuleRegex","module","exports","webpackEnv","isEnvDevelopment","isEnvProduction","isEnvProductionProfile","argv","includes","publicUrlOrPath","slice","getStyleLoaders","cssOptions","preProcessor","loaders","loader","options","startsWith","publicPath","ident","plugins","autoprefixer","flexbox","stage","sourceMap","filter","Boolean","push","mode","bail","devtool","entry","appIndexJs","output","appBuild","undefined","pathinfo","filename","futureEmitAssets","chunkFilename","devtoolModuleFilenameTemplate","info","relative","appSrc","absoluteResourcePath","replace","jsonpFunction","name","globalObject","optimization","minimize","minimizer","terserOptions","parse","ecma","compress","warnings","comparisons","inline","mangle","safari10","keep_classnames","keep_fnames","comments","ascii_only","cssProcessorOptions","parser","map","annotation","cssProcessorPluginOptions","preset","minifyFontValues","removeQuotes","splitChunks","chunks","runtimeChunk","entrypoint","appNodeModules","concat","additionalModulePaths","extensions","moduleFileExtensions","ext","alias","webpackAliases","resolveLoader","moduleLoader","strictExportPresence","rules","requireEnsure","test","enforce","use","cache","formatter","eslintPath","resolvePluginsRelativeTo","__dirname","ignore","baseConfig","extends","useEslintrc","include","oneOf","limit","customize","babelrc","configFile","presets","cacheIdentifier","loaderMap","svg","ReactComponent","cacheDirectory","cacheCompression","compact","exclude","helpers","sourceMaps","inputSourceMap","importLoaders","sideEffects","getLocalIdent","Object","assign","inject","template","appHtml","minify","removeComments","collapseWhitespace","removeRedundantAttributes","useShortDoctype","removeEmptyAttributes","removeStyleLinkTypeAttributes","keepClosingSlash","minifyJS","minifyCSS","minifyURLs","raw","appPath","DefinePlugin","stringified","HotModuleReplacementPlugin","fileName","generate","seed","files","entrypoints","manifestFiles","reduce","manifest","file","entrypointFiles","main","endsWith","IgnorePlugin","GenerateSW","clientsClaim","importWorkboxFrom","navigateFallback","navigateFallbackBlacklist","RegExp","typescript","sync","basedir","async","useTypescriptIncrementalApi","checkSyntacticErrors","resolveModuleNameModule","versions","pnp","resolveTypeReferenceDirectiveModule","tsconfig","reportFiles","silent","node","dgram","dns","http2","net","tls","child_process","performance"],"mappings":"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","sourcesContent":["// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst webpack = require('webpack');\nconst resolve = require('resolve');\nconst PnpWebpackPlugin = require('pnp-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');\nconst InlineChunkHtmlPlugin = require('react-dev-utils/InlineChunkHtmlPlugin');\nconst TerserPlugin = require('terser-webpack-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin');\nconst safePostCssParser = require('postcss-safe-parser');\nconst ManifestPlugin = require('webpack-manifest-plugin');\nconst InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');\nconst WorkboxWebpackPlugin = require('workbox-webpack-plugin');\nconst WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');\nconst ModuleScopePlugin = require('react-dev-utils/ModuleScopePlugin');\nconst getCSSModuleLocalIdent = require('react-dev-utils/getCSSModuleLocalIdent');\nconst paths = require('./paths');\nconst modules = require('./modules');\nconst getClientEnvironment = require('./env');\nconst ModuleNotFoundPlugin = require('react-dev-utils/ModuleNotFoundPlugin');\nconst ForkTsCheckerWebpackPlugin = require('react-dev-utils/ForkTsCheckerWebpackPlugin');\nconst typescriptFormatter = require('react-dev-utils/typescriptFormatter');\n// @remove-on-eject-begin\nconst getCacheIdentifier = require('react-dev-utils/getCacheIdentifier');\n// @remove-on-eject-end\nconst postcssNormalize = require('postcss-normalize');\n\nconst appPackageJson = require(paths.appPackageJson);\n\n// Source maps are resource heavy and can cause out of memory issue for large source files.\nconst shouldUseSourceMap = process.env.GENERATE_SOURCEMAP !== 'false';\n// Some apps do not need the benefits of saving a web request, so not inlining the chunk\n// makes for a smoother build process.\nconst shouldInlineRuntimeChunk = process.env.INLINE_RUNTIME_CHUNK !== 'false';\n\nconst isExtendingEslintConfig = process.env.EXTEND_ESLINT === 'true';\n\nconst imageInlineSizeLimit = parseInt(\n  process.env.IMAGE_INLINE_SIZE_LIMIT || '10000'\n);\n\n// Check if TypeScript is setup\nconst useTypeScript = fs.existsSync(paths.appTsConfig);\n\n// style files regexes\nconst cssRegex = /\\.css$/;\nconst cssModuleRegex = /\\.module\\.css$/;\nconst sassRegex = /\\.(scss|sass)$/;\nconst sassModuleRegex = /\\.module\\.(scss|sass)$/;\n\n// This is the production and development configuration.\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\nmodule.exports = function(webpackEnv) {\n  const isEnvDevelopment = webpackEnv === 'development';\n  const isEnvProduction = webpackEnv === 'production';\n\n  // Variable used for enabling profiling in Production\n  // passed into alias object. Uses a flag if passed into the build command\n  const isEnvProductionProfile =\n    isEnvProduction && process.argv.includes('--profile');\n\n  // We will provide `paths.publicUrlOrPath` to our app\n  // as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.\n  // Omit trailing slash as %PUBLIC_URL%/xyz looks better than %PUBLIC_URL%xyz.\n  // Get environment variables to inject into our app.\n  const env = getClientEnvironment(paths.publicUrlOrPath.slice(0, -1));\n\n  // common function to get style loaders\n  const getStyleLoaders = (cssOptions, preProcessor) => {\n    const loaders = [\n      isEnvDevelopment && require.resolve('style-loader'),\n      isEnvProduction && {\n        loader: MiniCssExtractPlugin.loader,\n        // css is located in `static/css`, use '../../' to locate index.html folder\n        // in production `paths.publicUrlOrPath` can be a relative path\n        options: paths.publicUrlOrPath.startsWith('.')\n          ? { publicPath: '../../' }\n          : {},\n      },\n      {\n        loader: require.resolve('css-loader'),\n        options: cssOptions,\n      },\n      {\n        // Options for PostCSS as we reference these options twice\n        // Adds vendor prefixing based on your specified browser support in\n        // package.json\n        loader: require.resolve('postcss-loader'),\n        options: {\n          // Necessary for external CSS imports to work\n          // https://github.com/facebook/create-react-app/issues/2677\n          ident: 'postcss',\n          plugins: () => [\n            require('postcss-flexbugs-fixes'),\n            require('postcss-preset-env')({\n              autoprefixer: {\n                flexbox: 'no-2009',\n              },\n              stage: 3,\n            }),\n            // Adds PostCSS Normalize as the reset css with default options,\n            // so that it honors browserslist config in package.json\n            // which in turn let's users customize the target behavior as per their needs.\n            postcssNormalize(),\n          ],\n          sourceMap: isEnvProduction && shouldUseSourceMap,\n        },\n      },\n    ].filter(Boolean);\n    if (preProcessor) {\n      loaders.push(\n        {\n          loader: require.resolve('resolve-url-loader'),\n          options: {\n            sourceMap: isEnvProduction && shouldUseSourceMap,\n          },\n        },\n        {\n          loader: require.resolve(preProcessor),\n          options: {\n            sourceMap: true,\n          },\n        }\n      );\n    }\n    return loaders;\n  };\n\n  return {\n    mode: isEnvProduction ? 'production' : isEnvDevelopment && 'development',\n    // Stop compilation early in production\n    bail: isEnvProduction,\n    devtool: isEnvProduction\n      ? shouldUseSourceMap\n        ? 'source-map'\n        : false\n      : isEnvDevelopment && 'cheap-module-source-map',\n    // These are the \"entry points\" to our application.\n    // This means they will be the \"root\" imports that are included in JS bundle.\n    entry: [\n      // Include an alternative client for WebpackDevServer. A client's job is to\n      // connect to WebpackDevServer by a socket and get notified about changes.\n      // When you save a file, the client will either apply hot updates (in case\n      // of CSS changes), or refresh the page (in case of JS changes). When you\n      // make a syntax error, this client will display a syntax error overlay.\n      // Note: instead of the default WebpackDevServer client, we use a custom one\n      // to bring better experience for Create React App users. You can replace\n      // the line below with these two lines if you prefer the stock client:\n      // require.resolve('webpack-dev-server/client') + '?/',\n      // require.resolve('webpack/hot/dev-server'),\n      isEnvDevelopment &&\n        require.resolve('react-dev-utils/webpackHotDevClient'),\n      // Finally, this is your app's code:\n      paths.appIndexJs,\n      // We include the app code last so that if there is a runtime error during\n      // initialization, it doesn't blow up the WebpackDevServer client, and\n      // changing JS code would still trigger a refresh.\n    ].filter(Boolean),\n    output: {\n      // The build folder.\n      path: isEnvProduction ? paths.appBuild : undefined,\n      // Add /* filename */ comments to generated require()s in the output.\n      pathinfo: isEnvDevelopment,\n      // There will be one main bundle, and one file per asynchronous chunk.\n      // In development, it does not produce real files.\n      filename: isEnvProduction\n        ? 'static/js/[name].[contenthash:8].js'\n        : isEnvDevelopment && 'static/js/bundle.js',\n      // TODO: remove this when upgrading to webpack 5\n      futureEmitAssets: true,\n      // There are also additional JS chunk files if you use code splitting.\n      chunkFilename: isEnvProduction\n        ? 'static/js/[name].[contenthash:8].chunk.js'\n        : isEnvDevelopment && 'static/js/[name].chunk.js',\n      // webpack uses `publicPath` to determine where the app is being served from.\n      // It requires a trailing slash, or the file assets will get an incorrect path.\n      // We inferred the \"public path\" (such as / or /my-project) from homepage.\n      publicPath: paths.publicUrlOrPath,\n      // Point sourcemap entries to original disk location (format as URL on Windows)\n      devtoolModuleFilenameTemplate: isEnvProduction\n        ? info =>\n            path\n              .relative(paths.appSrc, info.absoluteResourcePath)\n              .replace(/\\\\/g, '/')\n        : isEnvDevelopment &&\n          (info => path.resolve(info.absoluteResourcePath).replace(/\\\\/g, '/')),\n      // Prevents conflicts when multiple webpack runtimes (from different apps)\n      // are used on the same page.\n      jsonpFunction: `webpackJsonp${appPackageJson.name}`,\n      // this defaults to 'window', but by setting it to 'this' then\n      // module chunks which are built will work in web workers as well.\n      globalObject: 'this',\n    },\n    optimization: {\n      minimize: isEnvProduction,\n      minimizer: [\n        // This is only used in production mode\n        new TerserPlugin({\n          terserOptions: {\n            parse: {\n              // We want terser to parse ecma 8 code. However, we don't want it\n              // to apply any minification steps that turns valid ecma 5 code\n              // into invalid ecma 5 code. This is why the 'compress' and 'output'\n              // sections only apply transformations that are ecma 5 safe\n              // https://github.com/facebook/create-react-app/pull/4234\n              ecma: 8,\n            },\n            compress: {\n              ecma: 5,\n              warnings: false,\n              // Disabled because of an issue with Uglify breaking seemingly valid code:\n              // https://github.com/facebook/create-react-app/issues/2376\n              // Pending further investigation:\n              // https://github.com/mishoo/UglifyJS2/issues/2011\n              comparisons: false,\n              // Disabled because of an issue with Terser breaking valid code:\n              // https://github.com/facebook/create-react-app/issues/5250\n              // Pending further investigation:\n              // https://github.com/terser-js/terser/issues/120\n              inline: 2,\n            },\n            mangle: {\n              safari10: true,\n            },\n            // Added for profiling in devtools\n            keep_classnames: isEnvProductionProfile,\n            keep_fnames: isEnvProductionProfile,\n            output: {\n              ecma: 5,\n              comments: false,\n              // Turned on because emoji and regex is not minified properly using default\n              // https://github.com/facebook/create-react-app/issues/2488\n              ascii_only: true,\n            },\n          },\n          sourceMap: shouldUseSourceMap,\n        }),\n        // This is only used in production mode\n        new OptimizeCSSAssetsPlugin({\n          cssProcessorOptions: {\n            parser: safePostCssParser,\n            map: shouldUseSourceMap\n              ? {\n                  // `inline: false` forces the sourcemap to be output into a\n                  // separate file\n                  inline: false,\n                  // `annotation: true` appends the sourceMappingURL to the end of\n                  // the css file, helping the browser find the sourcemap\n                  annotation: true,\n                }\n              : false,\n          },\n          cssProcessorPluginOptions: {\n            preset: ['default', { minifyFontValues: { removeQuotes: false } }],\n          },\n        }),\n      ],\n      // Automatically split vendor and commons\n      // https://twitter.com/wSokra/status/969633336732905474\n      // https://medium.com/webpack/webpack-4-code-splitting-chunk-graph-and-the-splitchunks-optimization-be739a861366\n      splitChunks: {\n        chunks: 'all',\n        name: false,\n      },\n      // Keep the runtime chunk separated to enable long term caching\n      // https://twitter.com/wSokra/status/969679223278505985\n      // https://github.com/facebook/create-react-app/issues/5358\n      runtimeChunk: {\n        name: entrypoint => `runtime-${entrypoint.name}`,\n      },\n    },\n    resolve: {\n      // This allows you to set a fallback for where webpack should look for modules.\n      // We placed these paths second because we want `node_modules` to \"win\"\n      // if there are any conflicts. This matches Node resolution mechanism.\n      // https://github.com/facebook/create-react-app/issues/253\n      modules: ['node_modules', paths.appNodeModules].concat(\n        modules.additionalModulePaths || []\n      ),\n      // These are the reasonable defaults supported by the Node ecosystem.\n      // We also include JSX as a common component filename extension to support\n      // some tools, although we do not recommend using it, see:\n      // https://github.com/facebook/create-react-app/issues/290\n      // `web` extension prefixes have been added for better support\n      // for React Native Web.\n      extensions: paths.moduleFileExtensions\n        .map(ext => `.${ext}`)\n        .filter(ext => useTypeScript || !ext.includes('ts')),\n      alias: {\n        // Support React Native Web\n        // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\n        'react-native': 'react-native-web',\n        // Allows for better profiling with ReactDevTools\n        ...(isEnvProductionProfile && {\n          'react-dom$': 'react-dom/profiling',\n          'scheduler/tracing': 'scheduler/tracing-profiling',\n        }),\n        ...(modules.webpackAliases || {}),\n      },\n      plugins: [\n        // Adds support for installing with Plug'n'Play, leading to faster installs and adding\n        // guards against forgotten dependencies and such.\n        PnpWebpackPlugin,\n        // Prevents users from importing files from outside of src/ (or node_modules/).\n        // This often causes confusion because we only process files within src/ with babel.\n        // To fix this, we prevent you from importing files out of src/ -- if you'd like to,\n        // please link the files into your node_modules/ and let module-resolution kick in.\n        // Make sure your source files are compiled, as they will not be processed in any way.\n        new ModuleScopePlugin(paths.appSrc, [paths.appPackageJson]),\n      ],\n    },\n    resolveLoader: {\n      plugins: [\n        // Also related to Plug'n'Play, but this time it tells webpack to load its loaders\n        // from the current package.\n        PnpWebpackPlugin.moduleLoader(module),\n      ],\n    },\n    module: {\n      strictExportPresence: true,\n      rules: [\n        // Disable require.ensure as it's not a standard language feature.\n        { parser: { requireEnsure: false } },\n\n        // First, run the linter.\n        // It's important to do this before Babel processes the JS.\n        {\n          test: /\\.(js|mjs|jsx|ts|tsx)$/,\n          enforce: 'pre',\n          use: [\n            {\n              options: {\n                cache: true,\n                formatter: require.resolve('react-dev-utils/eslintFormatter'),\n                eslintPath: require.resolve('eslint'),\n                resolvePluginsRelativeTo: __dirname,\n                // @remove-on-eject-begin\n                ignore: isExtendingEslintConfig,\n                baseConfig: isExtendingEslintConfig\n                  ? undefined\n                  : {\n                      extends: [require.resolve('eslint-config-react-app')],\n                    },\n                useEslintrc: isExtendingEslintConfig,\n                // @remove-on-eject-end\n              },\n              loader: require.resolve('eslint-loader'),\n            },\n          ],\n          include: paths.appSrc,\n        },\n        {\n          // \"oneOf\" will traverse all following loaders until one will\n          // match the requirements. When no loader matches it will fall\n          // back to the \"file\" loader at the end of the loader list.\n          oneOf: [\n            // \"url\" loader works like \"file\" loader except that it embeds assets\n            // smaller than specified limit in bytes as data URLs to avoid requests.\n            // A missing `test` is equivalent to a match.\n            {\n              test: [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/],\n              loader: require.resolve('url-loader'),\n              options: {\n                limit: imageInlineSizeLimit,\n                name: 'static/media/[name].[hash:8].[ext]',\n              },\n            },\n            // Process application JS with Babel.\n            // The preset includes JSX, Flow, TypeScript, and some ESnext features.\n            {\n              test: /\\.(js|mjs|jsx|ts|tsx)$/,\n              include: paths.appSrc,\n              loader: require.resolve('babel-loader'),\n              options: {\n                customize: require.resolve(\n                  'babel-preset-react-app/webpack-overrides'\n                ),\n                // @remove-on-eject-begin\n                babelrc: false,\n                configFile: false,\n                presets: [require.resolve('babel-preset-react-app')],\n                // Make sure we have a unique cache identifier, erring on the\n                // side of caution.\n                // We remove this when the user ejects because the default\n                // is sane and uses Babel options. Instead of options, we use\n                // the react-scripts and babel-preset-react-app versions.\n                cacheIdentifier: getCacheIdentifier(\n                  isEnvProduction\n                    ? 'production'\n                    : isEnvDevelopment && 'development',\n                  [\n                    'babel-plugin-named-asset-import',\n                    'babel-preset-react-app',\n                    'react-dev-utils',\n                    'react-scripts',\n                  ]\n                ),\n                // @remove-on-eject-end\n                plugins: [\n                  [\n                    require.resolve('babel-plugin-named-asset-import'),\n                    {\n                      loaderMap: {\n                        svg: {\n                          ReactComponent:\n                            '@svgr/webpack?-svgo,+titleProp,+ref![path]',\n                        },\n                      },\n                    },\n                  ],\n                ],\n                // This is a feature of `babel-loader` for webpack (not Babel itself).\n                // It enables caching results in ./node_modules/.cache/babel-loader/\n                // directory for faster rebuilds.\n                cacheDirectory: true,\n                // See #6846 for context on why cacheCompression is disabled\n                cacheCompression: false,\n                compact: isEnvProduction,\n              },\n            },\n            // Process any JS outside of the app with Babel.\n            // Unlike the application JS, we only compile the standard ES features.\n            {\n              test: /\\.(js|mjs)$/,\n              exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\n              loader: require.resolve('babel-loader'),\n              options: {\n                babelrc: false,\n                configFile: false,\n                compact: false,\n                presets: [\n                  [\n                    require.resolve('babel-preset-react-app/dependencies'),\n                    { helpers: true },\n                  ],\n                ],\n                cacheDirectory: true,\n                // See #6846 for context on why cacheCompression is disabled\n                cacheCompression: false,\n                // @remove-on-eject-begin\n                cacheIdentifier: getCacheIdentifier(\n                  isEnvProduction\n                    ? 'production'\n                    : isEnvDevelopment && 'development',\n                  [\n                    'babel-plugin-named-asset-import',\n                    'babel-preset-react-app',\n                    'react-dev-utils',\n                    'react-scripts',\n                  ]\n                ),\n                // @remove-on-eject-end\n                // Babel sourcemaps are needed for debugging into node_modules\n                // code.  Without the options below, debuggers like VSCode\n                // show incorrect code and set breakpoints on the wrong lines.\n                sourceMaps: shouldUseSourceMap,\n                inputSourceMap: shouldUseSourceMap,\n              },\n            },\n            // \"postcss\" loader applies autoprefixer to our CSS.\n            // \"css\" loader resolves paths in CSS and adds assets as dependencies.\n            // \"style\" loader turns CSS into JS modules that inject <style> tags.\n            // In production, we use MiniCSSExtractPlugin to extract that CSS\n            // to a file, but in development \"style\" loader enables hot editing\n            // of CSS.\n            // By default we support CSS Modules with the extension .module.css\n            {\n              test: cssRegex,\n              exclude: cssModuleRegex,\n              use: getStyleLoaders({\n                importLoaders: 1,\n                sourceMap: isEnvProduction && shouldUseSourceMap,\n              }),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n            // Adds support for CSS Modules (https://github.com/css-modules/css-modules)\n            // using the extension .module.css\n            {\n              test: cssModuleRegex,\n              use: getStyleLoaders({\n                importLoaders: 1,\n                sourceMap: isEnvProduction && shouldUseSourceMap,\n                modules: {\n                  getLocalIdent: getCSSModuleLocalIdent,\n                },\n              }),\n            },\n            // Opt-in support for SASS (using .scss or .sass extensions).\n            // By default we support SASS Modules with the\n            // extensions .module.scss or .module.sass\n            {\n              test: sassRegex,\n              exclude: sassModuleRegex,\n              use: getStyleLoaders(\n                {\n                  importLoaders: 3,\n                  sourceMap: isEnvProduction && shouldUseSourceMap,\n                },\n                'sass-loader'\n              ),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n            // Adds support for CSS Modules, but using SASS\n            // using the extension .module.scss or .module.sass\n            {\n              test: sassModuleRegex,\n              use: getStyleLoaders(\n                {\n                  importLoaders: 3,\n                  sourceMap: isEnvProduction && shouldUseSourceMap,\n                  modules: {\n                    getLocalIdent: getCSSModuleLocalIdent,\n                  },\n                },\n                'sass-loader'\n              ),\n            },\n            // \"file\" loader makes sure those assets get served by WebpackDevServer.\n            // When you `import` an asset, you get its (virtual) filename.\n            // In production, they would get copied to the `build` folder.\n            // This loader doesn't use a \"test\" so it will catch all modules\n            // that fall through the other loaders.\n            {\n              loader: require.resolve('file-loader'),\n              // Exclude `js` files to keep \"css\" loader working as it injects\n              // its runtime that would otherwise be processed through \"file\" loader.\n              // Also exclude `html` and `json` extensions so they get processed\n              // by webpacks internal loaders.\n              exclude: [/\\.(js|mjs|jsx|ts|tsx)$/, /\\.html$/, /\\.json$/],\n              options: {\n                name: 'static/media/[name].[hash:8].[ext]',\n              },\n            },\n            // ** STOP ** Are you adding a new loader?\n            // Make sure to add the new loader(s) before the \"file\" loader.\n          ],\n        },\n      ],\n    },\n    plugins: [\n      // Generates an `index.html` file with the <script> injected.\n      new HtmlWebpackPlugin(\n        Object.assign(\n          {},\n          {\n            inject: true,\n            template: paths.appHtml,\n          },\n          isEnvProduction\n            ? {\n                minify: {\n                  removeComments: true,\n                  collapseWhitespace: true,\n                  removeRedundantAttributes: true,\n                  useShortDoctype: true,\n                  removeEmptyAttributes: true,\n                  removeStyleLinkTypeAttributes: true,\n                  keepClosingSlash: true,\n                  minifyJS: true,\n                  minifyCSS: true,\n                  minifyURLs: true,\n                },\n              }\n            : undefined\n        )\n      ),\n      // Inlines the webpack runtime script. This script is too small to warrant\n      // a network request.\n      // https://github.com/facebook/create-react-app/issues/5358\n      isEnvProduction &&\n        shouldInlineRuntimeChunk &&\n        new InlineChunkHtmlPlugin(HtmlWebpackPlugin, [/runtime-.+[.]js/]),\n      // Makes some environment variables available in index.html.\n      // The public URL is available as %PUBLIC_URL% in index.html, e.g.:\n      // <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n      // It will be an empty string unless you specify \"homepage\"\n      // in `package.json`, in which case it will be the pathname of that URL.\n      new InterpolateHtmlPlugin(HtmlWebpackPlugin, env.raw),\n      // This gives some necessary context to module not found errors, such as\n      // the requesting resource.\n      new ModuleNotFoundPlugin(paths.appPath),\n      // Makes some environment variables available to the JS code, for example:\n      // if (process.env.NODE_ENV === 'production') { ... }. See `./env.js`.\n      // It is absolutely essential that NODE_ENV is set to production\n      // during a production build.\n      // Otherwise React will be compiled in the very slow development mode.\n      new webpack.DefinePlugin(env.stringified),\n      // This is necessary to emit hot updates (currently CSS only):\n      isEnvDevelopment && new webpack.HotModuleReplacementPlugin(),\n      // Watcher doesn't work well if you mistype casing in a path so we use\n      // a plugin that prints an error when you attempt to do this.\n      // See https://github.com/facebook/create-react-app/issues/240\n      isEnvDevelopment && new CaseSensitivePathsPlugin(),\n      // If you require a missing module and then `npm install` it, you still have\n      // to restart the development server for webpack to discover it. This plugin\n      // makes the discovery automatic so you don't have to restart.\n      // See https://github.com/facebook/create-react-app/issues/186\n      isEnvDevelopment &&\n        new WatchMissingNodeModulesPlugin(paths.appNodeModules),\n      isEnvProduction &&\n        new MiniCssExtractPlugin({\n          // Options similar to the same options in webpackOptions.output\n          // both options are optional\n          filename: 'static/css/[name].[contenthash:8].css',\n          chunkFilename: 'static/css/[name].[contenthash:8].chunk.css',\n        }),\n      // Generate an asset manifest file with the following content:\n      // - \"files\" key: Mapping of all asset filenames to their corresponding\n      //   output file so that tools can pick it up without having to parse\n      //   `index.html`\n      // - \"entrypoints\" key: Array of files which are included in `index.html`,\n      //   can be used to reconstruct the HTML if necessary\n      new ManifestPlugin({\n        fileName: 'asset-manifest.json',\n        publicPath: paths.publicUrlOrPath,\n        generate: (seed, files, entrypoints) => {\n          const manifestFiles = files.reduce((manifest, file) => {\n            manifest[file.name] = file.path;\n            return manifest;\n          }, seed);\n          const entrypointFiles = entrypoints.main.filter(\n            fileName => !fileName.endsWith('.map')\n          );\n\n          return {\n            files: manifestFiles,\n            entrypoints: entrypointFiles,\n          };\n        },\n      }),\n      // Moment.js is an extremely popular library that bundles large locale files\n      // by default due to how webpack interprets its code. This is a practical\n      // solution that requires the user to opt into importing specific locales.\n      // https://github.com/jmblog/how-to-optimize-momentjs-with-webpack\n      // You can remove this if you don't use Moment.js:\n      new webpack.IgnorePlugin(/^\\.\\/locale$/, /moment$/),\n      // Generate a service worker script that will precache, and keep up to date,\n      // the HTML & assets that are part of the webpack build.\n      isEnvProduction &&\n        new WorkboxWebpackPlugin.GenerateSW({\n          clientsClaim: true,\n          exclude: [/\\.map$/, /asset-manifest\\.json$/],\n          importWorkboxFrom: 'cdn',\n          navigateFallback: paths.publicUrlOrPath + 'index.html',\n          navigateFallbackBlacklist: [\n            // Exclude URLs starting with /_, as they're likely an API call\n            new RegExp('^/_'),\n            // Exclude any URLs whose last part seems to be a file extension\n            // as they're likely a resource and not a SPA route.\n            // URLs containing a \"?\" character won't be blacklisted as they're likely\n            // a route with query params (e.g. auth callbacks).\n            new RegExp('/[^/?]+\\\\.[^/]+$'),\n          ],\n        }),\n      // TypeScript type checking\n      useTypeScript &&\n        new ForkTsCheckerWebpackPlugin({\n          typescript: resolve.sync('typescript', {\n            basedir: paths.appNodeModules,\n          }),\n          async: isEnvDevelopment,\n          useTypescriptIncrementalApi: true,\n          checkSyntacticErrors: true,\n          resolveModuleNameModule: process.versions.pnp\n            ? `${__dirname}/pnpTs.js`\n            : undefined,\n          resolveTypeReferenceDirectiveModule: process.versions.pnp\n            ? `${__dirname}/pnpTs.js`\n            : undefined,\n          tsconfig: paths.appTsConfig,\n          reportFiles: [\n            '**',\n            '!**/__tests__/**',\n            '!**/?(*.)(spec|test).*',\n            '!**/src/setupProxy.*',\n            '!**/src/setupTests.*',\n          ],\n          silent: true,\n          // The formatter is invoked directly in WebpackDevServerUtils during development\n          formatter: isEnvProduction ? typescriptFormatter : undefined,\n        }),\n    ].filter(Boolean),\n    // Some libraries import Node modules but don't use them in the browser.\n    // Tell webpack to provide empty mocks for them so importing them works.\n    node: {\n      module: 'empty',\n      dgram: 'empty',\n      dns: 'mock',\n      fs: 'empty',\n      http2: 'empty',\n      net: 'empty',\n      tls: 'empty',\n      child_process: 'empty',\n    },\n    // Turn off performance processing because we utilize\n    // our own hints via the FileSizeReporter\n    performance: false,\n  };\n};\n"]},"metadata":{},"sourceType":"script"}