{"ast":null,"code":"var path = require('path');\n\nvar test = require('tape');\n\nvar resolve = require('../');\n\ntest('mock', function (t) {\n  t.plan(4);\n  var files = {};\n  files[path.resolve('/foo/bar/baz.js')] = 'beep';\n  var dirs = {};\n  dirs[path.resolve('/foo/bar')] = true;\n\n  function opts(basedir) {\n    return {\n      basedir: path.resolve(basedir),\n      isFile: function (file) {\n        return Object.prototype.hasOwnProperty.call(files, path.resolve(file));\n      },\n      isDirectory: function (dir) {\n        return !!dirs[path.resolve(dir)];\n      },\n      readFileSync: function (file) {\n        return files[path.resolve(file)];\n      }\n    };\n  }\n\n  t.equal(resolve.sync('./baz', opts('/foo/bar')), path.resolve('/foo/bar/baz.js'));\n  t.equal(resolve.sync('./baz.js', opts('/foo/bar')), path.resolve('/foo/bar/baz.js'));\n  t.throws(function () {\n    resolve.sync('baz', opts('/foo/bar'));\n  });\n  t.throws(function () {\n    resolve.sync('../baz', opts('/foo/bar'));\n  });\n});\ntest('mock package', function (t) {\n  t.plan(1);\n  var files = {};\n  files[path.resolve('/foo/node_modules/bar/baz.js')] = 'beep';\n  files[path.resolve('/foo/node_modules/bar/package.json')] = JSON.stringify({\n    main: './baz.js'\n  });\n  var dirs = {};\n  dirs[path.resolve('/foo')] = true;\n  dirs[path.resolve('/foo/node_modules')] = true;\n\n  function opts(basedir) {\n    return {\n      basedir: path.resolve(basedir),\n      isFile: function (file) {\n        return Object.prototype.hasOwnProperty.call(files, path.resolve(file));\n      },\n      isDirectory: function (dir) {\n        return !!dirs[path.resolve(dir)];\n      },\n      readFileSync: function (file) {\n        return files[path.resolve(file)];\n      }\n    };\n  }\n\n  t.equal(resolve.sync('bar', opts('/foo')), path.resolve('/foo/node_modules/bar/baz.js'));\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/resolve/test/mock_sync.js"],"names":["path","require","test","resolve","t","plan","files","dirs","opts","basedir","isFile","file","Object","prototype","hasOwnProperty","call","isDirectory","dir","readFileSync","equal","sync","throws","JSON","stringify","main"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,KAAD,CAArB;;AAEAC,IAAI,CAAC,MAAD,EAAS,UAAUE,CAAV,EAAa;AACtBA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP;AAEA,MAAIC,KAAK,GAAG,EAAZ;AACAA,EAAAA,KAAK,CAACN,IAAI,CAACG,OAAL,CAAa,iBAAb,CAAD,CAAL,GAAyC,MAAzC;AAEA,MAAII,IAAI,GAAG,EAAX;AACAA,EAAAA,IAAI,CAACP,IAAI,CAACG,OAAL,CAAa,UAAb,CAAD,CAAJ,GAAiC,IAAjC;;AAEA,WAASK,IAAT,CAAcC,OAAd,EAAuB;AACnB,WAAO;AACHA,MAAAA,OAAO,EAAET,IAAI,CAACG,OAAL,CAAaM,OAAb,CADN;AAEHC,MAAAA,MAAM,EAAE,UAAUC,IAAV,EAAgB;AACpB,eAAOC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCT,KAArC,EAA4CN,IAAI,CAACG,OAAL,CAAaQ,IAAb,CAA5C,CAAP;AACH,OAJE;AAKHK,MAAAA,WAAW,EAAE,UAAUC,GAAV,EAAe;AACxB,eAAO,CAAC,CAACV,IAAI,CAACP,IAAI,CAACG,OAAL,CAAac,GAAb,CAAD,CAAb;AACH,OAPE;AAQHC,MAAAA,YAAY,EAAE,UAAUP,IAAV,EAAgB;AAC1B,eAAOL,KAAK,CAACN,IAAI,CAACG,OAAL,CAAaQ,IAAb,CAAD,CAAZ;AACH;AAVE,KAAP;AAYH;;AAEDP,EAAAA,CAAC,CAACe,KAAF,CACIhB,OAAO,CAACiB,IAAR,CAAa,OAAb,EAAsBZ,IAAI,CAAC,UAAD,CAA1B,CADJ,EAEIR,IAAI,CAACG,OAAL,CAAa,iBAAb,CAFJ;AAKAC,EAAAA,CAAC,CAACe,KAAF,CACIhB,OAAO,CAACiB,IAAR,CAAa,UAAb,EAAyBZ,IAAI,CAAC,UAAD,CAA7B,CADJ,EAEIR,IAAI,CAACG,OAAL,CAAa,iBAAb,CAFJ;AAKAC,EAAAA,CAAC,CAACiB,MAAF,CAAS,YAAY;AACjBlB,IAAAA,OAAO,CAACiB,IAAR,CAAa,KAAb,EAAoBZ,IAAI,CAAC,UAAD,CAAxB;AACH,GAFD;AAIAJ,EAAAA,CAAC,CAACiB,MAAF,CAAS,YAAY;AACjBlB,IAAAA,OAAO,CAACiB,IAAR,CAAa,QAAb,EAAuBZ,IAAI,CAAC,UAAD,CAA3B;AACH,GAFD;AAGH,CAzCG,CAAJ;AA2CAN,IAAI,CAAC,cAAD,EAAiB,UAAUE,CAAV,EAAa;AAC9BA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP;AAEA,MAAIC,KAAK,GAAG,EAAZ;AACAA,EAAAA,KAAK,CAACN,IAAI,CAACG,OAAL,CAAa,8BAAb,CAAD,CAAL,GAAsD,MAAtD;AACAG,EAAAA,KAAK,CAACN,IAAI,CAACG,OAAL,CAAa,oCAAb,CAAD,CAAL,GAA4DmB,IAAI,CAACC,SAAL,CAAe;AACvEC,IAAAA,IAAI,EAAE;AADiE,GAAf,CAA5D;AAIA,MAAIjB,IAAI,GAAG,EAAX;AACAA,EAAAA,IAAI,CAACP,IAAI,CAACG,OAAL,CAAa,MAAb,CAAD,CAAJ,GAA6B,IAA7B;AACAI,EAAAA,IAAI,CAACP,IAAI,CAACG,OAAL,CAAa,mBAAb,CAAD,CAAJ,GAA0C,IAA1C;;AAEA,WAASK,IAAT,CAAcC,OAAd,EAAuB;AACnB,WAAO;AACHA,MAAAA,OAAO,EAAET,IAAI,CAACG,OAAL,CAAaM,OAAb,CADN;AAEHC,MAAAA,MAAM,EAAE,UAAUC,IAAV,EAAgB;AACpB,eAAOC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCT,KAArC,EAA4CN,IAAI,CAACG,OAAL,CAAaQ,IAAb,CAA5C,CAAP;AACH,OAJE;AAKHK,MAAAA,WAAW,EAAE,UAAUC,GAAV,EAAe;AACxB,eAAO,CAAC,CAACV,IAAI,CAACP,IAAI,CAACG,OAAL,CAAac,GAAb,CAAD,CAAb;AACH,OAPE;AAQHC,MAAAA,YAAY,EAAE,UAAUP,IAAV,EAAgB;AAC1B,eAAOL,KAAK,CAACN,IAAI,CAACG,OAAL,CAAaQ,IAAb,CAAD,CAAZ;AACH;AAVE,KAAP;AAYH;;AAEDP,EAAAA,CAAC,CAACe,KAAF,CACIhB,OAAO,CAACiB,IAAR,CAAa,KAAb,EAAoBZ,IAAI,CAAC,MAAD,CAAxB,CADJ,EAEIR,IAAI,CAACG,OAAL,CAAa,8BAAb,CAFJ;AAIH,CAhCG,CAAJ","sourcesContent":["var path = require('path');\nvar test = require('tape');\nvar resolve = require('../');\n\ntest('mock', function (t) {\n    t.plan(4);\n\n    var files = {};\n    files[path.resolve('/foo/bar/baz.js')] = 'beep';\n\n    var dirs = {};\n    dirs[path.resolve('/foo/bar')] = true;\n\n    function opts(basedir) {\n        return {\n            basedir: path.resolve(basedir),\n            isFile: function (file) {\n                return Object.prototype.hasOwnProperty.call(files, path.resolve(file));\n            },\n            isDirectory: function (dir) {\n                return !!dirs[path.resolve(dir)];\n            },\n            readFileSync: function (file) {\n                return files[path.resolve(file)];\n            }\n        };\n    }\n\n    t.equal(\n        resolve.sync('./baz', opts('/foo/bar')),\n        path.resolve('/foo/bar/baz.js')\n    );\n\n    t.equal(\n        resolve.sync('./baz.js', opts('/foo/bar')),\n        path.resolve('/foo/bar/baz.js')\n    );\n\n    t.throws(function () {\n        resolve.sync('baz', opts('/foo/bar'));\n    });\n\n    t.throws(function () {\n        resolve.sync('../baz', opts('/foo/bar'));\n    });\n});\n\ntest('mock package', function (t) {\n    t.plan(1);\n\n    var files = {};\n    files[path.resolve('/foo/node_modules/bar/baz.js')] = 'beep';\n    files[path.resolve('/foo/node_modules/bar/package.json')] = JSON.stringify({\n        main: './baz.js'\n    });\n\n    var dirs = {};\n    dirs[path.resolve('/foo')] = true;\n    dirs[path.resolve('/foo/node_modules')] = true;\n\n    function opts(basedir) {\n        return {\n            basedir: path.resolve(basedir),\n            isFile: function (file) {\n                return Object.prototype.hasOwnProperty.call(files, path.resolve(file));\n            },\n            isDirectory: function (dir) {\n                return !!dirs[path.resolve(dir)];\n            },\n            readFileSync: function (file) {\n                return files[path.resolve(file)];\n            }\n        };\n    }\n\n    t.equal(\n        resolve.sync('bar', opts('/foo')),\n        path.resolve('/foo/node_modules/bar/baz.js')\n    );\n});\n"]},"metadata":{},"sourceType":"script"}