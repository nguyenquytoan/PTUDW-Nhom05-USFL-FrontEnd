{"ast":null,"code":"var hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar walk = require('css-tree').walk;\n\nvar {\n  hasNoChildren\n} = require('./utils');\n\nfunction cleanUnused(selectorList, usageData) {\n  selectorList.children.each(function (selector, item, list) {\n    var shouldRemove = false;\n    walk(selector, function (node) {\n      // ignore nodes in nested selectors\n      if (this.selector === null || this.selector === selectorList) {\n        switch (node.type) {\n          case 'SelectorList':\n            // TODO: remove toLowerCase when pseudo selectors will be normalized\n            // ignore selectors inside :not()\n            if (this.function === null || this.function.name.toLowerCase() !== 'not') {\n              if (cleanUnused(node, usageData)) {\n                shouldRemove = true;\n              }\n            }\n\n            break;\n\n          case 'ClassSelector':\n            if (usageData.whitelist !== null && usageData.whitelist.classes !== null && !hasOwnProperty.call(usageData.whitelist.classes, node.name)) {\n              shouldRemove = true;\n            }\n\n            if (usageData.blacklist !== null && usageData.blacklist.classes !== null && hasOwnProperty.call(usageData.blacklist.classes, node.name)) {\n              shouldRemove = true;\n            }\n\n            break;\n\n          case 'IdSelector':\n            if (usageData.whitelist !== null && usageData.whitelist.ids !== null && !hasOwnProperty.call(usageData.whitelist.ids, node.name)) {\n              shouldRemove = true;\n            }\n\n            if (usageData.blacklist !== null && usageData.blacklist.ids !== null && hasOwnProperty.call(usageData.blacklist.ids, node.name)) {\n              shouldRemove = true;\n            }\n\n            break;\n\n          case 'TypeSelector':\n            // TODO: remove toLowerCase when type selectors will be normalized\n            // ignore universal selectors\n            if (node.name.charAt(node.name.length - 1) !== '*') {\n              if (usageData.whitelist !== null && usageData.whitelist.tags !== null && !hasOwnProperty.call(usageData.whitelist.tags, node.name.toLowerCase())) {\n                shouldRemove = true;\n              }\n\n              if (usageData.blacklist !== null && usageData.blacklist.tags !== null && hasOwnProperty.call(usageData.blacklist.tags, node.name.toLowerCase())) {\n                shouldRemove = true;\n              }\n            }\n\n            break;\n        }\n      }\n    });\n\n    if (shouldRemove) {\n      list.remove(item);\n    }\n  });\n  return selectorList.children.isEmpty();\n}\n\nmodule.exports = function cleanRule(node, item, list, options) {\n  if (hasNoChildren(node.prelude) || hasNoChildren(node.block)) {\n    list.remove(item);\n    return;\n  }\n\n  var usageData = options.usage;\n\n  if (usageData && (usageData.whitelist !== null || usageData.blacklist !== null)) {\n    cleanUnused(node.prelude, usageData);\n\n    if (hasNoChildren(node.prelude)) {\n      list.remove(item);\n      return;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/csso/lib/clean/Rule.js"],"names":["hasOwnProperty","Object","prototype","walk","require","hasNoChildren","cleanUnused","selectorList","usageData","children","each","selector","item","list","shouldRemove","node","type","function","name","toLowerCase","whitelist","classes","call","blacklist","ids","charAt","length","tags","remove","isEmpty","module","exports","cleanRule","options","prelude","block","usage"],"mappings":"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","sourcesContent":["var hasOwnProperty = Object.prototype.hasOwnProperty;\nvar walk = require('css-tree').walk;\nvar { hasNoChildren } = require('./utils');\n\nfunction cleanUnused(selectorList, usageData) {\n    selectorList.children.each(function(selector, item, list) {\n        var shouldRemove = false;\n\n        walk(selector, function(node) {\n            // ignore nodes in nested selectors\n            if (this.selector === null || this.selector === selectorList) {\n                switch (node.type) {\n                    case 'SelectorList':\n                        // TODO: remove toLowerCase when pseudo selectors will be normalized\n                        // ignore selectors inside :not()\n                        if (this.function === null || this.function.name.toLowerCase() !== 'not') {\n                            if (cleanUnused(node, usageData)) {\n                                shouldRemove = true;\n                            }\n                        }\n                        break;\n\n                    case 'ClassSelector':\n                        if (usageData.whitelist !== null &&\n                            usageData.whitelist.classes !== null &&\n                            !hasOwnProperty.call(usageData.whitelist.classes, node.name)) {\n                            shouldRemove = true;\n                        }\n                        if (usageData.blacklist !== null &&\n                            usageData.blacklist.classes !== null &&\n                            hasOwnProperty.call(usageData.blacklist.classes, node.name)) {\n                            shouldRemove = true;\n                        }\n                        break;\n\n                    case 'IdSelector':\n                        if (usageData.whitelist !== null &&\n                            usageData.whitelist.ids !== null &&\n                            !hasOwnProperty.call(usageData.whitelist.ids, node.name)) {\n                            shouldRemove = true;\n                        }\n                        if (usageData.blacklist !== null &&\n                            usageData.blacklist.ids !== null &&\n                            hasOwnProperty.call(usageData.blacklist.ids, node.name)) {\n                            shouldRemove = true;\n                        }\n                        break;\n\n                    case 'TypeSelector':\n                        // TODO: remove toLowerCase when type selectors will be normalized\n                        // ignore universal selectors\n                        if (node.name.charAt(node.name.length - 1) !== '*') {\n                            if (usageData.whitelist !== null &&\n                                usageData.whitelist.tags !== null &&\n                                !hasOwnProperty.call(usageData.whitelist.tags, node.name.toLowerCase())) {\n                                shouldRemove = true;\n                            }\n                            if (usageData.blacklist !== null &&\n                                usageData.blacklist.tags !== null &&\n                                hasOwnProperty.call(usageData.blacklist.tags, node.name.toLowerCase())) {\n                                shouldRemove = true;\n                            }\n                        }\n                        break;\n                }\n            }\n        });\n\n        if (shouldRemove) {\n            list.remove(item);\n        }\n    });\n\n    return selectorList.children.isEmpty();\n}\n\nmodule.exports = function cleanRule(node, item, list, options) {\n    if (hasNoChildren(node.prelude) || hasNoChildren(node.block)) {\n        list.remove(item);\n        return;\n    }\n\n    var usageData = options.usage;\n\n    if (usageData && (usageData.whitelist !== null || usageData.blacklist !== null)) {\n        cleanUnused(node.prelude, usageData);\n\n        if (hasNoChildren(node.prelude)) {\n            list.remove(item);\n            return;\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}