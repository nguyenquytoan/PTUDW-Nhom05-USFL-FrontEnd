{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromLogicalExpression;\n/**\n * Extractor function for a LogicalExpression type value node.\n * A logical expression is `a && b` or `a || b`, so we evaluate both sides\n * and return the extracted value of the expression.\n *\n * @param - value - AST Value object with type `LogicalExpression`\n * @returns - The extracted value converted to correct type.\n */\n\nfunction extractValueFromLogicalExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('./index.js').default;\n\n  var operator = value.operator,\n      left = value.left,\n      right = value.right;\n  var leftVal = getValue(left);\n  var rightVal = getValue(right);\n\n  if (operator === '&&') {\n    return leftVal && rightVal;\n  }\n\n  if (operator === '??') {\n    // return leftVal ?? rightVal; // TODO: update to babel 7\n    return leftVal === null || typeof leftVal === 'undefined' ? rightVal : leftVal;\n  }\n\n  return leftVal || rightVal;\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js"],"names":["Object","defineProperty","exports","value","default","extractValueFromLogicalExpression","getValue","require","operator","left","right","leftVal","rightVal"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,iCAAlB;AACA;;;;;;;;;AAQA,SAASA,iCAAT,CAA2CF,KAA3C,EAAkD;AAChD;AACA,MAAIG,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBH,OAArC;;AACA,MAAII,QAAQ,GAAGL,KAAK,CAACK,QAArB;AAAA,MACIC,IAAI,GAAGN,KAAK,CAACM,IADjB;AAAA,MAEIC,KAAK,GAAGP,KAAK,CAACO,KAFlB;AAIA,MAAIC,OAAO,GAAGL,QAAQ,CAACG,IAAD,CAAtB;AACA,MAAIG,QAAQ,GAAGN,QAAQ,CAACI,KAAD,CAAvB;;AAEA,MAAIF,QAAQ,KAAK,IAAjB,EAAuB;AACrB,WAAOG,OAAO,IAAIC,QAAlB;AACD;;AACD,MAAIJ,QAAQ,KAAK,IAAjB,EAAuB;AACrB;AACA,WAAOG,OAAO,KAAK,IAAZ,IAAoB,OAAOA,OAAP,KAAmB,WAAvC,GAAqDC,QAArD,GAAgED,OAAvE;AACD;;AACD,SAAOA,OAAO,IAAIC,QAAlB;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromLogicalExpression;\n/**\n * Extractor function for a LogicalExpression type value node.\n * A logical expression is `a && b` or `a || b`, so we evaluate both sides\n * and return the extracted value of the expression.\n *\n * @param - value - AST Value object with type `LogicalExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromLogicalExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('./index.js').default;\n  var operator = value.operator,\n      left = value.left,\n      right = value.right;\n\n  var leftVal = getValue(left);\n  var rightVal = getValue(right);\n\n  if (operator === '&&') {\n    return leftVal && rightVal;\n  }\n  if (operator === '??') {\n    // return leftVal ?? rightVal; // TODO: update to babel 7\n    return leftVal === null || typeof leftVal === 'undefined' ? rightVal : leftVal;\n  }\n  return leftVal || rightVal;\n}"]},"metadata":{},"sourceType":"script"}