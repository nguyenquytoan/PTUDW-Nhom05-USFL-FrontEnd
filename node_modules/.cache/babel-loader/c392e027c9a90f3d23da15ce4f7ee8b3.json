{"ast":null,"code":"'use strict';\n\nvar parse = require('url-parse');\n/**\n * Transform an URL to a valid origin value.\n *\n * @param {String|Object} url URL to transform to it's origin.\n * @returns {String} The origin.\n * @api public\n */\n\n\nfunction origin(url) {\n  if ('string' === typeof url) url = parse(url); //\n  // 6.2.  ASCII Serialization of an Origin\n  // http://tools.ietf.org/html/rfc6454#section-6.2\n  //\n\n  if (!url.protocol || !url.hostname) return 'null'; //\n  // 4. Origin of a URI\n  // http://tools.ietf.org/html/rfc6454#section-4\n  //\n  // States that url.scheme, host should be converted to lower case. This also\n  // makes it easier to match origins as everything is just lower case.\n  //\n\n  return (url.protocol + '//' + url.host).toLowerCase();\n}\n/**\n * Check if the origins are the same.\n *\n * @param {String} a URL or origin of a.\n * @param {String} b URL or origin of b.\n * @returns {Boolean}\n * @api public\n */\n\n\norigin.same = function same(a, b) {\n  return origin(a) === origin(b);\n}; //\n// Expose the origin\n//\n\n\nmodule.exports = origin;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/original/index.js"],"names":["parse","require","origin","url","protocol","hostname","host","toLowerCase","same","a","b","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,WAAD,CAAnB;AAEA;;;;;;;;;AAOA,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,MAAI,aAAa,OAAOA,GAAxB,EAA6BA,GAAG,GAAGH,KAAK,CAACG,GAAD,CAAX,CADV,CAGnB;AACA;AACA;AACA;;AACA,MAAI,CAACA,GAAG,CAACC,QAAL,IAAiB,CAACD,GAAG,CAACE,QAA1B,EAAoC,OAAO,MAAP,CAPjB,CASnB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO,CAACF,GAAG,CAACC,QAAJ,GAAc,IAAd,GAAoBD,GAAG,CAACG,IAAzB,EAA+BC,WAA/B,EAAP;AACD;AAED;;;;;;;;;;AAQAL,MAAM,CAACM,IAAP,GAAc,SAASA,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AAChC,SAAOR,MAAM,CAACO,CAAD,CAAN,KAAcP,MAAM,CAACQ,CAAD,CAA3B;AACD,CAFD,C,CAIA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB","sourcesContent":["'use strict';\n\nvar parse = require('url-parse');\n\n/**\n * Transform an URL to a valid origin value.\n *\n * @param {String|Object} url URL to transform to it's origin.\n * @returns {String} The origin.\n * @api public\n */\nfunction origin(url) {\n  if ('string' === typeof url) url = parse(url);\n\n  //\n  // 6.2.  ASCII Serialization of an Origin\n  // http://tools.ietf.org/html/rfc6454#section-6.2\n  //\n  if (!url.protocol || !url.hostname) return 'null';\n\n  //\n  // 4. Origin of a URI\n  // http://tools.ietf.org/html/rfc6454#section-4\n  //\n  // States that url.scheme, host should be converted to lower case. This also\n  // makes it easier to match origins as everything is just lower case.\n  //\n  return (url.protocol +'//'+ url.host).toLowerCase();\n}\n\n/**\n * Check if the origins are the same.\n *\n * @param {String} a URL or origin of a.\n * @param {String} b URL or origin of b.\n * @returns {Boolean}\n * @api public\n */\norigin.same = function same(a, b) {\n  return origin(a) === origin(b);\n};\n\n//\n// Expose the origin\n//\nmodule.exports = origin;\n"]},"metadata":{},"sourceType":"script"}