{"ast":null,"code":"var Buffer = require('buffer').Buffer;\n\nvar fs = require('fs');\n\nvar test = require('tape');\n\nvar http = require('../..');\n\ntest('abort before response', function (t) {\n  var req = http.get('/basic.txt', function (res) {\n    t.fail('unexpected response');\n  });\n  req.abort();\n  t.end();\n});\ntest('abort on response', function (t) {\n  var req = http.get('/basic.txt', function (res) {\n    req.abort();\n    t.end();\n    res.on('end', function () {\n      t.fail('unexpected end');\n    });\n    res.on('data', function (data) {\n      t.fail('unexpected data');\n    });\n  });\n});\ntest('abort on data', function (t) {\n  var req = http.get('/browserify.png?copies=5', function (res) {\n    var firstData = true;\n    var failOnData = false;\n    res.on('end', function () {\n      t.fail('unexpected end');\n    });\n    res.on('data', function (data) {\n      if (failOnData) t.fail('unexpected data');else if (firstData) {\n        firstData = false;\n        req.abort();\n        t.end();\n        process.nextTick(function () {\n          // Wait for any data that may have been queued\n          // in the stream before considering data events\n          // as errors\n          failOnData = true;\n        });\n      }\n    });\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/stream-http/test/browser/abort.js"],"names":["Buffer","require","fs","test","http","t","req","get","res","fail","abort","end","on","data","firstData","failOnData","process","nextTick"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,MAA/B;;AACA,IAAIE,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIG,IAAI,GAAGH,OAAO,CAAC,OAAD,CAAlB;;AAEAE,IAAI,CAAC,uBAAD,EAA0B,UAAUE,CAAV,EAAa;AAC1C,MAAIC,GAAG,GAAGF,IAAI,CAACG,GAAL,CAAS,YAAT,EAAuB,UAAUC,GAAV,EAAe;AAC/CH,IAAAA,CAAC,CAACI,IAAF,CAAO,qBAAP;AACA,GAFS,CAAV;AAGAH,EAAAA,GAAG,CAACI,KAAJ;AACAL,EAAAA,CAAC,CAACM,GAAF;AACA,CANG,CAAJ;AAQAR,IAAI,CAAC,mBAAD,EAAsB,UAAUE,CAAV,EAAa;AACtC,MAAIC,GAAG,GAAGF,IAAI,CAACG,GAAL,CAAS,YAAT,EAAuB,UAAUC,GAAV,EAAe;AAC/CF,IAAAA,GAAG,CAACI,KAAJ;AACAL,IAAAA,CAAC,CAACM,GAAF;AAEAH,IAAAA,GAAG,CAACI,EAAJ,CAAO,KAAP,EAAc,YAAY;AACzBP,MAAAA,CAAC,CAACI,IAAF,CAAO,gBAAP;AACA,KAFD;AAIAD,IAAAA,GAAG,CAACI,EAAJ,CAAO,MAAP,EAAe,UAAUC,IAAV,EAAgB;AAC9BR,MAAAA,CAAC,CAACI,IAAF,CAAO,iBAAP;AACA,KAFD;AAGA,GAXS,CAAV;AAYA,CAbG,CAAJ;AAeAN,IAAI,CAAC,eAAD,EAAkB,UAAUE,CAAV,EAAa;AAClC,MAAIC,GAAG,GAAGF,IAAI,CAACG,GAAL,CAAS,0BAAT,EAAqC,UAAUC,GAAV,EAAe;AAC7D,QAAIM,SAAS,GAAG,IAAhB;AACA,QAAIC,UAAU,GAAG,KAAjB;AAEAP,IAAAA,GAAG,CAACI,EAAJ,CAAO,KAAP,EAAc,YAAY;AACzBP,MAAAA,CAAC,CAACI,IAAF,CAAO,gBAAP;AACA,KAFD;AAIAD,IAAAA,GAAG,CAACI,EAAJ,CAAO,MAAP,EAAe,UAAUC,IAAV,EAAgB;AAC9B,UAAIE,UAAJ,EACCV,CAAC,CAACI,IAAF,CAAO,iBAAP,EADD,KAEK,IAAIK,SAAJ,EAAe;AACnBA,QAAAA,SAAS,GAAG,KAAZ;AACAR,QAAAA,GAAG,CAACI,KAAJ;AACAL,QAAAA,CAAC,CAACM,GAAF;AACAK,QAAAA,OAAO,CAACC,QAAR,CAAiB,YAAY;AAC5B;AACA;AACA;AACAF,UAAAA,UAAU,GAAG,IAAb;AACA,SALD;AAMA;AACD,KAdD;AAeA,GAvBS,CAAV;AAwBA,CAzBG,CAAJ","sourcesContent":["var Buffer = require('buffer').Buffer\nvar fs = require('fs')\nvar test = require('tape')\n\nvar http = require('../..')\n\ntest('abort before response', function (t) {\n\tvar req = http.get('/basic.txt', function (res) {\n\t\tt.fail('unexpected response')\n\t})\n\treq.abort()\n\tt.end()\n})\n\ntest('abort on response', function (t) {\n\tvar req = http.get('/basic.txt', function (res) {\n\t\treq.abort()\n\t\tt.end()\n\n\t\tres.on('end', function () {\n\t\t\tt.fail('unexpected end')\n\t\t})\n\n\t\tres.on('data', function (data) {\n\t\t\tt.fail('unexpected data')\n\t\t})\n\t})\n})\n\ntest('abort on data', function (t) {\n\tvar req = http.get('/browserify.png?copies=5', function (res) {\n\t\tvar firstData = true\n\t\tvar failOnData = false\n\n\t\tres.on('end', function () {\n\t\t\tt.fail('unexpected end')\n\t\t})\n\n\t\tres.on('data', function (data) {\n\t\t\tif (failOnData)\n\t\t\t\tt.fail('unexpected data')\n\t\t\telse if (firstData) {\n\t\t\t\tfirstData = false\n\t\t\t\treq.abort()\n\t\t\t\tt.end()\n\t\t\t\tprocess.nextTick(function () {\n\t\t\t\t\t// Wait for any data that may have been queued\n\t\t\t\t\t// in the stream before considering data events\n\t\t\t\t\t// as errors\n\t\t\t\t\tfailOnData = true\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t})\n})"]},"metadata":{},"sourceType":"script"}