{"ast":null,"code":"/*!\n * shallow-clone <https://github.com/jonschlinkert/shallow-clone>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n'use strict';\n\nvar utils = require('./utils');\n/**\n * Shallow copy an object, array or primitive.\n *\n * @param  {any} `val`\n * @return {any}\n */\n\n\nfunction clone(val) {\n  var type = utils.typeOf(val);\n\n  if (clone.hasOwnProperty(type)) {\n    return clone[type](val);\n  }\n\n  return val;\n}\n\nclone.array = function cloneArray(arr) {\n  return arr.slice();\n};\n\nclone.date = function cloneDate(date) {\n  return new Date(+date);\n};\n\nclone.object = function cloneObject(obj) {\n  if (utils.isObject(obj)) {\n    return utils.mixin({}, obj);\n  } else {\n    return obj;\n  }\n};\n\nclone.regexp = function cloneRegExp(re) {\n  var flags = '';\n  flags += re.multiline ? 'm' : '';\n  flags += re.global ? 'g' : '';\n  flags += re.ignorecase ? 'i' : '';\n  return new RegExp(re.source, flags);\n};\n/**\n * Expose `clone`\n */\n\n\nmodule.exports = clone;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/shallow-clone/index.js"],"names":["utils","require","clone","val","type","typeOf","hasOwnProperty","array","cloneArray","arr","slice","date","cloneDate","Date","object","cloneObject","obj","isObject","mixin","regexp","cloneRegExp","re","flags","multiline","global","ignorecase","RegExp","source","module","exports"],"mappings":"AAAA;;;;;;AAOA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;;;;;;;;AAOA,SAASC,KAAT,CAAeC,GAAf,EAAoB;AAClB,MAAIC,IAAI,GAAGJ,KAAK,CAACK,MAAN,CAAaF,GAAb,CAAX;;AAEA,MAAID,KAAK,CAACI,cAAN,CAAqBF,IAArB,CAAJ,EAAgC;AAC9B,WAAOF,KAAK,CAACE,IAAD,CAAL,CAAYD,GAAZ,CAAP;AACD;;AACD,SAAOA,GAAP;AACD;;AAEDD,KAAK,CAACK,KAAN,GAAc,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACrC,SAAOA,GAAG,CAACC,KAAJ,EAAP;AACD,CAFD;;AAIAR,KAAK,CAACS,IAAN,GAAa,SAASC,SAAT,CAAmBD,IAAnB,EAAyB;AACpC,SAAO,IAAIE,IAAJ,CAAS,CAACF,IAAV,CAAP;AACD,CAFD;;AAIAT,KAAK,CAACY,MAAN,GAAe,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACvC,MAAIhB,KAAK,CAACiB,QAAN,CAAeD,GAAf,CAAJ,EAAyB;AACvB,WAAOhB,KAAK,CAACkB,KAAN,CAAY,EAAZ,EAAgBF,GAAhB,CAAP;AACD,GAFD,MAEO;AACL,WAAOA,GAAP;AACD;AACF,CAND;;AAQAd,KAAK,CAACiB,MAAN,GAAe,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AACtC,MAAIC,KAAK,GAAG,EAAZ;AACAA,EAAAA,KAAK,IAAID,EAAE,CAACE,SAAH,GAAe,GAAf,GAAqB,EAA9B;AACAD,EAAAA,KAAK,IAAID,EAAE,CAACG,MAAH,GAAY,GAAZ,GAAkB,EAA3B;AACAF,EAAAA,KAAK,IAAID,EAAE,CAACI,UAAH,GAAgB,GAAhB,GAAsB,EAA/B;AACA,SAAO,IAAIC,MAAJ,CAAWL,EAAE,CAACM,MAAd,EAAsBL,KAAtB,CAAP;AACD,CAND;AAQA;;;;;AAIAM,MAAM,CAACC,OAAP,GAAiB3B,KAAjB","sourcesContent":["/*!\n * shallow-clone <https://github.com/jonschlinkert/shallow-clone>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar utils = require('./utils');\n\n/**\n * Shallow copy an object, array or primitive.\n *\n * @param  {any} `val`\n * @return {any}\n */\n\nfunction clone(val) {\n  var type = utils.typeOf(val);\n\n  if (clone.hasOwnProperty(type)) {\n    return clone[type](val);\n  }\n  return val;\n}\n\nclone.array = function cloneArray(arr) {\n  return arr.slice();\n};\n\nclone.date = function cloneDate(date) {\n  return new Date(+date);\n};\n\nclone.object = function cloneObject(obj) {\n  if (utils.isObject(obj)) {\n    return utils.mixin({}, obj);\n  } else {\n    return obj;\n  }\n};\n\nclone.regexp = function cloneRegExp(re) {\n  var flags = '';\n  flags += re.multiline ? 'm' : '';\n  flags += re.global ? 'g' : '';\n  flags += re.ignorecase ? 'i' : '';\n  return new RegExp(re.source, flags);\n};\n\n/**\n * Expose `clone`\n */\n\nmodule.exports = clone;\n"]},"metadata":{},"sourceType":"script"}