{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nObject.defineProperty(exports, 'ChangedFiles', {\n  enumerable: true,\n  get: function get() {\n    return _types.ChangedFiles;\n  }\n});\nObject.defineProperty(exports, 'ChangedFilesPromise', {\n  enumerable: true,\n  get: function get() {\n    return _types.ChangedFilesPromise;\n  }\n});\nexports.findRepos = exports.getChangedFilesForRoots = void 0;\n\nfunction _throat() {\n  const data = _interopRequireDefault(require('throat'));\n\n  _throat = function _throat() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _types = require('./types');\n\nvar _git = _interopRequireDefault(require('./git'));\n\nvar _hg = _interopRequireDefault(require('./hg'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction notEmpty(value) {\n  return value != null;\n} // This is an arbitrary number. The main goal is to prevent projects with\n// many roots (50+) from spawning too many processes at once.\n\n\nconst mutex = (0, _throat().default)(5);\n\nconst findGitRoot = dir => mutex(() => _git.default.getRoot(dir));\n\nconst findHgRoot = dir => mutex(() => _hg.default.getRoot(dir));\n\nconst getChangedFilesForRoots = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (roots, options) {\n    const repos = yield findRepos(roots);\n\n    const changedFilesOptions = _objectSpread({\n      includePaths: roots\n    }, options);\n\n    const gitPromises = Array.from(repos.git).map(repo => _git.default.findChangedFiles(repo, changedFilesOptions));\n    const hgPromises = Array.from(repos.hg).map(repo => _hg.default.findChangedFiles(repo, changedFilesOptions));\n    const changedFiles = (yield Promise.all(gitPromises.concat(hgPromises))).reduce((allFiles, changedFilesInTheRepo) => {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = changedFilesInTheRepo[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          const file = _step.value;\n          allFiles.add(file);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return allFiles;\n    }, new Set());\n    return {\n      changedFiles,\n      repos\n    };\n  });\n\n  return function getChangedFilesForRoots(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.getChangedFilesForRoots = getChangedFilesForRoots;\n\nconst findRepos = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (roots) {\n    const gitRepos = yield Promise.all(roots.reduce((promises, root) => promises.concat(findGitRoot(root)), []));\n    const hgRepos = yield Promise.all(roots.reduce((promises, root) => promises.concat(findHgRoot(root)), []));\n    return {\n      git: new Set(gitRepos.filter(notEmpty)),\n      hg: new Set(hgRepos.filter(notEmpty))\n    };\n  });\n\n  return function findRepos(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.findRepos = findRepos;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-changed-files/build/index.js"],"names":["Object","defineProperty","exports","value","enumerable","get","_types","ChangedFiles","ChangedFilesPromise","findRepos","getChangedFilesForRoots","_throat","data","_interopRequireDefault","require","_git","_hg","obj","__esModule","default","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","key","_defineProperty","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","apply","err","undefined","notEmpty","mutex","findGitRoot","dir","getRoot","findHgRoot","_ref","roots","options","repos","changedFilesOptions","includePaths","gitPromises","Array","from","git","map","repo","findChangedFiles","hgPromises","hg","changedFiles","all","reduce","allFiles","changedFilesInTheRepo","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","file","add","return","Set","_x","_x2","_ref2","gitRepos","promises","root","hgRepos","_x3"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,cAA/B,EAA+C;AAC7CE,EAAAA,UAAU,EAAE,IADiC;AAE7CC,EAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,WAAOC,MAAM,CAACC,YAAd;AACD;AAJ4C,CAA/C;AAMAP,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,qBAA/B,EAAsD;AACpDE,EAAAA,UAAU,EAAE,IADwC;AAEpDC,EAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,WAAOC,MAAM,CAACE,mBAAd;AACD;AAJmD,CAAtD;AAMAN,OAAO,CAACO,SAAR,GAAoBP,OAAO,CAACQ,uBAAR,GAAkC,KAAK,CAA3D;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAAnC;;AAEAH,EAAAA,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC3B,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIN,MAAM,GAAGQ,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,IAAI,GAAGF,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAjC;;AAEA,IAAIE,GAAG,GAAGH,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAhC;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAACE,IAAAA,OAAO,EAAEF;AAAV,GAArC;AACD;;AAED,SAASG,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzC,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;AACA,QAAII,OAAO,GAAG1B,MAAM,CAAC2B,IAAP,CAAYF,MAAZ,CAAd;;AACA,QAAI,OAAOzB,MAAM,CAAC4B,qBAAd,KAAwC,UAA5C,EAAwD;AACtDF,MAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CACR7B,MAAM,CAAC4B,qBAAP,CAA6BH,MAA7B,EAAqCK,MAArC,CAA4C,UAASC,GAAT,EAAc;AACxD,eAAO/B,MAAM,CAACgC,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6C3B,UAApD;AACD,OAFD,CADQ,CAAV;AAKD;;AACDsB,IAAAA,OAAO,CAACO,OAAR,CAAgB,UAASC,GAAT,EAAc;AAC5BC,MAAAA,eAAe,CAACd,MAAD,EAASa,GAAT,EAAcT,MAAM,CAACS,GAAD,CAApB,CAAf;AACD,KAFD;AAGD;;AACD,SAAOb,MAAP;AACD;;AAED,SAASc,eAAT,CAAyBlB,GAAzB,EAA8BiB,GAA9B,EAAmC/B,KAAnC,EAA0C;AACxC,MAAI+B,GAAG,IAAIjB,GAAX,EAAgB;AACdjB,IAAAA,MAAM,CAACC,cAAP,CAAsBgB,GAAtB,EAA2BiB,GAA3B,EAAgC;AAC9B/B,MAAAA,KAAK,EAAEA,KADuB;AAE9BC,MAAAA,UAAU,EAAE,IAFkB;AAG9BgC,MAAAA,YAAY,EAAE,IAHgB;AAI9BC,MAAAA,QAAQ,EAAE;AAJoB,KAAhC;AAMD,GAPD,MAOO;AACLpB,IAAAA,GAAG,CAACiB,GAAD,CAAH,GAAW/B,KAAX;AACD;;AACD,SAAOc,GAAP;AACD;;AAED,SAASqB,kBAAT,CAA4BC,GAA5B,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,KAAlD,EAAyDC,MAAzD,EAAiET,GAAjE,EAAsEU,GAAtE,EAA2E;AACzE,MAAI;AACF,QAAIC,IAAI,GAAGN,GAAG,CAACL,GAAD,CAAH,CAASU,GAAT,CAAX;AACA,QAAIzC,KAAK,GAAG0C,IAAI,CAAC1C,KAAjB;AACD,GAHD,CAGE,OAAO2C,KAAP,EAAc;AACdL,IAAAA,MAAM,CAACK,KAAD,CAAN;AACA;AACD;;AACD,MAAID,IAAI,CAACE,IAAT,EAAe;AACbP,IAAAA,OAAO,CAACrC,KAAD,CAAP;AACD,GAFD,MAEO;AACL6C,IAAAA,OAAO,CAACR,OAAR,CAAgBrC,KAAhB,EAAuB8C,IAAvB,CAA4BP,KAA5B,EAAmCC,MAAnC;AACD;AACF;;AAED,SAASO,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7B,SAAO,YAAW;AAChB,QAAIC,IAAI,GAAG,IAAX;AAAA,QACEC,IAAI,GAAG9B,SADT;AAEA,WAAO,IAAIyB,OAAJ,CAAY,UAASR,OAAT,EAAkBC,MAAlB,EAA0B;AAC3C,UAAIF,GAAG,GAAGY,EAAE,CAACG,KAAH,CAASF,IAAT,EAAeC,IAAf,CAAV;;AACA,eAASX,KAAT,CAAevC,KAAf,EAAsB;AACpBmC,QAAAA,kBAAkB,CAACC,GAAD,EAAMC,OAAN,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC,MAAtC,EAA8CxC,KAA9C,CAAlB;AACD;;AACD,eAASwC,MAAT,CAAgBY,GAAhB,EAAqB;AACnBjB,QAAAA,kBAAkB,CAACC,GAAD,EAAMC,OAAN,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC,OAAtC,EAA+CY,GAA/C,CAAlB;AACD;;AACDb,MAAAA,KAAK,CAACc,SAAD,CAAL;AACD,KATM,CAAP;AAUD,GAbD;AAcD;;AAED,SAASC,QAAT,CAAkBtD,KAAlB,EAAyB;AACvB,SAAOA,KAAK,IAAI,IAAhB;AACD,C,CAAC;AACF;;;AAEA,MAAMuD,KAAK,GAAG,CAAC,GAAG/C,OAAO,GAAGQ,OAAd,EAAuB,CAAvB,CAAd;;AAEA,MAAMwC,WAAW,GAAGC,GAAG,IAAIF,KAAK,CAAC,MAAM3C,IAAI,CAACI,OAAL,CAAa0C,OAAb,CAAqBD,GAArB,CAAP,CAAhC;;AAEA,MAAME,UAAU,GAAGF,GAAG,IAAIF,KAAK,CAAC,MAAM1C,GAAG,CAACG,OAAJ,CAAY0C,OAAZ,CAAoBD,GAApB,CAAP,CAA/B;;AAEA,MAAMlD,uBAAuB,GAC3B,aACC,YAAW;AACV,MAAIqD,IAAI,GAAGb,iBAAiB,CAAC,WAAUc,KAAV,EAAiBC,OAAjB,EAA0B;AACrD,UAAMC,KAAK,GAAG,MAAMzD,SAAS,CAACuD,KAAD,CAA7B;;AAEA,UAAMG,mBAAmB,GAAG/C,aAAa,CACvC;AACEgD,MAAAA,YAAY,EAAEJ;AADhB,KADuC,EAIvCC,OAJuC,CAAzC;;AAOA,UAAMI,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWL,KAAK,CAACM,GAAjB,EAAsBC,GAAtB,CAA0BC,IAAI,IAChD3D,IAAI,CAACI,OAAL,CAAawD,gBAAb,CAA8BD,IAA9B,EAAoCP,mBAApC,CADkB,CAApB;AAGA,UAAMS,UAAU,GAAGN,KAAK,CAACC,IAAN,CAAWL,KAAK,CAACW,EAAjB,EAAqBJ,GAArB,CAAyBC,IAAI,IAC9C1D,GAAG,CAACG,OAAJ,CAAYwD,gBAAZ,CAA6BD,IAA7B,EAAmCP,mBAAnC,CADiB,CAAnB;AAGA,UAAMW,YAAY,GAAG,CAAC,MAAM9B,OAAO,CAAC+B,GAAR,CAC1BV,WAAW,CAACxC,MAAZ,CAAmB+C,UAAnB,CAD0B,CAAP,EAElBI,MAFkB,CAEX,CAACC,QAAD,EAAWC,qBAAX,KAAqC;AAC7C,UAAIC,yBAAyB,GAAG,IAAhC;AACA,UAAIC,iBAAiB,GAAG,KAAxB;AACA,UAAIC,cAAc,GAAG7B,SAArB;;AAEA,UAAI;AACF,aACE,IAAI8B,SAAS,GAAGJ,qBAAqB,CAACK,MAAM,CAACC,QAAR,CAArB,EAAhB,EAA0DC,KAD5D,EAEE,EAAEN,yBAAyB,GAAG,CAACM,KAAK,GAAGH,SAAS,CAACI,IAAV,EAAT,EAA2B3C,IAAzD,CAFF,EAGEoC,yBAAyB,GAAG,IAH9B,EAIE;AACA,gBAAMQ,IAAI,GAAGF,KAAK,CAACtF,KAAnB;AACA8E,UAAAA,QAAQ,CAACW,GAAT,CAAaD,IAAb;AACD;AACF,OATD,CASE,OAAOpC,GAAP,EAAY;AACZ6B,QAAAA,iBAAiB,GAAG,IAApB;AACAC,QAAAA,cAAc,GAAG9B,GAAjB;AACD,OAZD,SAYU;AACR,YAAI;AACF,cAAI,CAAC4B,yBAAD,IAA8BG,SAAS,CAACO,MAAV,IAAoB,IAAtD,EAA4D;AAC1DP,YAAAA,SAAS,CAACO,MAAV;AACD;AACF,SAJD,SAIU;AACR,cAAIT,iBAAJ,EAAuB;AACrB,kBAAMC,cAAN;AACD;AACF;AACF;;AAED,aAAOJ,QAAP;AACD,KAhCoB,EAgClB,IAAIa,GAAJ,EAhCkB,CAArB;AAiCA,WAAO;AACLhB,MAAAA,YADK;AAELZ,MAAAA;AAFK,KAAP;AAID,GArD2B,CAA5B;;AAuDA,SAAO,SAASxD,uBAAT,CAAiCqF,EAAjC,EAAqCC,GAArC,EAA0C;AAC/C,WAAOjC,IAAI,CAACT,KAAL,CAAW,IAAX,EAAiB/B,SAAjB,CAAP;AACD,GAFD;AAGD,CA3DD,EAFF;;AA+DArB,OAAO,CAACQ,uBAAR,GAAkCA,uBAAlC;;AAEA,MAAMD,SAAS,GACb,aACC,YAAW;AACV,MAAIwF,KAAK,GAAG/C,iBAAiB,CAAC,WAAUc,KAAV,EAAiB;AAC7C,UAAMkC,QAAQ,GAAG,MAAMlD,OAAO,CAAC+B,GAAR,CACrBf,KAAK,CAACgB,MAAN,CAAa,CAACmB,QAAD,EAAWC,IAAX,KAAoBD,QAAQ,CAACtE,MAAT,CAAgB8B,WAAW,CAACyC,IAAD,CAA3B,CAAjC,EAAqE,EAArE,CADqB,CAAvB;AAGA,UAAMC,OAAO,GAAG,MAAMrD,OAAO,CAAC+B,GAAR,CACpBf,KAAK,CAACgB,MAAN,CAAa,CAACmB,QAAD,EAAWC,IAAX,KAAoBD,QAAQ,CAACtE,MAAT,CAAgBiC,UAAU,CAACsC,IAAD,CAA1B,CAAjC,EAAoE,EAApE,CADoB,CAAtB;AAGA,WAAO;AACL5B,MAAAA,GAAG,EAAE,IAAIsB,GAAJ,CAAQI,QAAQ,CAACpE,MAAT,CAAgB2B,QAAhB,CAAR,CADA;AAELoB,MAAAA,EAAE,EAAE,IAAIiB,GAAJ,CAAQO,OAAO,CAACvE,MAAR,CAAe2B,QAAf,CAAR;AAFC,KAAP;AAID,GAX4B,CAA7B;;AAaA,SAAO,SAAShD,SAAT,CAAmB6F,GAAnB,EAAwB;AAC7B,WAAOL,KAAK,CAAC3C,KAAN,CAAY,IAAZ,EAAkB/B,SAAlB,CAAP;AACD,GAFD;AAGD,CAjBD,EAFF;;AAqBArB,OAAO,CAACO,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nObject.defineProperty(exports, 'ChangedFiles', {\n  enumerable: true,\n  get: function get() {\n    return _types.ChangedFiles;\n  }\n});\nObject.defineProperty(exports, 'ChangedFilesPromise', {\n  enumerable: true,\n  get: function get() {\n    return _types.ChangedFilesPromise;\n  }\n});\nexports.findRepos = exports.getChangedFilesForRoots = void 0;\n\nfunction _throat() {\n  const data = _interopRequireDefault(require('throat'));\n\n  _throat = function _throat() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _types = require('./types');\n\nvar _git = _interopRequireDefault(require('./git'));\n\nvar _hg = _interopRequireDefault(require('./hg'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(\n        Object.getOwnPropertySymbols(source).filter(function(sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        })\n      );\n    }\n    ownKeys.forEach(function(key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function() {\n    var self = this,\n      args = arguments;\n    return new Promise(function(resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);\n      }\n      _next(undefined);\n    });\n  };\n}\n\nfunction notEmpty(value) {\n  return value != null;\n} // This is an arbitrary number. The main goal is to prevent projects with\n// many roots (50+) from spawning too many processes at once.\n\nconst mutex = (0, _throat().default)(5);\n\nconst findGitRoot = dir => mutex(() => _git.default.getRoot(dir));\n\nconst findHgRoot = dir => mutex(() => _hg.default.getRoot(dir));\n\nconst getChangedFilesForRoots =\n  /*#__PURE__*/\n  (function() {\n    var _ref = _asyncToGenerator(function*(roots, options) {\n      const repos = yield findRepos(roots);\n\n      const changedFilesOptions = _objectSpread(\n        {\n          includePaths: roots\n        },\n        options\n      );\n\n      const gitPromises = Array.from(repos.git).map(repo =>\n        _git.default.findChangedFiles(repo, changedFilesOptions)\n      );\n      const hgPromises = Array.from(repos.hg).map(repo =>\n        _hg.default.findChangedFiles(repo, changedFilesOptions)\n      );\n      const changedFiles = (yield Promise.all(\n        gitPromises.concat(hgPromises)\n      )).reduce((allFiles, changedFilesInTheRepo) => {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (\n            var _iterator = changedFilesInTheRepo[Symbol.iterator](), _step;\n            !(_iteratorNormalCompletion = (_step = _iterator.next()).done);\n            _iteratorNormalCompletion = true\n          ) {\n            const file = _step.value;\n            allFiles.add(file);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return allFiles;\n      }, new Set());\n      return {\n        changedFiles,\n        repos\n      };\n    });\n\n    return function getChangedFilesForRoots(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  })();\n\nexports.getChangedFilesForRoots = getChangedFilesForRoots;\n\nconst findRepos =\n  /*#__PURE__*/\n  (function() {\n    var _ref2 = _asyncToGenerator(function*(roots) {\n      const gitRepos = yield Promise.all(\n        roots.reduce((promises, root) => promises.concat(findGitRoot(root)), [])\n      );\n      const hgRepos = yield Promise.all(\n        roots.reduce((promises, root) => promises.concat(findHgRoot(root)), [])\n      );\n      return {\n        git: new Set(gitRepos.filter(notEmpty)),\n        hg: new Set(hgRepos.filter(notEmpty))\n      };\n    });\n\n    return function findRepos(_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  })();\n\nexports.findRepos = findRepos;\n"]},"metadata":{},"sourceType":"script"}