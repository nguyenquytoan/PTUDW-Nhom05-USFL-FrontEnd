{"ast":null,"code":"// Just verify that all of the packages can be loaded without errors.\nvar fs = require('fs'),\n    path = require('path'); // if running on older node, ensure that es6-shim is loaded first\n\n\nif (/^v0.10/.test(process.version)) {\n  require('es6-shim');\n}\n\ndescribe(\"Package load tests\", function () {\n  fs.readdirSync(path.join(__dirname, '..')).forEach(function (file) {\n    if (/^_/.test(file) || !/\\.js$/.test(file)) {\n      return;\n    }\n\n    var pkgname = file.replace(/\\.js$/, '');\n    it(pkgname + ' should load', function () {\n      require('../' + pkgname);\n    });\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/pn/test/load.js"],"names":["fs","require","path","test","process","version","describe","readdirSync","join","__dirname","forEach","file","pkgname","replace","it"],"mappings":"AAAA;AACA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;AAAA,IAAwBC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAtC,C,CACA;;;AACA,IAAI,SAASE,IAAT,CAAcC,OAAO,CAACC,OAAtB,CAAJ,EAAoC;AAAEJ,EAAAA,OAAO,CAAC,UAAD,CAAP;AAAsB;;AAE5DK,QAAQ,CAAC,oBAAD,EAAuB,YAAW;AACtCN,EAAAA,EAAE,CAACO,WAAH,CAAeL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,IAArB,CAAf,EAA2CC,OAA3C,CAAmD,UAASC,IAAT,EAAe;AAC9D,QAAI,KAAKR,IAAL,CAAUQ,IAAV,KAAmB,CAAC,QAAQR,IAAR,CAAaQ,IAAb,CAAxB,EAA4C;AAAE;AAAS;;AACvD,QAAIC,OAAO,GAAGD,IAAI,CAACE,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAd;AACAC,IAAAA,EAAE,CAACF,OAAO,GAAC,cAAT,EAAyB,YAAW;AAClCX,MAAAA,OAAO,CAAC,QAAMW,OAAP,CAAP;AACH,KAFC,CAAF;AAGH,GAND;AAOH,CARO,CAAR","sourcesContent":["// Just verify that all of the packages can be loaded without errors.\nvar fs = require('fs'), path = require('path');\n// if running on older node, ensure that es6-shim is loaded first\nif (/^v0.10/.test(process.version)) { require('es6-shim'); }\n\ndescribe(\"Package load tests\", function() {\n    fs.readdirSync(path.join(__dirname, '..')).forEach(function(file) {\n        if (/^_/.test(file) || !/\\.js$/.test(file)) { return; }\n        var pkgname = file.replace(/\\.js$/, '');\n        it(pkgname+' should load', function() {\n            require('../'+pkgname);\n        });\n    });\n});\n"]},"metadata":{},"sourceType":"script"}