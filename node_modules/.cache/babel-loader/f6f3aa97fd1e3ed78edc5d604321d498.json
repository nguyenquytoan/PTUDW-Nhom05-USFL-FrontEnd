{"ast":null,"code":"'use strict';\n/*jshint asi: true */\n\nvar test = require('tap').test,\n    generator = require('inline-source-map'),\n    convert = require('..');\n\nvar gen = generator().addMappings('foo.js', [{\n  original: {\n    line: 2,\n    column: 3\n  },\n  generated: {\n    line: 5,\n    column: 10\n  }\n}], {\n  line: 5\n}).addGeneratedMappings('bar.js', 'var a = 2;\\nconsole.log(a)', {\n  line: 23,\n  column: 22\n}),\n    base64 = gen.base64Encode(),\n    comment = gen.inlineMappingUrl(),\n    json = gen.toString(),\n    obj = JSON.parse(json);\ntest('different formats', function (t) {\n  t.equal(convert.fromComment(comment).toComment(), comment, 'comment -> comment');\n  t.equal(convert.fromComment(comment).toBase64(), base64, 'comment -> base64');\n  t.equal(convert.fromComment(comment).toJSON(), json, 'comment -> json');\n  t.deepEqual(convert.fromComment(comment).toObject(), obj, 'comment -> object');\n  t.equal(convert.fromBase64(base64).toBase64(), base64, 'base64 -> base64');\n  t.equal(convert.fromBase64(base64).toComment(), comment, 'base64 -> comment');\n  t.equal(convert.fromBase64(base64).toJSON(), json, 'base64 -> json');\n  t.deepEqual(convert.fromBase64(base64).toObject(), obj, 'base64 -> object');\n  t.equal(convert.fromJSON(json).toJSON(), json, 'json -> json');\n  t.equal(convert.fromJSON(json).toBase64(), base64, 'json -> base64');\n  t.equal(convert.fromJSON(json).toComment(), comment, 'json -> comment');\n  t.deepEqual(convert.fromJSON(json).toObject(), obj, 'json -> object');\n  t.end();\n});\ntest('to object returns a copy', function (t) {\n  var c = convert.fromJSON(json);\n  var o = c.toObject();\n  o.version = '99';\n  t.equal(c.toObject().version, 3, 'setting property on returned object does not affect original');\n  t.end();\n});\ntest('from source', function (t) {\n  var foo = ['function foo() {', ' console.log(\"hello I am foo\");', ' console.log(\"who are you\");', '}', '', 'foo();', ''].join('\\n'),\n      map = '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9',\n      otherMap = '//# sourceMappingURL=data:application/json;base64,otherZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9';\n\n  function getComment(src) {\n    var map = convert.fromSource(src);\n    return map ? map.toComment() : null;\n  }\n\n  t.equal(getComment(foo), null, 'no comment returns null');\n  t.equal(getComment(foo + map), map, 'beginning of last line');\n  t.equal(getComment(foo + '    ' + map), map, 'indented of last line');\n  t.equal(getComment(foo + '   ' + map + '\\n\\n'), map, 'indented on last non empty line');\n  t.equal(getComment(foo + map + '\\nconsole.log(\"more code\");\\nfoo()\\n'), map, 'in the middle of code');\n  t.equal(getComment(foo + otherMap + '\\n' + map), map, 'finds last map in source');\n  t.end();\n});\ntest('remove comments', function (t) {\n  var foo = ['function foo() {', ' console.log(\"hello I am foo\");', ' console.log(\"who are you\");', '}', '', 'foo();', ''].join('\\n') // this one is old spec on purpose\n  ,\n      map = '//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9',\n      otherMap = '//# sourceMappingURL=data:application/json;base64,otherZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9',\n      extraCode = '\\nconsole.log(\"more code\");\\nfoo()\\n';\n  t.equal(convert.removeComments(foo + map), foo, 'from last line');\n  t.equal(convert.removeComments(foo + map + extraCode), foo + extraCode, 'from the middle of code');\n  t.equal(convert.removeComments(foo + otherMap + extraCode + map + map), foo + extraCode, 'multiple comments from the middle of code');\n  t.end();\n});\ntest('remove map file comments', function (t) {\n  var foo = ['function foo() {', ' console.log(\"hello I am foo\");', ' console.log(\"who are you\");', '}', '', 'foo();', ''].join('\\n'),\n      fileMap1 = '//# sourceMappingURL=foo.js.map',\n      fileMap2 = '/*# sourceMappingURL=foo.js.map */';\n  t.equal(convert.removeMapFileComments(foo + fileMap1), foo, '// style filemap comment');\n  t.equal(convert.removeMapFileComments(foo + fileMap2), foo, '/* */ style filemap comment');\n  t.end();\n});\ntest('pretty json', function (t) {\n  var mod = convert.fromJSON(json).toJSON(2),\n      expected = JSON.stringify(obj, null, 2);\n  t.equal(mod, expected, 'pretty prints json when space is given');\n  t.end();\n});\ntest('adding properties', function (t) {\n  var mod = convert.fromJSON(json).addProperty('foo', 'bar').toJSON(),\n      expected = JSON.parse(json);\n  expected.foo = 'bar';\n  t.equal(mod, JSON.stringify(expected), 'includes added property');\n  t.end();\n});\ntest('setting properties', function (t) {\n  var mod = convert.fromJSON(json).setProperty('version', '2').setProperty('mappings', ';;;UACG').setProperty('should add', 'this').toJSON(),\n      expected = JSON.parse(json);\n  expected.version = '2';\n  expected.mappings = ';;;UACG';\n  expected['should add'] = 'this';\n  t.equal(mod, JSON.stringify(expected), 'includes new property and changes existing properties');\n  t.end();\n});\ntest('getting properties', function (t) {\n  var sm = convert.fromJSON(json);\n  t.equal(sm.getProperty('version'), 3, 'gets version');\n  t.deepEqual(sm.getProperty('sources'), ['foo.js', 'bar.js'], 'gets sources');\n  t.end();\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/rework/node_modules/convert-source-map/test/convert-source-map.js"],"names":["test","require","generator","convert","gen","addMappings","original","line","column","generated","addGeneratedMappings","base64","base64Encode","comment","inlineMappingUrl","json","toString","obj","JSON","parse","t","equal","fromComment","toComment","toBase64","toJSON","deepEqual","toObject","fromBase64","fromJSON","end","c","o","version","foo","join","map","otherMap","getComment","src","fromSource","extraCode","removeComments","fileMap1","fileMap2","removeMapFileComments","mod","expected","stringify","addProperty","setProperty","mappings","sm","getProperty"],"mappings":"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","sourcesContent":["'use strict';\n/*jshint asi: true */\n\nvar test = require('tap').test\n  , generator = require('inline-source-map')\n  , convert = require('..')\n\nvar gen = generator()\n    .addMappings('foo.js', [{ original: { line: 2, column: 3 } , generated: { line: 5, column: 10 } }], { line: 5 })\n    .addGeneratedMappings('bar.js', 'var a = 2;\\nconsole.log(a)', { line: 23, column: 22 })\n\n  , base64 = gen.base64Encode()\n  , comment = gen.inlineMappingUrl()\n  , json = gen.toString()\n  , obj = JSON.parse(json)\n\ntest('different formats', function (t) {\n\n  t.equal(convert.fromComment(comment).toComment(), comment, 'comment -> comment')\n  t.equal(convert.fromComment(comment).toBase64(), base64, 'comment -> base64')\n  t.equal(convert.fromComment(comment).toJSON(), json, 'comment -> json')\n  t.deepEqual(convert.fromComment(comment).toObject(), obj, 'comment -> object')\n\n  t.equal(convert.fromBase64(base64).toBase64(), base64, 'base64 -> base64')\n  t.equal(convert.fromBase64(base64).toComment(), comment, 'base64 -> comment')\n  t.equal(convert.fromBase64(base64).toJSON(), json, 'base64 -> json')\n  t.deepEqual(convert.fromBase64(base64).toObject(), obj, 'base64 -> object')\n\n  t.equal(convert.fromJSON(json).toJSON(), json, 'json -> json')\n  t.equal(convert.fromJSON(json).toBase64(), base64, 'json -> base64')\n  t.equal(convert.fromJSON(json).toComment(), comment, 'json -> comment')\n  t.deepEqual(convert.fromJSON(json).toObject(), obj, 'json -> object')\n  t.end()\n})\n\ntest('to object returns a copy', function (t) {\n  var c = convert.fromJSON(json)\n  var o = c.toObject()\n  o.version = '99';\n  t.equal(c.toObject().version, 3, 'setting property on returned object does not affect original')\n  t.end()\n})\n\ntest('from source', function (t) {\n  var foo = [\n      'function foo() {'\n    , ' console.log(\"hello I am foo\");'\n    , ' console.log(\"who are you\");'\n    , '}'\n    , ''\n    , 'foo();'\n    , ''\n    ].join('\\n')\n  , map = '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9'\n  , otherMap = '//# sourceMappingURL=data:application/json;base64,otherZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9'\n\n  function getComment(src) {\n    var map = convert.fromSource(src);\n    return map ? map.toComment() : null;\n  }\n\n  t.equal(getComment(foo), null, 'no comment returns null')\n  t.equal(getComment(foo + map), map, 'beginning of last line')\n  t.equal(getComment(foo + '    ' +  map), map, 'indented of last line')\n  t.equal(getComment(foo + '   ' + map + '\\n\\n'), map, 'indented on last non empty line')\n  t.equal(getComment(foo + map + '\\nconsole.log(\"more code\");\\nfoo()\\n'), map, 'in the middle of code')\n  t.equal(getComment(foo + otherMap + '\\n' +  map), map, 'finds last map in source')\n  t.end()\n})\n\ntest('remove comments', function (t) {\n  var foo = [\n      'function foo() {'\n    , ' console.log(\"hello I am foo\");'\n    , ' console.log(\"who are you\");'\n    , '}'\n    , ''\n    , 'foo();'\n    , ''\n    ].join('\\n')\n    // this one is old spec on purpose\n  , map = '//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9'\n  , otherMap = '//# sourceMappingURL=data:application/json;base64,otherZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9'\n  , extraCode = '\\nconsole.log(\"more code\");\\nfoo()\\n'\n\n  t.equal(convert.removeComments(foo + map), foo, 'from last line')\n  t.equal(convert.removeComments(foo + map + extraCode), foo + extraCode, 'from the middle of code')\n  t.equal(convert.removeComments(foo + otherMap + extraCode + map + map), foo + extraCode, 'multiple comments from the middle of code')\n  t.end()\n})\n\ntest('remove map file comments', function (t) {\n  var foo = [\n      'function foo() {'\n    , ' console.log(\"hello I am foo\");'\n    , ' console.log(\"who are you\");'\n    , '}'\n    , ''\n    , 'foo();'\n    , ''\n    ].join('\\n')\n  , fileMap1 = '//# sourceMappingURL=foo.js.map'\n  , fileMap2 = '/*# sourceMappingURL=foo.js.map */';\n\n  t.equal(convert.removeMapFileComments(foo + fileMap1), foo, '// style filemap comment')\n  t.equal(convert.removeMapFileComments(foo + fileMap2), foo, '/* */ style filemap comment')\n  t.end()\n})\n\ntest('pretty json', function (t) {\n  var mod = convert.fromJSON(json).toJSON(2)\n    , expected = JSON.stringify(obj, null, 2);\n\n  t.equal(\n      mod\n    , expected\n    , 'pretty prints json when space is given')\n  t.end()\n})\n\ntest('adding properties', function (t) {\n  var mod = convert\n    .fromJSON(json)\n    .addProperty('foo', 'bar')\n    .toJSON()\n    , expected = JSON.parse(json);\n    expected.foo = 'bar';\n  t.equal(\n      mod\n    , JSON.stringify(expected)\n    , 'includes added property'\n  )\n  t.end()\n})\n\ntest('setting properties', function (t) {\n  var mod = convert\n    .fromJSON(json)\n    .setProperty('version', '2')\n    .setProperty('mappings', ';;;UACG')\n    .setProperty('should add', 'this')\n    .toJSON()\n    , expected = JSON.parse(json);\n    expected.version = '2';\n    expected.mappings = ';;;UACG';\n    expected['should add'] = 'this';\n  t.equal(\n      mod\n    , JSON.stringify(expected)\n    , 'includes new property and changes existing properties'\n  )\n  t.end()\n})\n\ntest('getting properties', function (t) {\n  var sm = convert.fromJSON(json)\n\n  t.equal(sm.getProperty('version'), 3, 'gets version')\n  t.deepEqual(sm.getProperty('sources'), ['foo.js', 'bar.js'], 'gets sources')\n  t.end()\n})\n"]},"metadata":{},"sourceType":"script"}