{"ast":null,"code":"\"use strict\";\n\ndefine(['test/test-helpers'], function (testHelpers) {\n  var describeIf = testHelpers.describeIf;\n  var it = testHelpers.itWithFreshLog;\n  var originalConsole = window.console;\n  describe(\"Setting default log level tests:\", function () {\n    beforeEach(function () {\n      window.console = {\n        \"log\": jasmine.createSpy(\"console.log\")\n      };\n      this.addMatchers({\n        \"toBeAtLevel\": testHelpers.toBeAtLevel,\n        \"toBeTheStoredLevel\": testHelpers.toBeTheLevelStoredByLocalStorage\n      });\n      testHelpers.clearStoredLevels();\n    });\n    afterEach(function () {\n      window.console = originalConsole;\n    });\n    describe(\"If no level is saved\", function () {\n      it(\"new level is always set\", function (log) {\n        log.setDefaultLevel(\"trace\");\n        expect(log).toBeAtLevel(\"trace\");\n      });\n      it(\"level is not persisted\", function (log) {\n        log.setDefaultLevel(\"debug\");\n        expect(\"debug\").not.toBeTheStoredLevel();\n      });\n    });\n    describe(\"If a level is saved\", function () {\n      beforeEach(function () {\n        testHelpers.setStoredLevel(\"trace\");\n      });\n      it(\"saved level is not modified\", function (log) {\n        log.setDefaultLevel(\"debug\");\n        expect(log).toBeAtLevel(\"trace\");\n      });\n    });\n    describe(\"If the level is stored incorrectly\", function () {\n      beforeEach(function () {\n        testHelpers.setLocalStorageStoredLevel(\"gibberish\");\n      });\n      it(\"new level is set\", function (log) {\n        log.setDefaultLevel(\"debug\");\n        expect(log).toBeAtLevel(\"debug\");\n        expect(\"debug\").not.toBeTheStoredLevel();\n      });\n    });\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/loglevel/test/default-level-test.js"],"names":["define","testHelpers","describeIf","it","itWithFreshLog","originalConsole","window","console","describe","beforeEach","jasmine","createSpy","addMatchers","toBeAtLevel","toBeTheLevelStoredByLocalStorage","clearStoredLevels","afterEach","log","setDefaultLevel","expect","not","toBeTheStoredLevel","setStoredLevel","setLocalStorageStoredLevel"],"mappings":"AAAA;;AAEAA,MAAM,CAAC,CAAC,mBAAD,CAAD,EAAwB,UAASC,WAAT,EAAsB;AAChD,MAAIC,UAAU,GAAGD,WAAW,CAACC,UAA7B;AACA,MAAIC,EAAE,GAAGF,WAAW,CAACG,cAArB;AAEA,MAAIC,eAAe,GAAGC,MAAM,CAACC,OAA7B;AAEAC,EAAAA,QAAQ,CAAC,kCAAD,EAAqC,YAAW;AAEpDC,IAAAA,UAAU,CAAC,YAAW;AAClBH,MAAAA,MAAM,CAACC,OAAP,GAAiB;AAAC,eAAQG,OAAO,CAACC,SAAR,CAAkB,aAAlB;AAAT,OAAjB;AACA,WAAKC,WAAL,CAAiB;AACb,uBAAgBX,WAAW,CAACY,WADf;AAEb,8BAAuBZ,WAAW,CAACa;AAFtB,OAAjB;AAKAb,MAAAA,WAAW,CAACc,iBAAZ;AACH,KARS,CAAV;AAUAC,IAAAA,SAAS,CAAC,YAAW;AACjBV,MAAAA,MAAM,CAACC,OAAP,GAAiBF,eAAjB;AACH,KAFQ,CAAT;AAIAG,IAAAA,QAAQ,CAAC,sBAAD,EAAyB,YAAW;AACxCL,MAAAA,EAAE,CAAC,yBAAD,EAA4B,UAASc,GAAT,EAAc;AACxCA,QAAAA,GAAG,CAACC,eAAJ,CAAoB,OAApB;AACAC,QAAAA,MAAM,CAACF,GAAD,CAAN,CAAYJ,WAAZ,CAAwB,OAAxB;AACH,OAHC,CAAF;AAKAV,MAAAA,EAAE,CAAC,wBAAD,EAA2B,UAASc,GAAT,EAAc;AACvCA,QAAAA,GAAG,CAACC,eAAJ,CAAoB,OAApB;AACAC,QAAAA,MAAM,CAAC,OAAD,CAAN,CAAgBC,GAAhB,CAAoBC,kBAApB;AACH,OAHC,CAAF;AAIH,KAVO,CAAR;AAYAb,IAAAA,QAAQ,CAAC,qBAAD,EAAwB,YAAY;AACxCC,MAAAA,UAAU,CAAC,YAAY;AACnBR,QAAAA,WAAW,CAACqB,cAAZ,CAA2B,OAA3B;AACH,OAFS,CAAV;AAIAnB,MAAAA,EAAE,CAAC,6BAAD,EAAgC,UAAUc,GAAV,EAAe;AAC7CA,QAAAA,GAAG,CAACC,eAAJ,CAAoB,OAApB;AACAC,QAAAA,MAAM,CAACF,GAAD,CAAN,CAAYJ,WAAZ,CAAwB,OAAxB;AACH,OAHC,CAAF;AAIH,KATO,CAAR;AAWAL,IAAAA,QAAQ,CAAC,oCAAD,EAAuC,YAAW;AACtDC,MAAAA,UAAU,CAAC,YAAW;AAClBR,QAAAA,WAAW,CAACsB,0BAAZ,CAAuC,WAAvC;AACH,OAFS,CAAV;AAIApB,MAAAA,EAAE,CAAC,kBAAD,EAAqB,UAASc,GAAT,EAAc;AACjCA,QAAAA,GAAG,CAACC,eAAJ,CAAoB,OAApB;AACAC,QAAAA,MAAM,CAACF,GAAD,CAAN,CAAYJ,WAAZ,CAAwB,OAAxB;AACAM,QAAAA,MAAM,CAAC,OAAD,CAAN,CAAgBC,GAAhB,CAAoBC,kBAApB;AACH,OAJC,CAAF;AAKH,KAVO,CAAR;AAWH,GAlDO,CAAR;AAmDH,CAzDK,CAAN","sourcesContent":["\"use strict\";\n\ndefine(['test/test-helpers'], function(testHelpers) {\n    var describeIf = testHelpers.describeIf;\n    var it = testHelpers.itWithFreshLog;\n\n    var originalConsole = window.console;\n\n    describe(\"Setting default log level tests:\", function() {\n\n        beforeEach(function() {\n            window.console = {\"log\" : jasmine.createSpy(\"console.log\")};\n            this.addMatchers({\n                \"toBeAtLevel\" : testHelpers.toBeAtLevel,\n                \"toBeTheStoredLevel\" : testHelpers.toBeTheLevelStoredByLocalStorage\n            });\n\n            testHelpers.clearStoredLevels();\n        });\n\n        afterEach(function() {\n            window.console = originalConsole;\n        });\n\n        describe(\"If no level is saved\", function() {\n            it(\"new level is always set\", function(log) {\n                log.setDefaultLevel(\"trace\");\n                expect(log).toBeAtLevel(\"trace\");\n            });\n\n            it(\"level is not persisted\", function(log) {\n                log.setDefaultLevel(\"debug\");\n                expect(\"debug\").not.toBeTheStoredLevel();\n            });\n        });\n        \n        describe(\"If a level is saved\", function () {\n            beforeEach(function () {\n                testHelpers.setStoredLevel(\"trace\");\n            });\n            \n            it(\"saved level is not modified\", function (log) {\n                log.setDefaultLevel(\"debug\");\n                expect(log).toBeAtLevel(\"trace\");\n            });\n        });\n\n        describe(\"If the level is stored incorrectly\", function() {\n            beforeEach(function() {\n                testHelpers.setLocalStorageStoredLevel(\"gibberish\");\n            });\n\n            it(\"new level is set\", function(log) {\n                log.setDefaultLevel(\"debug\");\n                expect(log).toBeAtLevel(\"debug\");\n                expect(\"debug\").not.toBeTheStoredLevel();\n            });\n        });\n    });\n});\n"]},"metadata":{},"sourceType":"script"}