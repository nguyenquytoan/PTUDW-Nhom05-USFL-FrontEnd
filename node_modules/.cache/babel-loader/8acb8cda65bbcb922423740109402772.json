{"ast":null,"code":"import Promise from './promise';\n/**\n  This is a convenient alias for `Promise.resolve`.\n\n  @method resolve\n  @public\n  @static\n  @for rsvp\n  @param {*} value value that the returned promise will be resolved with\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\n\nexport default function resolve(value, label) {\n  return Promise.resolve(value, label);\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/rsvp/lib/rsvp/resolve.js"],"names":["Promise","resolve","value","label"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA;;;;;;;;;;;;;;AAaA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;AAC5C,SAAOH,OAAO,CAACC,OAAR,CAAgBC,KAAhB,EAAuBC,KAAvB,CAAP;AACD","sourcesContent":["import Promise from './promise';\n\n/**\n  This is a convenient alias for `Promise.resolve`.\n\n  @method resolve\n  @public\n  @static\n  @for rsvp\n  @param {*} value value that the returned promise will be resolved with\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nexport default function resolve(value, label) {\n  return Promise.resolve(value, label);\n}\n"]},"metadata":{},"sourceType":"module"}