{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = validateCLIOptions;\nexports.DOCUMENTATION_NOTE = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _camelcase() {\n  const data = _interopRequireDefault(require('camelcase'));\n\n  _camelcase = function _camelcase() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _utils = require('./utils');\n\nvar _deprecated = require('./deprecated');\n\nvar _defaultConfig = _interopRequireDefault(require('./defaultConfig'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst BULLET = _chalk().default.bold('\\u25cf');\n\nconst DOCUMENTATION_NOTE = `  ${_chalk().default.bold('CLI Options Documentation:')}\n  https://jestjs.io/docs/en/cli.html\n`;\nexports.DOCUMENTATION_NOTE = DOCUMENTATION_NOTE;\n\nconst createCLIValidationError = (unrecognizedOptions, allowedOptions) => {\n  let title = `${BULLET} Unrecognized CLI Parameter`;\n  let message;\n  const comment = `  ${_chalk().default.bold('CLI Options Documentation')}:\\n` + `  https://jestjs.io/docs/en/cli.html\\n`;\n\n  if (unrecognizedOptions.length === 1) {\n    const unrecognized = unrecognizedOptions[0];\n    const didYouMeanMessage = (0, _utils.createDidYouMeanMessage)(unrecognized, Array.from(allowedOptions));\n    message = `  Unrecognized option ${_chalk().default.bold((0, _utils.format)(unrecognized))}.` + (didYouMeanMessage ? ` ${didYouMeanMessage}` : '');\n  } else {\n    title += 's';\n    message = `  Following options were not recognized:\\n` + `  ${_chalk().default.bold((0, _utils.format)(unrecognizedOptions))}`;\n  }\n\n  return new _utils.ValidationError(title, message, comment);\n};\n\nconst logDeprecatedOptions = (deprecatedOptions, deprecationEntries, argv) => {\n  deprecatedOptions.forEach(opt => {\n    (0, _deprecated.deprecationWarning)(argv, opt, deprecationEntries, _objectSpread({}, _defaultConfig.default, {\n      comment: DOCUMENTATION_NOTE\n    }));\n  });\n};\n\nfunction validateCLIOptions(argv, options, rawArgv = []) {\n  const yargsSpecialOptions = ['$0', '_', 'help', 'h'];\n  const deprecationEntries = options.deprecationEntries || {};\n  const allowedOptions = Object.keys(options).reduce((acc, option) => acc.add(option).add(options[option].alias || option), new Set(yargsSpecialOptions));\n  const unrecognizedOptions = Object.keys(argv).filter(arg => !allowedOptions.has((0, _camelcase().default)(arg)) && (!rawArgv.length || rawArgv.includes(arg)), []);\n\n  if (unrecognizedOptions.length) {\n    throw createCLIValidationError(unrecognizedOptions, allowedOptions);\n  }\n\n  const CLIDeprecations = Object.keys(deprecationEntries).reduce((acc, entry) => {\n    if (options[entry]) {\n      acc[entry] = deprecationEntries[entry];\n      const alias = options[entry].alias;\n\n      if (alias) {\n        acc[alias] = deprecationEntries[entry];\n      }\n    }\n\n    return acc;\n  }, {});\n  const deprecations = new Set(Object.keys(CLIDeprecations));\n  const deprecatedOptions = Object.keys(argv).filter(arg => deprecations.has(arg) && argv[arg] != null);\n\n  if (deprecatedOptions.length) {\n    logDeprecatedOptions(deprecatedOptions, CLIDeprecations, argv);\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-validate/build/validateCLIOptions.js"],"names":["Object","defineProperty","exports","value","default","validateCLIOptions","DOCUMENTATION_NOTE","_chalk","data","_interopRequireDefault","require","_camelcase","_utils","_deprecated","_defaultConfig","obj","__esModule","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","configurable","writable","BULLET","bold","createCLIValidationError","unrecognizedOptions","allowedOptions","title","message","comment","unrecognized","didYouMeanMessage","createDidYouMeanMessage","Array","from","format","ValidationError","logDeprecatedOptions","deprecatedOptions","deprecationEntries","argv","opt","deprecationWarning","options","rawArgv","yargsSpecialOptions","reduce","acc","option","add","alias","Set","arg","has","includes","CLIDeprecations","entry","deprecations"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = validateCLIOptions;\nexports.DOCUMENTATION_NOTE = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _camelcase() {\n  const data = _interopRequireDefault(require('camelcase'));\n\n  _camelcase = function _camelcase() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _utils = require('./utils');\n\nvar _deprecated = require('./deprecated');\n\nvar _defaultConfig = _interopRequireDefault(require('./defaultConfig'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(\n        Object.getOwnPropertySymbols(source).filter(function(sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        })\n      );\n    }\n    ownKeys.forEach(function(key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nconst BULLET = _chalk().default.bold('\\u25cf');\n\nconst DOCUMENTATION_NOTE = `  ${_chalk().default.bold(\n  'CLI Options Documentation:'\n)}\n  https://jestjs.io/docs/en/cli.html\n`;\nexports.DOCUMENTATION_NOTE = DOCUMENTATION_NOTE;\n\nconst createCLIValidationError = (unrecognizedOptions, allowedOptions) => {\n  let title = `${BULLET} Unrecognized CLI Parameter`;\n  let message;\n  const comment =\n    `  ${_chalk().default.bold('CLI Options Documentation')}:\\n` +\n    `  https://jestjs.io/docs/en/cli.html\\n`;\n\n  if (unrecognizedOptions.length === 1) {\n    const unrecognized = unrecognizedOptions[0];\n    const didYouMeanMessage = (0, _utils.createDidYouMeanMessage)(\n      unrecognized,\n      Array.from(allowedOptions)\n    );\n    message =\n      `  Unrecognized option ${_chalk().default.bold(\n        (0, _utils.format)(unrecognized)\n      )}.` + (didYouMeanMessage ? ` ${didYouMeanMessage}` : '');\n  } else {\n    title += 's';\n    message =\n      `  Following options were not recognized:\\n` +\n      `  ${_chalk().default.bold((0, _utils.format)(unrecognizedOptions))}`;\n  }\n\n  return new _utils.ValidationError(title, message, comment);\n};\n\nconst logDeprecatedOptions = (deprecatedOptions, deprecationEntries, argv) => {\n  deprecatedOptions.forEach(opt => {\n    (0, _deprecated.deprecationWarning)(\n      argv,\n      opt,\n      deprecationEntries,\n      _objectSpread({}, _defaultConfig.default, {\n        comment: DOCUMENTATION_NOTE\n      })\n    );\n  });\n};\n\nfunction validateCLIOptions(argv, options, rawArgv = []) {\n  const yargsSpecialOptions = ['$0', '_', 'help', 'h'];\n  const deprecationEntries = options.deprecationEntries || {};\n  const allowedOptions = Object.keys(options).reduce(\n    (acc, option) => acc.add(option).add(options[option].alias || option),\n    new Set(yargsSpecialOptions)\n  );\n  const unrecognizedOptions = Object.keys(argv).filter(\n    arg =>\n      !allowedOptions.has((0, _camelcase().default)(arg)) &&\n      (!rawArgv.length || rawArgv.includes(arg)),\n    []\n  );\n\n  if (unrecognizedOptions.length) {\n    throw createCLIValidationError(unrecognizedOptions, allowedOptions);\n  }\n\n  const CLIDeprecations = Object.keys(deprecationEntries).reduce(\n    (acc, entry) => {\n      if (options[entry]) {\n        acc[entry] = deprecationEntries[entry];\n        const alias = options[entry].alias;\n\n        if (alias) {\n          acc[alias] = deprecationEntries[entry];\n        }\n      }\n\n      return acc;\n    },\n    {}\n  );\n  const deprecations = new Set(Object.keys(CLIDeprecations));\n  const deprecatedOptions = Object.keys(argv).filter(\n    arg => deprecations.has(arg) && argv[arg] != null\n  );\n\n  if (deprecatedOptions.length) {\n    logDeprecatedOptions(deprecatedOptions, CLIDeprecations, argv);\n  }\n\n  return true;\n}\n"]},"metadata":{},"sourceType":"script"}