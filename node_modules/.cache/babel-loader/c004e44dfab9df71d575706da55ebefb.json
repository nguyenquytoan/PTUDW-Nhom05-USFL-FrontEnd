{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n};\n\nexports.default = parse;\n\nvar _util = require('./util');\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nvar source = void 0;\nvar parseState = void 0;\nvar stack = void 0;\nvar pos = void 0;\nvar line = void 0;\nvar column = void 0;\nvar token = void 0;\nvar key = void 0;\nvar root = void 0;\n\nfunction parse(text, reviver) {\n  source = String(text);\n  parseState = 'start';\n  stack = [];\n  pos = 0;\n  line = 1;\n  column = 0;\n  token = undefined;\n  key = undefined;\n  root = undefined;\n\n  do {\n    token = lex();\n    parseStates[parseState]();\n  } while (token.type !== 'eof');\n\n  if (typeof reviver === 'function') {\n    return internalize({\n      '': root\n    }, '', reviver);\n  }\n\n  return root;\n}\n\nfunction internalize(holder, name, reviver) {\n  var value = holder[name];\n\n  if (value != null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n    for (var _key in value) {\n      var replacement = internalize(value, _key, reviver);\n\n      if (replacement === undefined) {\n        delete value[_key];\n      } else {\n        value[_key] = replacement;\n      }\n    }\n  }\n\n  return reviver.call(holder, name, value);\n}\n\nvar lexState = void 0;\nvar buffer = void 0;\nvar doubleQuote = void 0;\n\nvar _sign = void 0;\n\nvar c = void 0;\n\nfunction lex() {\n  lexState = 'default';\n  buffer = '';\n  doubleQuote = false;\n  _sign = 1;\n\n  for (;;) {\n    c = peek();\n\n    var _token = lexStates[lexState]();\n\n    if (_token) {\n      return _token;\n    }\n  }\n}\n\nfunction peek() {\n  if (source[pos]) {\n    return String.fromCodePoint(source.codePointAt(pos));\n  }\n}\n\nfunction read() {\n  var c = peek();\n\n  if (c === '\\n') {\n    line++;\n    column = 0;\n  } else if (c) {\n    column += c.length;\n  } else {\n    column++;\n  }\n\n  if (c) {\n    pos += c.length;\n  }\n\n  return c;\n}\n\nvar lexStates = {\n  default: function _default() {\n    switch (c) {\n      case '\\t':\n      case '\\x0B':\n      case '\\f':\n      case ' ':\n      case '\\xA0':\n      case '\\uFEFF':\n      case '\\n':\n      case '\\r':\n      case '\\u2028':\n      case '\\u2029':\n        read();\n        return;\n\n      case '/':\n        read();\n        lexState = 'comment';\n        return;\n\n      case undefined:\n        read();\n        return newToken('eof');\n    }\n\n    if (util.isSpaceSeparator(c)) {\n      read();\n      return;\n    }\n\n    return lexStates[parseState]();\n  },\n  comment: function comment() {\n    switch (c) {\n      case '*':\n        read();\n        lexState = 'multiLineComment';\n        return;\n\n      case '/':\n        read();\n        lexState = 'singleLineComment';\n        return;\n    }\n\n    throw invalidChar(read());\n  },\n  multiLineComment: function multiLineComment() {\n    switch (c) {\n      case '*':\n        read();\n        lexState = 'multiLineCommentAsterisk';\n        return;\n\n      case undefined:\n        throw invalidChar(read());\n    }\n\n    read();\n  },\n  multiLineCommentAsterisk: function multiLineCommentAsterisk() {\n    switch (c) {\n      case '*':\n        read();\n        return;\n\n      case '/':\n        read();\n        lexState = 'default';\n        return;\n\n      case undefined:\n        throw invalidChar(read());\n    }\n\n    read();\n    lexState = 'multiLineComment';\n  },\n  singleLineComment: function singleLineComment() {\n    switch (c) {\n      case '\\n':\n      case '\\r':\n      case '\\u2028':\n      case '\\u2029':\n        read();\n        lexState = 'default';\n        return;\n\n      case undefined:\n        read();\n        return newToken('eof');\n    }\n\n    read();\n  },\n  value: function value() {\n    switch (c) {\n      case '{':\n      case '[':\n        return newToken('punctuator', read());\n\n      case 'n':\n        read();\n        literal('ull');\n        return newToken('null', null);\n\n      case 't':\n        read();\n        literal('rue');\n        return newToken('boolean', true);\n\n      case 'f':\n        read();\n        literal('alse');\n        return newToken('boolean', false);\n\n      case '-':\n      case '+':\n        if (read() === '-') {\n          _sign = -1;\n        }\n\n        lexState = 'sign';\n        return;\n\n      case '.':\n        buffer = read();\n        lexState = 'decimalPointLeading';\n        return;\n\n      case '0':\n        buffer = read();\n        lexState = 'zero';\n        return;\n\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        buffer = read();\n        lexState = 'decimalInteger';\n        return;\n\n      case 'I':\n        read();\n        literal('nfinity');\n        return newToken('numeric', Infinity);\n\n      case 'N':\n        read();\n        literal('aN');\n        return newToken('numeric', NaN);\n\n      case '\"':\n      case '\\'':\n        doubleQuote = read() === '\"';\n        buffer = '';\n        lexState = 'string';\n        return;\n    }\n\n    throw invalidChar(read());\n  },\n  identifierNameStartEscape: function identifierNameStartEscape() {\n    if (c !== 'u') {\n      throw invalidChar(read());\n    }\n\n    read();\n    var u = unicodeEscape();\n\n    switch (u) {\n      case '$':\n      case '_':\n        break;\n\n      default:\n        if (!util.isIdStartChar(u)) {\n          throw invalidIdentifier();\n        }\n\n        break;\n    }\n\n    buffer += u;\n    lexState = 'identifierName';\n  },\n  identifierName: function identifierName() {\n    switch (c) {\n      case '$':\n      case '_':\n      case '\\u200C':\n      case '\\u200D':\n        buffer += read();\n        return;\n\n      case '\\\\':\n        read();\n        lexState = 'identifierNameEscape';\n        return;\n    }\n\n    if (util.isIdContinueChar(c)) {\n      buffer += read();\n      return;\n    }\n\n    return newToken('identifier', buffer);\n  },\n  identifierNameEscape: function identifierNameEscape() {\n    if (c !== 'u') {\n      throw invalidChar(read());\n    }\n\n    read();\n    var u = unicodeEscape();\n\n    switch (u) {\n      case '$':\n      case '_':\n      case '\\u200C':\n      case '\\u200D':\n        break;\n\n      default:\n        if (!util.isIdContinueChar(u)) {\n          throw invalidIdentifier();\n        }\n\n        break;\n    }\n\n    buffer += u;\n    lexState = 'identifierName';\n  },\n  sign: function sign() {\n    switch (c) {\n      case '.':\n        buffer = read();\n        lexState = 'decimalPointLeading';\n        return;\n\n      case '0':\n        buffer = read();\n        lexState = 'zero';\n        return;\n\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        buffer = read();\n        lexState = 'decimalInteger';\n        return;\n\n      case 'I':\n        read();\n        literal('nfinity');\n        return newToken('numeric', _sign * Infinity);\n\n      case 'N':\n        read();\n        literal('aN');\n        return newToken('numeric', NaN);\n    }\n\n    throw invalidChar(read());\n  },\n  zero: function zero() {\n    switch (c) {\n      case '.':\n        buffer += read();\n        lexState = 'decimalPoint';\n        return;\n\n      case 'e':\n      case 'E':\n        buffer += read();\n        lexState = 'decimalExponent';\n        return;\n\n      case 'x':\n      case 'X':\n        buffer += read();\n        lexState = 'hexadecimal';\n        return;\n    }\n\n    return newToken('numeric', _sign * 0);\n  },\n  decimalInteger: function decimalInteger() {\n    switch (c) {\n      case '.':\n        buffer += read();\n        lexState = 'decimalPoint';\n        return;\n\n      case 'e':\n      case 'E':\n        buffer += read();\n        lexState = 'decimalExponent';\n        return;\n    }\n\n    if (util.isDigit(c)) {\n      buffer += read();\n      return;\n    }\n\n    return newToken('numeric', _sign * Number(buffer));\n  },\n  decimalPointLeading: function decimalPointLeading() {\n    if (util.isDigit(c)) {\n      buffer += read();\n      lexState = 'decimalFraction';\n      return;\n    }\n\n    throw invalidChar(read());\n  },\n  decimalPoint: function decimalPoint() {\n    switch (c) {\n      case 'e':\n      case 'E':\n        buffer += read();\n        lexState = 'decimalExponent';\n        return;\n    }\n\n    if (util.isDigit(c)) {\n      buffer += read();\n      lexState = 'decimalFraction';\n      return;\n    }\n\n    return newToken('numeric', _sign * Number(buffer));\n  },\n  decimalFraction: function decimalFraction() {\n    switch (c) {\n      case 'e':\n      case 'E':\n        buffer += read();\n        lexState = 'decimalExponent';\n        return;\n    }\n\n    if (util.isDigit(c)) {\n      buffer += read();\n      return;\n    }\n\n    return newToken('numeric', _sign * Number(buffer));\n  },\n  decimalExponent: function decimalExponent() {\n    switch (c) {\n      case '+':\n      case '-':\n        buffer += read();\n        lexState = 'decimalExponentSign';\n        return;\n    }\n\n    if (util.isDigit(c)) {\n      buffer += read();\n      lexState = 'decimalExponentInteger';\n      return;\n    }\n\n    throw invalidChar(read());\n  },\n  decimalExponentSign: function decimalExponentSign() {\n    if (util.isDigit(c)) {\n      buffer += read();\n      lexState = 'decimalExponentInteger';\n      return;\n    }\n\n    throw invalidChar(read());\n  },\n  decimalExponentInteger: function decimalExponentInteger() {\n    if (util.isDigit(c)) {\n      buffer += read();\n      return;\n    }\n\n    return newToken('numeric', _sign * Number(buffer));\n  },\n  hexadecimal: function hexadecimal() {\n    if (util.isHexDigit(c)) {\n      buffer += read();\n      lexState = 'hexadecimalInteger';\n      return;\n    }\n\n    throw invalidChar(read());\n  },\n  hexadecimalInteger: function hexadecimalInteger() {\n    if (util.isHexDigit(c)) {\n      buffer += read();\n      return;\n    }\n\n    return newToken('numeric', _sign * Number(buffer));\n  },\n  string: function string() {\n    switch (c) {\n      case '\\\\':\n        read();\n        buffer += escape();\n        return;\n\n      case '\"':\n        if (doubleQuote) {\n          read();\n          return newToken('string', buffer);\n        }\n\n        buffer += read();\n        return;\n\n      case '\\'':\n        if (!doubleQuote) {\n          read();\n          return newToken('string', buffer);\n        }\n\n        buffer += read();\n        return;\n\n      case '\\n':\n      case '\\r':\n        throw invalidChar(read());\n\n      case '\\u2028':\n      case '\\u2029':\n        separatorChar(c);\n        break;\n\n      case undefined:\n        throw invalidChar(read());\n    }\n\n    buffer += read();\n  },\n  start: function start() {\n    switch (c) {\n      case '{':\n      case '[':\n        return newToken('punctuator', read());\n    }\n\n    lexState = 'value';\n  },\n  beforePropertyName: function beforePropertyName() {\n    switch (c) {\n      case '$':\n      case '_':\n        buffer = read();\n        lexState = 'identifierName';\n        return;\n\n      case '\\\\':\n        read();\n        lexState = 'identifierNameStartEscape';\n        return;\n\n      case '}':\n        return newToken('punctuator', read());\n\n      case '\"':\n      case '\\'':\n        doubleQuote = read() === '\"';\n        lexState = 'string';\n        return;\n    }\n\n    if (util.isIdStartChar(c)) {\n      buffer += read();\n      lexState = 'identifierName';\n      return;\n    }\n\n    throw invalidChar(read());\n  },\n  afterPropertyName: function afterPropertyName() {\n    if (c === ':') {\n      return newToken('punctuator', read());\n    }\n\n    throw invalidChar(read());\n  },\n  beforePropertyValue: function beforePropertyValue() {\n    lexState = 'value';\n  },\n  afterPropertyValue: function afterPropertyValue() {\n    switch (c) {\n      case ',':\n      case '}':\n        return newToken('punctuator', read());\n    }\n\n    throw invalidChar(read());\n  },\n  beforeArrayValue: function beforeArrayValue() {\n    if (c === ']') {\n      return newToken('punctuator', read());\n    }\n\n    lexState = 'value';\n  },\n  afterArrayValue: function afterArrayValue() {\n    switch (c) {\n      case ',':\n      case ']':\n        return newToken('punctuator', read());\n    }\n\n    throw invalidChar(read());\n  },\n  end: function end() {\n    throw invalidChar(read());\n  }\n};\n\nfunction newToken(type, value) {\n  return {\n    type: type,\n    value: value,\n    line: line,\n    column: column\n  };\n}\n\nfunction literal(s) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = s[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _c = _step.value;\n      var p = peek();\n\n      if (p !== _c) {\n        throw invalidChar(read());\n      }\n\n      read();\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\nfunction escape() {\n  var c = peek();\n\n  switch (c) {\n    case 'b':\n      read();\n      return '\\b';\n\n    case 'f':\n      read();\n      return '\\f';\n\n    case 'n':\n      read();\n      return '\\n';\n\n    case 'r':\n      read();\n      return '\\r';\n\n    case 't':\n      read();\n      return '\\t';\n\n    case 'v':\n      read();\n      return '\\x0B';\n\n    case '0':\n      read();\n\n      if (util.isDigit(peek())) {\n        throw invalidChar(read());\n      }\n\n      return '\\0';\n\n    case 'x':\n      read();\n      return hexEscape();\n\n    case 'u':\n      read();\n      return unicodeEscape();\n\n    case '\\n':\n    case '\\u2028':\n    case '\\u2029':\n      read();\n      return '';\n\n    case '\\r':\n      read();\n\n      if (peek() === '\\n') {\n        read();\n      }\n\n      return '';\n\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n      throw invalidChar(read());\n\n    case undefined:\n      throw invalidChar(read());\n  }\n\n  return read();\n}\n\nfunction hexEscape() {\n  var buffer = '';\n  var c = peek();\n\n  if (!util.isHexDigit(c)) {\n    throw invalidChar(read());\n  }\n\n  buffer += read();\n  c = peek();\n\n  if (!util.isHexDigit(c)) {\n    throw invalidChar(read());\n  }\n\n  buffer += read();\n  return String.fromCodePoint(parseInt(buffer, 16));\n}\n\nfunction unicodeEscape() {\n  var buffer = '';\n  var count = 4;\n\n  while (count-- > 0) {\n    var _c2 = peek();\n\n    if (!util.isHexDigit(_c2)) {\n      throw invalidChar(read());\n    }\n\n    buffer += read();\n  }\n\n  return String.fromCodePoint(parseInt(buffer, 16));\n}\n\nvar parseStates = {\n  start: function start() {\n    if (token.type === 'eof') {\n      throw invalidEOF();\n    }\n\n    push();\n  },\n  beforePropertyName: function beforePropertyName() {\n    switch (token.type) {\n      case 'identifier':\n      case 'string':\n        key = token.value;\n        parseState = 'afterPropertyName';\n        return;\n\n      case 'punctuator':\n        pop();\n        return;\n\n      case 'eof':\n        throw invalidEOF();\n    }\n  },\n  afterPropertyName: function afterPropertyName() {\n    if (token.type === 'eof') {\n      throw invalidEOF();\n    }\n\n    parseState = 'beforePropertyValue';\n  },\n  beforePropertyValue: function beforePropertyValue() {\n    if (token.type === 'eof') {\n      throw invalidEOF();\n    }\n\n    push();\n  },\n  beforeArrayValue: function beforeArrayValue() {\n    if (token.type === 'eof') {\n      throw invalidEOF();\n    }\n\n    if (token.type === 'punctuator' && token.value === ']') {\n      pop();\n      return;\n    }\n\n    push();\n  },\n  afterPropertyValue: function afterPropertyValue() {\n    if (token.type === 'eof') {\n      throw invalidEOF();\n    }\n\n    switch (token.value) {\n      case ',':\n        parseState = 'beforePropertyName';\n        return;\n\n      case '}':\n        pop();\n    }\n  },\n  afterArrayValue: function afterArrayValue() {\n    if (token.type === 'eof') {\n      throw invalidEOF();\n    }\n\n    switch (token.value) {\n      case ',':\n        parseState = 'beforeArrayValue';\n        return;\n\n      case ']':\n        pop();\n    }\n  },\n  end: function end() {}\n};\n\nfunction push() {\n  var value = void 0;\n\n  switch (token.type) {\n    case 'punctuator':\n      switch (token.value) {\n        case '{':\n          value = {};\n          break;\n\n        case '[':\n          value = [];\n          break;\n      }\n\n      break;\n\n    case 'null':\n    case 'boolean':\n    case 'numeric':\n    case 'string':\n      value = token.value;\n      break;\n  }\n\n  if (root === undefined) {\n    root = value;\n  } else {\n    var parent = stack[stack.length - 1];\n\n    if (Array.isArray(parent)) {\n      parent.push(value);\n    } else {\n      parent[key] = value;\n    }\n  }\n\n  if (value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n    stack.push(value);\n\n    if (Array.isArray(value)) {\n      parseState = 'beforeArrayValue';\n    } else {\n      parseState = 'beforePropertyName';\n    }\n  } else {\n    var current = stack[stack.length - 1];\n\n    if (current == null) {\n      parseState = 'end';\n    } else if (Array.isArray(current)) {\n      parseState = 'afterArrayValue';\n    } else {\n      parseState = 'afterPropertyValue';\n    }\n  }\n}\n\nfunction pop() {\n  stack.pop();\n  var current = stack[stack.length - 1];\n\n  if (current == null) {\n    parseState = 'end';\n  } else if (Array.isArray(current)) {\n    parseState = 'afterArrayValue';\n  } else {\n    parseState = 'afterPropertyValue';\n  }\n}\n\nfunction invalidChar(c) {\n  if (c === undefined) {\n    return syntaxError('JSON5: invalid end of input at ' + line + ':' + column);\n  }\n\n  return syntaxError('JSON5: invalid character \\'' + formatChar(c) + '\\' at ' + line + ':' + column);\n}\n\nfunction invalidEOF() {\n  return syntaxError('JSON5: invalid end of input at ' + line + ':' + column);\n}\n\nfunction invalidIdentifier() {\n  column -= 5;\n  return syntaxError('JSON5: invalid identifier character at ' + line + ':' + column);\n}\n\nfunction separatorChar(c) {\n  console.warn('JSON5: \\'' + c + '\\' is not valid ECMAScript; consider escaping');\n}\n\nfunction formatChar(c) {\n  var replacements = {\n    '\\'': '\\\\\\'',\n    '\"': '\\\\\"',\n    '\\\\': '\\\\\\\\',\n    '\\b': '\\\\b',\n    '\\f': '\\\\f',\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\x0B': '\\\\v',\n    '\\0': '\\\\0',\n    '\\u2028': '\\\\u2028',\n    '\\u2029': '\\\\u2029'\n  };\n\n  if (replacements[c]) {\n    return replacements[c];\n  }\n\n  if (c < ' ') {\n    var hexString = c.charCodeAt(0).toString(16);\n    return '\\\\x' + ('00' + hexString).substring(hexString.length);\n  }\n\n  return c;\n}\n\nfunction syntaxError(message) {\n  var err = new SyntaxError(message);\n  err.lineNumber = line;\n  err.columnNumber = column;\n  return err;\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/react-dev-utils/node_modules/json5/lib/parse.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","default","parse","_util","require","util","_interopRequireWildcard","__esModule","newObj","key","hasOwnProperty","call","source","parseState","stack","pos","line","column","token","root","text","reviver","String","undefined","lex","parseStates","type","internalize","holder","name","_key","replacement","lexState","buffer","doubleQuote","_sign","c","peek","_token","lexStates","fromCodePoint","codePointAt","read","length","_default","newToken","isSpaceSeparator","comment","invalidChar","multiLineComment","multiLineCommentAsterisk","singleLineComment","literal","Infinity","NaN","identifierNameStartEscape","u","unicodeEscape","isIdStartChar","invalidIdentifier","identifierName","isIdContinueChar","identifierNameEscape","sign","zero","decimalInteger","isDigit","Number","decimalPointLeading","decimalPoint","decimalFraction","decimalExponent","decimalExponentSign","decimalExponentInteger","hexadecimal","isHexDigit","hexadecimalInteger","string","escape","separatorChar","start","beforePropertyName","afterPropertyName","beforePropertyValue","afterPropertyValue","beforeArrayValue","afterArrayValue","end","s","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","_c","p","err","return","hexEscape","parseInt","count","_c2","invalidEOF","push","pop","parent","Array","isArray","current","syntaxError","formatChar","console","warn","replacements","hexString","charCodeAt","toString","substring","message","SyntaxError","lineNumber","columnNumber","module"],"mappings":"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","sourcesContent":["'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};exports.default=parse;var _util=require('./util');var util=_interopRequireWildcard(_util);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}var source=void 0;var parseState=void 0;var stack=void 0;var pos=void 0;var line=void 0;var column=void 0;var token=void 0;var key=void 0;var root=void 0;function parse(text,reviver){source=String(text);parseState='start';stack=[];pos=0;line=1;column=0;token=undefined;key=undefined;root=undefined;do{token=lex();parseStates[parseState]()}while(token.type!=='eof');if(typeof reviver==='function'){return internalize({'':root},'',reviver)}return root}function internalize(holder,name,reviver){var value=holder[name];if(value!=null&&(typeof value==='undefined'?'undefined':_typeof(value))==='object'){for(var _key in value){var replacement=internalize(value,_key,reviver);if(replacement===undefined){delete value[_key]}else{value[_key]=replacement}}}return reviver.call(holder,name,value)}var lexState=void 0;var buffer=void 0;var doubleQuote=void 0;var _sign=void 0;var c=void 0;function lex(){lexState='default';buffer='';doubleQuote=false;_sign=1;for(;;){c=peek();var _token=lexStates[lexState]();if(_token){return _token}}}function peek(){if(source[pos]){return String.fromCodePoint(source.codePointAt(pos))}}function read(){var c=peek();if(c==='\\n'){line++;column=0}else if(c){column+=c.length}else{column++}if(c){pos+=c.length}return c}var lexStates={default:function _default(){switch(c){case'\\t':case'\\x0B':case'\\f':case' ':case'\\xA0':case'\\uFEFF':case'\\n':case'\\r':case'\\u2028':case'\\u2029':read();return;case'/':read();lexState='comment';return;case undefined:read();return newToken('eof');}if(util.isSpaceSeparator(c)){read();return}return lexStates[parseState]()},comment:function comment(){switch(c){case'*':read();lexState='multiLineComment';return;case'/':read();lexState='singleLineComment';return;}throw invalidChar(read())},multiLineComment:function multiLineComment(){switch(c){case'*':read();lexState='multiLineCommentAsterisk';return;case undefined:throw invalidChar(read());}read()},multiLineCommentAsterisk:function multiLineCommentAsterisk(){switch(c){case'*':read();return;case'/':read();lexState='default';return;case undefined:throw invalidChar(read());}read();lexState='multiLineComment'},singleLineComment:function singleLineComment(){switch(c){case'\\n':case'\\r':case'\\u2028':case'\\u2029':read();lexState='default';return;case undefined:read();return newToken('eof');}read()},value:function value(){switch(c){case'{':case'[':return newToken('punctuator',read());case'n':read();literal('ull');return newToken('null',null);case't':read();literal('rue');return newToken('boolean',true);case'f':read();literal('alse');return newToken('boolean',false);case'-':case'+':if(read()==='-'){_sign=-1}lexState='sign';return;case'.':buffer=read();lexState='decimalPointLeading';return;case'0':buffer=read();lexState='zero';return;case'1':case'2':case'3':case'4':case'5':case'6':case'7':case'8':case'9':buffer=read();lexState='decimalInteger';return;case'I':read();literal('nfinity');return newToken('numeric',Infinity);case'N':read();literal('aN');return newToken('numeric',NaN);case'\"':case'\\'':doubleQuote=read()==='\"';buffer='';lexState='string';return;}throw invalidChar(read())},identifierNameStartEscape:function identifierNameStartEscape(){if(c!=='u'){throw invalidChar(read())}read();var u=unicodeEscape();switch(u){case'$':case'_':break;default:if(!util.isIdStartChar(u)){throw invalidIdentifier()}break;}buffer+=u;lexState='identifierName'},identifierName:function identifierName(){switch(c){case'$':case'_':case'\\u200C':case'\\u200D':buffer+=read();return;case'\\\\':read();lexState='identifierNameEscape';return;}if(util.isIdContinueChar(c)){buffer+=read();return}return newToken('identifier',buffer)},identifierNameEscape:function identifierNameEscape(){if(c!=='u'){throw invalidChar(read())}read();var u=unicodeEscape();switch(u){case'$':case'_':case'\\u200C':case'\\u200D':break;default:if(!util.isIdContinueChar(u)){throw invalidIdentifier()}break;}buffer+=u;lexState='identifierName'},sign:function sign(){switch(c){case'.':buffer=read();lexState='decimalPointLeading';return;case'0':buffer=read();lexState='zero';return;case'1':case'2':case'3':case'4':case'5':case'6':case'7':case'8':case'9':buffer=read();lexState='decimalInteger';return;case'I':read();literal('nfinity');return newToken('numeric',_sign*Infinity);case'N':read();literal('aN');return newToken('numeric',NaN);}throw invalidChar(read())},zero:function zero(){switch(c){case'.':buffer+=read();lexState='decimalPoint';return;case'e':case'E':buffer+=read();lexState='decimalExponent';return;case'x':case'X':buffer+=read();lexState='hexadecimal';return;}return newToken('numeric',_sign*0)},decimalInteger:function decimalInteger(){switch(c){case'.':buffer+=read();lexState='decimalPoint';return;case'e':case'E':buffer+=read();lexState='decimalExponent';return;}if(util.isDigit(c)){buffer+=read();return}return newToken('numeric',_sign*Number(buffer))},decimalPointLeading:function decimalPointLeading(){if(util.isDigit(c)){buffer+=read();lexState='decimalFraction';return}throw invalidChar(read())},decimalPoint:function decimalPoint(){switch(c){case'e':case'E':buffer+=read();lexState='decimalExponent';return;}if(util.isDigit(c)){buffer+=read();lexState='decimalFraction';return}return newToken('numeric',_sign*Number(buffer))},decimalFraction:function decimalFraction(){switch(c){case'e':case'E':buffer+=read();lexState='decimalExponent';return;}if(util.isDigit(c)){buffer+=read();return}return newToken('numeric',_sign*Number(buffer))},decimalExponent:function decimalExponent(){switch(c){case'+':case'-':buffer+=read();lexState='decimalExponentSign';return;}if(util.isDigit(c)){buffer+=read();lexState='decimalExponentInteger';return}throw invalidChar(read())},decimalExponentSign:function decimalExponentSign(){if(util.isDigit(c)){buffer+=read();lexState='decimalExponentInteger';return}throw invalidChar(read())},decimalExponentInteger:function decimalExponentInteger(){if(util.isDigit(c)){buffer+=read();return}return newToken('numeric',_sign*Number(buffer))},hexadecimal:function hexadecimal(){if(util.isHexDigit(c)){buffer+=read();lexState='hexadecimalInteger';return}throw invalidChar(read())},hexadecimalInteger:function hexadecimalInteger(){if(util.isHexDigit(c)){buffer+=read();return}return newToken('numeric',_sign*Number(buffer))},string:function string(){switch(c){case'\\\\':read();buffer+=escape();return;case'\"':if(doubleQuote){read();return newToken('string',buffer)}buffer+=read();return;case'\\'':if(!doubleQuote){read();return newToken('string',buffer)}buffer+=read();return;case'\\n':case'\\r':throw invalidChar(read());case'\\u2028':case'\\u2029':separatorChar(c);break;case undefined:throw invalidChar(read());}buffer+=read()},start:function start(){switch(c){case'{':case'[':return newToken('punctuator',read());}lexState='value'},beforePropertyName:function beforePropertyName(){switch(c){case'$':case'_':buffer=read();lexState='identifierName';return;case'\\\\':read();lexState='identifierNameStartEscape';return;case'}':return newToken('punctuator',read());case'\"':case'\\'':doubleQuote=read()==='\"';lexState='string';return;}if(util.isIdStartChar(c)){buffer+=read();lexState='identifierName';return}throw invalidChar(read())},afterPropertyName:function afterPropertyName(){if(c===':'){return newToken('punctuator',read())}throw invalidChar(read())},beforePropertyValue:function beforePropertyValue(){lexState='value'},afterPropertyValue:function afterPropertyValue(){switch(c){case',':case'}':return newToken('punctuator',read());}throw invalidChar(read())},beforeArrayValue:function beforeArrayValue(){if(c===']'){return newToken('punctuator',read())}lexState='value'},afterArrayValue:function afterArrayValue(){switch(c){case',':case']':return newToken('punctuator',read());}throw invalidChar(read())},end:function end(){throw invalidChar(read())}};function newToken(type,value){return{type:type,value:value,line:line,column:column}}function literal(s){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=s[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var _c=_step.value;var p=peek();if(p!==_c){throw invalidChar(read())}read()}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}}function escape(){var c=peek();switch(c){case'b':read();return'\\b';case'f':read();return'\\f';case'n':read();return'\\n';case'r':read();return'\\r';case't':read();return'\\t';case'v':read();return'\\x0B';case'0':read();if(util.isDigit(peek())){throw invalidChar(read())}return'\\0';case'x':read();return hexEscape();case'u':read();return unicodeEscape();case'\\n':case'\\u2028':case'\\u2029':read();return'';case'\\r':read();if(peek()==='\\n'){read()}return'';case'1':case'2':case'3':case'4':case'5':case'6':case'7':case'8':case'9':throw invalidChar(read());case undefined:throw invalidChar(read());}return read()}function hexEscape(){var buffer='';var c=peek();if(!util.isHexDigit(c)){throw invalidChar(read())}buffer+=read();c=peek();if(!util.isHexDigit(c)){throw invalidChar(read())}buffer+=read();return String.fromCodePoint(parseInt(buffer,16))}function unicodeEscape(){var buffer='';var count=4;while(count-->0){var _c2=peek();if(!util.isHexDigit(_c2)){throw invalidChar(read())}buffer+=read()}return String.fromCodePoint(parseInt(buffer,16))}var parseStates={start:function start(){if(token.type==='eof'){throw invalidEOF()}push()},beforePropertyName:function beforePropertyName(){switch(token.type){case'identifier':case'string':key=token.value;parseState='afterPropertyName';return;case'punctuator':pop();return;case'eof':throw invalidEOF();}},afterPropertyName:function afterPropertyName(){if(token.type==='eof'){throw invalidEOF()}parseState='beforePropertyValue'},beforePropertyValue:function beforePropertyValue(){if(token.type==='eof'){throw invalidEOF()}push()},beforeArrayValue:function beforeArrayValue(){if(token.type==='eof'){throw invalidEOF()}if(token.type==='punctuator'&&token.value===']'){pop();return}push()},afterPropertyValue:function afterPropertyValue(){if(token.type==='eof'){throw invalidEOF()}switch(token.value){case',':parseState='beforePropertyName';return;case'}':pop();}},afterArrayValue:function afterArrayValue(){if(token.type==='eof'){throw invalidEOF()}switch(token.value){case',':parseState='beforeArrayValue';return;case']':pop();}},end:function end(){}};function push(){var value=void 0;switch(token.type){case'punctuator':switch(token.value){case'{':value={};break;case'[':value=[];break;}break;case'null':case'boolean':case'numeric':case'string':value=token.value;break;}if(root===undefined){root=value}else{var parent=stack[stack.length-1];if(Array.isArray(parent)){parent.push(value)}else{parent[key]=value}}if(value!==null&&(typeof value==='undefined'?'undefined':_typeof(value))==='object'){stack.push(value);if(Array.isArray(value)){parseState='beforeArrayValue'}else{parseState='beforePropertyName'}}else{var current=stack[stack.length-1];if(current==null){parseState='end'}else if(Array.isArray(current)){parseState='afterArrayValue'}else{parseState='afterPropertyValue'}}}function pop(){stack.pop();var current=stack[stack.length-1];if(current==null){parseState='end'}else if(Array.isArray(current)){parseState='afterArrayValue'}else{parseState='afterPropertyValue'}}function invalidChar(c){if(c===undefined){return syntaxError('JSON5: invalid end of input at '+line+':'+column)}return syntaxError('JSON5: invalid character \\''+formatChar(c)+'\\' at '+line+':'+column)}function invalidEOF(){return syntaxError('JSON5: invalid end of input at '+line+':'+column)}function invalidIdentifier(){column-=5;return syntaxError('JSON5: invalid identifier character at '+line+':'+column)}function separatorChar(c){console.warn('JSON5: \\''+c+'\\' is not valid ECMAScript; consider escaping')}function formatChar(c){var replacements={'\\'':'\\\\\\'','\"':'\\\\\"','\\\\':'\\\\\\\\','\\b':'\\\\b','\\f':'\\\\f','\\n':'\\\\n','\\r':'\\\\r','\\t':'\\\\t','\\x0B':'\\\\v','\\0':'\\\\0','\\u2028':'\\\\u2028','\\u2029':'\\\\u2029'};if(replacements[c]){return replacements[c]}if(c<' '){var hexString=c.charCodeAt(0).toString(16);return'\\\\x'+('00'+hexString).substring(hexString.length)}return c}function syntaxError(message){var err=new SyntaxError(message);err.lineNumber=line;err.columnNumber=column;return err}module.exports=exports['default'];"]},"metadata":{},"sourceType":"script"}