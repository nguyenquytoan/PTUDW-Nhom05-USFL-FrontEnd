{"ast":null,"code":"\"use strict\";\n\nvar assert = require(\"chai\").assert,\n    ensureThenable = require(\"../../thenable/ensure\");\n\ndescribe(\"thenable/ensure\", function () {\n  it(\"Should return input value\", function () {\n    var value = {\n      then: function () {\n        return true;\n      }\n    };\n    assert.equal(ensureThenable(value), value);\n  });\n  it(\"Should crash on no value\", function () {\n    try {\n      ensureThenable({});\n      throw new Error(\"Unexpected\");\n    } catch (error) {\n      assert.equal(error.name, \"TypeError\");\n      assert.equal(error.message, \"[object Object] is not a thenable object\");\n    }\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/type/test/thenable/ensure.js"],"names":["assert","require","ensureThenable","describe","it","value","then","equal","Error","error","name","message"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAWC,OAAO,CAAC,MAAD,CAAP,CAAgBD,MAArC;AAAA,IACIE,cAAc,GAAGD,OAAO,CAAC,uBAAD,CAD5B;;AAGAE,QAAQ,CAAC,iBAAD,EAAoB,YAAY;AACvCC,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAY;AAC3C,QAAIC,KAAK,GAAG;AAAEC,MAAAA,IAAI,EAAE,YAAY;AAAE,eAAO,IAAP;AAAc;AAApC,KAAZ;AACAN,IAAAA,MAAM,CAACO,KAAP,CAAaL,cAAc,CAACG,KAAD,CAA3B,EAAoCA,KAApC;AACA,GAHC,CAAF;AAIAD,EAAAA,EAAE,CAAC,0BAAD,EAA6B,YAAY;AAC1C,QAAI;AACHF,MAAAA,cAAc,CAAC,EAAD,CAAd;AACA,YAAM,IAAIM,KAAJ,CAAU,YAAV,CAAN;AACA,KAHD,CAGE,OAAOC,KAAP,EAAc;AACfT,MAAAA,MAAM,CAACO,KAAP,CAAaE,KAAK,CAACC,IAAnB,EAAyB,WAAzB;AACAV,MAAAA,MAAM,CAACO,KAAP,CAAaE,KAAK,CAACE,OAAnB,EAA4B,0CAA5B;AACA;AACD,GARC,CAAF;AASA,CAdO,CAAR","sourcesContent":["\"use strict\";\n\nvar assert         = require(\"chai\").assert\n  , ensureThenable = require(\"../../thenable/ensure\");\n\ndescribe(\"thenable/ensure\", function () {\n\tit(\"Should return input value\", function () {\n\t\tvar value = { then: function () { return true; } };\n\t\tassert.equal(ensureThenable(value), value);\n\t});\n\tit(\"Should crash on no value\", function () {\n\t\ttry {\n\t\t\tensureThenable({});\n\t\t\tthrow new Error(\"Unexpected\");\n\t\t} catch (error) {\n\t\t\tassert.equal(error.name, \"TypeError\");\n\t\t\tassert.equal(error.message, \"[object Object] is not a thenable object\");\n\t\t}\n\t});\n});\n"]},"metadata":{},"sourceType":"script"}