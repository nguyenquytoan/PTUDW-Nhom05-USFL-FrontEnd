{"ast":null,"code":"var Token = require('../../tokenizer/token');\n\nvar serializeAll = require('../../writer/one-time').all;\n\nvar FONT_FACE_SCOPE = '@font-face';\n\nfunction removeDuplicateFontAtRules(tokens) {\n  var fontAtRules = [];\n  var token;\n  var key;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    if (token[0] != Token.AT_RULE_BLOCK && token[1][0][1] != FONT_FACE_SCOPE) {\n      continue;\n    }\n\n    key = serializeAll([token]);\n\n    if (fontAtRules.indexOf(key) > -1) {\n      token[2] = [];\n    } else {\n      fontAtRules.push(key);\n    }\n  }\n}\n\nmodule.exports = removeDuplicateFontAtRules;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/optimizer/level-2/remove-duplicate-font-at-rules.js"],"names":["Token","require","serializeAll","all","FONT_FACE_SCOPE","removeDuplicateFontAtRules","tokens","fontAtRules","token","key","i","l","length","AT_RULE_BLOCK","indexOf","push","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEA,IAAIC,YAAY,GAAGD,OAAO,CAAC,uBAAD,CAAP,CAAiCE,GAApD;;AAEA,IAAIC,eAAe,GAAG,YAAtB;;AAEA,SAASC,0BAAT,CAAoCC,MAApC,EAA4C;AAC1C,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,KAAJ;AACA,MAAIC,GAAJ;AACA,MAAIC,CAAJ,EAAOC,CAAP;;AAEA,OAAKD,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGL,MAAM,CAACM,MAAvB,EAA+BF,CAAC,GAAGC,CAAnC,EAAsCD,CAAC,EAAvC,EAA2C;AACzCF,IAAAA,KAAK,GAAGF,MAAM,CAACI,CAAD,CAAd;;AAEA,QAAIF,KAAK,CAAC,CAAD,CAAL,IAAYR,KAAK,CAACa,aAAlB,IAAmCL,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,EAAY,CAAZ,KAAkBJ,eAAzD,EAA0E;AACxE;AACD;;AAEDK,IAAAA,GAAG,GAAGP,YAAY,CAAC,CAACM,KAAD,CAAD,CAAlB;;AAEA,QAAID,WAAW,CAACO,OAAZ,CAAoBL,GAApB,IAA2B,CAAC,CAAhC,EAAmC;AACjCD,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,EAAX;AACD,KAFD,MAEO;AACLD,MAAAA,WAAW,CAACQ,IAAZ,CAAiBN,GAAjB;AACD;AACF;AACF;;AAEDO,MAAM,CAACC,OAAP,GAAiBZ,0BAAjB","sourcesContent":["var Token = require('../../tokenizer/token');\n\nvar serializeAll = require('../../writer/one-time').all;\n\nvar FONT_FACE_SCOPE = '@font-face';\n\nfunction removeDuplicateFontAtRules(tokens) {\n  var fontAtRules = [];\n  var token;\n  var key;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    if (token[0] != Token.AT_RULE_BLOCK && token[1][0][1] != FONT_FACE_SCOPE) {\n      continue;\n    }\n\n    key = serializeAll([token]);\n\n    if (fontAtRules.indexOf(key) > -1) {\n      token[2] = [];\n    } else {\n      fontAtRules.push(key);\n    }\n  }\n}\n\nmodule.exports = removeDuplicateFontAtRules;\n"]},"metadata":{},"sourceType":"script"}