{"ast":null,"code":"\"use strict\";\n\nvar _helpers = require(\"./util/helpers\");\n\n(0, _helpers.test)('escaped semicolon in class', '.\\\\;', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, ';');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.value, '\\\\;');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'class');\n});\n(0, _helpers.test)('escaped semicolon in id', '#\\\\;', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, ';');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.value, '\\\\;');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'id');\n}); // This is a side-effect of allowing media queries to be parsed. Not sure it shouldn't just be an error.\n\n(0, _helpers.test)('bare parens capture contents as a string', '(h1)', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '(h1)');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'string');\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-selector-parser/dist/__tests__/escapes.js"],"names":["_helpers","require","test","t","tree","deepEqual","nodes","value","raws","type"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AAEA,CAAC,GAAGD,QAAQ,CAACE,IAAb,EAAmB,4BAAnB,EAAiD,MAAjD,EAAyD,UAAUC,CAAV,EAAaC,IAAb,EAAmB;AAC1ED,EAAAA,CAAC,CAACE,SAAF,CAAYD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcA,KAAd,CAAoB,CAApB,EAAuBC,KAAnC,EAA0C,GAA1C;AACAJ,EAAAA,CAAC,CAACE,SAAF,CAAYD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcA,KAAd,CAAoB,CAApB,EAAuBE,IAAvB,CAA4BD,KAAxC,EAA+C,KAA/C;AACAJ,EAAAA,CAAC,CAACE,SAAF,CAAYD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcA,KAAd,CAAoB,CAApB,EAAuBG,IAAnC,EAAyC,OAAzC;AACD,CAJD;AAKA,CAAC,GAAGT,QAAQ,CAACE,IAAb,EAAmB,yBAAnB,EAA8C,MAA9C,EAAsD,UAAUC,CAAV,EAAaC,IAAb,EAAmB;AACvED,EAAAA,CAAC,CAACE,SAAF,CAAYD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcA,KAAd,CAAoB,CAApB,EAAuBC,KAAnC,EAA0C,GAA1C;AACAJ,EAAAA,CAAC,CAACE,SAAF,CAAYD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcA,KAAd,CAAoB,CAApB,EAAuBE,IAAvB,CAA4BD,KAAxC,EAA+C,KAA/C;AACAJ,EAAAA,CAAC,CAACE,SAAF,CAAYD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcA,KAAd,CAAoB,CAApB,EAAuBG,IAAnC,EAAyC,IAAzC;AACD,CAJD,E,CAII;;AAEJ,CAAC,GAAGT,QAAQ,CAACE,IAAb,EAAmB,0CAAnB,EAA+D,MAA/D,EAAuE,UAAUC,CAAV,EAAaC,IAAb,EAAmB;AACxFD,EAAAA,CAAC,CAACE,SAAF,CAAYD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcA,KAAd,CAAoB,CAApB,EAAuBC,KAAnC,EAA0C,MAA1C;AACAJ,EAAAA,CAAC,CAACE,SAAF,CAAYD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcA,KAAd,CAAoB,CAApB,EAAuBG,IAAnC,EAAyC,QAAzC;AACD,CAHD","sourcesContent":["\"use strict\";\n\nvar _helpers = require(\"./util/helpers\");\n\n(0, _helpers.test)('escaped semicolon in class', '.\\\\;', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, ';');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.value, '\\\\;');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'class');\n});\n(0, _helpers.test)('escaped semicolon in id', '#\\\\;', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, ';');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.value, '\\\\;');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'id');\n}); // This is a side-effect of allowing media queries to be parsed. Not sure it shouldn't just be an error.\n\n(0, _helpers.test)('bare parens capture contents as a string', '(h1)', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '(h1)');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'string');\n});"]},"metadata":{},"sourceType":"script"}