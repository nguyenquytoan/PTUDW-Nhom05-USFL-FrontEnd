{"ast":null,"code":"var test = require('tape');\n\nvar crypto = require('./browser');\n\nvar Buffer = require('safe-buffer').Buffer;\n\ntest('sync', function (t) {\n  t.test('first', function (t) {\n    const buf = Buffer.alloc(10);\n    const before = buf.toString('hex');\n    crypto.randomFillSync(buf, 5, 5);\n    const after = buf.toString('hex');\n    t.notEqual(before, after);\n    t.equal(before.slice(0, 10), after.slice(0, 10));\n    t.end();\n  });\n});\ntest('async', function (t) {\n  t.test('first', function (t) {\n    const buf = Buffer.alloc(10);\n    const before = buf.toString('hex');\n    crypto.randomFill(buf, 5, 5, function (err, bufa) {\n      t.error(err);\n      const after = bufa.toString('hex');\n      t.notEqual(before, after);\n      t.equal(before.slice(0, 10), after.slice(0, 10));\n      t.ok(buf === bufa, 'same buffer');\n      t.end();\n    });\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/randomfill/test.js"],"names":["test","require","crypto","Buffer","t","buf","alloc","before","toString","randomFillSync","after","notEqual","equal","slice","end","randomFill","err","bufa","error","ok"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,MAApC;;AACAH,IAAI,CAAC,MAAD,EAAS,UAAUI,CAAV,EAAa;AACxBA,EAAAA,CAAC,CAACJ,IAAF,CAAO,OAAP,EAAgB,UAAUI,CAAV,EAAa;AAC3B,UAAMC,GAAG,GAAGF,MAAM,CAACG,KAAP,CAAa,EAAb,CAAZ;AACA,UAAMC,MAAM,GAAGF,GAAG,CAACG,QAAJ,CAAa,KAAb,CAAf;AACAN,IAAAA,MAAM,CAACO,cAAP,CAAsBJ,GAAtB,EAA2B,CAA3B,EAA8B,CAA9B;AACA,UAAMK,KAAK,GAAGL,GAAG,CAACG,QAAJ,CAAa,KAAb,CAAd;AACAJ,IAAAA,CAAC,CAACO,QAAF,CAAWJ,MAAX,EAAmBG,KAAnB;AACAN,IAAAA,CAAC,CAACQ,KAAF,CAAQL,MAAM,CAACM,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAR,EAA6BH,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAe,EAAf,CAA7B;AACAT,IAAAA,CAAC,CAACU,GAAF;AACD,GARD;AASD,CAVG,CAAJ;AAWAd,IAAI,CAAC,OAAD,EAAU,UAAUI,CAAV,EAAa;AACzBA,EAAAA,CAAC,CAACJ,IAAF,CAAO,OAAP,EAAgB,UAAUI,CAAV,EAAa;AAC3B,UAAMC,GAAG,GAAGF,MAAM,CAACG,KAAP,CAAa,EAAb,CAAZ;AACA,UAAMC,MAAM,GAAGF,GAAG,CAACG,QAAJ,CAAa,KAAb,CAAf;AACAN,IAAAA,MAAM,CAACa,UAAP,CAAkBV,GAAlB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,UAAUW,GAAV,EAAeC,IAAf,EAAqB;AAChDb,MAAAA,CAAC,CAACc,KAAF,CAAQF,GAAR;AACA,YAAMN,KAAK,GAAGO,IAAI,CAACT,QAAL,CAAc,KAAd,CAAd;AACAJ,MAAAA,CAAC,CAACO,QAAF,CAAWJ,MAAX,EAAmBG,KAAnB;AACAN,MAAAA,CAAC,CAACQ,KAAF,CAAQL,MAAM,CAACM,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAR,EAA6BH,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAe,EAAf,CAA7B;AACAT,MAAAA,CAAC,CAACe,EAAF,CAAKd,GAAG,KAAKY,IAAb,EAAmB,aAAnB;AACAb,MAAAA,CAAC,CAACU,GAAF;AACD,KAPD;AAQD,GAXD;AAYD,CAbG,CAAJ","sourcesContent":["var test = require('tape')\nvar crypto = require('./browser')\nvar Buffer = require('safe-buffer').Buffer\ntest('sync', function (t) {\n  t.test('first', function (t) {\n    const buf = Buffer.alloc(10)\n    const before = buf.toString('hex')\n    crypto.randomFillSync(buf, 5, 5)\n    const after = buf.toString('hex')\n    t.notEqual(before, after)\n    t.equal(before.slice(0, 10), after.slice(0, 10))\n    t.end()\n  })\n})\ntest('async', function (t) {\n  t.test('first', function (t) {\n    const buf = Buffer.alloc(10)\n    const before = buf.toString('hex')\n    crypto.randomFill(buf, 5, 5, function (err, bufa) {\n      t.error(err)\n      const after = bufa.toString('hex')\n      t.notEqual(before, after)\n      t.equal(before.slice(0, 10), after.slice(0, 10))\n      t.ok(buf === bufa, 'same buffer')\n      t.end()\n    })\n  })\n})\n"]},"metadata":{},"sourceType":"script"}