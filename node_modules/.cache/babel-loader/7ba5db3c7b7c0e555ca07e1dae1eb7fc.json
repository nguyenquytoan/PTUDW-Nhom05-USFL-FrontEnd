{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getNoTestFoundVerbose;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _pluralize = _interopRequireDefault(require('./pluralize'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction getNoTestFoundVerbose(testRunData, globalConfig) {\n  const individualResults = testRunData.map(testRun => {\n    const stats = testRun.matches.stats || {};\n    const config = testRun.context.config;\n    const statsMessage = Object.keys(stats).map(key => {\n      if (key === 'roots' && config.roots.length === 1) {\n        return null;\n      }\n\n      const value = config[key];\n\n      if (value) {\n        const valueAsString = Array.isArray(value) ? value.join(', ') : String(value);\n        const matches = (0, _pluralize.default)('match', stats[key] || 0, 'es');\n        return `  ${key}: ${_chalk().default.yellow(valueAsString)} - ${matches}`;\n      }\n\n      return null;\n    }).filter(line => line).join('\\n');\n    return testRun.matches.total ? `In ${_chalk().default.bold(config.rootDir)}\\n` + `  ${(0, _pluralize.default)('file', testRun.matches.total || 0, 's')} checked.\\n` + statsMessage : `No files found in ${config.rootDir}.\\n` + `Make sure Jest's configuration does not exclude this directory.` + `\\nTo set up Jest, make sure a package.json file exists.\\n` + `Jest Documentation: ` + `facebook.github.io/jest/docs/configuration.html`;\n  });\n  let dataMessage;\n\n  if (globalConfig.runTestsByPath) {\n    dataMessage = `Files: ${globalConfig.nonFlagArgs.map(p => `\"${p}\"`).join(', ')}`;\n  } else {\n    dataMessage = `Pattern: ${_chalk().default.yellow(globalConfig.testPathPattern)} - 0 matches`;\n  }\n\n  return _chalk().default.bold('No tests found, exiting with code 1') + '\\n' + 'Run with `--passWithNoTests` to exit with code 0' + '\\n' + individualResults.join('\\n') + '\\n' + dataMessage;\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@jest/core/build/getNoTestFoundVerbose.js"],"names":["Object","defineProperty","exports","value","default","getNoTestFoundVerbose","_chalk","data","_interopRequireDefault","require","_pluralize","obj","__esModule","testRunData","globalConfig","individualResults","map","testRun","stats","matches","config","context","statsMessage","keys","key","roots","length","valueAsString","Array","isArray","join","String","yellow","filter","line","total","bold","rootDir","dataMessage","runTestsByPath","nonFlagArgs","p","testPathPattern"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getNoTestFoundVerbose;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _pluralize = _interopRequireDefault(require('./pluralize'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction getNoTestFoundVerbose(testRunData, globalConfig) {\n  const individualResults = testRunData.map(testRun => {\n    const stats = testRun.matches.stats || {};\n    const config = testRun.context.config;\n    const statsMessage = Object.keys(stats)\n      .map(key => {\n        if (key === 'roots' && config.roots.length === 1) {\n          return null;\n        }\n\n        const value = config[key];\n\n        if (value) {\n          const valueAsString = Array.isArray(value)\n            ? value.join(', ')\n            : String(value);\n          const matches = (0, _pluralize.default)(\n            'match',\n            stats[key] || 0,\n            'es'\n          );\n          return `  ${key}: ${_chalk().default.yellow(\n            valueAsString\n          )} - ${matches}`;\n        }\n\n        return null;\n      })\n      .filter(line => line)\n      .join('\\n');\n    return testRun.matches.total\n      ? `In ${_chalk().default.bold(config.rootDir)}\\n` +\n          `  ${(0, _pluralize.default)(\n            'file',\n            testRun.matches.total || 0,\n            's'\n          )} checked.\\n` +\n          statsMessage\n      : `No files found in ${config.rootDir}.\\n` +\n          `Make sure Jest's configuration does not exclude this directory.` +\n          `\\nTo set up Jest, make sure a package.json file exists.\\n` +\n          `Jest Documentation: ` +\n          `facebook.github.io/jest/docs/configuration.html`;\n  });\n  let dataMessage;\n\n  if (globalConfig.runTestsByPath) {\n    dataMessage = `Files: ${globalConfig.nonFlagArgs\n      .map(p => `\"${p}\"`)\n      .join(', ')}`;\n  } else {\n    dataMessage = `Pattern: ${_chalk().default.yellow(\n      globalConfig.testPathPattern\n    )} - 0 matches`;\n  }\n\n  return (\n    _chalk().default.bold('No tests found, exiting with code 1') +\n    '\\n' +\n    'Run with `--passWithNoTests` to exit with code 0' +\n    '\\n' +\n    individualResults.join('\\n') +\n    '\\n' +\n    dataMessage\n  );\n}\n"]},"metadata":{},"sourceType":"script"}