{"ast":null,"code":"var postcss = require('postcss');\n\nmodule.exports = postcss.plugin('postcss-media-minmax', function () {\n  return function (css) {\n    var feature_unit = {\n      'width': 'px',\n      'height': 'px',\n      'device-width': 'px',\n      'device-height': 'px',\n      'aspect-ratio': '',\n      'device-aspect-ratio': '',\n      'color': '',\n      'color-index': '',\n      'monochrome': '',\n      'resolution': 'dpi'\n    }; //支持 min-/max- 前缀的属性\n\n    var feature_name = Object.keys(feature_unit);\n    var step = .001; // smallest even number that won’t break complex queries (1in = 96px)\n\n    var power = {\n      '>': 1,\n      '<': -1\n    };\n    var minmax = {\n      '>': 'min',\n      '<': 'max'\n    };\n\n    function create_query(name, gtlt, eq, value, params) {\n      return value.replace(/([-\\d\\.]+)(.*)/, function (match, number, unit) {\n        var initialNumber = parseFloat(number);\n\n        if (parseFloat(number) || eq) {\n          // if eq is true, then number remains same\n          if (!eq) {\n            // change integer pixels value only on integer pixel\n            if (unit === 'px' && initialNumber === parseInt(number, 10)) {\n              number = initialNumber + power[gtlt];\n            } else {\n              number = Number(Math.round(parseFloat(number) + step * power[gtlt] + 'e6') + 'e-6');\n            }\n          }\n        } else {\n          number = power[gtlt] + feature_unit[name];\n        }\n\n        return '(' + minmax[gtlt] + '-' + name + ': ' + number + unit + ')';\n      });\n    } // 读取 media-feature\n\n\n    css.walkAtRules(function (rule, i) {\n      if (rule.name !== \"media\" && rule.name !== \"custom-media\") {\n        return;\n      }\n      /**\n       * 转换 <mf-name> <|>= <mf-value>\n       *    $1  $2   $3\n       * (width >= 300px) => (min-width: 300px)\n       * (width <= 900px) => (max-width: 900px)\n       */\n      //取值不支持负值\n      //But -0 is always equivalent to 0 in CSS, and so is also accepted as a valid <mq-boolean> value.\n\n\n      rule.params = rule.params.replace(/\\(\\s*([a-z-]+?)\\s*([<>])(=?)\\s*((?:-?\\d*\\.?(?:\\s*\\/?\\s*)?\\d+[a-z]*)?)\\s*\\)/gi, function ($0, $1, $2, $3, $4) {\n        var params = '';\n\n        if (feature_name.indexOf($1) > -1) {\n          return create_query($1, $2, $3, $4, rule.params);\n        } //如果不是指定的属性，不做替换\n\n\n        return $0;\n      });\n      /**\n       * 转换  <mf-value> <|<= <mf-name> <|<= <mf-value>\n       * 转换  <mf-value> >|>= <mf-name> >|>= <mf-value>\n       *   $1  $2$3 $4  $5$6  $7\n       * (500px <= width <= 1200px) => (min-width: 500px) and (max-width: 1200px)\n       * (500px < width <= 1200px) => (min-width: 501px) and (max-width: 1200px)\n       * (900px >= width >= 300px)  => (min-width: 300px) and (max-width: 900px)\n       */\n\n      rule.params = rule.params.replace(/\\(\\s*((?:-?\\d*\\.?(?:\\s*\\/?\\s*)?\\d+[a-z]*)?)\\s*(<|>)(=?)\\s*([a-z-]+)\\s*(<|>)(=?)\\s*((?:-?\\d*\\.?(?:\\s*\\/?\\s*)?\\d+[a-z]*)?)\\s*\\)/gi, function ($0, $1, $2, $3, $4, $5, $6, $7) {\n        if (feature_name.indexOf($4) > -1) {\n          if ($2 === '<' && $5 === '<' || $2 === '>' && $5 === '>') {\n            var min = $2 === '<' ? $1 : $7;\n            var max = $2 === '<' ? $7 : $1; // output differently depended on expression direction\n            // <mf-value> <|<= <mf-name> <|<= <mf-value>\n            // or\n            // <mf-value> >|>= <mf-name> >|>= <mf-value>\n\n            var equals_for_min = $3;\n            var equals_for_max = $6;\n\n            if ($2 === '>') {\n              equals_for_min = $6;\n              equals_for_max = $3;\n            }\n\n            return create_query($4, '>', equals_for_min, min) + ' and ' + create_query($4, '<', equals_for_max, max);\n          }\n        } //如果不是指定的属性，不做替换\n\n\n        return $0;\n      });\n    });\n  };\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-media-minmax/index.js"],"names":["postcss","require","module","exports","plugin","css","feature_unit","feature_name","Object","keys","step","power","minmax","create_query","name","gtlt","eq","value","params","replace","match","number","unit","initialNumber","parseFloat","parseInt","Number","Math","round","walkAtRules","rule","i","$0","$1","$2","$3","$4","indexOf","$5","$6","$7","min","max","equals_for_min","equals_for_max"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiBH,OAAO,CAACI,MAAR,CAAe,sBAAf,EAAuC,YAAY;AAClE,SAAO,UAASC,GAAT,EAAc;AACnB,QAAIC,YAAY,GAAG;AACjB,eAAS,IADQ;AAEjB,gBAAU,IAFO;AAGjB,sBAAgB,IAHC;AAIjB,uBAAiB,IAJA;AAKjB,sBAAgB,EALC;AAMjB,6BAAuB,EANN;AAOjB,eAAS,EAPQ;AAQjB,qBAAe,EARE;AASjB,oBAAc,EATG;AAUjB,oBAAc;AAVG,KAAnB,CADmB,CAcnB;;AACA,QAAIC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYH,YAAZ,CAAnB;AAEA,QAAII,IAAI,GAAG,IAAX,CAjBmB,CAiBF;;AAEjB,QAAIC,KAAK,GAAG;AACV,WAAK,CADK;AAEV,WAAK,CAAC;AAFI,KAAZ;AAKA,QAAIC,MAAM,GAAG;AACX,WAAK,KADM;AAEX,WAAK;AAFM,KAAb;;AAKA,aAASC,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,EAAlC,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqD;AACnD,aAAOD,KAAK,CAACE,OAAN,CAAc,gBAAd,EAAgC,UAAUC,KAAV,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+B;AACpE,YAAIC,aAAa,GAAGC,UAAU,CAACH,MAAD,CAA9B;;AAEA,YAAIG,UAAU,CAACH,MAAD,CAAV,IAAsBL,EAA1B,EAA8B;AAC5B;AACA,cAAI,CAACA,EAAL,EAAS;AACP;AACA,gBAAIM,IAAI,KAAK,IAAT,IAAiBC,aAAa,KAAKE,QAAQ,CAACJ,MAAD,EAAS,EAAT,CAA/C,EAA6D;AAC3DA,cAAAA,MAAM,GAAGE,aAAa,GAAGZ,KAAK,CAACI,IAAD,CAA9B;AACD,aAFD,MAEO;AACLM,cAAAA,MAAM,GAAGK,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWJ,UAAU,CAACH,MAAD,CAAV,GAAqBX,IAAI,GAAGC,KAAK,CAACI,IAAD,CAAjC,GAA0C,IAArD,IAA2D,KAA5D,CAAf;AACD;AACF;AACF,SAVD,MAUO;AACLM,UAAAA,MAAM,GAAGV,KAAK,CAACI,IAAD,CAAL,GAAcT,YAAY,CAACQ,IAAD,CAAnC;AACD;;AAED,eAAO,MAAMF,MAAM,CAACG,IAAD,CAAZ,GAAqB,GAArB,GAA2BD,IAA3B,GAAkC,IAAlC,GAAyCO,MAAzC,GAAkDC,IAAlD,GAAyD,GAAhE;AACD,OAlBM,CAAP;AAmBD,KAjDkB,CAmDnB;;;AACAjB,IAAAA,GAAG,CAACwB,WAAJ,CAAgB,UAASC,IAAT,EAAeC,CAAf,EAAkB;AAChC,UAAID,IAAI,CAAChB,IAAL,KAAc,OAAd,IAAyBgB,IAAI,CAAChB,IAAL,KAAc,cAA3C,EAA2D;AACzD;AACD;AAED;;;;;;AAOA;AACA;;;AAEAgB,MAAAA,IAAI,CAACZ,MAAL,GAAcY,IAAI,CAACZ,MAAL,CAAYC,OAAZ,CAAoB,8EAApB,EAAoG,UAASa,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6B;AAE7I,YAAIlB,MAAM,GAAG,EAAb;;AAEA,YAAIX,YAAY,CAAC8B,OAAb,CAAqBJ,EAArB,IAA2B,CAAC,CAAhC,EAAmC;AACjC,iBAAOpB,YAAY,CAACoB,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBN,IAAI,CAACZ,MAAtB,CAAnB;AACD,SAN4I,CAO7I;;;AACA,eAAOc,EAAP;AACD,OATa,CAAd;AAWA;;;;;;;;;AASAF,MAAAA,IAAI,CAACZ,MAAL,GAAcY,IAAI,CAACZ,MAAL,CAAYC,OAAZ,CAAoB,iIAApB,EAAuJ,UAASa,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BE,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAAyC;AAE5M,YAAIjC,YAAY,CAAC8B,OAAb,CAAqBD,EAArB,IAA2B,CAAC,CAAhC,EAAmC;AACjC,cAAIF,EAAE,KAAK,GAAP,IAAcI,EAAE,KAAK,GAArB,IAA4BJ,EAAE,KAAK,GAAP,IAAcI,EAAE,KAAK,GAArD,EAA0D;AACxD,gBAAIG,GAAG,GAAIP,EAAE,KAAK,GAAR,GAAeD,EAAf,GAAoBO,EAA9B;AACA,gBAAIE,GAAG,GAAIR,EAAE,KAAK,GAAR,GAAeM,EAAf,GAAoBP,EAA9B,CAFwD,CAIxD;AACA;AACA;AACA;;AACA,gBAAIU,cAAc,GAAGR,EAArB;AACA,gBAAIS,cAAc,GAAGL,EAArB;;AAEA,gBAAIL,EAAE,KAAK,GAAX,EAAgB;AACdS,cAAAA,cAAc,GAAGJ,EAAjB;AACAK,cAAAA,cAAc,GAAGT,EAAjB;AACD;;AAED,mBAAOtB,YAAY,CAACuB,EAAD,EAAK,GAAL,EAAUO,cAAV,EAA0BF,GAA1B,CAAZ,GAA6C,OAA7C,GAAuD5B,YAAY,CAACuB,EAAD,EAAK,GAAL,EAAUQ,cAAV,EAA0BF,GAA1B,CAA1E;AACD;AACF,SArB2M,CAsB5M;;;AACA,eAAOV,EAAP;AAED,OAzBa,CAAd;AA2BD,KA9DD;AAgED,GApHD;AAqHD,CAtHgB,CAAjB","sourcesContent":["var postcss = require('postcss');\n\nmodule.exports = postcss.plugin('postcss-media-minmax', function () {\n  return function(css) {\n    var feature_unit = {\n      'width': 'px',\n      'height': 'px',\n      'device-width': 'px',\n      'device-height': 'px',\n      'aspect-ratio': '',\n      'device-aspect-ratio': '',\n      'color': '',\n      'color-index': '',\n      'monochrome': '',\n      'resolution': 'dpi'\n    };\n\n    //支持 min-/max- 前缀的属性\n    var feature_name = Object.keys(feature_unit);\n\n    var step = .001; // smallest even number that won’t break complex queries (1in = 96px)\n\n    var power = {\n      '>': 1,\n      '<': -1\n    };\n\n    var minmax = {\n      '>': 'min',\n      '<': 'max'\n    };\n\n    function create_query(name, gtlt, eq, value, params) {\n      return value.replace(/([-\\d\\.]+)(.*)/, function (match, number, unit) {\n        var initialNumber = parseFloat(number);\n\n        if (parseFloat(number) || eq) {\n          // if eq is true, then number remains same\n          if (!eq) {\n            // change integer pixels value only on integer pixel\n            if (unit === 'px' && initialNumber === parseInt(number, 10)) {\n              number = initialNumber + power[gtlt];\n            } else {\n              number = Number(Math.round(parseFloat(number) + step * power[gtlt] + 'e6')+'e-6');\n            }\n          }\n        } else {\n          number = power[gtlt] + feature_unit[name];\n        }\n\n        return '(' + minmax[gtlt] + '-' + name + ': ' + number + unit + ')';\n      });\n    }\n\n    // 读取 media-feature\n    css.walkAtRules(function(rule, i) {\n      if (rule.name !== \"media\" && rule.name !== \"custom-media\") {\n        return\n      }\n\n      /**\n       * 转换 <mf-name> <|>= <mf-value>\n       *    $1  $2   $3\n       * (width >= 300px) => (min-width: 300px)\n       * (width <= 900px) => (max-width: 900px)\n       */\n\n      //取值不支持负值\n      //But -0 is always equivalent to 0 in CSS, and so is also accepted as a valid <mq-boolean> value.\n\n      rule.params = rule.params.replace(/\\(\\s*([a-z-]+?)\\s*([<>])(=?)\\s*((?:-?\\d*\\.?(?:\\s*\\/?\\s*)?\\d+[a-z]*)?)\\s*\\)/gi, function($0, $1, $2, $3, $4) {\n\n        var params = '';\n\n        if (feature_name.indexOf($1) > -1) {\n          return create_query($1, $2, $3, $4, rule.params);\n        }\n        //如果不是指定的属性，不做替换\n        return $0;\n      })\n\n      /**\n       * 转换  <mf-value> <|<= <mf-name> <|<= <mf-value>\n       * 转换  <mf-value> >|>= <mf-name> >|>= <mf-value>\n       *   $1  $2$3 $4  $5$6  $7\n       * (500px <= width <= 1200px) => (min-width: 500px) and (max-width: 1200px)\n       * (500px < width <= 1200px) => (min-width: 501px) and (max-width: 1200px)\n       * (900px >= width >= 300px)  => (min-width: 300px) and (max-width: 900px)\n       */\n\n      rule.params = rule.params.replace(/\\(\\s*((?:-?\\d*\\.?(?:\\s*\\/?\\s*)?\\d+[a-z]*)?)\\s*(<|>)(=?)\\s*([a-z-]+)\\s*(<|>)(=?)\\s*((?:-?\\d*\\.?(?:\\s*\\/?\\s*)?\\d+[a-z]*)?)\\s*\\)/gi, function($0, $1, $2, $3, $4, $5, $6, $7) {\n\n        if (feature_name.indexOf($4) > -1) {\n          if ($2 === '<' && $5 === '<' || $2 === '>' && $5 === '>') {\n            var min = ($2 === '<') ? $1 : $7;\n            var max = ($2 === '<') ? $7 : $1;\n\n            // output differently depended on expression direction\n            // <mf-value> <|<= <mf-name> <|<= <mf-value>\n            // or\n            // <mf-value> >|>= <mf-name> >|>= <mf-value>\n            var equals_for_min = $3;\n            var equals_for_max = $6;\n\n            if ($2 === '>') {\n              equals_for_min = $6;\n              equals_for_max = $3;\n            }\n\n            return create_query($4, '>', equals_for_min, min) + ' and ' + create_query($4, '<', equals_for_max, max);\n          }\n        }\n        //如果不是指定的属性，不做替换\n        return $0;\n\n      });\n\n    });\n\n  }\n});\n"]},"metadata":{},"sourceType":"script"}