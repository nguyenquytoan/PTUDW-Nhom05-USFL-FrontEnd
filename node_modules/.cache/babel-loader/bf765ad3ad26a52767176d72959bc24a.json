{"ast":null,"code":"\"use strict\";\n/* eslint-disable no-unused-expressions */\n\n() => `jsdom 7.x onward only works on Node.js 4 or newer: https://github.com/tmpvar/jsdom#install`;\n/* eslint-enable no-unused-expressions */\n\n\nconst fs = require(\"fs\");\n\nconst path = require(\"path\");\n\nconst {\n  CookieJar\n} = require(\"tough-cookie\");\n\nconst MIMEType = require(\"whatwg-mimetype\");\n\nconst {\n  toFileUrl\n} = require(\"./jsdom/utils\");\n\nconst documentFeatures = require(\"./jsdom/browser/documentfeatures\");\n\nconst {\n  domToHtml\n} = require(\"./jsdom/browser/domtohtml\");\n\nconst Window = require(\"./jsdom/browser/Window\");\n\nconst resourceLoader = require(\"./jsdom/browser/resource-loader\");\n\nconst VirtualConsole = require(\"./jsdom/virtual-console\");\n\nconst idlUtils = require(\"./jsdom/living/generated/utils\");\n\nconst Blob = require(\"./jsdom/living/generated/Blob\");\n\nconst whatwgURL = require(\"whatwg-url\");\n\nrequire(\"./jsdom/living\"); // Enable living standard features\n\n/* eslint-disable no-restricted-modules */\n// TODO: stop using the built-in URL in favor of the spec-compliant whatwg-url package\n// This legacy usage is in the process of being purged.\n\n\nconst URL = require(\"url\");\n/* eslint-enable no-restricted-modules */\n\n\nconst canReadFilesFromFS = Boolean(fs.readFile); // in a browserify environment, this isn't present\n\nexports.createVirtualConsole = function (options) {\n  return new VirtualConsole(options);\n};\n\nexports.getVirtualConsole = function (window) {\n  return window._virtualConsole;\n};\n\nexports.createCookieJar = function () {\n  return new CookieJar(null, {\n    looseMode: true\n  });\n};\n\nexports.nodeLocation = function (node) {\n  return idlUtils.implForWrapper(node).__location;\n};\n\nexports.reconfigureWindow = function (window, newProps) {\n  if (\"top\" in newProps) {\n    window._top = newProps.top;\n  }\n};\n\nexports.changeURL = function (window, urlString) {\n  const doc = idlUtils.implForWrapper(window._document);\n  const url = whatwgURL.parseURL(urlString);\n\n  if (url === null) {\n    throw new TypeError(`Could not parse \"${urlString}\" as a URL`);\n  }\n\n  doc._URL = url;\n  doc.origin = whatwgURL.serializeURLOrigin(doc._URL);\n}; // Proxy to features module\n\n\nObject.defineProperty(exports, \"defaultDocumentFeatures\", {\n  enumerable: true,\n  configurable: true,\n\n  get() {\n    return documentFeatures.defaultDocumentFeatures;\n  },\n\n  set(v) {\n    documentFeatures.defaultDocumentFeatures = v;\n  }\n\n});\n\nexports.jsdom = function (html, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  if (options.parsingMode === undefined || options.parsingMode === \"auto\") {\n    options.parsingMode = \"html\";\n  }\n\n  if (options.parsingMode !== \"html\" && options.parsingMode !== \"xml\") {\n    throw new RangeError(`Invalid parsingMode option ${JSON.stringify(options.parsingMode)}; must be either \"html\", ` + `\"xml\", \"auto\", or undefined`);\n  }\n\n  options.encoding = options.encoding || \"UTF-8\";\n  setGlobalDefaultConfig(options); // Back-compat hack: we have previously suggested nesting these under document, for jsdom.env at least.\n  // So we need to support that.\n\n  if (options.document) {\n    if (options.document.cookie !== undefined) {\n      options.cookie = options.document.cookie;\n    }\n\n    if (options.document.referrer !== undefined) {\n      options.referrer = options.document.referrer;\n    }\n  } // Adapt old API `features: { ProcessExternalResources: [\"script\"] }` to the runScripts option.\n  // This is part of a larger effort to eventually remove the document features infrastructure entirely. It's unclear\n  // whether we'll kill the old API or document features first, but as long as old API survives, attempts to kill\n  // document features will need this kind of adapter.\n\n\n  if (!options.features) {\n    options.features = exports.defaultDocumentFeatures;\n  }\n\n  if (options.features.ProcessExternalResources === undefined) {\n    options.features.ProcessExternalResources = [\"script\"];\n  }\n\n  const ProcessExternalResources = options.features.ProcessExternalResources || [];\n\n  if (ProcessExternalResources === \"script\" || ProcessExternalResources.includes && ProcessExternalResources.includes(\"script\")) {\n    options.runScripts = \"dangerously\";\n  }\n\n  if (options.pretendToBeVisual !== undefined) {\n    options.pretendToBeVisual = Boolean(options.pretendToBeVisual);\n  } else {\n    options.pretendToBeVisual = false;\n  }\n\n  options.storageQuota = options.storageQuota || 5000000; // List options explicitly to be clear which are passed through\n\n  const window = new Window({\n    parsingMode: options.parsingMode,\n    parseOptions: options.parseOptions,\n    contentType: options.contentType,\n    encoding: options.encoding,\n    url: options.url,\n    lastModified: options.lastModified,\n    referrer: options.referrer,\n    cookieJar: options.cookieJar,\n    cookie: options.cookie,\n    resourceLoader: options.resourceLoader,\n    deferClose: options.deferClose,\n    concurrentNodeIterators: options.concurrentNodeIterators,\n    virtualConsole: options.virtualConsole,\n    pool: options.pool,\n    agent: options.agent,\n    agentClass: options.agentClass,\n    agentOptions: options.agentOptions,\n    strictSSL: options.strictSSL,\n    proxy: options.proxy,\n    userAgent: options.userAgent,\n    runScripts: options.runScripts,\n    pretendToBeVisual: options.pretendToBeVisual,\n    storageQuota: options.storageQuota\n  });\n  const documentImpl = idlUtils.implForWrapper(window.document);\n  documentFeatures.applyDocumentFeatures(documentImpl, options.features);\n\n  if (options.created) {\n    options.created(null, window.document.defaultView);\n  }\n\n  if (options.parsingMode === \"html\") {\n    if (html === undefined || html === \"\") {\n      html = \"<html><head></head><body></body></html>\";\n    }\n\n    window.document.write(html);\n  } else if (options.parsingMode === \"xml\") {\n    if (html !== undefined) {\n      documentImpl._htmlToDom.appendToDocument(html, documentImpl);\n    }\n  }\n\n  if (window.document.close && !options.deferClose) {\n    window.document.close();\n  }\n\n  return window.document;\n};\n\nexports.jQueryify = exports.jsdom.jQueryify = function (window, jqueryUrl, callback) {\n  if (!window || !window.document) {\n    return;\n  }\n\n  const implImpl = idlUtils.implForWrapper(window.document.implementation);\n  const oldFeatures = implImpl._features;\n  const oldRunScripts = window._runScripts;\n\n  implImpl._addFeature(\"FetchExternalResources\", [\"script\"]);\n\n  documentFeatures.contextifyWindow(idlUtils.implForWrapper(window.document)._global);\n  window._runScripts = \"dangerously\";\n  const scriptEl = window.document.createElement(\"script\");\n  scriptEl.className = \"jsdom\";\n  scriptEl.src = jqueryUrl;\n\n  scriptEl.onload = scriptEl.onerror = () => {\n    implImpl._features = oldFeatures;\n    window._runScripts = oldRunScripts; // Can't un-contextify the window. Oh well. That's what we get for such magic behavior in old API.\n\n    if (callback) {\n      callback(window, window.jQuery);\n    }\n  };\n\n  window.document.body.appendChild(scriptEl);\n};\n\nexports.env = exports.jsdom.env = function () {\n  const config = getConfigFromEnvArguments(arguments);\n  let req = null;\n\n  if (config.file && canReadFilesFromFS) {\n    req = resourceLoader.readFile(config.file, {\n      defaultEncoding: config.defaultEncoding,\n      detectMetaCharset: true\n    }, (err, text, res) => {\n      if (err) {\n        reportInitError(err, config);\n        return;\n      }\n\n      const contentType = new MIMEType(res.headers[\"content-type\"]);\n      config.encoding = contentType.parameters.get(\"charset\");\n      setParsingModeFromExtension(config, config.file);\n      config.html = text;\n      processHTML(config);\n    });\n  } else if (config.html !== undefined) {\n    processHTML(config);\n  } else if (config.url) {\n    req = handleUrl(config);\n  } else if (config.somethingToAutodetect !== undefined) {\n    const url = URL.parse(config.somethingToAutodetect);\n\n    if (url.protocol && url.hostname) {\n      config.url = config.somethingToAutodetect;\n      req = handleUrl(config.somethingToAutodetect);\n    } else if (canReadFilesFromFS) {\n      try {\n        req = resourceLoader.readFile(config.somethingToAutodetect, {\n          defaultEncoding: config.defaultEncoding,\n          detectMetaCharset: true\n        }, (err, text, res) => {\n          if (err) {\n            if (err.code === \"ENOENT\" || err.code === \"ENAMETOOLONG\" || err.code === \"ERR_INVALID_ARG_TYPE\") {\n              config.html = config.somethingToAutodetect;\n              processHTML(config);\n            } else {\n              reportInitError(err, config);\n            }\n          } else {\n            const contentType = new MIMEType(res.headers[\"content-type\"]);\n            config.encoding = contentType.parameters.get(\"charset\");\n            setParsingModeFromExtension(config, config.somethingToAutodetect);\n            config.html = text;\n            config.url = toFileUrl(config.somethingToAutodetect);\n            processHTML(config);\n          }\n        });\n      } catch (err) {\n        config.html = config.somethingToAutodetect;\n        processHTML(config);\n      }\n    } else {\n      config.html = config.somethingToAutodetect;\n      processHTML(config);\n    }\n  }\n\n  function handleUrl() {\n    config.cookieJar = config.cookieJar || exports.createCookieJar();\n    const options = {\n      defaultEncoding: config.defaultEncoding,\n      detectMetaCharset: true,\n      headers: config.headers,\n      pool: config.pool,\n      strictSSL: config.strictSSL,\n      proxy: config.proxy,\n      cookieJar: config.cookieJar,\n      userAgent: config.userAgent,\n      agent: config.agent,\n      agentClass: config.agentClass,\n      agentOptions: config.agentOptions\n    };\n    const {\n      fragment\n    } = whatwgURL.parseURL(config.url);\n    return resourceLoader.download(config.url, options, (err, responseText, res) => {\n      if (err) {\n        reportInitError(err, config);\n        return;\n      } // The use of `res.request.uri.href` ensures that `window.location.href`\n      // is updated when `request` follows redirects.\n\n\n      config.html = responseText;\n      config.url = res.request.uri.href;\n\n      if (fragment) {\n        config.url += `#${fragment}`;\n      }\n\n      if (res.headers[\"last-modified\"]) {\n        config.lastModified = new Date(res.headers[\"last-modified\"]);\n      }\n\n      const contentType = new MIMEType(res.headers[\"content-type\"]);\n\n      if (config.parsingMode === \"auto\") {\n        if (contentType.isXML()) {\n          config.parsingMode = \"xml\";\n        }\n      }\n\n      config.contentType = contentType.essence;\n      config.encoding = contentType.parameters.get(\"charset\");\n      processHTML(config);\n    });\n  }\n\n  return req;\n};\n\nexports.serializeDocument = function (doc) {\n  return domToHtml([idlUtils.implForWrapper(doc)]);\n};\n\nexports.blobToBuffer = function (blob) {\n  return Blob.is(blob) && idlUtils.implForWrapper(blob)._buffer || undefined;\n};\n\nexports.evalVMScript = (window, script) => {\n  return script.runInContext(idlUtils.implForWrapper(window._document)._global);\n};\n\nfunction processHTML(config) {\n  const window = exports.jsdom(config.html, config).defaultView;\n  const implImpl = idlUtils.implForWrapper(window.document.implementation);\n  const features = JSON.parse(JSON.stringify(implImpl._features));\n  let docsLoaded = 0;\n  const totalDocs = config.scripts.length + config.src.length;\n\n  if (!window || !window.document) {\n    reportInitError(new Error(\"JSDOM: a window object could not be created.\"), config);\n    return;\n  }\n\n  function scriptComplete() {\n    docsLoaded++;\n\n    if (docsLoaded >= totalDocs) {\n      implImpl._features = features;\n      process.nextTick(() => {\n        if (config.onload) {\n          config.onload(window);\n        }\n\n        if (config.done) {\n          config.done(null, window);\n        }\n      });\n    }\n  }\n\n  function handleScriptError() {\n    // nextTick so that an exception within scriptComplete won't cause\n    // another script onerror (which would be an infinite loop)\n    process.nextTick(scriptComplete);\n  }\n\n  if (config.scripts.length > 0 || config.src.length > 0) {\n    implImpl._addFeature(\"FetchExternalResources\", [\"script\"]);\n\n    for (const scriptSrc of config.scripts) {\n      const script = window.document.createElement(\"script\");\n      script.className = \"jsdom\";\n      script.onload = scriptComplete;\n      script.onerror = handleScriptError;\n      script.src = scriptSrc;\n      window.document.body.appendChild(script);\n    }\n\n    for (const scriptText of config.src) {\n      const script = window.document.createElement(\"script\");\n      script.onload = scriptComplete;\n      script.onerror = handleScriptError;\n      script.text = scriptText;\n      window.document.documentElement.appendChild(script);\n      window.document.documentElement.removeChild(script);\n    }\n  } else if (window.document.readyState === \"complete\") {\n    scriptComplete();\n  } else {\n    window.addEventListener(\"load\", scriptComplete);\n  }\n}\n\nfunction setGlobalDefaultConfig(config) {\n  config.parseOptions = {\n    locationInfo: true\n  };\n  config.pool = config.pool !== undefined ? config.pool : {\n    maxSockets: 6\n  };\n  config.agentOptions = config.agentOptions !== undefined ? config.agentOptions : {\n    keepAlive: true,\n    keepAliveMsecs: 115 * 1000\n  };\n  config.strictSSL = config.strictSSL !== undefined ? config.strictSSL : true;\n  config.userAgent = config.userAgent || `Node.js (${process.platform}; U; rv:${process.version}) AppleWebKit/537.36 (KHTML, like Gecko)`;\n}\n\nfunction getConfigFromEnvArguments(args) {\n  const config = {};\n\n  if (typeof args[0] === \"object\") {\n    Object.assign(config, args[0]);\n  } else {\n    for (const arg of args) {\n      switch (typeof arg) {\n        case \"string\":\n          config.somethingToAutodetect = arg;\n          break;\n\n        case \"function\":\n          config.done = arg;\n          break;\n\n        case \"object\":\n          if (Array.isArray(arg)) {\n            config.scripts = arg;\n          } else {\n            Object.assign(config, arg);\n          }\n\n          break;\n      }\n    }\n  }\n\n  if (!config.done && !config.created && !config.onload) {\n    throw new Error(\"Must pass a \\\"created\\\", \\\"onload\\\", or \\\"done\\\" option, or a callback, to jsdom.env\");\n  }\n\n  if (config.somethingToAutodetect === undefined && config.html === undefined && !config.file && !config.url) {\n    throw new Error(\"Must pass a \\\"html\\\", \\\"file\\\", or \\\"url\\\" option, or a string, to jsdom.env\");\n  }\n\n  config.scripts = ensureArray(config.scripts);\n  config.src = ensureArray(config.src);\n  config.parsingMode = config.parsingMode || \"auto\";\n  config.features = config.features || {\n    FetchExternalResources: false,\n    SkipExternalResources: false,\n    ProcessExternalResources: false // needed since we'll process it inside jsdom.jsdom()\n\n  };\n\n  if (!config.url && config.file) {\n    config.url = toFileUrl(config.file);\n  }\n\n  config.defaultEncoding = config.defaultEncoding || \"windows-1252\";\n  setGlobalDefaultConfig(config);\n\n  if (config.scripts.length > 0 || config.src.length > 0) {\n    config.features.ProcessExternalResources = [\"script\"];\n  }\n\n  return config;\n}\n\nfunction reportInitError(err, config) {\n  if (config.created) {\n    config.created(err);\n  }\n\n  if (config.done) {\n    config.done(err);\n  }\n}\n\nfunction ensureArray(value) {\n  let array = value || [];\n\n  if (typeof array === \"string\") {\n    array = [array];\n  }\n\n  return array;\n}\n\nfunction setParsingModeFromExtension(config, filename) {\n  if (config.parsingMode === \"auto\") {\n    const ext = path.extname(filename);\n\n    if (ext === \".xhtml\" || ext === \".xml\") {\n      config.parsingMode = \"xml\";\n    }\n  }\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jsdom/lib/old-api.js"],"names":["fs","require","path","CookieJar","MIMEType","toFileUrl","documentFeatures","domToHtml","Window","resourceLoader","VirtualConsole","idlUtils","Blob","whatwgURL","URL","canReadFilesFromFS","Boolean","readFile","exports","createVirtualConsole","options","getVirtualConsole","window","_virtualConsole","createCookieJar","looseMode","nodeLocation","node","implForWrapper","__location","reconfigureWindow","newProps","_top","top","changeURL","urlString","doc","_document","url","parseURL","TypeError","_URL","origin","serializeURLOrigin","Object","defineProperty","enumerable","configurable","get","defaultDocumentFeatures","set","v","jsdom","html","undefined","parsingMode","RangeError","JSON","stringify","encoding","setGlobalDefaultConfig","document","cookie","referrer","features","ProcessExternalResources","includes","runScripts","pretendToBeVisual","storageQuota","parseOptions","contentType","lastModified","cookieJar","deferClose","concurrentNodeIterators","virtualConsole","pool","agent","agentClass","agentOptions","strictSSL","proxy","userAgent","documentImpl","applyDocumentFeatures","created","defaultView","write","_htmlToDom","appendToDocument","close","jQueryify","jqueryUrl","callback","implImpl","implementation","oldFeatures","_features","oldRunScripts","_runScripts","_addFeature","contextifyWindow","_global","scriptEl","createElement","className","src","onload","onerror","jQuery","body","appendChild","env","config","getConfigFromEnvArguments","arguments","req","file","defaultEncoding","detectMetaCharset","err","text","res","reportInitError","headers","parameters","setParsingModeFromExtension","processHTML","handleUrl","somethingToAutodetect","parse","protocol","hostname","code","fragment","download","responseText","request","uri","href","Date","isXML","essence","serializeDocument","blobToBuffer","blob","is","_buffer","evalVMScript","script","runInContext","docsLoaded","totalDocs","scripts","length","Error","scriptComplete","process","nextTick","done","handleScriptError","scriptSrc","scriptText","documentElement","removeChild","readyState","addEventListener","locationInfo","maxSockets","keepAlive","keepAliveMsecs","platform","version","args","assign","arg","Array","isArray","ensureArray","FetchExternalResources","SkipExternalResources","value","array","filename","ext","extname"],"mappings":"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","sourcesContent":["\"use strict\";\n/* eslint-disable no-unused-expressions */\n() => `jsdom 7.x onward only works on Node.js 4 or newer: https://github.com/tmpvar/jsdom#install`;\n/* eslint-enable no-unused-expressions */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst { CookieJar } = require(\"tough-cookie\");\nconst MIMEType = require(\"whatwg-mimetype\");\n\nconst { toFileUrl } = require(\"./jsdom/utils\");\nconst documentFeatures = require(\"./jsdom/browser/documentfeatures\");\nconst { domToHtml } = require(\"./jsdom/browser/domtohtml\");\nconst Window = require(\"./jsdom/browser/Window\");\nconst resourceLoader = require(\"./jsdom/browser/resource-loader\");\nconst VirtualConsole = require(\"./jsdom/virtual-console\");\nconst idlUtils = require(\"./jsdom/living/generated/utils\");\nconst Blob = require(\"./jsdom/living/generated/Blob\");\n\nconst whatwgURL = require(\"whatwg-url\");\n\nrequire(\"./jsdom/living\"); // Enable living standard features\n\n/* eslint-disable no-restricted-modules */\n// TODO: stop using the built-in URL in favor of the spec-compliant whatwg-url package\n// This legacy usage is in the process of being purged.\nconst URL = require(\"url\");\n/* eslint-enable no-restricted-modules */\n\nconst canReadFilesFromFS = Boolean(fs.readFile); // in a browserify environment, this isn't present\n\nexports.createVirtualConsole = function (options) {\n  return new VirtualConsole(options);\n};\n\nexports.getVirtualConsole = function (window) {\n  return window._virtualConsole;\n};\n\nexports.createCookieJar = function () {\n  return new CookieJar(null, { looseMode: true });\n};\n\nexports.nodeLocation = function (node) {\n  return idlUtils.implForWrapper(node).__location;\n};\n\nexports.reconfigureWindow = function (window, newProps) {\n  if (\"top\" in newProps) {\n    window._top = newProps.top;\n  }\n};\n\nexports.changeURL = function (window, urlString) {\n  const doc = idlUtils.implForWrapper(window._document);\n\n  const url = whatwgURL.parseURL(urlString);\n\n  if (url === null) {\n    throw new TypeError(`Could not parse \"${urlString}\" as a URL`);\n  }\n\n  doc._URL = url;\n  doc.origin = whatwgURL.serializeURLOrigin(doc._URL);\n};\n\n// Proxy to features module\nObject.defineProperty(exports, \"defaultDocumentFeatures\", {\n  enumerable: true,\n  configurable: true,\n  get() {\n    return documentFeatures.defaultDocumentFeatures;\n  },\n  set(v) {\n    documentFeatures.defaultDocumentFeatures = v;\n  }\n});\n\nexports.jsdom = function (html, options) {\n  if (options === undefined) {\n    options = {};\n  }\n  if (options.parsingMode === undefined || options.parsingMode === \"auto\") {\n    options.parsingMode = \"html\";\n  }\n\n  if (options.parsingMode !== \"html\" && options.parsingMode !== \"xml\") {\n    throw new RangeError(`Invalid parsingMode option ${JSON.stringify(options.parsingMode)}; must be either \"html\", ` +\n      `\"xml\", \"auto\", or undefined`);\n  }\n\n  options.encoding = options.encoding || \"UTF-8\";\n\n  setGlobalDefaultConfig(options);\n\n  // Back-compat hack: we have previously suggested nesting these under document, for jsdom.env at least.\n  // So we need to support that.\n  if (options.document) {\n    if (options.document.cookie !== undefined) {\n      options.cookie = options.document.cookie;\n    }\n    if (options.document.referrer !== undefined) {\n      options.referrer = options.document.referrer;\n    }\n  }\n\n  // Adapt old API `features: { ProcessExternalResources: [\"script\"] }` to the runScripts option.\n  // This is part of a larger effort to eventually remove the document features infrastructure entirely. It's unclear\n  // whether we'll kill the old API or document features first, but as long as old API survives, attempts to kill\n  // document features will need this kind of adapter.\n  if (!options.features) {\n    options.features = exports.defaultDocumentFeatures;\n  }\n  if (options.features.ProcessExternalResources === undefined) {\n    options.features.ProcessExternalResources = [\"script\"];\n  }\n  const ProcessExternalResources = options.features.ProcessExternalResources || [];\n  if (ProcessExternalResources === \"script\" ||\n      (ProcessExternalResources.includes && ProcessExternalResources.includes(\"script\"))) {\n    options.runScripts = \"dangerously\";\n  }\n\n  if (options.pretendToBeVisual !== undefined) {\n    options.pretendToBeVisual = Boolean(options.pretendToBeVisual);\n  } else {\n    options.pretendToBeVisual = false;\n  }\n\n  options.storageQuota = options.storageQuota || 5000000;\n\n  // List options explicitly to be clear which are passed through\n  const window = new Window({\n    parsingMode: options.parsingMode,\n    parseOptions: options.parseOptions,\n    contentType: options.contentType,\n    encoding: options.encoding,\n    url: options.url,\n    lastModified: options.lastModified,\n    referrer: options.referrer,\n    cookieJar: options.cookieJar,\n    cookie: options.cookie,\n    resourceLoader: options.resourceLoader,\n    deferClose: options.deferClose,\n    concurrentNodeIterators: options.concurrentNodeIterators,\n    virtualConsole: options.virtualConsole,\n    pool: options.pool,\n    agent: options.agent,\n    agentClass: options.agentClass,\n    agentOptions: options.agentOptions,\n    strictSSL: options.strictSSL,\n    proxy: options.proxy,\n    userAgent: options.userAgent,\n    runScripts: options.runScripts,\n    pretendToBeVisual: options.pretendToBeVisual,\n    storageQuota: options.storageQuota\n  });\n\n  const documentImpl = idlUtils.implForWrapper(window.document);\n  documentFeatures.applyDocumentFeatures(documentImpl, options.features);\n\n  if (options.created) {\n    options.created(null, window.document.defaultView);\n  }\n\n  if (options.parsingMode === \"html\") {\n    if (html === undefined || html === \"\") {\n      html = \"<html><head></head><body></body></html>\";\n    }\n\n    window.document.write(html);\n  } else if (options.parsingMode === \"xml\") {\n    if (html !== undefined) {\n      documentImpl._htmlToDom.appendToDocument(html, documentImpl);\n    }\n  }\n\n  if (window.document.close && !options.deferClose) {\n    window.document.close();\n  }\n\n  return window.document;\n};\n\nexports.jQueryify = exports.jsdom.jQueryify = function (window, jqueryUrl, callback) {\n  if (!window || !window.document) {\n    return;\n  }\n\n  const implImpl = idlUtils.implForWrapper(window.document.implementation);\n  const oldFeatures = implImpl._features;\n  const oldRunScripts = window._runScripts;\n\n  implImpl._addFeature(\"FetchExternalResources\", [\"script\"]);\n  documentFeatures.contextifyWindow(idlUtils.implForWrapper(window.document)._global);\n  window._runScripts = \"dangerously\";\n\n  const scriptEl = window.document.createElement(\"script\");\n  scriptEl.className = \"jsdom\";\n  scriptEl.src = jqueryUrl;\n  scriptEl.onload = scriptEl.onerror = () => {\n    implImpl._features = oldFeatures;\n    window._runScripts = oldRunScripts;\n    // Can't un-contextify the window. Oh well. That's what we get for such magic behavior in old API.\n\n    if (callback) {\n      callback(window, window.jQuery);\n    }\n  };\n\n  window.document.body.appendChild(scriptEl);\n};\n\nexports.env = exports.jsdom.env = function () {\n  const config = getConfigFromEnvArguments(arguments);\n  let req = null;\n\n  if (config.file && canReadFilesFromFS) {\n    req = resourceLoader.readFile(\n      config.file,\n      { defaultEncoding: config.defaultEncoding, detectMetaCharset: true },\n      (err, text, res) => {\n        if (err) {\n          reportInitError(err, config);\n          return;\n        }\n\n        const contentType = new MIMEType(res.headers[\"content-type\"]);\n        config.encoding = contentType.parameters.get(\"charset\");\n        setParsingModeFromExtension(config, config.file);\n\n        config.html = text;\n        processHTML(config);\n      }\n    );\n  } else if (config.html !== undefined) {\n    processHTML(config);\n  } else if (config.url) {\n    req = handleUrl(config);\n  } else if (config.somethingToAutodetect !== undefined) {\n    const url = URL.parse(config.somethingToAutodetect);\n    if (url.protocol && url.hostname) {\n      config.url = config.somethingToAutodetect;\n      req = handleUrl(config.somethingToAutodetect);\n    } else if (canReadFilesFromFS) {\n      try {\n        req = resourceLoader.readFile(\n          config.somethingToAutodetect,\n          { defaultEncoding: config.defaultEncoding, detectMetaCharset: true },\n          (err, text, res) => {\n            if (err) {\n              if (err.code === \"ENOENT\" || err.code === \"ENAMETOOLONG\" || err.code === \"ERR_INVALID_ARG_TYPE\") {\n                config.html = config.somethingToAutodetect;\n                processHTML(config);\n              } else {\n                reportInitError(err, config);\n              }\n            } else {\n              const contentType = new MIMEType(res.headers[\"content-type\"]);\n              config.encoding = contentType.parameters.get(\"charset\");\n              setParsingModeFromExtension(config, config.somethingToAutodetect);\n\n              config.html = text;\n              config.url = toFileUrl(config.somethingToAutodetect);\n              processHTML(config);\n            }\n          }\n        );\n      } catch (err) {\n        config.html = config.somethingToAutodetect;\n        processHTML(config);\n      }\n    } else {\n      config.html = config.somethingToAutodetect;\n      processHTML(config);\n    }\n  }\n\n  function handleUrl() {\n    config.cookieJar = config.cookieJar || exports.createCookieJar();\n\n    const options = {\n      defaultEncoding: config.defaultEncoding,\n      detectMetaCharset: true,\n      headers: config.headers,\n      pool: config.pool,\n      strictSSL: config.strictSSL,\n      proxy: config.proxy,\n      cookieJar: config.cookieJar,\n      userAgent: config.userAgent,\n      agent: config.agent,\n      agentClass: config.agentClass,\n      agentOptions: config.agentOptions\n    };\n\n    const { fragment } = whatwgURL.parseURL(config.url);\n\n    return resourceLoader.download(config.url, options, (err, responseText, res) => {\n      if (err) {\n        reportInitError(err, config);\n        return;\n      }\n\n      // The use of `res.request.uri.href` ensures that `window.location.href`\n      // is updated when `request` follows redirects.\n      config.html = responseText;\n      config.url = res.request.uri.href;\n      if (fragment) {\n        config.url += `#${fragment}`;\n      }\n\n      if (res.headers[\"last-modified\"]) {\n        config.lastModified = new Date(res.headers[\"last-modified\"]);\n      }\n\n      const contentType = new MIMEType(res.headers[\"content-type\"]);\n      if (config.parsingMode === \"auto\") {\n        if (contentType.isXML()) {\n          config.parsingMode = \"xml\";\n        }\n      }\n      config.contentType = contentType.essence;\n      config.encoding = contentType.parameters.get(\"charset\");\n\n      processHTML(config);\n    });\n  }\n  return req;\n};\n\nexports.serializeDocument = function (doc) {\n  return domToHtml([idlUtils.implForWrapper(doc)]);\n};\n\nexports.blobToBuffer = function (blob) {\n  return (Blob.is(blob) && idlUtils.implForWrapper(blob)._buffer) || undefined;\n};\n\nexports.evalVMScript = (window, script) => {\n  return script.runInContext(idlUtils.implForWrapper(window._document)._global);\n};\n\nfunction processHTML(config) {\n  const window = exports.jsdom(config.html, config).defaultView;\n  const implImpl = idlUtils.implForWrapper(window.document.implementation);\n  const features = JSON.parse(JSON.stringify(implImpl._features));\n\n  let docsLoaded = 0;\n  const totalDocs = config.scripts.length + config.src.length;\n\n  if (!window || !window.document) {\n    reportInitError(new Error(\"JSDOM: a window object could not be created.\"), config);\n    return;\n  }\n\n  function scriptComplete() {\n    docsLoaded++;\n\n    if (docsLoaded >= totalDocs) {\n      implImpl._features = features;\n\n      process.nextTick(() => {\n        if (config.onload) {\n          config.onload(window);\n        }\n        if (config.done) {\n          config.done(null, window);\n        }\n      });\n    }\n  }\n\n  function handleScriptError() {\n    // nextTick so that an exception within scriptComplete won't cause\n    // another script onerror (which would be an infinite loop)\n    process.nextTick(scriptComplete);\n  }\n\n  if (config.scripts.length > 0 || config.src.length > 0) {\n    implImpl._addFeature(\"FetchExternalResources\", [\"script\"]);\n\n    for (const scriptSrc of config.scripts) {\n      const script = window.document.createElement(\"script\");\n      script.className = \"jsdom\";\n      script.onload = scriptComplete;\n      script.onerror = handleScriptError;\n      script.src = scriptSrc;\n\n      window.document.body.appendChild(script);\n    }\n\n    for (const scriptText of config.src) {\n      const script = window.document.createElement(\"script\");\n      script.onload = scriptComplete;\n      script.onerror = handleScriptError;\n      script.text = scriptText;\n\n      window.document.documentElement.appendChild(script);\n      window.document.documentElement.removeChild(script);\n    }\n  } else if (window.document.readyState === \"complete\") {\n    scriptComplete();\n  } else {\n    window.addEventListener(\"load\", scriptComplete);\n  }\n}\n\nfunction setGlobalDefaultConfig(config) {\n  config.parseOptions = { locationInfo: true };\n\n  config.pool = config.pool !== undefined ? config.pool : { maxSockets: 6 };\n\n  config.agentOptions = config.agentOptions !== undefined ?\n                        config.agentOptions :\n                        { keepAlive: true, keepAliveMsecs: 115 * 1000 };\n\n  config.strictSSL = config.strictSSL !== undefined ? config.strictSSL : true;\n\n  config.userAgent = config.userAgent ||\n    `Node.js (${process.platform}; U; rv:${process.version}) AppleWebKit/537.36 (KHTML, like Gecko)`;\n}\n\nfunction getConfigFromEnvArguments(args) {\n  const config = {};\n  if (typeof args[0] === \"object\") {\n    Object.assign(config, args[0]);\n  } else {\n    for (const arg of args) {\n      switch (typeof arg) {\n        case \"string\":\n          config.somethingToAutodetect = arg;\n          break;\n        case \"function\":\n          config.done = arg;\n          break;\n        case \"object\":\n          if (Array.isArray(arg)) {\n            config.scripts = arg;\n          } else {\n            Object.assign(config, arg);\n          }\n          break;\n      }\n    }\n  }\n\n  if (!config.done && !config.created && !config.onload) {\n    throw new Error(\"Must pass a \\\"created\\\", \\\"onload\\\", or \\\"done\\\" option, or a callback, to jsdom.env\");\n  }\n\n  if (config.somethingToAutodetect === undefined &&\n      config.html === undefined && !config.file && !config.url) {\n    throw new Error(\"Must pass a \\\"html\\\", \\\"file\\\", or \\\"url\\\" option, or a string, to jsdom.env\");\n  }\n\n  config.scripts = ensureArray(config.scripts);\n  config.src = ensureArray(config.src);\n  config.parsingMode = config.parsingMode || \"auto\";\n\n  config.features = config.features || {\n    FetchExternalResources: false,\n    SkipExternalResources: false,\n    ProcessExternalResources: false // needed since we'll process it inside jsdom.jsdom()\n  };\n\n  if (!config.url && config.file) {\n    config.url = toFileUrl(config.file);\n  }\n\n  config.defaultEncoding = config.defaultEncoding || \"windows-1252\";\n\n  setGlobalDefaultConfig(config);\n\n  if (config.scripts.length > 0 || config.src.length > 0) {\n    config.features.ProcessExternalResources = [\"script\"];\n  }\n  return config;\n}\n\nfunction reportInitError(err, config) {\n  if (config.created) {\n    config.created(err);\n  }\n  if (config.done) {\n    config.done(err);\n  }\n}\n\nfunction ensureArray(value) {\n  let array = value || [];\n  if (typeof array === \"string\") {\n    array = [array];\n  }\n  return array;\n}\n\nfunction setParsingModeFromExtension(config, filename) {\n  if (config.parsingMode === \"auto\") {\n    const ext = path.extname(filename);\n    if (ext === \".xhtml\" || ext === \".xml\") {\n      config.parsingMode = \"xml\";\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}