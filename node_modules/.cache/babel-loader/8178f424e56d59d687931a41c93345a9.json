{"ast":null,"code":"'use strict';\n\nvar path = require('path'),\n    fs = require('fs');\n\nvar loaderUtils = require('loader-utils');\n\nvar getContextDirectory = require('./utility/get-context-directory');\n/**\n * Codec for relative paths with respect to the context directory.\n * @type {{name:string, decode: function}}\n */\n\n\nmodule.exports = {\n  name: 'npm-module',\n  decode: decode\n};\n/**\n * Decode the given uri.\n * Include only module paths containing `~`.\n * @this {{options: object}} A loader or compilation\n * @param {string} uri A source uri to decode\n * @returns {boolean|string} False where unmatched else the decoded path\n */\n\nfunction decode(uri) {\n  /* jshint validthis:true */\n  if (/~/.test(uri)) {\n    var relative = loaderUtils.urlToRequest(uri),\n        base = getContextDirectory.call(this),\n        absFile = path.normalize(path.join(base, 'node_modules', relative)),\n        isValid = !!absFile && fs.existsSync(absFile) && fs.statSync(absFile).isFile();\n    return isValid && absFile;\n  }\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/adjust-sourcemap-loader/codec/npm-module.js"],"names":["path","require","fs","loaderUtils","getContextDirectory","module","exports","name","decode","uri","test","relative","urlToRequest","base","call","absFile","normalize","join","isValid","existsSync","statSync","isFile"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAAA,IACIC,EAAE,GAAKD,OAAO,CAAC,IAAD,CADlB;;AAGA,IAAIE,WAAW,GAAGF,OAAO,CAAC,cAAD,CAAzB;;AAEA,IAAIG,mBAAmB,GAAGH,OAAO,CAAC,iCAAD,CAAjC;AAEA;;;;;;AAIAI,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,IAAI,EAAI,YADO;AAEfC,EAAAA,MAAM,EAAEA;AAFO,CAAjB;AAKA;;;;;;;;AAOA,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AACnB;AACA,MAAI,IAAIC,IAAJ,CAASD,GAAT,CAAJ,EAAmB;AACjB,QAAIE,QAAQ,GAAGR,WAAW,CAACS,YAAZ,CAAyBH,GAAzB,CAAf;AAAA,QACII,IAAI,GAAOT,mBAAmB,CAACU,IAApB,CAAyB,IAAzB,CADf;AAAA,QAEIC,OAAO,GAAIf,IAAI,CAACgB,SAAL,CAAehB,IAAI,CAACiB,IAAL,CAAUJ,IAAV,EAAgB,cAAhB,EAAgCF,QAAhC,CAAf,CAFf;AAAA,QAGIO,OAAO,GAAI,CAAC,CAACH,OAAF,IAAab,EAAE,CAACiB,UAAH,CAAcJ,OAAd,CAAb,IAAuCb,EAAE,CAACkB,QAAH,CAAYL,OAAZ,EAAqBM,MAArB,EAHtD;AAIA,WAAOH,OAAO,IAAIH,OAAlB;AACD;AACF","sourcesContent":["'use strict';\n\nvar path = require('path'),\n    fs   = require('fs');\n\nvar loaderUtils = require('loader-utils');\n\nvar getContextDirectory = require('./utility/get-context-directory');\n\n/**\n * Codec for relative paths with respect to the context directory.\n * @type {{name:string, decode: function}}\n */\nmodule.exports = {\n  name  : 'npm-module',\n  decode: decode\n};\n\n/**\n * Decode the given uri.\n * Include only module paths containing `~`.\n * @this {{options: object}} A loader or compilation\n * @param {string} uri A source uri to decode\n * @returns {boolean|string} False where unmatched else the decoded path\n */\nfunction decode(uri) {\n  /* jshint validthis:true */\n  if (/~/.test(uri)) {\n    var relative = loaderUtils.urlToRequest(uri),\n        base     = getContextDirectory.call(this),\n        absFile  = path.normalize(path.join(base, 'node_modules', relative)),\n        isValid  = !!absFile && fs.existsSync(absFile) && fs.statSync(absFile).isFile();\n    return isValid && absFile;\n  }\n}"]},"metadata":{},"sourceType":"script"}