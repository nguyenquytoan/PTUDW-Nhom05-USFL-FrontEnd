{"ast":null,"code":"\"use strict\";\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n/**\n * A wrapper that calls readFileFn and returns a promise for the contents of\n * filePath.\n *\n * readFileFn is expected to be set to compiler.inputFileSystem.readFile, to\n * ensure compatibility with webpack dev server's in-memory filesystem.\n *\n * @param {Function} readFileFn The function to use for readFile.\n * @param {string} filePath The path to the file to read.\n * @return {Promise<string>} The contents of the file.\n * @private\n */\n\nfunction readFileWrapper(readFileFn, filePath) {\n  return new Promise((resolve, reject) => {\n    readFileFn(filePath, (error, data) => {\n      if (error) {\n        return reject(error);\n      }\n\n      resolve(data);\n    });\n  });\n}\n\nmodule.exports = readFileWrapper;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-webpack-plugin/build/lib/read-file-wrapper.js"],"names":["readFileWrapper","readFileFn","filePath","Promise","resolve","reject","error","data","module","exports"],"mappings":"AAAA;AAEA;;;;;;;;AAQA;;;;;;;;;;;;;AAYA,SAASA,eAAT,CAAyBC,UAAzB,EAAqCC,QAArC,EAA+C;AAC7C,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCJ,IAAAA,UAAU,CAACC,QAAD,EAAW,CAACI,KAAD,EAAQC,IAAR,KAAiB;AACpC,UAAID,KAAJ,EAAW;AACT,eAAOD,MAAM,CAACC,KAAD,CAAb;AACD;;AAEDF,MAAAA,OAAO,CAACG,IAAD,CAAP;AACD,KANS,CAAV;AAOD,GARM,CAAP;AASD;;AAEDC,MAAM,CAACC,OAAP,GAAiBT,eAAjB","sourcesContent":["\"use strict\";\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n/**\n * A wrapper that calls readFileFn and returns a promise for the contents of\n * filePath.\n *\n * readFileFn is expected to be set to compiler.inputFileSystem.readFile, to\n * ensure compatibility with webpack dev server's in-memory filesystem.\n *\n * @param {Function} readFileFn The function to use for readFile.\n * @param {string} filePath The path to the file to read.\n * @return {Promise<string>} The contents of the file.\n * @private\n */\nfunction readFileWrapper(readFileFn, filePath) {\n  return new Promise((resolve, reject) => {\n    readFileFn(filePath, (error, data) => {\n      if (error) {\n        return reject(error);\n      }\n\n      resolve(data);\n    });\n  });\n}\n\nmodule.exports = readFileWrapper;"]},"metadata":{},"sourceType":"script"}