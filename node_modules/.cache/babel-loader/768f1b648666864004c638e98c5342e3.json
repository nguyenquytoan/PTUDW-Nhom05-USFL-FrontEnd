{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.mjs';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\n\nexport const deleteDatabase = async name => {\n  await new Promise((resolve, reject) => {\n    const request = indexedDB.deleteDatabase(name);\n\n    request.onerror = ({\n      target\n    }) => {\n      reject(target.error);\n    };\n\n    request.onblocked = () => {\n      reject(new Error('Delete blocked'));\n    };\n\n    request.onsuccess = () => {\n      resolve();\n    };\n  });\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-core/_private/deleteDatabase.mjs"],"names":["deleteDatabase","name","Promise","resolve","reject","request","indexedDB","onerror","target","error","onblocked","Error","onsuccess"],"mappings":"AAAA;;;;;;;AAQA,OAAO,iBAAP;AAGA;;;;;;;;;;AASA,OAAO,MAAMA,cAAc,GAAG,MAAOC,IAAP,IAAgB;AAC5C,QAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrC,UAAMC,OAAO,GAAGC,SAAS,CAACN,cAAV,CAAyBC,IAAzB,CAAhB;;AACAI,IAAAA,OAAO,CAACE,OAAR,GAAkB,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAc;AAC9BJ,MAAAA,MAAM,CAACI,MAAM,CAACC,KAAR,CAAN;AACD,KAFD;;AAGAJ,IAAAA,OAAO,CAACK,SAAR,GAAoB,MAAM;AACxBN,MAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,gBAAV,CAAD,CAAN;AACD,KAFD;;AAGAN,IAAAA,OAAO,CAACO,SAAR,GAAoB,MAAM;AACxBT,MAAAA,OAAO;AACR,KAFD;AAGD,GAXK,CAAN;AAYD,CAbM","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport '../_version.mjs';\n\n\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n  await new Promise((resolve, reject) => {\n    const request = indexedDB.deleteDatabase(name);\n    request.onerror = ({target}) => {\n      reject(target.error);\n    };\n    request.onblocked = () => {\n      reject(new Error('Delete blocked'));\n    };\n    request.onsuccess = () => {\n      resolve();\n    };\n  });\n};\n"]},"metadata":{},"sourceType":"module"}