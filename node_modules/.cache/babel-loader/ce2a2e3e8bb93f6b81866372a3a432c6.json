{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction CommentRemover(options) {\n  this.options = options;\n}\n\nCommentRemover.prototype.canRemove = function (comment) {\n  const remove = this.options.remove;\n\n  if (remove) {\n    return remove(comment);\n  } else {\n    const isImportant = comment.indexOf('!') === 0;\n\n    if (!isImportant) {\n      return true;\n    }\n\n    if (this.options.removeAll || this._hasFirst) {\n      return true;\n    } else if (this.options.removeAllButFirst && !this._hasFirst) {\n      this._hasFirst = true;\n      return false;\n    }\n  }\n};\n\nexports.default = CommentRemover;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-discard-comments/dist/lib/commentRemover.js"],"names":["Object","defineProperty","exports","value","CommentRemover","options","prototype","canRemove","comment","remove","isImportant","indexOf","removeAll","_hasFirst","removeAllButFirst","default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAGA,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAC7B,OAAKA,OAAL,GAAeA,OAAf;AACH;;AAEDD,cAAc,CAACE,SAAf,CAAyBC,SAAzB,GAAqC,UAAUC,OAAV,EAAmB;AACpD,QAAMC,MAAM,GAAG,KAAKJ,OAAL,CAAaI,MAA5B;;AAEA,MAAIA,MAAJ,EAAY;AACR,WAAOA,MAAM,CAACD,OAAD,CAAb;AACH,GAFD,MAEO;AACH,UAAME,WAAW,GAAGF,OAAO,CAACG,OAAR,CAAgB,GAAhB,MAAyB,CAA7C;;AAEA,QAAI,CAACD,WAAL,EAAkB;AACd,aAAO,IAAP;AACH;;AAED,QAAI,KAAKL,OAAL,CAAaO,SAAb,IAA0B,KAAKC,SAAnC,EAA8C;AAC1C,aAAO,IAAP;AACH,KAFD,MAEO,IAAI,KAAKR,OAAL,CAAaS,iBAAb,IAAkC,CAAC,KAAKD,SAA5C,EAAuD;AAC1D,WAAKA,SAAL,GAAiB,IAAjB;AACA,aAAO,KAAP;AACH;AACJ;AACJ,CAnBD;;AAqBAX,OAAO,CAACa,OAAR,GAAkBX,cAAlB;AACAY,MAAM,CAACd,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction CommentRemover(options) {\n    this.options = options;\n}\n\nCommentRemover.prototype.canRemove = function (comment) {\n    const remove = this.options.remove;\n\n    if (remove) {\n        return remove(comment);\n    } else {\n        const isImportant = comment.indexOf('!') === 0;\n\n        if (!isImportant) {\n            return true;\n        }\n\n        if (this.options.removeAll || this._hasFirst) {\n            return true;\n        } else if (this.options.removeAllButFirst && !this._hasFirst) {\n            this._hasFirst = true;\n            return false;\n        }\n    }\n};\n\nexports.default = CommentRemover;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}