{"ast":null,"code":"/**\n * @fileoverview Rule to flag use of unary increment and decrement operators.\n * @author Ian Christian Myers\n * @author Brody McKee (github.com/mrmckeb)\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow the unary operators `++` and `--`\",\n      category: \"Stylistic Issues\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-plusplus\"\n    },\n    schema: [{\n      type: \"object\",\n      properties: {\n        allowForLoopAfterthoughts: {\n          type: \"boolean\",\n          default: false\n        }\n      },\n      additionalProperties: false\n    }]\n  },\n\n  create(context) {\n    const config = context.options[0];\n    let allowInForAfterthought = false;\n\n    if (typeof config === \"object\") {\n      allowInForAfterthought = config.allowForLoopAfterthoughts === true;\n    }\n\n    return {\n      UpdateExpression(node) {\n        if (allowInForAfterthought && node.parent.type === \"ForStatement\") {\n          return;\n        }\n\n        context.report({\n          node,\n          message: \"Unary operator '{{operator}}' used.\",\n          data: {\n            operator: node.operator\n          }\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/lib/rules/no-plusplus.js"],"names":["module","exports","meta","type","docs","description","category","recommended","url","schema","properties","allowForLoopAfterthoughts","default","additionalProperties","create","context","config","options","allowInForAfterthought","UpdateExpression","node","parent","report","message","data","operator"],"mappings":"AAAA;;;;;AAMA,a,CAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,4CADX;AAEFC,MAAAA,QAAQ,EAAE,kBAFR;AAGFC,MAAAA,WAAW,EAAE,KAHX;AAIFC,MAAAA,GAAG,EAAE;AAJH,KAHJ;AAUFC,IAAAA,MAAM,EAAE,CACJ;AACIN,MAAAA,IAAI,EAAE,QADV;AAEIO,MAAAA,UAAU,EAAE;AACRC,QAAAA,yBAAyB,EAAE;AACvBR,UAAAA,IAAI,EAAE,SADiB;AAEvBS,UAAAA,OAAO,EAAE;AAFc;AADnB,OAFhB;AAQIC,MAAAA,oBAAoB,EAAE;AAR1B,KADI;AAVN,GADO;;AAyBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ,UAAMC,MAAM,GAAGD,OAAO,CAACE,OAAR,CAAgB,CAAhB,CAAf;AACA,QAAIC,sBAAsB,GAAG,KAA7B;;AAEA,QAAI,OAAOF,MAAP,KAAkB,QAAtB,EAAgC;AAC5BE,MAAAA,sBAAsB,GAAGF,MAAM,CAACL,yBAAP,KAAqC,IAA9D;AACH;;AAED,WAAO;AAEHQ,MAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,YAAIF,sBAAsB,IAAIE,IAAI,CAACC,MAAL,CAAYlB,IAAZ,KAAqB,cAAnD,EAAmE;AAC/D;AACH;;AACDY,QAAAA,OAAO,CAACO,MAAR,CAAe;AACXF,UAAAA,IADW;AAEXG,UAAAA,OAAO,EAAE,qCAFE;AAGXC,UAAAA,IAAI,EAAE;AACFC,YAAAA,QAAQ,EAAEL,IAAI,CAACK;AADb;AAHK,SAAf;AAOH;;AAbE,KAAP;AAiBH;;AAnDY,CAAjB","sourcesContent":["/**\n * @fileoverview Rule to flag use of unary increment and decrement operators.\n * @author Ian Christian Myers\n * @author Brody McKee (github.com/mrmckeb)\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"disallow the unary operators `++` and `--`\",\n            category: \"Stylistic Issues\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-plusplus\"\n        },\n\n        schema: [\n            {\n                type: \"object\",\n                properties: {\n                    allowForLoopAfterthoughts: {\n                        type: \"boolean\",\n                        default: false\n                    }\n                },\n                additionalProperties: false\n            }\n        ]\n    },\n\n    create(context) {\n\n        const config = context.options[0];\n        let allowInForAfterthought = false;\n\n        if (typeof config === \"object\") {\n            allowInForAfterthought = config.allowForLoopAfterthoughts === true;\n        }\n\n        return {\n\n            UpdateExpression(node) {\n                if (allowInForAfterthought && node.parent.type === \"ForStatement\") {\n                    return;\n                }\n                context.report({\n                    node,\n                    message: \"Unary operator '{{operator}}' used.\",\n                    data: {\n                        operator: node.operator\n                    }\n                });\n            }\n\n        };\n\n    }\n};\n"]},"metadata":{},"sourceType":"script"}