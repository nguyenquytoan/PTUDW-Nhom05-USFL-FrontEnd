{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nvar _cssnanoUtilGetArguments = require('cssnano-util-get-arguments');\n\nvar _cssnanoUtilGetArguments2 = _interopRequireDefault(_cssnanoUtilGetArguments);\n\nvar _cssnanoUtilGetMatch = require('cssnano-util-get-match');\n\nvar _cssnanoUtilGetMatch2 = _interopRequireDefault(_cssnanoUtilGetMatch);\n\nvar _map = require('./lib/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction evenValues(list, index) {\n  return index % 2 === 0;\n}\n\nconst repeatKeywords = _map2.default.map(mapping => mapping[0]);\n\nconst getMatch = (0, _cssnanoUtilGetMatch2.default)(_map2.default);\nexports.default = _postcss2.default.plugin('postcss-normalize-repeat-style', () => {\n  return css => {\n    const cache = {};\n    css.walkDecls(/background(-repeat)?|(-webkit-)?mask-repeat/i, decl => {\n      const value = decl.value;\n\n      if (cache[value]) {\n        decl.value = cache[value];\n        return;\n      }\n\n      const parsed = (0, _postcssValueParser2.default)(value);\n\n      if (parsed.nodes.length === 1) {\n        cache[value] = value;\n        return;\n      }\n\n      const args = (0, _cssnanoUtilGetArguments2.default)(parsed);\n      const relevant = [];\n      args.forEach(arg => {\n        relevant.push({\n          start: null,\n          end: null\n        });\n        arg.forEach((part, index) => {\n          const isRepeat = ~repeatKeywords.indexOf(part.value.toLowerCase());\n          const len = relevant.length - 1;\n\n          if (relevant[len].start === null && isRepeat) {\n            relevant[len].start = index;\n            relevant[len].end = index;\n            return;\n          }\n\n          if (relevant[len].start !== null) {\n            if (part.type === 'space') {\n              return;\n            } else if (isRepeat) {\n              relevant[len].end = index;\n              return;\n            }\n\n            return;\n          }\n        });\n      });\n      relevant.forEach((range, index) => {\n        if (range.start === null) {\n          return;\n        }\n\n        const val = args[index].slice(range.start, range.end + 1);\n\n        if (val.length !== 3) {\n          return;\n        }\n\n        const match = getMatch(val.filter(evenValues).map(n => n.value.toLowerCase()));\n\n        if (match) {\n          args[index][range.start].value = match;\n          args[index][range.start + 1].value = '';\n          args[index][range.end].value = '';\n        }\n      });\n      const result = parsed.toString();\n      decl.value = result;\n      cache[value] = result;\n    });\n  };\n});\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-normalize-repeat-style/dist/index.js"],"names":["Object","defineProperty","exports","value","_postcss","require","_postcss2","_interopRequireDefault","_postcssValueParser","_postcssValueParser2","_cssnanoUtilGetArguments","_cssnanoUtilGetArguments2","_cssnanoUtilGetMatch","_cssnanoUtilGetMatch2","_map","_map2","obj","__esModule","default","evenValues","list","index","repeatKeywords","map","mapping","getMatch","plugin","css","cache","walkDecls","decl","parsed","nodes","length","args","relevant","forEach","arg","push","start","end","part","isRepeat","indexOf","toLowerCase","len","type","range","val","slice","match","filter","n","result","toString","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACH,QAAD,CAAtC;;AAEA,IAAII,mBAAmB,GAAGH,OAAO,CAAC,sBAAD,CAAjC;;AAEA,IAAII,oBAAoB,GAAGF,sBAAsB,CAACC,mBAAD,CAAjD;;AAEA,IAAIE,wBAAwB,GAAGL,OAAO,CAAC,4BAAD,CAAtC;;AAEA,IAAIM,yBAAyB,GAAGJ,sBAAsB,CAACG,wBAAD,CAAtD;;AAEA,IAAIE,oBAAoB,GAAGP,OAAO,CAAC,wBAAD,CAAlC;;AAEA,IAAIQ,qBAAqB,GAAGN,sBAAsB,CAACK,oBAAD,CAAlD;;AAEA,IAAIE,IAAI,GAAGT,OAAO,CAAC,WAAD,CAAlB;;AAEA,IAAIU,KAAK,GAAGR,sBAAsB,CAACO,IAAD,CAAlC;;AAEA,SAASP,sBAAT,CAAgCS,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,SAASG,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiC;AAC7B,SAAOA,KAAK,GAAG,CAAR,KAAc,CAArB;AACH;;AAED,MAAMC,cAAc,GAAGP,KAAK,CAACG,OAAN,CAAcK,GAAd,CAAkBC,OAAO,IAAIA,OAAO,CAAC,CAAD,CAApC,CAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC,GAAGZ,qBAAqB,CAACK,OAA1B,EAAmCH,KAAK,CAACG,OAAzC,CAAjB;AAEAhB,OAAO,CAACgB,OAAR,GAAkBZ,SAAS,CAACY,OAAV,CAAkBQ,MAAlB,CAAyB,gCAAzB,EAA2D,MAAM;AAC/E,SAAOC,GAAG,IAAI;AACV,UAAMC,KAAK,GAAG,EAAd;AAEAD,IAAAA,GAAG,CAACE,SAAJ,CAAc,8CAAd,EAA8DC,IAAI,IAAI;AAClE,YAAM3B,KAAK,GAAG2B,IAAI,CAAC3B,KAAnB;;AAEA,UAAIyB,KAAK,CAACzB,KAAD,CAAT,EAAkB;AACd2B,QAAAA,IAAI,CAAC3B,KAAL,GAAayB,KAAK,CAACzB,KAAD,CAAlB;AAEA;AACH;;AAED,YAAM4B,MAAM,GAAG,CAAC,GAAGtB,oBAAoB,CAACS,OAAzB,EAAkCf,KAAlC,CAAf;;AAEA,UAAI4B,MAAM,CAACC,KAAP,CAAaC,MAAb,KAAwB,CAA5B,EAA+B;AAC3BL,QAAAA,KAAK,CAACzB,KAAD,CAAL,GAAeA,KAAf;AAEA;AACH;;AAED,YAAM+B,IAAI,GAAG,CAAC,GAAGvB,yBAAyB,CAACO,OAA9B,EAAuCa,MAAvC,CAAb;AACA,YAAMI,QAAQ,GAAG,EAAjB;AAEAD,MAAAA,IAAI,CAACE,OAAL,CAAaC,GAAG,IAAI;AAChBF,QAAAA,QAAQ,CAACG,IAAT,CAAc;AACVC,UAAAA,KAAK,EAAE,IADG;AAEVC,UAAAA,GAAG,EAAE;AAFK,SAAd;AAKAH,QAAAA,GAAG,CAACD,OAAJ,CAAY,CAACK,IAAD,EAAOpB,KAAP,KAAiB;AACzB,gBAAMqB,QAAQ,GAAG,CAACpB,cAAc,CAACqB,OAAf,CAAuBF,IAAI,CAACtC,KAAL,CAAWyC,WAAX,EAAvB,CAAlB;AACA,gBAAMC,GAAG,GAAGV,QAAQ,CAACF,MAAT,GAAkB,CAA9B;;AAEA,cAAIE,QAAQ,CAACU,GAAD,CAAR,CAAcN,KAAd,KAAwB,IAAxB,IAAgCG,QAApC,EAA8C;AAC1CP,YAAAA,QAAQ,CAACU,GAAD,CAAR,CAAcN,KAAd,GAAsBlB,KAAtB;AACAc,YAAAA,QAAQ,CAACU,GAAD,CAAR,CAAcL,GAAd,GAAoBnB,KAApB;AAEA;AACH;;AAED,cAAIc,QAAQ,CAACU,GAAD,CAAR,CAAcN,KAAd,KAAwB,IAA5B,EAAkC;AAC9B,gBAAIE,IAAI,CAACK,IAAL,KAAc,OAAlB,EAA2B;AACvB;AACH,aAFD,MAEO,IAAIJ,QAAJ,EAAc;AACjBP,cAAAA,QAAQ,CAACU,GAAD,CAAR,CAAcL,GAAd,GAAoBnB,KAApB;AAEA;AACH;;AAED;AACH;AACJ,SAtBD;AAuBH,OA7BD;AA+BAc,MAAAA,QAAQ,CAACC,OAAT,CAAiB,CAACW,KAAD,EAAQ1B,KAAR,KAAkB;AAC/B,YAAI0B,KAAK,CAACR,KAAN,KAAgB,IAApB,EAA0B;AACtB;AACH;;AAED,cAAMS,GAAG,GAAGd,IAAI,CAACb,KAAD,CAAJ,CAAY4B,KAAZ,CAAkBF,KAAK,CAACR,KAAxB,EAA+BQ,KAAK,CAACP,GAAN,GAAY,CAA3C,CAAZ;;AAEA,YAAIQ,GAAG,CAACf,MAAJ,KAAe,CAAnB,EAAsB;AAClB;AACH;;AAED,cAAMiB,KAAK,GAAGzB,QAAQ,CAACuB,GAAG,CAACG,MAAJ,CAAWhC,UAAX,EAAuBI,GAAvB,CAA2B6B,CAAC,IAAIA,CAAC,CAACjD,KAAF,CAAQyC,WAAR,EAAhC,CAAD,CAAtB;;AAEA,YAAIM,KAAJ,EAAW;AACPhB,UAAAA,IAAI,CAACb,KAAD,CAAJ,CAAY0B,KAAK,CAACR,KAAlB,EAAyBpC,KAAzB,GAAiC+C,KAAjC;AACAhB,UAAAA,IAAI,CAACb,KAAD,CAAJ,CAAY0B,KAAK,CAACR,KAAN,GAAc,CAA1B,EAA6BpC,KAA7B,GAAqC,EAArC;AACA+B,UAAAA,IAAI,CAACb,KAAD,CAAJ,CAAY0B,KAAK,CAACP,GAAlB,EAAuBrC,KAAvB,GAA+B,EAA/B;AACH;AACJ,OAlBD;AAoBA,YAAMkD,MAAM,GAAGtB,MAAM,CAACuB,QAAP,EAAf;AAEAxB,MAAAA,IAAI,CAAC3B,KAAL,GAAakD,MAAb;AACAzB,MAAAA,KAAK,CAACzB,KAAD,CAAL,GAAekD,MAAf;AACH,KA3ED;AA4EH,GA/ED;AAgFH,CAjFiB,CAAlB;AAkFAE,MAAM,CAACrD,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nvar _cssnanoUtilGetArguments = require('cssnano-util-get-arguments');\n\nvar _cssnanoUtilGetArguments2 = _interopRequireDefault(_cssnanoUtilGetArguments);\n\nvar _cssnanoUtilGetMatch = require('cssnano-util-get-match');\n\nvar _cssnanoUtilGetMatch2 = _interopRequireDefault(_cssnanoUtilGetMatch);\n\nvar _map = require('./lib/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction evenValues(list, index) {\n    return index % 2 === 0;\n}\n\nconst repeatKeywords = _map2.default.map(mapping => mapping[0]);\n\nconst getMatch = (0, _cssnanoUtilGetMatch2.default)(_map2.default);\n\nexports.default = _postcss2.default.plugin('postcss-normalize-repeat-style', () => {\n    return css => {\n        const cache = {};\n\n        css.walkDecls(/background(-repeat)?|(-webkit-)?mask-repeat/i, decl => {\n            const value = decl.value;\n\n            if (cache[value]) {\n                decl.value = cache[value];\n\n                return;\n            }\n\n            const parsed = (0, _postcssValueParser2.default)(value);\n\n            if (parsed.nodes.length === 1) {\n                cache[value] = value;\n\n                return;\n            }\n\n            const args = (0, _cssnanoUtilGetArguments2.default)(parsed);\n            const relevant = [];\n\n            args.forEach(arg => {\n                relevant.push({\n                    start: null,\n                    end: null\n                });\n\n                arg.forEach((part, index) => {\n                    const isRepeat = ~repeatKeywords.indexOf(part.value.toLowerCase());\n                    const len = relevant.length - 1;\n\n                    if (relevant[len].start === null && isRepeat) {\n                        relevant[len].start = index;\n                        relevant[len].end = index;\n\n                        return;\n                    }\n\n                    if (relevant[len].start !== null) {\n                        if (part.type === 'space') {\n                            return;\n                        } else if (isRepeat) {\n                            relevant[len].end = index;\n\n                            return;\n                        }\n\n                        return;\n                    }\n                });\n            });\n\n            relevant.forEach((range, index) => {\n                if (range.start === null) {\n                    return;\n                }\n\n                const val = args[index].slice(range.start, range.end + 1);\n\n                if (val.length !== 3) {\n                    return;\n                }\n\n                const match = getMatch(val.filter(evenValues).map(n => n.value.toLowerCase()));\n\n                if (match) {\n                    args[index][range.start].value = match;\n                    args[index][range.start + 1].value = '';\n                    args[index][range.end].value = '';\n                }\n            });\n\n            const result = parsed.toString();\n\n            decl.value = result;\n            cache[value] = result;\n        });\n    };\n});\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}