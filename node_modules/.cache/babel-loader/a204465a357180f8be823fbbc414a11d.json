{"ast":null,"code":"'use strict';\n\nconst CHILDREN = 500,\n      POINTS_PER_CHILD = 1000000,\n      FARM_OPTIONS = {\n  maxConcurrentWorkers: require('os').cpus().length,\n  maxCallsPerWorker: Infinity,\n  maxConcurrentCallsPerWorker: 1\n};\n\nlet workerFarm = require('../../'),\n    calcDirect = require('./calc'),\n    calcWorker = workerFarm(FARM_OPTIONS, require.resolve('./calc')),\n    ret,\n    start,\n    tally = function (finish, err, avg) {\n  ret.push(avg);\n\n  if (ret.length == CHILDREN) {\n    let pi = ret.reduce(function (a, b) {\n      return a + b;\n    }) / ret.length,\n        end = +new Date();\n    console.log('π ≈', pi, '\\t(' + Math.abs(pi - Math.PI), 'away from actual!)');\n    console.log('took', end - start, 'milliseconds');\n    if (finish) finish();\n  }\n},\n    calc = function (method, callback) {\n  ret = [];\n  start = +new Date();\n\n  for (let i = 0; i < CHILDREN; i++) method(POINTS_PER_CHILD, tally.bind(null, callback));\n};\n\nconsole.log('Doing it the slow (single-process) way...');\ncalc(calcDirect, function () {\n  console.log('Doing it the fast (multi-process) way...');\n  calc(calcWorker, process.exit);\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/worker-farm/examples/pi/index.js"],"names":["CHILDREN","POINTS_PER_CHILD","FARM_OPTIONS","maxConcurrentWorkers","require","cpus","length","maxCallsPerWorker","Infinity","maxConcurrentCallsPerWorker","workerFarm","calcDirect","calcWorker","resolve","ret","start","tally","finish","err","avg","push","pi","reduce","a","b","end","Date","console","log","Math","abs","PI","calc","method","callback","i","bind","process","exit"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAW,GAAzB;AAAA,MACMC,gBAAgB,GAAG,OADzB;AAAA,MAEMC,YAAY,GAAO;AACfC,EAAAA,oBAAoB,EAAUC,OAAO,CAAC,IAAD,CAAP,CAAcC,IAAd,GAAqBC,MADpC;AAEfC,EAAAA,iBAAiB,EAAaC,QAFf;AAGfC,EAAAA,2BAA2B,EAAG;AAHf,CAFzB;;AAQA,IAAIC,UAAU,GAAGN,OAAO,CAAC,QAAD,CAAxB;AAAA,IACIO,UAAU,GAAGP,OAAO,CAAC,QAAD,CADxB;AAAA,IAEIQ,UAAU,GAAGF,UAAU,CAACR,YAAD,EAAeE,OAAO,CAACS,OAAR,CAAgB,QAAhB,CAAf,CAF3B;AAAA,IAIIC,GAJJ;AAAA,IAKIC,KALJ;AAAA,IAOIC,KAAK,GAAG,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AAClCL,EAAAA,GAAG,CAACM,IAAJ,CAASD,GAAT;;AACA,MAAIL,GAAG,CAACR,MAAJ,IAAcN,QAAlB,EAA4B;AAC1B,QAAIqB,EAAE,GAAIP,GAAG,CAACQ,MAAJ,CAAW,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAE,aAAOD,CAAC,GAAGC,CAAX;AAAc,KAA3C,IAA+CV,GAAG,CAACR,MAA7D;AAAA,QACImB,GAAG,GAAG,CAAC,IAAIC,IAAJ,EADX;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,EAAnB,EAAuB,QAAQQ,IAAI,CAACC,GAAL,CAAST,EAAE,GAAGQ,IAAI,CAACE,EAAnB,CAA/B,EAAuD,oBAAvD;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,GAAG,GAAGV,KAA1B,EAAiC,cAAjC;AACA,QAAIE,MAAJ,EACEA,MAAM;AACT;AACF,CAjBL;AAAA,IAmBIe,IAAI,GAAG,UAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AACjCpB,EAAAA,GAAG,GAAK,EAAR;AACAC,EAAAA,KAAK,GAAG,CAAC,IAAIW,IAAJ,EAAT;;AACA,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnC,QAApB,EAA8BmC,CAAC,EAA/B,EACEF,MAAM,CAAChC,gBAAD,EAAmBe,KAAK,CAACoB,IAAN,CAAW,IAAX,EAAiBF,QAAjB,CAAnB,CAAN;AACH,CAxBL;;AA0BAP,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAI,IAAI,CAACrB,UAAD,EAAa,YAAY;AAC3BgB,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAI,EAAAA,IAAI,CAACpB,UAAD,EAAayB,OAAO,CAACC,IAArB,CAAJ;AACD,CAHG,CAAJ","sourcesContent":["'use strict'\n\nconst CHILDREN         = 500\n    , POINTS_PER_CHILD = 1000000\n    , FARM_OPTIONS     = {\n          maxConcurrentWorkers        : require('os').cpus().length\n        , maxCallsPerWorker           : Infinity\n        , maxConcurrentCallsPerWorker : 1\n      }\n\nlet workerFarm = require('../../')\n  , calcDirect = require('./calc')\n  , calcWorker = workerFarm(FARM_OPTIONS, require.resolve('./calc'))\n\n  , ret\n  , start\n\n  , tally = function (finish, err, avg) {\n      ret.push(avg)\n      if (ret.length == CHILDREN) {\n        let pi  = ret.reduce(function (a, b) { return a + b }) / ret.length\n          , end = +new Date()\n        console.log('π ≈', pi, '\\t(' + Math.abs(pi - Math.PI), 'away from actual!)')\n        console.log('took', end - start, 'milliseconds')\n        if (finish)\n          finish()\n      }\n    }\n\n  , calc = function (method, callback) {\n      ret   = []\n      start = +new Date()\n      for (let i = 0; i < CHILDREN; i++)\n        method(POINTS_PER_CHILD, tally.bind(null, callback))\n    }\n\nconsole.log('Doing it the slow (single-process) way...')\ncalc(calcDirect, function () {\n  console.log('Doing it the fast (multi-process) way...')\n  calc(calcWorker, process.exit)\n})\n"]},"metadata":{},"sourceType":"script"}