{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'merges multiple paths in one if possible';\nexports.params = {\n  collapseRepeated: true,\n  force: false,\n  leadingZero: true,\n  negativeExtraSpace: true,\n  noSpaceAfterFlags: true\n};\n\nvar path2js = require('./_path.js').path2js,\n    js2path = require('./_path.js').js2path,\n    intersects = require('./_path.js').intersects;\n/**\n * Merge multiple Paths into one.\n *\n * @param {Object} item current iteration item\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich, Lev Solntsev\n */\n\n\nexports.fn = function (item, params) {\n  if (!item.isElem() || item.isEmpty()) return;\n  var prevContentItem = null,\n      prevContentItemKeys = null;\n  item.content = item.content.filter(function (contentItem) {\n    if (prevContentItem && prevContentItem.isElem('path') && prevContentItem.isEmpty() && prevContentItem.hasAttr('d') && contentItem.isElem('path') && contentItem.isEmpty() && contentItem.hasAttr('d')) {\n      if (!prevContentItemKeys) {\n        prevContentItemKeys = Object.keys(prevContentItem.attrs);\n      }\n\n      var contentItemAttrs = Object.keys(contentItem.attrs),\n          equalData = prevContentItemKeys.length == contentItemAttrs.length && contentItemAttrs.every(function (key) {\n        return key == 'd' || prevContentItem.hasAttr(key) && prevContentItem.attr(key).value == contentItem.attr(key).value;\n      }),\n          prevPathJS = path2js(prevContentItem),\n          curPathJS = path2js(contentItem);\n\n      if (equalData && (params.force || !intersects(prevPathJS, curPathJS))) {\n        js2path(prevContentItem, prevPathJS.concat(curPathJS), params);\n        return false;\n      }\n    }\n\n    prevContentItem = contentItem;\n    prevContentItemKeys = null;\n    return true;\n  });\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/svgo/plugins/mergePaths.js"],"names":["exports","type","active","description","params","collapseRepeated","force","leadingZero","negativeExtraSpace","noSpaceAfterFlags","path2js","require","js2path","intersects","fn","item","isElem","isEmpty","prevContentItem","prevContentItemKeys","content","filter","contentItem","hasAttr","Object","keys","attrs","contentItemAttrs","equalData","length","every","key","attr","value","prevPathJS","curPathJS","concat"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,IAAR,GAAe,SAAf;AAEAD,OAAO,CAACE,MAAR,GAAiB,IAAjB;AAEAF,OAAO,CAACG,WAAR,GAAsB,0CAAtB;AAEAH,OAAO,CAACI,MAAR,GAAiB;AACbC,EAAAA,gBAAgB,EAAE,IADL;AAEbC,EAAAA,KAAK,EAAE,KAFM;AAGbC,EAAAA,WAAW,EAAE,IAHA;AAIbC,EAAAA,kBAAkB,EAAE,IAJP;AAKbC,EAAAA,iBAAiB,EAAE;AALN,CAAjB;;AAQA,IAAIC,OAAO,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,OAApC;AAAA,IACIE,OAAO,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,OADpC;AAAA,IAEIC,UAAU,GAAGF,OAAO,CAAC,YAAD,CAAP,CAAsBE,UAFvC;AAIA;;;;;;;;;;AAQAb,OAAO,CAACc,EAAR,GAAa,UAASC,IAAT,EAAeX,MAAf,EAAuB;AAEhC,MAAI,CAACW,IAAI,CAACC,MAAL,EAAD,IAAkBD,IAAI,CAACE,OAAL,EAAtB,EAAsC;AAEtC,MAAIC,eAAe,GAAG,IAAtB;AAAA,MACIC,mBAAmB,GAAG,IAD1B;AAGAJ,EAAAA,IAAI,CAACK,OAAL,GAAeL,IAAI,CAACK,OAAL,CAAaC,MAAb,CAAoB,UAASC,WAAT,EAAsB;AAErD,QAAIJ,eAAe,IACfA,eAAe,CAACF,MAAhB,CAAuB,MAAvB,CADA,IAEAE,eAAe,CAACD,OAAhB,EAFA,IAGAC,eAAe,CAACK,OAAhB,CAAwB,GAAxB,CAHA,IAIAD,WAAW,CAACN,MAAZ,CAAmB,MAAnB,CAJA,IAKAM,WAAW,CAACL,OAAZ,EALA,IAMAK,WAAW,CAACC,OAAZ,CAAoB,GAApB,CANJ,EAOE;AAEE,UAAI,CAACJ,mBAAL,EAA0B;AACtBA,QAAAA,mBAAmB,GAAGK,MAAM,CAACC,IAAP,CAAYP,eAAe,CAACQ,KAA5B,CAAtB;AACH;;AAED,UAAIC,gBAAgB,GAAGH,MAAM,CAACC,IAAP,CAAYH,WAAW,CAACI,KAAxB,CAAvB;AAAA,UACIE,SAAS,GAAGT,mBAAmB,CAACU,MAApB,IAA8BF,gBAAgB,CAACE,MAA/C,IACRF,gBAAgB,CAACG,KAAjB,CAAuB,UAASC,GAAT,EAAc;AACjC,eAAOA,GAAG,IAAI,GAAP,IACHb,eAAe,CAACK,OAAhB,CAAwBQ,GAAxB,KACAb,eAAe,CAACc,IAAhB,CAAqBD,GAArB,EAA0BE,KAA1B,IAAmCX,WAAW,CAACU,IAAZ,CAAiBD,GAAjB,EAAsBE,KAF7D;AAGH,OAJD,CAFR;AAAA,UAOIC,UAAU,GAAGxB,OAAO,CAACQ,eAAD,CAPxB;AAAA,UAQIiB,SAAS,GAAGzB,OAAO,CAACY,WAAD,CARvB;;AAUA,UAAIM,SAAS,KAAKxB,MAAM,CAACE,KAAP,IAAgB,CAACO,UAAU,CAACqB,UAAD,EAAaC,SAAb,CAAhC,CAAb,EAAuE;AACnEvB,QAAAA,OAAO,CAACM,eAAD,EAAkBgB,UAAU,CAACE,MAAX,CAAkBD,SAAlB,CAAlB,EAAgD/B,MAAhD,CAAP;AACA,eAAO,KAAP;AACH;AACJ;;AAEDc,IAAAA,eAAe,GAAGI,WAAlB;AACAH,IAAAA,mBAAmB,GAAG,IAAtB;AACA,WAAO,IAAP;AAEH,GAnCc,CAAf;AAqCH,CA5CD","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'merges multiple paths in one if possible';\n\nexports.params = {\n    collapseRepeated: true,\n    force: false,\n    leadingZero: true,\n    negativeExtraSpace: true,\n    noSpaceAfterFlags: true\n};\n\nvar path2js = require('./_path.js').path2js,\n    js2path = require('./_path.js').js2path,\n    intersects = require('./_path.js').intersects;\n\n/**\n * Merge multiple Paths into one.\n *\n * @param {Object} item current iteration item\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich, Lev Solntsev\n */\nexports.fn = function(item, params) {\n\n    if (!item.isElem() || item.isEmpty()) return;\n\n    var prevContentItem = null,\n        prevContentItemKeys = null;\n\n    item.content = item.content.filter(function(contentItem) {\n\n        if (prevContentItem &&\n            prevContentItem.isElem('path') &&\n            prevContentItem.isEmpty() &&\n            prevContentItem.hasAttr('d') &&\n            contentItem.isElem('path') &&\n            contentItem.isEmpty() &&\n            contentItem.hasAttr('d')\n        ) {\n\n            if (!prevContentItemKeys) {\n                prevContentItemKeys = Object.keys(prevContentItem.attrs);\n            }\n\n            var contentItemAttrs = Object.keys(contentItem.attrs),\n                equalData = prevContentItemKeys.length == contentItemAttrs.length &&\n                    contentItemAttrs.every(function(key) {\n                        return key == 'd' ||\n                            prevContentItem.hasAttr(key) &&\n                            prevContentItem.attr(key).value == contentItem.attr(key).value;\n                    }),\n                prevPathJS = path2js(prevContentItem),\n                curPathJS = path2js(contentItem);\n\n            if (equalData && (params.force || !intersects(prevPathJS, curPathJS))) {\n                js2path(prevContentItem, prevPathJS.concat(curPathJS), params);\n                return false;\n            }\n        }\n\n        prevContentItem = contentItem;\n        prevContentItemKeys = null;\n        return true;\n\n    });\n\n};\n"]},"metadata":{},"sourceType":"script"}