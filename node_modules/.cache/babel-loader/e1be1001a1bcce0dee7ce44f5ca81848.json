{"ast":null,"code":"import postcss from 'postcss';\nimport fs from 'fs';\nimport path from 'path';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction parse(string, splitByAnd) {\n  const array = [];\n  let buffer = '';\n  let split = false;\n  let func = 0;\n  let i = -1;\n\n  while (++i < string.length) {\n    const char = string[i];\n\n    if (char === '(') {\n      func += 1;\n    } else if (char === ')') {\n      if (func > 0) {\n        func -= 1;\n      }\n    } else if (func === 0) {\n      if (splitByAnd && andRegExp.test(buffer + char)) {\n        split = true;\n      } else if (!splitByAnd && char === ',') {\n        split = true;\n      }\n    }\n\n    if (split) {\n      array.push(splitByAnd ? new MediaExpression(buffer + char) : new MediaQuery(buffer));\n      buffer = '';\n      split = false;\n    } else {\n      buffer += char;\n    }\n  }\n\n  if (buffer !== '') {\n    array.push(splitByAnd ? new MediaExpression(buffer) : new MediaQuery(buffer));\n  }\n\n  return array;\n}\n\nclass MediaQueryList {\n  constructor(string) {\n    this.nodes = parse(string);\n  }\n\n  invert() {\n    this.nodes.forEach(node => {\n      node.invert();\n    });\n    return this;\n  }\n\n  clone() {\n    return new MediaQueryList(String(this));\n  }\n\n  toString() {\n    return this.nodes.join(',');\n  }\n\n}\n\nclass MediaQuery {\n  constructor(string) {\n    const _string$match = string.match(spaceWrapRegExp),\n          _string$match2 = _slicedToArray(_string$match, 4),\n          before = _string$match2[1],\n          media = _string$match2[2],\n          after = _string$match2[3];\n\n    const _ref = media.match(mediaRegExp) || [],\n          _ref2 = _slicedToArray(_ref, 9),\n          _ref2$ = _ref2[1],\n          modifier = _ref2$ === void 0 ? '' : _ref2$,\n          _ref2$2 = _ref2[2],\n          afterModifier = _ref2$2 === void 0 ? ' ' : _ref2$2,\n          _ref2$3 = _ref2[3],\n          type = _ref2$3 === void 0 ? '' : _ref2$3,\n          _ref2$4 = _ref2[4],\n          beforeAnd = _ref2$4 === void 0 ? '' : _ref2$4,\n          _ref2$5 = _ref2[5],\n          and = _ref2$5 === void 0 ? '' : _ref2$5,\n          _ref2$6 = _ref2[6],\n          beforeExpression = _ref2$6 === void 0 ? '' : _ref2$6,\n          _ref2$7 = _ref2[7],\n          expression1 = _ref2$7 === void 0 ? '' : _ref2$7,\n          _ref2$8 = _ref2[8],\n          expression2 = _ref2$8 === void 0 ? '' : _ref2$8;\n\n    const raws = {\n      before,\n      after,\n      afterModifier,\n      originalModifier: modifier || '',\n      beforeAnd,\n      and,\n      beforeExpression\n    };\n    const nodes = parse(expression1 || expression2, true);\n    Object.assign(this, {\n      modifier,\n      type,\n      raws,\n      nodes\n    });\n  }\n\n  clone(overrides) {\n    const instance = new MediaQuery(String(this));\n    Object.assign(instance, overrides);\n    return instance;\n  }\n\n  invert() {\n    this.modifier = this.modifier ? '' : this.raws.originalModifier;\n    return this;\n  }\n\n  toString() {\n    const raws = this.raws;\n    return `${raws.before}${this.modifier}${this.modifier ? `${raws.afterModifier}` : ''}${this.type}${raws.beforeAnd}${raws.and}${raws.beforeExpression}${this.nodes.join('')}${this.raws.after}`;\n  }\n\n}\n\nclass MediaExpression {\n  constructor(string) {\n    const _ref3 = string.match(andRegExp) || [null, string],\n          _ref4 = _slicedToArray(_ref3, 5),\n          value = _ref4[1],\n          _ref4$ = _ref4[2],\n          after = _ref4$ === void 0 ? '' : _ref4$,\n          _ref4$2 = _ref4[3],\n          and = _ref4$2 === void 0 ? '' : _ref4$2,\n          _ref4$3 = _ref4[4],\n          afterAnd = _ref4$3 === void 0 ? '' : _ref4$3;\n\n    const raws = {\n      after,\n      and,\n      afterAnd\n    };\n    Object.assign(this, {\n      value,\n      raws\n    });\n  }\n\n  clone(overrides) {\n    const instance = new MediaExpression(String(this));\n    Object.assign(instance, overrides);\n    return instance;\n  }\n\n  toString() {\n    const raws = this.raws;\n    return `${this.value}${raws.after}${raws.and}${raws.afterAnd}`;\n  }\n\n}\n\nconst modifierRE = '(not|only)';\nconst typeRE = '(all|print|screen|speech)';\nconst noExpressionRE = '([\\\\W\\\\w]*)';\nconst expressionRE = '([\\\\W\\\\w]+)';\nconst noSpaceRE = '(\\\\s*)';\nconst spaceRE = '(\\\\s+)';\nconst andRE = '(?:(\\\\s+)(and))';\nconst andRegExp = new RegExp(`^${expressionRE}(?:${andRE}${spaceRE})$`, 'i');\nconst spaceWrapRegExp = new RegExp(`^${noSpaceRE}${noExpressionRE}${noSpaceRE}$`);\nconst mediaRegExp = new RegExp(`^(?:${modifierRE}${spaceRE})?(?:${typeRE}(?:${andRE}${spaceRE}${expressionRE})?|${expressionRE})$`, 'i');\n\nvar mediaASTFromString = string => new MediaQueryList(string);\n\nvar getCustomMediaFromRoot = (root, opts) => {\n  // initialize custom selectors\n  const customMedias = {}; // for each custom selector atrule that is a child of the css root\n\n  root.nodes.slice().forEach(node => {\n    if (isCustomMedia(node)) {\n      // extract the name and selectors from the params of the custom selector\n      const _node$params$match = node.params.match(customMediaParamsRegExp),\n            _node$params$match2 = _slicedToArray(_node$params$match, 3),\n            name = _node$params$match2[1],\n            selectors = _node$params$match2[2]; // write the parsed selectors to the custom selector\n\n\n      customMedias[name] = mediaASTFromString(selectors); // conditionally remove the custom selector atrule\n\n      if (!Object(opts).preserve) {\n        node.remove();\n      }\n    }\n  });\n  return customMedias;\n}; // match the custom selector name\n\n\nconst customMediaNameRegExp = /^custom-media$/i; // match the custom selector params\n\nconst customMediaParamsRegExp = /^(--[A-z][\\w-]*)\\s+([\\W\\w]+)\\s*$/; // whether the atrule is a custom selector\n\nconst isCustomMedia = node => node.type === 'atrule' && customMediaNameRegExp.test(node.name) && customMediaParamsRegExp.test(node.params);\n/* Get Custom Media from CSS File\n/* ========================================================================== */\n\n\nfunction getCustomMediaFromCSSFile(_x) {\n  return _getCustomMediaFromCSSFile.apply(this, arguments);\n}\n/* Get Custom Media from Object\n/* ========================================================================== */\n\n\nfunction _getCustomMediaFromCSSFile() {\n  _getCustomMediaFromCSSFile = _asyncToGenerator(function* (from) {\n    const css = yield readFile(from);\n    const root = postcss.parse(css, {\n      from\n    });\n    return getCustomMediaFromRoot(root, {\n      preserve: true\n    });\n  });\n  return _getCustomMediaFromCSSFile.apply(this, arguments);\n}\n\nfunction getCustomMediaFromObject(object) {\n  const customMedia = Object.assign({}, Object(object).customMedia, Object(object)['custom-media']);\n\n  for (const key in customMedia) {\n    customMedia[key] = mediaASTFromString(customMedia[key]);\n  }\n\n  return customMedia;\n}\n/* Get Custom Media from JSON file\n/* ========================================================================== */\n\n\nfunction getCustomMediaFromJSONFile(_x2) {\n  return _getCustomMediaFromJSONFile.apply(this, arguments);\n}\n/* Get Custom Media from JS file\n/* ========================================================================== */\n\n\nfunction _getCustomMediaFromJSONFile() {\n  _getCustomMediaFromJSONFile = _asyncToGenerator(function* (from) {\n    const object = yield readJSON(from);\n    return getCustomMediaFromObject(object);\n  });\n  return _getCustomMediaFromJSONFile.apply(this, arguments);\n}\n\nfunction getCustomMediaFromJSFile(_x3) {\n  return _getCustomMediaFromJSFile.apply(this, arguments);\n}\n/* Get Custom Media from Sources\n/* ========================================================================== */\n\n\nfunction _getCustomMediaFromJSFile() {\n  _getCustomMediaFromJSFile = _asyncToGenerator(function* (from) {\n    const object = yield import(from);\n    return getCustomMediaFromObject(object);\n  });\n  return _getCustomMediaFromJSFile.apply(this, arguments);\n}\n\nfunction getCustomMediaFromSources(sources) {\n  return sources.map(source => {\n    if (source instanceof Promise) {\n      return source;\n    } else if (source instanceof Function) {\n      return source();\n    } // read the source as an object\n\n\n    const opts = source === Object(source) ? source : {\n      from: String(source)\n    }; // skip objects with custom media\n\n    if (Object(opts).customMedia || Object(opts)['custom-media']) {\n      return opts;\n    } // source pathname\n\n\n    const from = path.resolve(String(opts.from || '')); // type of file being read from\n\n    const type = (opts.type || path.extname(from).slice(1)).toLowerCase();\n    return {\n      type,\n      from\n    };\n  }).reduce( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (customMedia, source) {\n      const _ref2 = yield source,\n            type = _ref2.type,\n            from = _ref2.from;\n\n      if (type === 'css' || type === 'pcss') {\n        return Object.assign(yield customMedia, yield getCustomMediaFromCSSFile(from));\n      }\n\n      if (type === 'js') {\n        return Object.assign(yield customMedia, yield getCustomMediaFromJSFile(from));\n      }\n\n      if (type === 'json') {\n        return Object.assign(yield customMedia, yield getCustomMediaFromJSONFile(from));\n      }\n\n      return Object.assign(yield customMedia, getCustomMediaFromObject(yield source));\n    });\n\n    return function (_x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }(), {});\n}\n/* Helper utilities\n/* ========================================================================== */\n\n\nconst readFile = from => new Promise((resolve, reject) => {\n  fs.readFile(from, 'utf8', (error, result) => {\n    if (error) {\n      reject(error);\n    } else {\n      resolve(result);\n    }\n  });\n});\n\nconst readJSON = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (from) {\n    return JSON.parse(yield readFile(from));\n  });\n\n  return function readJSON(_x6) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // return transformed medias, replacing custom pseudo medias with custom medias\n\n\nfunction transformMediaList(mediaList, customMedias) {\n  let index = mediaList.nodes.length - 1;\n\n  while (index >= 0) {\n    const transformedMedias = transformMedia(mediaList.nodes[index], customMedias);\n\n    if (transformedMedias.length) {\n      mediaList.nodes.splice(index, 1, ...transformedMedias);\n    }\n\n    --index;\n  }\n\n  return mediaList;\n} // return custom pseudo medias replaced with custom medias\n\n\nfunction transformMedia(media, customMedias) {\n  const transpiledMedias = [];\n\n  for (const index in media.nodes) {\n    const _media$nodes$index = media.nodes[index],\n          value = _media$nodes$index.value,\n          nodes = _media$nodes$index.nodes;\n    const key = value.replace(customPseudoRegExp, '$1');\n\n    if (key in customMedias) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = customMedias[key].nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          const replacementMedia = _step.value; // use the first available modifier unless they cancel each other out\n\n          const modifier = media.modifier !== replacementMedia.modifier ? media.modifier || replacementMedia.modifier : '';\n          const mediaClone = media.clone({\n            modifier,\n            // conditionally use the raws from the first available modifier\n            raws: !modifier || media.modifier ? _objectSpread({}, media.raws) : _objectSpread({}, replacementMedia.raws),\n            type: media.type || replacementMedia.type\n          }); // conditionally include more replacement raws when the type is present\n\n          if (mediaClone.type === replacementMedia.type) {\n            Object.assign(mediaClone.raws, {\n              and: replacementMedia.raws.and,\n              beforeAnd: replacementMedia.raws.beforeAnd,\n              beforeExpression: replacementMedia.raws.beforeExpression\n            });\n          }\n\n          mediaClone.nodes.splice(index, 1, ...replacementMedia.clone().nodes.map(node => {\n            // use raws and spacing from the current usage\n            if (media.nodes[index].raws.and) {\n              node.raws = _objectSpread({}, media.nodes[index].raws);\n            }\n\n            node.spaces = _objectSpread({}, media.nodes[index].spaces);\n            return node;\n          })); // remove the currently transformed key to prevent recursion\n\n          const nextCustomMedia = getCustomMediasWithoutKey(customMedias, key);\n          const retranspiledMedias = transformMedia(mediaClone, nextCustomMedia);\n\n          if (retranspiledMedias.length) {\n            transpiledMedias.push(...retranspiledMedias);\n          } else {\n            transpiledMedias.push(mediaClone);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return transpiledMedias;\n    } else if (nodes && nodes.length) {\n      transformMediaList(media.nodes[index], customMedias);\n    }\n  }\n\n  return transpiledMedias;\n}\n\nconst customPseudoRegExp = /\\((--[A-z][\\w-]*)\\)/;\n\nconst getCustomMediasWithoutKey = (customMedias, key) => {\n  const nextCustomMedias = Object.assign({}, customMedias);\n  delete nextCustomMedias[key];\n  return nextCustomMedias;\n};\n\nvar transformAtrules = (root, customMedia, opts) => {\n  root.walkAtRules(mediaAtRuleRegExp, atrule => {\n    if (customPseudoRegExp$1.test(atrule.params)) {\n      const mediaAST = mediaASTFromString(atrule.params);\n      const params = String(transformMediaList(mediaAST, customMedia));\n\n      if (opts.preserve) {\n        atrule.cloneBefore({\n          params\n        });\n      } else {\n        atrule.params = params;\n      }\n    }\n  });\n};\n\nconst mediaAtRuleRegExp = /^media$/i;\nconst customPseudoRegExp$1 = /\\(--[A-z][\\w-]*\\)/;\n/* Write Custom Media from CSS File\n/* ========================================================================== */\n\nfunction writeCustomMediaToCssFile(_x, _x2) {\n  return _writeCustomMediaToCssFile.apply(this, arguments);\n}\n/* Write Custom Media from JSON file\n/* ========================================================================== */\n\n\nfunction _writeCustomMediaToCssFile() {\n  _writeCustomMediaToCssFile = _asyncToGenerator(function* (to, customMedia) {\n    const cssContent = Object.keys(customMedia).reduce((cssLines, name) => {\n      cssLines.push(`@custom-media ${name} ${customMedia[name]};`);\n      return cssLines;\n    }, []).join('\\n');\n    const css = `${cssContent}\\n`;\n    yield writeFile(to, css);\n  });\n  return _writeCustomMediaToCssFile.apply(this, arguments);\n}\n\nfunction writeCustomMediaToJsonFile(_x3, _x4) {\n  return _writeCustomMediaToJsonFile.apply(this, arguments);\n}\n/* Write Custom Media from Common JS file\n/* ========================================================================== */\n\n\nfunction _writeCustomMediaToJsonFile() {\n  _writeCustomMediaToJsonFile = _asyncToGenerator(function* (to, customMedia) {\n    const jsonContent = JSON.stringify({\n      'custom-media': customMedia\n    }, null, '  ');\n    const json = `${jsonContent}\\n`;\n    yield writeFile(to, json);\n  });\n  return _writeCustomMediaToJsonFile.apply(this, arguments);\n}\n\nfunction writeCustomMediaToCjsFile(_x5, _x6) {\n  return _writeCustomMediaToCjsFile.apply(this, arguments);\n}\n/* Write Custom Media from Module JS file\n/* ========================================================================== */\n\n\nfunction _writeCustomMediaToCjsFile() {\n  _writeCustomMediaToCjsFile = _asyncToGenerator(function* (to, customMedia) {\n    const jsContents = Object.keys(customMedia).reduce((jsLines, name) => {\n      jsLines.push(`\\t\\t'${escapeForJS(name)}': '${escapeForJS(customMedia[name])}'`);\n      return jsLines;\n    }, []).join(',\\n');\n    const js = `module.exports = {\\n\\tcustomMedia: {\\n${jsContents}\\n\\t}\\n};\\n`;\n    yield writeFile(to, js);\n  });\n  return _writeCustomMediaToCjsFile.apply(this, arguments);\n}\n\nfunction writeCustomMediaToMjsFile(_x7, _x8) {\n  return _writeCustomMediaToMjsFile.apply(this, arguments);\n}\n/* Write Custom Media to Exports\n/* ========================================================================== */\n\n\nfunction _writeCustomMediaToMjsFile() {\n  _writeCustomMediaToMjsFile = _asyncToGenerator(function* (to, customMedia) {\n    const mjsContents = Object.keys(customMedia).reduce((mjsLines, name) => {\n      mjsLines.push(`\\t'${escapeForJS(name)}': '${escapeForJS(customMedia[name])}'`);\n      return mjsLines;\n    }, []).join(',\\n');\n    const mjs = `export const customMedia = {\\n${mjsContents}\\n};\\n`;\n    yield writeFile(to, mjs);\n  });\n  return _writeCustomMediaToMjsFile.apply(this, arguments);\n}\n\nfunction writeCustomMediaToExports(customMedia, destinations) {\n  return Promise.all(destinations.map( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (destination) {\n      if (destination instanceof Function) {\n        yield destination(defaultCustomMediaToJSON(customMedia));\n      } else {\n        // read the destination as an object\n        const opts = destination === Object(destination) ? destination : {\n          to: String(destination)\n        }; // transformer for custom media into a JSON-compatible object\n\n        const toJSON = opts.toJSON || defaultCustomMediaToJSON;\n\n        if ('customMedia' in opts) {\n          // write directly to an object as customMedia\n          opts.customMedia = toJSON(customMedia);\n        } else if ('custom-media' in opts) {\n          // write directly to an object as custom-media\n          opts['custom-media'] = toJSON(customMedia);\n        } else {\n          // destination pathname\n          const to = String(opts.to || ''); // type of file being written to\n\n          const type = (opts.type || path.extname(to).slice(1)).toLowerCase(); // transformed custom media\n\n          const customMediaJSON = toJSON(customMedia);\n\n          if (type === 'css') {\n            yield writeCustomMediaToCssFile(to, customMediaJSON);\n          }\n\n          if (type === 'js') {\n            yield writeCustomMediaToCjsFile(to, customMediaJSON);\n          }\n\n          if (type === 'json') {\n            yield writeCustomMediaToJsonFile(to, customMediaJSON);\n          }\n\n          if (type === 'mjs') {\n            yield writeCustomMediaToMjsFile(to, customMediaJSON);\n          }\n        }\n      }\n    });\n\n    return function (_x9) {\n      return _ref.apply(this, arguments);\n    };\n  }()));\n}\n/* Helper utilities\n/* ========================================================================== */\n\n\nconst defaultCustomMediaToJSON = customMedia => {\n  return Object.keys(customMedia).reduce((customMediaJSON, key) => {\n    customMediaJSON[key] = String(customMedia[key]);\n    return customMediaJSON;\n  }, {});\n};\n\nconst writeFile = (to, text) => new Promise((resolve, reject) => {\n  fs.writeFile(to, text, error => {\n    if (error) {\n      reject(error);\n    } else {\n      resolve();\n    }\n  });\n});\n\nconst escapeForJS = string => string.replace(/\\\\([\\s\\S])|(')/g, '\\\\$1$2').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n\nvar index = postcss.plugin('postcss-custom-media', opts => {\n  // whether to preserve custom media and at-rules using them\n  const preserve = 'preserve' in Object(opts) ? Boolean(opts.preserve) : false; // sources to import custom media from\n\n  const importFrom = [].concat(Object(opts).importFrom || []); // destinations to export custom media to\n\n  const exportTo = [].concat(Object(opts).exportTo || []); // promise any custom media are imported\n\n  const customMediaPromise = getCustomMediaFromSources(importFrom);\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (root) {\n      const customMedia = Object.assign(yield customMediaPromise, getCustomMediaFromRoot(root, {\n        preserve\n      }));\n      yield writeCustomMediaToExports(customMedia, exportTo);\n      transformAtrules(root, customMedia, {\n        preserve\n      });\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});\nexport default index;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-custom-media/index.es.mjs"],"names":["postcss","fs","path","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","Array","isArray","_arr","_n","_d","_e","_i","Symbol","iterator","_s","next","push","TypeError","parse","string","splitByAnd","array","buffer","split","func","char","andRegExp","test","MediaExpression","MediaQuery","MediaQueryList","constructor","nodes","invert","node","clone","String","toString","join","_string$match","match","spaceWrapRegExp","_string$match2","before","media","after","_ref","mediaRegExp","_ref2","_ref2$","modifier","_ref2$2","afterModifier","_ref2$3","type","_ref2$4","beforeAnd","_ref2$5","and","_ref2$6","beforeExpression","_ref2$7","expression1","_ref2$8","expression2","raws","originalModifier","assign","overrides","instance","_ref3","_ref4","_ref4$","_ref4$2","_ref4$3","afterAnd","modifierRE","typeRE","noExpressionRE","expressionRE","noSpaceRE","spaceRE","andRE","RegExp","mediaASTFromString","getCustomMediaFromRoot","root","opts","customMedias","slice","isCustomMedia","_node$params$match","params","customMediaParamsRegExp","_node$params$match2","name","selectors","preserve","remove","customMediaNameRegExp","getCustomMediaFromCSSFile","_x","_getCustomMediaFromCSSFile","from","css","readFile","getCustomMediaFromObject","object","customMedia","getCustomMediaFromJSONFile","_x2","_getCustomMediaFromJSONFile","readJSON","getCustomMediaFromJSFile","_x3","_getCustomMediaFromJSFile","getCustomMediaFromSources","sources","map","Function","extname","toLowerCase","reduce","_x4","_x5","result","JSON","_x6","transformMediaList","mediaList","index","transformedMedias","transformMedia","splice","transpiledMedias","_media$nodes$index","replace","customPseudoRegExp","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","replacementMedia","mediaClone","spaces","nextCustomMedia","getCustomMediasWithoutKey","retranspiledMedias","return","nextCustomMedias","transformAtrules","walkAtRules","mediaAtRuleRegExp","atrule","customPseudoRegExp$1","mediaAST","cloneBefore","writeCustomMediaToCssFile","_writeCustomMediaToCssFile","to","cssContent","cssLines","writeFile","writeCustomMediaToJsonFile","_writeCustomMediaToJsonFile","jsonContent","stringify","json","writeCustomMediaToCjsFile","_writeCustomMediaToCjsFile","jsContents","jsLines","escapeForJS","js","writeCustomMediaToMjsFile","_x7","_x8","_writeCustomMediaToMjsFile","mjsContents","mjsLines","mjs","writeCustomMediaToExports","destinations","all","destination","defaultCustomMediaToJSON","toJSON","customMediaJSON","_x9","text","plugin","Boolean","importFrom","exportTo","customMediaPromise"],"mappings":"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","sourcesContent":["import postcss from 'postcss';\nimport fs from 'fs';\nimport path from 'path';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction parse(string, splitByAnd) {\n  const array = [];\n  let buffer = '';\n  let split = false;\n  let func = 0;\n  let i = -1;\n\n  while (++i < string.length) {\n    const char = string[i];\n\n    if (char === '(') {\n      func += 1;\n    } else if (char === ')') {\n      if (func > 0) {\n        func -= 1;\n      }\n    } else if (func === 0) {\n      if (splitByAnd && andRegExp.test(buffer + char)) {\n        split = true;\n      } else if (!splitByAnd && char === ',') {\n        split = true;\n      }\n    }\n\n    if (split) {\n      array.push(splitByAnd ? new MediaExpression(buffer + char) : new MediaQuery(buffer));\n      buffer = '';\n      split = false;\n    } else {\n      buffer += char;\n    }\n  }\n\n  if (buffer !== '') {\n    array.push(splitByAnd ? new MediaExpression(buffer) : new MediaQuery(buffer));\n  }\n\n  return array;\n}\n\nclass MediaQueryList {\n  constructor(string) {\n    this.nodes = parse(string);\n  }\n\n  invert() {\n    this.nodes.forEach(node => {\n      node.invert();\n    });\n    return this;\n  }\n\n  clone() {\n    return new MediaQueryList(String(this));\n  }\n\n  toString() {\n    return this.nodes.join(',');\n  }\n\n}\n\nclass MediaQuery {\n  constructor(string) {\n    const _string$match = string.match(spaceWrapRegExp),\n          _string$match2 = _slicedToArray(_string$match, 4),\n          before = _string$match2[1],\n          media = _string$match2[2],\n          after = _string$match2[3];\n\n    const _ref = media.match(mediaRegExp) || [],\n          _ref2 = _slicedToArray(_ref, 9),\n          _ref2$ = _ref2[1],\n          modifier = _ref2$ === void 0 ? '' : _ref2$,\n          _ref2$2 = _ref2[2],\n          afterModifier = _ref2$2 === void 0 ? ' ' : _ref2$2,\n          _ref2$3 = _ref2[3],\n          type = _ref2$3 === void 0 ? '' : _ref2$3,\n          _ref2$4 = _ref2[4],\n          beforeAnd = _ref2$4 === void 0 ? '' : _ref2$4,\n          _ref2$5 = _ref2[5],\n          and = _ref2$5 === void 0 ? '' : _ref2$5,\n          _ref2$6 = _ref2[6],\n          beforeExpression = _ref2$6 === void 0 ? '' : _ref2$6,\n          _ref2$7 = _ref2[7],\n          expression1 = _ref2$7 === void 0 ? '' : _ref2$7,\n          _ref2$8 = _ref2[8],\n          expression2 = _ref2$8 === void 0 ? '' : _ref2$8;\n\n    const raws = {\n      before,\n      after,\n      afterModifier,\n      originalModifier: modifier || '',\n      beforeAnd,\n      and,\n      beforeExpression\n    };\n    const nodes = parse(expression1 || expression2, true);\n    Object.assign(this, {\n      modifier,\n      type,\n      raws,\n      nodes\n    });\n  }\n\n  clone(overrides) {\n    const instance = new MediaQuery(String(this));\n    Object.assign(instance, overrides);\n    return instance;\n  }\n\n  invert() {\n    this.modifier = this.modifier ? '' : this.raws.originalModifier;\n    return this;\n  }\n\n  toString() {\n    const raws = this.raws;\n    return `${raws.before}${this.modifier}${this.modifier ? `${raws.afterModifier}` : ''}${this.type}${raws.beforeAnd}${raws.and}${raws.beforeExpression}${this.nodes.join('')}${this.raws.after}`;\n  }\n\n}\n\nclass MediaExpression {\n  constructor(string) {\n    const _ref3 = string.match(andRegExp) || [null, string],\n          _ref4 = _slicedToArray(_ref3, 5),\n          value = _ref4[1],\n          _ref4$ = _ref4[2],\n          after = _ref4$ === void 0 ? '' : _ref4$,\n          _ref4$2 = _ref4[3],\n          and = _ref4$2 === void 0 ? '' : _ref4$2,\n          _ref4$3 = _ref4[4],\n          afterAnd = _ref4$3 === void 0 ? '' : _ref4$3;\n\n    const raws = {\n      after,\n      and,\n      afterAnd\n    };\n    Object.assign(this, {\n      value,\n      raws\n    });\n  }\n\n  clone(overrides) {\n    const instance = new MediaExpression(String(this));\n    Object.assign(instance, overrides);\n    return instance;\n  }\n\n  toString() {\n    const raws = this.raws;\n    return `${this.value}${raws.after}${raws.and}${raws.afterAnd}`;\n  }\n\n}\n\nconst modifierRE = '(not|only)';\nconst typeRE = '(all|print|screen|speech)';\nconst noExpressionRE = '([\\\\W\\\\w]*)';\nconst expressionRE = '([\\\\W\\\\w]+)';\nconst noSpaceRE = '(\\\\s*)';\nconst spaceRE = '(\\\\s+)';\nconst andRE = '(?:(\\\\s+)(and))';\nconst andRegExp = new RegExp(`^${expressionRE}(?:${andRE}${spaceRE})$`, 'i');\nconst spaceWrapRegExp = new RegExp(`^${noSpaceRE}${noExpressionRE}${noSpaceRE}$`);\nconst mediaRegExp = new RegExp(`^(?:${modifierRE}${spaceRE})?(?:${typeRE}(?:${andRE}${spaceRE}${expressionRE})?|${expressionRE})$`, 'i');\nvar mediaASTFromString = (string => new MediaQueryList(string));\n\nvar getCustomMediaFromRoot = ((root, opts) => {\n  // initialize custom selectors\n  const customMedias = {}; // for each custom selector atrule that is a child of the css root\n\n  root.nodes.slice().forEach(node => {\n    if (isCustomMedia(node)) {\n      // extract the name and selectors from the params of the custom selector\n      const _node$params$match = node.params.match(customMediaParamsRegExp),\n            _node$params$match2 = _slicedToArray(_node$params$match, 3),\n            name = _node$params$match2[1],\n            selectors = _node$params$match2[2]; // write the parsed selectors to the custom selector\n\n\n      customMedias[name] = mediaASTFromString(selectors); // conditionally remove the custom selector atrule\n\n      if (!Object(opts).preserve) {\n        node.remove();\n      }\n    }\n  });\n  return customMedias;\n}); // match the custom selector name\n\nconst customMediaNameRegExp = /^custom-media$/i; // match the custom selector params\n\nconst customMediaParamsRegExp = /^(--[A-z][\\w-]*)\\s+([\\W\\w]+)\\s*$/; // whether the atrule is a custom selector\n\nconst isCustomMedia = node => node.type === 'atrule' && customMediaNameRegExp.test(node.name) && customMediaParamsRegExp.test(node.params);\n\n/* Get Custom Media from CSS File\n/* ========================================================================== */\n\nfunction getCustomMediaFromCSSFile(_x) {\n  return _getCustomMediaFromCSSFile.apply(this, arguments);\n}\n/* Get Custom Media from Object\n/* ========================================================================== */\n\n\nfunction _getCustomMediaFromCSSFile() {\n  _getCustomMediaFromCSSFile = _asyncToGenerator(function* (from) {\n    const css = yield readFile(from);\n    const root = postcss.parse(css, {\n      from\n    });\n    return getCustomMediaFromRoot(root, {\n      preserve: true\n    });\n  });\n  return _getCustomMediaFromCSSFile.apply(this, arguments);\n}\n\nfunction getCustomMediaFromObject(object) {\n  const customMedia = Object.assign({}, Object(object).customMedia, Object(object)['custom-media']);\n\n  for (const key in customMedia) {\n    customMedia[key] = mediaASTFromString(customMedia[key]);\n  }\n\n  return customMedia;\n}\n/* Get Custom Media from JSON file\n/* ========================================================================== */\n\n\nfunction getCustomMediaFromJSONFile(_x2) {\n  return _getCustomMediaFromJSONFile.apply(this, arguments);\n}\n/* Get Custom Media from JS file\n/* ========================================================================== */\n\n\nfunction _getCustomMediaFromJSONFile() {\n  _getCustomMediaFromJSONFile = _asyncToGenerator(function* (from) {\n    const object = yield readJSON(from);\n    return getCustomMediaFromObject(object);\n  });\n  return _getCustomMediaFromJSONFile.apply(this, arguments);\n}\n\nfunction getCustomMediaFromJSFile(_x3) {\n  return _getCustomMediaFromJSFile.apply(this, arguments);\n}\n/* Get Custom Media from Sources\n/* ========================================================================== */\n\n\nfunction _getCustomMediaFromJSFile() {\n  _getCustomMediaFromJSFile = _asyncToGenerator(function* (from) {\n    const object = yield import(from);\n    return getCustomMediaFromObject(object);\n  });\n  return _getCustomMediaFromJSFile.apply(this, arguments);\n}\n\nfunction getCustomMediaFromSources(sources) {\n  return sources.map(source => {\n    if (source instanceof Promise) {\n      return source;\n    } else if (source instanceof Function) {\n      return source();\n    } // read the source as an object\n\n\n    const opts = source === Object(source) ? source : {\n      from: String(source)\n    }; // skip objects with custom media\n\n    if (Object(opts).customMedia || Object(opts)['custom-media']) {\n      return opts;\n    } // source pathname\n\n\n    const from = path.resolve(String(opts.from || '')); // type of file being read from\n\n    const type = (opts.type || path.extname(from).slice(1)).toLowerCase();\n    return {\n      type,\n      from\n    };\n  }).reduce(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(function* (customMedia, source) {\n      const _ref2 = yield source,\n            type = _ref2.type,\n            from = _ref2.from;\n\n      if (type === 'css' || type === 'pcss') {\n        return Object.assign((yield customMedia), (yield getCustomMediaFromCSSFile(from)));\n      }\n\n      if (type === 'js') {\n        return Object.assign((yield customMedia), (yield getCustomMediaFromJSFile(from)));\n      }\n\n      if (type === 'json') {\n        return Object.assign((yield customMedia), (yield getCustomMediaFromJSONFile(from)));\n      }\n\n      return Object.assign((yield customMedia), getCustomMediaFromObject((yield source)));\n    });\n\n    return function (_x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }(), {});\n}\n/* Helper utilities\n/* ========================================================================== */\n\nconst readFile = from => new Promise((resolve, reject) => {\n  fs.readFile(from, 'utf8', (error, result) => {\n    if (error) {\n      reject(error);\n    } else {\n      resolve(result);\n    }\n  });\n});\n\nconst readJSON =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(function* (from) {\n    return JSON.parse((yield readFile(from)));\n  });\n\n  return function readJSON(_x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\n// return transformed medias, replacing custom pseudo medias with custom medias\nfunction transformMediaList(mediaList, customMedias) {\n  let index = mediaList.nodes.length - 1;\n\n  while (index >= 0) {\n    const transformedMedias = transformMedia(mediaList.nodes[index], customMedias);\n\n    if (transformedMedias.length) {\n      mediaList.nodes.splice(index, 1, ...transformedMedias);\n    }\n\n    --index;\n  }\n\n  return mediaList;\n} // return custom pseudo medias replaced with custom medias\n\nfunction transformMedia(media, customMedias) {\n  const transpiledMedias = [];\n\n  for (const index in media.nodes) {\n    const _media$nodes$index = media.nodes[index],\n          value = _media$nodes$index.value,\n          nodes = _media$nodes$index.nodes;\n    const key = value.replace(customPseudoRegExp, '$1');\n\n    if (key in customMedias) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = customMedias[key].nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          const replacementMedia = _step.value;\n          // use the first available modifier unless they cancel each other out\n          const modifier = media.modifier !== replacementMedia.modifier ? media.modifier || replacementMedia.modifier : '';\n          const mediaClone = media.clone({\n            modifier,\n            // conditionally use the raws from the first available modifier\n            raws: !modifier || media.modifier ? _objectSpread({}, media.raws) : _objectSpread({}, replacementMedia.raws),\n            type: media.type || replacementMedia.type\n          }); // conditionally include more replacement raws when the type is present\n\n          if (mediaClone.type === replacementMedia.type) {\n            Object.assign(mediaClone.raws, {\n              and: replacementMedia.raws.and,\n              beforeAnd: replacementMedia.raws.beforeAnd,\n              beforeExpression: replacementMedia.raws.beforeExpression\n            });\n          }\n\n          mediaClone.nodes.splice(index, 1, ...replacementMedia.clone().nodes.map(node => {\n            // use raws and spacing from the current usage\n            if (media.nodes[index].raws.and) {\n              node.raws = _objectSpread({}, media.nodes[index].raws);\n            }\n\n            node.spaces = _objectSpread({}, media.nodes[index].spaces);\n            return node;\n          })); // remove the currently transformed key to prevent recursion\n\n          const nextCustomMedia = getCustomMediasWithoutKey(customMedias, key);\n          const retranspiledMedias = transformMedia(mediaClone, nextCustomMedia);\n\n          if (retranspiledMedias.length) {\n            transpiledMedias.push(...retranspiledMedias);\n          } else {\n            transpiledMedias.push(mediaClone);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return transpiledMedias;\n    } else if (nodes && nodes.length) {\n      transformMediaList(media.nodes[index], customMedias);\n    }\n  }\n\n  return transpiledMedias;\n}\n\nconst customPseudoRegExp = /\\((--[A-z][\\w-]*)\\)/;\n\nconst getCustomMediasWithoutKey = (customMedias, key) => {\n  const nextCustomMedias = Object.assign({}, customMedias);\n  delete nextCustomMedias[key];\n  return nextCustomMedias;\n};\n\nvar transformAtrules = ((root, customMedia, opts) => {\n  root.walkAtRules(mediaAtRuleRegExp, atrule => {\n    if (customPseudoRegExp$1.test(atrule.params)) {\n      const mediaAST = mediaASTFromString(atrule.params);\n      const params = String(transformMediaList(mediaAST, customMedia));\n\n      if (opts.preserve) {\n        atrule.cloneBefore({\n          params\n        });\n      } else {\n        atrule.params = params;\n      }\n    }\n  });\n});\nconst mediaAtRuleRegExp = /^media$/i;\nconst customPseudoRegExp$1 = /\\(--[A-z][\\w-]*\\)/;\n\n/* Write Custom Media from CSS File\n/* ========================================================================== */\n\nfunction writeCustomMediaToCssFile(_x, _x2) {\n  return _writeCustomMediaToCssFile.apply(this, arguments);\n}\n/* Write Custom Media from JSON file\n/* ========================================================================== */\n\n\nfunction _writeCustomMediaToCssFile() {\n  _writeCustomMediaToCssFile = _asyncToGenerator(function* (to, customMedia) {\n    const cssContent = Object.keys(customMedia).reduce((cssLines, name) => {\n      cssLines.push(`@custom-media ${name} ${customMedia[name]};`);\n      return cssLines;\n    }, []).join('\\n');\n    const css = `${cssContent}\\n`;\n    yield writeFile(to, css);\n  });\n  return _writeCustomMediaToCssFile.apply(this, arguments);\n}\n\nfunction writeCustomMediaToJsonFile(_x3, _x4) {\n  return _writeCustomMediaToJsonFile.apply(this, arguments);\n}\n/* Write Custom Media from Common JS file\n/* ========================================================================== */\n\n\nfunction _writeCustomMediaToJsonFile() {\n  _writeCustomMediaToJsonFile = _asyncToGenerator(function* (to, customMedia) {\n    const jsonContent = JSON.stringify({\n      'custom-media': customMedia\n    }, null, '  ');\n    const json = `${jsonContent}\\n`;\n    yield writeFile(to, json);\n  });\n  return _writeCustomMediaToJsonFile.apply(this, arguments);\n}\n\nfunction writeCustomMediaToCjsFile(_x5, _x6) {\n  return _writeCustomMediaToCjsFile.apply(this, arguments);\n}\n/* Write Custom Media from Module JS file\n/* ========================================================================== */\n\n\nfunction _writeCustomMediaToCjsFile() {\n  _writeCustomMediaToCjsFile = _asyncToGenerator(function* (to, customMedia) {\n    const jsContents = Object.keys(customMedia).reduce((jsLines, name) => {\n      jsLines.push(`\\t\\t'${escapeForJS(name)}': '${escapeForJS(customMedia[name])}'`);\n      return jsLines;\n    }, []).join(',\\n');\n    const js = `module.exports = {\\n\\tcustomMedia: {\\n${jsContents}\\n\\t}\\n};\\n`;\n    yield writeFile(to, js);\n  });\n  return _writeCustomMediaToCjsFile.apply(this, arguments);\n}\n\nfunction writeCustomMediaToMjsFile(_x7, _x8) {\n  return _writeCustomMediaToMjsFile.apply(this, arguments);\n}\n/* Write Custom Media to Exports\n/* ========================================================================== */\n\n\nfunction _writeCustomMediaToMjsFile() {\n  _writeCustomMediaToMjsFile = _asyncToGenerator(function* (to, customMedia) {\n    const mjsContents = Object.keys(customMedia).reduce((mjsLines, name) => {\n      mjsLines.push(`\\t'${escapeForJS(name)}': '${escapeForJS(customMedia[name])}'`);\n      return mjsLines;\n    }, []).join(',\\n');\n    const mjs = `export const customMedia = {\\n${mjsContents}\\n};\\n`;\n    yield writeFile(to, mjs);\n  });\n  return _writeCustomMediaToMjsFile.apply(this, arguments);\n}\n\nfunction writeCustomMediaToExports(customMedia, destinations) {\n  return Promise.all(destinations.map(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(function* (destination) {\n      if (destination instanceof Function) {\n        yield destination(defaultCustomMediaToJSON(customMedia));\n      } else {\n        // read the destination as an object\n        const opts = destination === Object(destination) ? destination : {\n          to: String(destination)\n        }; // transformer for custom media into a JSON-compatible object\n\n        const toJSON = opts.toJSON || defaultCustomMediaToJSON;\n\n        if ('customMedia' in opts) {\n          // write directly to an object as customMedia\n          opts.customMedia = toJSON(customMedia);\n        } else if ('custom-media' in opts) {\n          // write directly to an object as custom-media\n          opts['custom-media'] = toJSON(customMedia);\n        } else {\n          // destination pathname\n          const to = String(opts.to || ''); // type of file being written to\n\n          const type = (opts.type || path.extname(to).slice(1)).toLowerCase(); // transformed custom media\n\n          const customMediaJSON = toJSON(customMedia);\n\n          if (type === 'css') {\n            yield writeCustomMediaToCssFile(to, customMediaJSON);\n          }\n\n          if (type === 'js') {\n            yield writeCustomMediaToCjsFile(to, customMediaJSON);\n          }\n\n          if (type === 'json') {\n            yield writeCustomMediaToJsonFile(to, customMediaJSON);\n          }\n\n          if (type === 'mjs') {\n            yield writeCustomMediaToMjsFile(to, customMediaJSON);\n          }\n        }\n      }\n    });\n\n    return function (_x9) {\n      return _ref.apply(this, arguments);\n    };\n  }()));\n}\n/* Helper utilities\n/* ========================================================================== */\n\nconst defaultCustomMediaToJSON = customMedia => {\n  return Object.keys(customMedia).reduce((customMediaJSON, key) => {\n    customMediaJSON[key] = String(customMedia[key]);\n    return customMediaJSON;\n  }, {});\n};\n\nconst writeFile = (to, text) => new Promise((resolve, reject) => {\n  fs.writeFile(to, text, error => {\n    if (error) {\n      reject(error);\n    } else {\n      resolve();\n    }\n  });\n});\n\nconst escapeForJS = string => string.replace(/\\\\([\\s\\S])|(')/g, '\\\\$1$2').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n\nvar index = postcss.plugin('postcss-custom-media', opts => {\n  // whether to preserve custom media and at-rules using them\n  const preserve = 'preserve' in Object(opts) ? Boolean(opts.preserve) : false; // sources to import custom media from\n\n  const importFrom = [].concat(Object(opts).importFrom || []); // destinations to export custom media to\n\n  const exportTo = [].concat(Object(opts).exportTo || []); // promise any custom media are imported\n\n  const customMediaPromise = getCustomMediaFromSources(importFrom);\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(function* (root) {\n        const customMedia = Object.assign((yield customMediaPromise), getCustomMediaFromRoot(root, {\n          preserve\n        }));\n        yield writeCustomMediaToExports(customMedia, exportTo);\n        transformAtrules(root, customMedia, {\n          preserve\n        });\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n});\n\nexport default index;\n//# sourceMappingURL=index.es.mjs.map\n"]},"metadata":{},"sourceType":"module"}