{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _loaderUtils = require(\"loader-utils\");\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _getSassImplementation = _interopRequireDefault(require(\"./getSassImplementation\"));\n\nvar _getSassOptions = _interopRequireDefault(require(\"./getSassOptions\"));\n\nvar _webpackImporter = _interopRequireDefault(require(\"./webpackImporter\"));\n\nvar _getRenderFunctionFromSassImplementation = _interopRequireDefault(require(\"./getRenderFunctionFromSassImplementation\"));\n\nvar _SassError = _interopRequireDefault(require(\"./SassError\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * The sass-loader makes node-sass and dart-sass available to webpack modules.\n *\n * @this {object}\n * @param {string} content\n */\n\n\nfunction loader(content) {\n  const options = (0, _loaderUtils.getOptions)(this) || {};\n  (0, _schemaUtils.default)(_options.default, options, {\n    name: 'Sass Loader',\n    baseDataPath: 'options'\n  });\n  const implementation = (0, _getSassImplementation.default)(options.implementation);\n  const callback = this.async();\n\n  const addNormalizedDependency = file => {\n    // node-sass returns POSIX paths\n    this.addDependency(_path.default.normalize(file));\n  };\n\n  const sassOptions = (0, _getSassOptions.default)(this, options, content, implementation);\n  const shouldUseWebpackImporter = typeof options.webpackImporter === 'boolean' ? options.webpackImporter : true;\n\n  if (shouldUseWebpackImporter) {\n    const resolve = this.getResolve({\n      mainFields: ['sass', 'style', 'main', '...'],\n      mainFiles: ['_index', 'index', '...'],\n      extensions: ['.scss', '.sass', '.css', '...']\n    });\n    sassOptions.importer.push((0, _webpackImporter.default)(this.resourcePath, resolve, addNormalizedDependency));\n  } // Skip empty files, otherwise it will stop webpack, see issue #21\n\n\n  if (sassOptions.data.trim() === '') {\n    callback(null, '');\n    return;\n  }\n\n  const render = (0, _getRenderFunctionFromSassImplementation.default)(implementation);\n  render(sassOptions, (error, result) => {\n    if (error) {\n      if (error.file) {\n        addNormalizedDependency(error.file);\n      }\n\n      callback(new _SassError.default(error, this.resourcePath));\n      return;\n    }\n\n    if (result.map && result.map !== '{}') {\n      // eslint-disable-next-line no-param-reassign\n      result.map = JSON.parse(result.map); // result.map.file is an optional property that provides the output filename.\n      // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n      // eslint-disable-next-line no-param-reassign\n\n      delete result.map.file; // One of the sources is 'stdin' according to dart-sass/node-sass because we've used the data input.\n      // Now let's override that value with the correct relative path.\n      // Since we specified options.sourceMap = path.join(process.cwd(), \"/sass.map\"); in getSassOptions,\n      // we know that this path is relative to process.cwd(). This is how node-sass works.\n      // eslint-disable-next-line no-param-reassign\n\n      const stdinIndex = result.map.sources.findIndex(source => source.includes('stdin'));\n\n      if (stdinIndex !== -1) {\n        // eslint-disable-next-line no-param-reassign\n        result.map.sources[stdinIndex] = _path.default.relative(process.cwd(), this.resourcePath);\n      } // node-sass returns POSIX paths, that's why we need to transform them back to native paths.\n      // This fixes an error on windows where the source-map module cannot resolve the source maps.\n      // @see https://github.com/webpack-contrib/sass-loader/issues/366#issuecomment-279460722\n      // eslint-disable-next-line no-param-reassign\n\n\n      result.map.sourceRoot = _path.default.normalize(result.map.sourceRoot); // eslint-disable-next-line no-param-reassign\n\n      result.map.sources = result.map.sources.map(_path.default.normalize);\n    } else {\n      // eslint-disable-next-line no-param-reassign\n      result.map = null;\n    }\n\n    result.stats.includedFiles.forEach(addNormalizedDependency);\n    callback(null, result.css.toString(), result.map);\n  });\n}\n\nvar _default = loader;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/sass-loader/dist/index.js"],"names":["Object","defineProperty","exports","value","default","_path","_interopRequireDefault","require","_schemaUtils","_loaderUtils","_options","_getSassImplementation","_getSassOptions","_webpackImporter","_getRenderFunctionFromSassImplementation","_SassError","obj","__esModule","loader","content","options","getOptions","name","baseDataPath","implementation","callback","async","addNormalizedDependency","file","addDependency","normalize","sassOptions","shouldUseWebpackImporter","webpackImporter","resolve","getResolve","mainFields","mainFiles","extensions","importer","push","resourcePath","data","trim","render","error","result","map","JSON","parse","stdinIndex","sources","findIndex","source","includes","relative","process","cwd","sourceRoot","stats","includedFiles","forEach","css","toString","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _loaderUtils = require(\"loader-utils\");\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _getSassImplementation = _interopRequireDefault(require(\"./getSassImplementation\"));\n\nvar _getSassOptions = _interopRequireDefault(require(\"./getSassOptions\"));\n\nvar _webpackImporter = _interopRequireDefault(require(\"./webpackImporter\"));\n\nvar _getRenderFunctionFromSassImplementation = _interopRequireDefault(require(\"./getRenderFunctionFromSassImplementation\"));\n\nvar _SassError = _interopRequireDefault(require(\"./SassError\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The sass-loader makes node-sass and dart-sass available to webpack modules.\n *\n * @this {object}\n * @param {string} content\n */\nfunction loader(content) {\n  const options = (0, _loaderUtils.getOptions)(this) || {};\n  (0, _schemaUtils.default)(_options.default, options, {\n    name: 'Sass Loader',\n    baseDataPath: 'options'\n  });\n  const implementation = (0, _getSassImplementation.default)(options.implementation);\n  const callback = this.async();\n\n  const addNormalizedDependency = file => {\n    // node-sass returns POSIX paths\n    this.addDependency(_path.default.normalize(file));\n  };\n\n  const sassOptions = (0, _getSassOptions.default)(this, options, content, implementation);\n  const shouldUseWebpackImporter = typeof options.webpackImporter === 'boolean' ? options.webpackImporter : true;\n\n  if (shouldUseWebpackImporter) {\n    const resolve = this.getResolve({\n      mainFields: ['sass', 'style', 'main', '...'],\n      mainFiles: ['_index', 'index', '...'],\n      extensions: ['.scss', '.sass', '.css', '...']\n    });\n    sassOptions.importer.push((0, _webpackImporter.default)(this.resourcePath, resolve, addNormalizedDependency));\n  } // Skip empty files, otherwise it will stop webpack, see issue #21\n\n\n  if (sassOptions.data.trim() === '') {\n    callback(null, '');\n    return;\n  }\n\n  const render = (0, _getRenderFunctionFromSassImplementation.default)(implementation);\n  render(sassOptions, (error, result) => {\n    if (error) {\n      if (error.file) {\n        addNormalizedDependency(error.file);\n      }\n\n      callback(new _SassError.default(error, this.resourcePath));\n      return;\n    }\n\n    if (result.map && result.map !== '{}') {\n      // eslint-disable-next-line no-param-reassign\n      result.map = JSON.parse(result.map); // result.map.file is an optional property that provides the output filename.\n      // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n      // eslint-disable-next-line no-param-reassign\n\n      delete result.map.file; // One of the sources is 'stdin' according to dart-sass/node-sass because we've used the data input.\n      // Now let's override that value with the correct relative path.\n      // Since we specified options.sourceMap = path.join(process.cwd(), \"/sass.map\"); in getSassOptions,\n      // we know that this path is relative to process.cwd(). This is how node-sass works.\n      // eslint-disable-next-line no-param-reassign\n\n      const stdinIndex = result.map.sources.findIndex(source => source.includes('stdin'));\n\n      if (stdinIndex !== -1) {\n        // eslint-disable-next-line no-param-reassign\n        result.map.sources[stdinIndex] = _path.default.relative(process.cwd(), this.resourcePath);\n      } // node-sass returns POSIX paths, that's why we need to transform them back to native paths.\n      // This fixes an error on windows where the source-map module cannot resolve the source maps.\n      // @see https://github.com/webpack-contrib/sass-loader/issues/366#issuecomment-279460722\n      // eslint-disable-next-line no-param-reassign\n\n\n      result.map.sourceRoot = _path.default.normalize(result.map.sourceRoot); // eslint-disable-next-line no-param-reassign\n\n      result.map.sources = result.map.sources.map(_path.default.normalize);\n    } else {\n      // eslint-disable-next-line no-param-reassign\n      result.map = null;\n    }\n\n    result.stats.includedFiles.forEach(addNormalizedDependency);\n    callback(null, result.css.toString(), result.map);\n  });\n}\n\nvar _default = loader;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}