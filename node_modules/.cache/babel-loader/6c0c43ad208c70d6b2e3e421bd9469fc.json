{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observable_1 = require(\"../Observable\");\n\nfunction range(start, count, scheduler) {\n  if (start === void 0) {\n    start = 0;\n  }\n\n  return new Observable_1.Observable(function (subscriber) {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    var index = 0;\n    var current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index: index,\n        count: count,\n        start: start,\n        subscriber: subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n\n        subscriber.next(current++);\n\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\nexports.range = range;\n\nfunction dispatch(state) {\n  var start = state.start,\n      index = state.index,\n      count = state.count,\n      subscriber = state.subscriber;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n  this.schedule(state);\n}\n\nexports.dispatch = dispatch;","map":{"version":3,"sources":["../../src/internal/observable/range.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAoCA,SAAgB,KAAhB,CAAsB,KAAtB,EACsB,KADtB,EAEsB,SAFtB,EAE+C;AAFzB,MAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAiB;;AAGrC,SAAO,IAAI,YAAA,CAAA,UAAJ,CAAuB,UAAA,UAAA,EAAU;AACtC,QAAI,KAAK,KAAK,SAAd,EAAyB;AACvB,MAAA,KAAK,GAAG,KAAR;AACA,MAAA,KAAK,GAAG,CAAR;AACD;;AAED,QAAI,KAAK,GAAG,CAAZ;AACA,QAAI,OAAO,GAAG,KAAd;;AAEA,QAAI,SAAJ,EAAe;AACb,aAAO,SAAS,CAAC,QAAV,CAAmB,QAAnB,EAA6B,CAA7B,EAAgC;AACrC,QAAA,KAAK,EAAA,KADgC;AAC9B,QAAA,KAAK,EAAA,KADyB;AACvB,QAAA,KAAK,EAAA,KADkB;AAChB,QAAA,UAAU,EAAA;AADM,OAAhC,CAAP;AAGD,KAJD,MAIO;AACL,SAAG;AACD,YAAI,KAAK,MAAM,KAAf,EAAsB;AACpB,UAAA,UAAU,CAAC,QAAX;AACA;AACD;;AACD,QAAA,UAAU,CAAC,IAAX,CAAgB,OAAO,EAAvB;;AACA,YAAI,UAAU,CAAC,MAAf,EAAuB;AACrB;AACD;AACF,OATD,QASS,IATT;AAUD;;AAED,WAAO,SAAP;AACD,GA3BM,CAAP;AA4BD;;AA/BD,OAAA,CAAA,KAAA,GAAA,KAAA;;AAkCA,SAAgB,QAAhB,CAAqD,KAArD,EAA+D;AACrD,MAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AAAA,MAAO,KAAA,GAAA,KAAA,CAAA,KAAP;AAAA,MAAc,KAAA,GAAA,KAAA,CAAA,KAAd;AAAA,MAAqB,UAAA,GAAA,KAAA,CAAA,UAArB;;AAER,MAAI,KAAK,IAAI,KAAb,EAAoB;AAClB,IAAA,UAAU,CAAC,QAAX;AACA;AACD;;AAED,EAAA,UAAU,CAAC,IAAX,CAAgB,KAAhB;;AAEA,MAAI,UAAU,CAAC,MAAf,EAAuB;AACrB;AACD;;AAED,EAAA,KAAK,CAAC,KAAN,GAAc,KAAK,GAAG,CAAtB;AACA,EAAA,KAAK,CAAC,KAAN,GAAc,KAAK,GAAG,CAAtB;AAEA,OAAK,QAAL,CAAc,KAAd;AACD;;AAlBD,OAAA,CAAA,QAAA,GAAA,QAAA","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nfunction range(start, count, scheduler) {\n    if (start === void 0) { start = 0; }\n    return new Observable_1.Observable(function (subscriber) {\n        if (count === undefined) {\n            count = start;\n            start = 0;\n        }\n        var index = 0;\n        var current = start;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(current++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\nexports.range = range;\nfunction dispatch(state) {\n    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\nexports.dispatch = dispatch;\n//# sourceMappingURL=range.js.map"]},"metadata":{},"sourceType":"script"}