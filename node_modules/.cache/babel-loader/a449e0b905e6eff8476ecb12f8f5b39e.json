{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst fs = require(\"fs\");\n\nfunction fileExistsSync(filePath) {\n  try {\n    fs.statSync(filePath);\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      return false;\n    } else {\n      throw err;\n    }\n  }\n\n  return true;\n}\n\nexports.fileExistsSync = fileExistsSync;\n\nfunction throwIfIsInvalidSourceFileError(filepath, error) {\n  if (fileExistsSync(filepath) && // check the error type due to file system lag\n  !(error instanceof Error) && !(error.constructor.name === 'FatalError') && !(error.message && error.message.trim().startsWith('Invalid source file'))) {\n    // it's not because file doesn't exist - throw error\n    throw error;\n  }\n}\n\nexports.throwIfIsInvalidSourceFileError = throwIfIsInvalidSourceFileError;","map":{"version":3,"sources":["../src/FsHelper.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,EAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AAEA,SAAgB,cAAhB,CAA+B,QAA/B,EAAoD;AAClD,MAAI;AACF,IAAA,EAAE,CAAC,QAAH,CAAY,QAAZ;AACD,GAFD,CAEE,OAAO,GAAP,EAAY;AACZ,QAAI,GAAG,CAAC,IAAJ,KAAa,QAAjB,EAA2B;AACzB,aAAO,KAAP;AACD,KAFD,MAEO;AACL,YAAM,GAAN;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAXD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAaA,SAAgB,+BAAhB,CAAgD,QAAhD,EAAkE,KAAlE,EAA4E;AAC1E,MACE,cAAc,CAAC,QAAD,CAAd,IACA;AACA,IAAE,KAAK,YAAY,KAAnB,CAFA,IAGA,EAAE,KAAK,CAAC,WAAN,CAAkB,IAAlB,KAA2B,YAA7B,CAHA,IAIA,EAAE,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAN,CAAc,IAAd,GAAqB,UAArB,CAAgC,qBAAhC,CAAnB,CALF,EAME;AACA;AACA,UAAM,KAAN;AACD;AACF;;AAXD,OAAA,CAAA,+BAAA,GAAA,+BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nfunction fileExistsSync(filePath) {\n    try {\n        fs.statSync(filePath);\n    }\n    catch (err) {\n        if (err.code === 'ENOENT') {\n            return false;\n        }\n        else {\n            throw err;\n        }\n    }\n    return true;\n}\nexports.fileExistsSync = fileExistsSync;\nfunction throwIfIsInvalidSourceFileError(filepath, error) {\n    if (fileExistsSync(filepath) &&\n        // check the error type due to file system lag\n        !(error instanceof Error) &&\n        !(error.constructor.name === 'FatalError') &&\n        !(error.message && error.message.trim().startsWith('Invalid source file'))) {\n        // it's not because file doesn't exist - throw error\n        throw error;\n    }\n}\nexports.throwIfIsInvalidSourceFileError = throwIfIsInvalidSourceFileError;\n//# sourceMappingURL=FsHelper.js.map"]},"metadata":{},"sourceType":"script"}