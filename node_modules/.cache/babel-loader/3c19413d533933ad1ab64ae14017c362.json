{"ast":null,"code":"/**\n * @fileoverview The AST node types produced by the parser.\n * @author Nicholas C. Zakas\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n// None!\n//------------------------------------------------------------------------------\n// Public\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  AssignmentExpression: \"AssignmentExpression\",\n  AssignmentPattern: \"AssignmentPattern\",\n  ArrayExpression: \"ArrayExpression\",\n  ArrayPattern: \"ArrayPattern\",\n  ArrowFunctionExpression: \"ArrowFunctionExpression\",\n  AwaitExpression: \"AwaitExpression\",\n  BlockStatement: \"BlockStatement\",\n  BinaryExpression: \"BinaryExpression\",\n  BreakStatement: \"BreakStatement\",\n  CallExpression: \"CallExpression\",\n  CatchClause: \"CatchClause\",\n  ClassBody: \"ClassBody\",\n  ClassDeclaration: \"ClassDeclaration\",\n  ClassExpression: \"ClassExpression\",\n  ConditionalExpression: \"ConditionalExpression\",\n  ContinueStatement: \"ContinueStatement\",\n  DoWhileStatement: \"DoWhileStatement\",\n  DebuggerStatement: \"DebuggerStatement\",\n  EmptyStatement: \"EmptyStatement\",\n  ExpressionStatement: \"ExpressionStatement\",\n  ForStatement: \"ForStatement\",\n  ForInStatement: \"ForInStatement\",\n  ForOfStatement: \"ForOfStatement\",\n  FunctionDeclaration: \"FunctionDeclaration\",\n  FunctionExpression: \"FunctionExpression\",\n  Identifier: \"Identifier\",\n  IfStatement: \"IfStatement\",\n  Literal: \"Literal\",\n  LabeledStatement: \"LabeledStatement\",\n  LogicalExpression: \"LogicalExpression\",\n  MemberExpression: \"MemberExpression\",\n  MetaProperty: \"MetaProperty\",\n  MethodDefinition: \"MethodDefinition\",\n  NewExpression: \"NewExpression\",\n  ObjectExpression: \"ObjectExpression\",\n  ObjectPattern: \"ObjectPattern\",\n  Program: \"Program\",\n  Property: \"Property\",\n  RestElement: \"RestElement\",\n  ReturnStatement: \"ReturnStatement\",\n  SequenceExpression: \"SequenceExpression\",\n  SpreadElement: \"SpreadElement\",\n  Super: \"Super\",\n  SwitchCase: \"SwitchCase\",\n  SwitchStatement: \"SwitchStatement\",\n  TaggedTemplateExpression: \"TaggedTemplateExpression\",\n  TemplateElement: \"TemplateElement\",\n  TemplateLiteral: \"TemplateLiteral\",\n  ThisExpression: \"ThisExpression\",\n  ThrowStatement: \"ThrowStatement\",\n  TryStatement: \"TryStatement\",\n  UnaryExpression: \"UnaryExpression\",\n  UpdateExpression: \"UpdateExpression\",\n  VariableDeclaration: \"VariableDeclaration\",\n  VariableDeclarator: \"VariableDeclarator\",\n  WhileStatement: \"WhileStatement\",\n  WithStatement: \"WithStatement\",\n  YieldExpression: \"YieldExpression\",\n  JSXIdentifier: \"JSXIdentifier\",\n  JSXNamespacedName: \"JSXNamespacedName\",\n  JSXMemberExpression: \"JSXMemberExpression\",\n  JSXEmptyExpression: \"JSXEmptyExpression\",\n  JSXExpressionContainer: \"JSXExpressionContainer\",\n  JSXElement: \"JSXElement\",\n  JSXClosingElement: \"JSXClosingElement\",\n  JSXOpeningElement: \"JSXOpeningElement\",\n  JSXAttribute: \"JSXAttribute\",\n  JSXSpreadAttribute: \"JSXSpreadAttribute\",\n  JSXText: \"JSXText\",\n  ExportDefaultDeclaration: \"ExportDefaultDeclaration\",\n  ExportNamedDeclaration: \"ExportNamedDeclaration\",\n  ExportAllDeclaration: \"ExportAllDeclaration\",\n  ExportSpecifier: \"ExportSpecifier\",\n  ImportDeclaration: \"ImportDeclaration\",\n  ImportSpecifier: \"ImportSpecifier\",\n  ImportDefaultSpecifier: \"ImportDefaultSpecifier\",\n  ImportNamespaceSpecifier: \"ImportNamespaceSpecifier\"\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/espree/lib/ast-node-types.js"],"names":["module","exports","AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExpressionStatement","ForStatement","ForInStatement","ForOfStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","NewExpression","ObjectExpression","ObjectPattern","Program","Property","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchCase","SwitchStatement","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","JSXIdentifier","JSXNamespacedName","JSXMemberExpression","JSXEmptyExpression","JSXExpressionContainer","JSXElement","JSXClosingElement","JSXOpeningElement","JSXAttribute","JSXSpreadAttribute","JSXText","ExportDefaultDeclaration","ExportNamedDeclaration","ExportAllDeclaration","ExportSpecifier","ImportDeclaration","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier"],"mappings":"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","sourcesContent":["/**\n * @fileoverview The AST node types produced by the parser.\n * @author Nicholas C. Zakas\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\n// None!\n\n//------------------------------------------------------------------------------\n// Public\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    AssignmentExpression: \"AssignmentExpression\",\n    AssignmentPattern: \"AssignmentPattern\",\n    ArrayExpression: \"ArrayExpression\",\n    ArrayPattern: \"ArrayPattern\",\n    ArrowFunctionExpression: \"ArrowFunctionExpression\",\n    AwaitExpression: \"AwaitExpression\",\n    BlockStatement: \"BlockStatement\",\n    BinaryExpression: \"BinaryExpression\",\n    BreakStatement: \"BreakStatement\",\n    CallExpression: \"CallExpression\",\n    CatchClause: \"CatchClause\",\n    ClassBody: \"ClassBody\",\n    ClassDeclaration: \"ClassDeclaration\",\n    ClassExpression: \"ClassExpression\",\n    ConditionalExpression: \"ConditionalExpression\",\n    ContinueStatement: \"ContinueStatement\",\n    DoWhileStatement: \"DoWhileStatement\",\n    DebuggerStatement: \"DebuggerStatement\",\n    EmptyStatement: \"EmptyStatement\",\n    ExpressionStatement: \"ExpressionStatement\",\n    ForStatement: \"ForStatement\",\n    ForInStatement: \"ForInStatement\",\n    ForOfStatement: \"ForOfStatement\",\n    FunctionDeclaration: \"FunctionDeclaration\",\n    FunctionExpression: \"FunctionExpression\",\n    Identifier: \"Identifier\",\n    IfStatement: \"IfStatement\",\n    Literal: \"Literal\",\n    LabeledStatement: \"LabeledStatement\",\n    LogicalExpression: \"LogicalExpression\",\n    MemberExpression: \"MemberExpression\",\n    MetaProperty: \"MetaProperty\",\n    MethodDefinition: \"MethodDefinition\",\n    NewExpression: \"NewExpression\",\n    ObjectExpression: \"ObjectExpression\",\n    ObjectPattern: \"ObjectPattern\",\n    Program: \"Program\",\n    Property: \"Property\",\n    RestElement: \"RestElement\",\n    ReturnStatement: \"ReturnStatement\",\n    SequenceExpression: \"SequenceExpression\",\n    SpreadElement: \"SpreadElement\",\n    Super: \"Super\",\n    SwitchCase: \"SwitchCase\",\n    SwitchStatement: \"SwitchStatement\",\n    TaggedTemplateExpression: \"TaggedTemplateExpression\",\n    TemplateElement: \"TemplateElement\",\n    TemplateLiteral: \"TemplateLiteral\",\n    ThisExpression: \"ThisExpression\",\n    ThrowStatement: \"ThrowStatement\",\n    TryStatement: \"TryStatement\",\n    UnaryExpression: \"UnaryExpression\",\n    UpdateExpression: \"UpdateExpression\",\n    VariableDeclaration: \"VariableDeclaration\",\n    VariableDeclarator: \"VariableDeclarator\",\n    WhileStatement: \"WhileStatement\",\n    WithStatement: \"WithStatement\",\n    YieldExpression: \"YieldExpression\",\n    JSXIdentifier: \"JSXIdentifier\",\n    JSXNamespacedName: \"JSXNamespacedName\",\n    JSXMemberExpression: \"JSXMemberExpression\",\n    JSXEmptyExpression: \"JSXEmptyExpression\",\n    JSXExpressionContainer: \"JSXExpressionContainer\",\n    JSXElement: \"JSXElement\",\n    JSXClosingElement: \"JSXClosingElement\",\n    JSXOpeningElement: \"JSXOpeningElement\",\n    JSXAttribute: \"JSXAttribute\",\n    JSXSpreadAttribute: \"JSXSpreadAttribute\",\n    JSXText: \"JSXText\",\n    ExportDefaultDeclaration: \"ExportDefaultDeclaration\",\n    ExportNamedDeclaration: \"ExportNamedDeclaration\",\n    ExportAllDeclaration: \"ExportAllDeclaration\",\n    ExportSpecifier: \"ExportSpecifier\",\n    ImportDeclaration: \"ImportDeclaration\",\n    ImportSpecifier: \"ImportSpecifier\",\n    ImportDefaultSpecifier: \"ImportDefaultSpecifier\",\n    ImportNamespaceSpecifier: \"ImportNamespaceSpecifier\"\n};\n"]},"metadata":{},"sourceType":"script"}