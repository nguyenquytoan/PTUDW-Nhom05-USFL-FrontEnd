{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'moves some group attributes to the content elements';\n\nvar collections = require('./_collections.js'),\n    pathElems = collections.pathElems.concat(['g', 'text']),\n    referencesProps = collections.referencesProps;\n/**\n * Move group attrs to the content elements.\n *\n * @example\n * <g transform=\"scale(2)\">\n *     <path transform=\"rotate(45)\" d=\"M0,0 L10,20\"/>\n *     <path transform=\"translate(10, 20)\" d=\"M0,10 L20,30\"/>\n * </g>\n *                          ⬇\n * <g>\n *     <path transform=\"scale(2) rotate(45)\" d=\"M0,0 L10,20\"/>\n *     <path transform=\"scale(2) translate(10, 20)\" d=\"M0,10 L20,30\"/>\n * </g>\n *\n * @param {Object} item current iteration item\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\n\n\nexports.fn = function (item) {\n  // move group transform attr to content's pathElems\n  if (item.isElem('g') && item.hasAttr('transform') && !item.isEmpty() && !item.someAttr(function (attr) {\n    return ~referencesProps.indexOf(attr.name) && ~attr.value.indexOf('url(');\n  }) && item.content.every(function (inner) {\n    return inner.isElem(pathElems) && !inner.hasAttr('id');\n  })) {\n    item.content.forEach(function (inner) {\n      var attr = item.attr('transform');\n\n      if (inner.hasAttr('transform')) {\n        inner.attr('transform').value = attr.value + ' ' + inner.attr('transform').value;\n      } else {\n        inner.addAttr({\n          'name': attr.name,\n          'local': attr.local,\n          'prefix': attr.prefix,\n          'value': attr.value\n        });\n      }\n    });\n    item.removeAttr('transform');\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/svgo/plugins/moveGroupAttrsToElems.js"],"names":["exports","type","active","description","collections","require","pathElems","concat","referencesProps","fn","item","isElem","hasAttr","isEmpty","someAttr","attr","indexOf","name","value","content","every","inner","forEach","addAttr","local","prefix","removeAttr"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,IAAR,GAAe,SAAf;AAEAD,OAAO,CAACE,MAAR,GAAiB,IAAjB;AAEAF,OAAO,CAACG,WAAR,GAAsB,qDAAtB;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAAzB;AAAA,IACIC,SAAS,GAAGF,WAAW,CAACE,SAAZ,CAAsBC,MAAtB,CAA6B,CAAC,GAAD,EAAM,MAAN,CAA7B,CADhB;AAAA,IAEIC,eAAe,GAAGJ,WAAW,CAACI,eAFlC;AAIA;;;;;;;;;;;;;;;;;;;;;AAmBAR,OAAO,CAACS,EAAR,GAAa,UAASC,IAAT,EAAe;AAExB;AACA,MACIA,IAAI,CAACC,MAAL,CAAY,GAAZ,KACAD,IAAI,CAACE,OAAL,CAAa,WAAb,CADA,IAEA,CAACF,IAAI,CAACG,OAAL,EAFD,IAGA,CAACH,IAAI,CAACI,QAAL,CAAc,UAASC,IAAT,EAAe;AAC1B,WAAO,CAACP,eAAe,CAACQ,OAAhB,CAAwBD,IAAI,CAACE,IAA7B,CAAD,IAAuC,CAACF,IAAI,CAACG,KAAL,CAAWF,OAAX,CAAmB,MAAnB,CAA/C;AACH,GAFA,CAHD,IAMAN,IAAI,CAACS,OAAL,CAAaC,KAAb,CAAmB,UAASC,KAAT,EAAgB;AAC/B,WAAOA,KAAK,CAACV,MAAN,CAAaL,SAAb,KAA2B,CAACe,KAAK,CAACT,OAAN,CAAc,IAAd,CAAnC;AACH,GAFD,CAPJ,EAUE;AACEF,IAAAA,IAAI,CAACS,OAAL,CAAaG,OAAb,CAAqB,UAASD,KAAT,EAAgB;AACjC,UAAIN,IAAI,GAAGL,IAAI,CAACK,IAAL,CAAU,WAAV,CAAX;;AACA,UAAIM,KAAK,CAACT,OAAN,CAAc,WAAd,CAAJ,EAAgC;AAC5BS,QAAAA,KAAK,CAACN,IAAN,CAAW,WAAX,EAAwBG,KAAxB,GAAgCH,IAAI,CAACG,KAAL,GAAa,GAAb,GAAmBG,KAAK,CAACN,IAAN,CAAW,WAAX,EAAwBG,KAA3E;AACH,OAFD,MAEO;AACHG,QAAAA,KAAK,CAACE,OAAN,CAAc;AACV,kBAAQR,IAAI,CAACE,IADH;AAEV,mBAASF,IAAI,CAACS,KAFJ;AAGV,oBAAUT,IAAI,CAACU,MAHL;AAIV,mBAASV,IAAI,CAACG;AAJJ,SAAd;AAMH;AACJ,KAZD;AAcAR,IAAAA,IAAI,CAACgB,UAAL,CAAgB,WAAhB;AACH;AAEJ,CA/BD","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'moves some group attributes to the content elements';\n\nvar collections = require('./_collections.js'),\n    pathElems = collections.pathElems.concat(['g', 'text']),\n    referencesProps = collections.referencesProps;\n\n/**\n * Move group attrs to the content elements.\n *\n * @example\n * <g transform=\"scale(2)\">\n *     <path transform=\"rotate(45)\" d=\"M0,0 L10,20\"/>\n *     <path transform=\"translate(10, 20)\" d=\"M0,10 L20,30\"/>\n * </g>\n *                          ⬇\n * <g>\n *     <path transform=\"scale(2) rotate(45)\" d=\"M0,0 L10,20\"/>\n *     <path transform=\"scale(2) translate(10, 20)\" d=\"M0,10 L20,30\"/>\n * </g>\n *\n * @param {Object} item current iteration item\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(item) {\n\n    // move group transform attr to content's pathElems\n    if (\n        item.isElem('g') &&\n        item.hasAttr('transform') &&\n        !item.isEmpty() &&\n        !item.someAttr(function(attr) {\n            return ~referencesProps.indexOf(attr.name) && ~attr.value.indexOf('url(');\n        }) &&\n        item.content.every(function(inner) {\n            return inner.isElem(pathElems) && !inner.hasAttr('id');\n        })\n    ) {\n        item.content.forEach(function(inner) {\n            var attr = item.attr('transform');\n            if (inner.hasAttr('transform')) {\n                inner.attr('transform').value = attr.value + ' ' + inner.attr('transform').value;\n            } else {\n                inner.addAttr({\n                    'name': attr.name,\n                    'local': attr.local,\n                    'prefix': attr.prefix,\n                    'value': attr.value\n                });\n            }\n        });\n\n        item.removeAttr('transform');\n    }\n\n};\n"]},"metadata":{},"sourceType":"script"}