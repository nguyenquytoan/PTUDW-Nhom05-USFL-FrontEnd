{"ast":null,"code":"/**\n * @fileoverview Defines environment settings and globals.\n * @author Elan Shanker\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst globals = require(\"globals\"); //------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Get the object that has differentce.\n * @param {Record<string,boolean>} current The newer object.\n * @param {Record<string,boolean>} prev The older object.\n * @returns {Record<string,boolean>} The difference object.\n */\n\n\nfunction getDiff(current, prev) {\n  const retv = {};\n\n  for (const [key, value] of Object.entries(current)) {\n    if (!Object.hasOwnProperty.call(prev, key)) {\n      retv[key] = value;\n    }\n  }\n\n  return retv;\n}\n\nconst newGlobals2015 = getDiff(globals.es2015, globals.es5); // 19 variables such as Promise, Map, ...\n\nconst newGlobals2017 = {\n  Atomics: false,\n  SharedArrayBuffer: false\n};\nconst newGlobals2020 = {\n  BigInt: false,\n  BigInt64Array: false,\n  BigUint64Array: false\n}; //------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/** @type {Map<string, import(\"../lib/shared/types\").Environment>} */\n\nmodule.exports = new Map(Object.entries({\n  // Language\n  builtin: {\n    globals: globals.es5\n  },\n  es6: {\n    globals: newGlobals2015,\n    parserOptions: {\n      ecmaVersion: 6\n    }\n  },\n  es2015: {\n    globals: newGlobals2015,\n    parserOptions: {\n      ecmaVersion: 6\n    }\n  },\n  es2017: {\n    globals: { ...newGlobals2015,\n      ...newGlobals2017\n    },\n    parserOptions: {\n      ecmaVersion: 8\n    }\n  },\n  es2020: {\n    globals: { ...newGlobals2015,\n      ...newGlobals2017,\n      ...newGlobals2020\n    },\n    parserOptions: {\n      ecmaVersion: 11\n    }\n  },\n  // Platforms\n  browser: {\n    globals: globals.browser\n  },\n  node: {\n    globals: globals.node,\n    parserOptions: {\n      ecmaFeatures: {\n        globalReturn: true\n      }\n    }\n  },\n  \"shared-node-browser\": {\n    globals: globals[\"shared-node-browser\"]\n  },\n  worker: {\n    globals: globals.worker\n  },\n  serviceworker: {\n    globals: globals.serviceworker\n  },\n  // Frameworks\n  commonjs: {\n    globals: globals.commonjs,\n    parserOptions: {\n      ecmaFeatures: {\n        globalReturn: true\n      }\n    }\n  },\n  amd: {\n    globals: globals.amd\n  },\n  mocha: {\n    globals: globals.mocha\n  },\n  jasmine: {\n    globals: globals.jasmine\n  },\n  jest: {\n    globals: globals.jest\n  },\n  phantomjs: {\n    globals: globals.phantomjs\n  },\n  jquery: {\n    globals: globals.jquery\n  },\n  qunit: {\n    globals: globals.qunit\n  },\n  prototypejs: {\n    globals: globals.prototypejs\n  },\n  shelljs: {\n    globals: globals.shelljs\n  },\n  meteor: {\n    globals: globals.meteor\n  },\n  mongo: {\n    globals: globals.mongo\n  },\n  protractor: {\n    globals: globals.protractor\n  },\n  applescript: {\n    globals: globals.applescript\n  },\n  nashorn: {\n    globals: globals.nashorn\n  },\n  atomtest: {\n    globals: globals.atomtest\n  },\n  embertest: {\n    globals: globals.embertest\n  },\n  webextensions: {\n    globals: globals.webextensions\n  },\n  greasemonkey: {\n    globals: globals.greasemonkey\n  }\n}));","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/conf/environments.js"],"names":["globals","require","getDiff","current","prev","retv","key","value","Object","entries","hasOwnProperty","call","newGlobals2015","es2015","es5","newGlobals2017","Atomics","SharedArrayBuffer","newGlobals2020","BigInt","BigInt64Array","BigUint64Array","module","exports","Map","builtin","es6","parserOptions","ecmaVersion","es2017","es2020","browser","node","ecmaFeatures","globalReturn","worker","serviceworker","commonjs","amd","mocha","jasmine","jest","phantomjs","jquery","qunit","prototypejs","shelljs","meteor","mongo","protractor","applescript","nashorn","atomtest","embertest","webextensions","greasemonkey"],"mappings":"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","sourcesContent":["/**\n * @fileoverview Defines environment settings and globals.\n * @author Elan Shanker\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst globals = require(\"globals\");\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Get the object that has differentce.\n * @param {Record<string,boolean>} current The newer object.\n * @param {Record<string,boolean>} prev The older object.\n * @returns {Record<string,boolean>} The difference object.\n */\nfunction getDiff(current, prev) {\n    const retv = {};\n\n    for (const [key, value] of Object.entries(current)) {\n        if (!Object.hasOwnProperty.call(prev, key)) {\n            retv[key] = value;\n        }\n    }\n\n    return retv;\n}\n\nconst newGlobals2015 = getDiff(globals.es2015, globals.es5); // 19 variables such as Promise, Map, ...\nconst newGlobals2017 = {\n    Atomics: false,\n    SharedArrayBuffer: false\n};\nconst newGlobals2020 = {\n    BigInt: false,\n    BigInt64Array: false,\n    BigUint64Array: false\n};\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/** @type {Map<string, import(\"../lib/shared/types\").Environment>} */\nmodule.exports = new Map(Object.entries({\n\n    // Language\n    builtin: {\n        globals: globals.es5\n    },\n    es6: {\n        globals: newGlobals2015,\n        parserOptions: {\n            ecmaVersion: 6\n        }\n    },\n    es2015: {\n        globals: newGlobals2015,\n        parserOptions: {\n            ecmaVersion: 6\n        }\n    },\n    es2017: {\n        globals: { ...newGlobals2015, ...newGlobals2017 },\n        parserOptions: {\n            ecmaVersion: 8\n        }\n    },\n    es2020: {\n        globals: { ...newGlobals2015, ...newGlobals2017, ...newGlobals2020 },\n        parserOptions: {\n            ecmaVersion: 11\n        }\n    },\n\n    // Platforms\n    browser: {\n        globals: globals.browser\n    },\n    node: {\n        globals: globals.node,\n        parserOptions: {\n            ecmaFeatures: {\n                globalReturn: true\n            }\n        }\n    },\n    \"shared-node-browser\": {\n        globals: globals[\"shared-node-browser\"]\n    },\n    worker: {\n        globals: globals.worker\n    },\n    serviceworker: {\n        globals: globals.serviceworker\n    },\n\n    // Frameworks\n    commonjs: {\n        globals: globals.commonjs,\n        parserOptions: {\n            ecmaFeatures: {\n                globalReturn: true\n            }\n        }\n    },\n    amd: {\n        globals: globals.amd\n    },\n    mocha: {\n        globals: globals.mocha\n    },\n    jasmine: {\n        globals: globals.jasmine\n    },\n    jest: {\n        globals: globals.jest\n    },\n    phantomjs: {\n        globals: globals.phantomjs\n    },\n    jquery: {\n        globals: globals.jquery\n    },\n    qunit: {\n        globals: globals.qunit\n    },\n    prototypejs: {\n        globals: globals.prototypejs\n    },\n    shelljs: {\n        globals: globals.shelljs\n    },\n    meteor: {\n        globals: globals.meteor\n    },\n    mongo: {\n        globals: globals.mongo\n    },\n    protractor: {\n        globals: globals.protractor\n    },\n    applescript: {\n        globals: globals.applescript\n    },\n    nashorn: {\n        globals: globals.nashorn\n    },\n    atomtest: {\n        globals: globals.atomtest\n    },\n    embertest: {\n        globals: globals.embertest\n    },\n    webextensions: {\n        globals: globals.webextensions\n    },\n    greasemonkey: {\n        globals: globals.greasemonkey\n    }\n}));\n"]},"metadata":{},"sourceType":"script"}