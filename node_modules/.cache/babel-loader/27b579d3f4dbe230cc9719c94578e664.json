{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst importPattern = /^:import\\((\"[^\"]*\"|'[^']*'|[^\"']+)\\)$/;\n\nconst getDeclsObject = rule => {\n  const object = {};\n  rule.walkDecls(decl => {\n    const before = decl.raws.before ? decl.raws.before.trim() : \"\";\n    object[before + decl.prop] = decl.value;\n  });\n  return object;\n};\n\nconst extractICSS = (css, removeRules = true) => {\n  const icssImports = {};\n  const icssExports = {};\n  css.each(node => {\n    if (node.type === \"rule\") {\n      if (node.selector.slice(0, 7) === \":import\") {\n        const matches = importPattern.exec(node.selector);\n\n        if (matches) {\n          const path = matches[1].replace(/'|\"/g, \"\");\n          icssImports[path] = Object.assign(icssImports[path] || {}, getDeclsObject(node));\n\n          if (removeRules) {\n            node.remove();\n          }\n        }\n      }\n\n      if (node.selector === \":export\") {\n        Object.assign(icssExports, getDeclsObject(node));\n\n        if (removeRules) {\n          node.remove();\n        }\n      }\n    }\n  });\n  return {\n    icssImports,\n    icssExports\n  };\n};\n\nvar _default = extractICSS;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/icss-utils/lib/extractICSS.js"],"names":["Object","defineProperty","exports","value","default","importPattern","getDeclsObject","rule","object","walkDecls","decl","before","raws","trim","prop","extractICSS","css","removeRules","icssImports","icssExports","each","node","type","selector","slice","matches","exec","path","replace","assign","remove","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,MAAMC,aAAa,GAAG,uCAAtB;;AAEA,MAAMC,cAAc,GAAGC,IAAI,IAAI;AAC7B,QAAMC,MAAM,GAAG,EAAf;AACAD,EAAAA,IAAI,CAACE,SAAL,CAAeC,IAAI,IAAI;AACrB,UAAMC,MAAM,GAAGD,IAAI,CAACE,IAAL,CAAUD,MAAV,GAAmBD,IAAI,CAACE,IAAL,CAAUD,MAAV,CAAiBE,IAAjB,EAAnB,GAA6C,EAA5D;AACAL,IAAAA,MAAM,CAACG,MAAM,GAAGD,IAAI,CAACI,IAAf,CAAN,GAA6BJ,IAAI,CAACP,KAAlC;AACD,GAHD;AAIA,SAAOK,MAAP;AACD,CAPD;;AASA,MAAMO,WAAW,GAAG,CAACC,GAAD,EAAMC,WAAW,GAAG,IAApB,KAA6B;AAC/C,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,WAAW,GAAG,EAApB;AACAH,EAAAA,GAAG,CAACI,IAAJ,CAASC,IAAI,IAAI;AACf,QAAIA,IAAI,CAACC,IAAL,KAAc,MAAlB,EAA0B;AACxB,UAAID,IAAI,CAACE,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,MAA8B,SAAlC,EAA6C;AAC3C,cAAMC,OAAO,GAAGpB,aAAa,CAACqB,IAAd,CAAmBL,IAAI,CAACE,QAAxB,CAAhB;;AAEA,YAAIE,OAAJ,EAAa;AACX,gBAAME,IAAI,GAAGF,OAAO,CAAC,CAAD,CAAP,CAAWG,OAAX,CAAmB,MAAnB,EAA2B,EAA3B,CAAb;AACAV,UAAAA,WAAW,CAACS,IAAD,CAAX,GAAoB3B,MAAM,CAAC6B,MAAP,CAAcX,WAAW,CAACS,IAAD,CAAX,IAAqB,EAAnC,EAAuCrB,cAAc,CAACe,IAAD,CAArD,CAApB;;AAEA,cAAIJ,WAAJ,EAAiB;AACfI,YAAAA,IAAI,CAACS,MAAL;AACD;AACF;AACF;;AAED,UAAIT,IAAI,CAACE,QAAL,KAAkB,SAAtB,EAAiC;AAC/BvB,QAAAA,MAAM,CAAC6B,MAAP,CAAcV,WAAd,EAA2Bb,cAAc,CAACe,IAAD,CAAzC;;AAEA,YAAIJ,WAAJ,EAAiB;AACfI,UAAAA,IAAI,CAACS,MAAL;AACD;AACF;AACF;AACF,GAvBD;AAwBA,SAAO;AACLZ,IAAAA,WADK;AAELC,IAAAA;AAFK,GAAP;AAID,CA/BD;;AAiCA,IAAIY,QAAQ,GAAGhB,WAAf;AACAb,OAAO,CAACE,OAAR,GAAkB2B,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst importPattern = /^:import\\((\"[^\"]*\"|'[^']*'|[^\"']+)\\)$/;\n\nconst getDeclsObject = rule => {\n  const object = {};\n  rule.walkDecls(decl => {\n    const before = decl.raws.before ? decl.raws.before.trim() : \"\";\n    object[before + decl.prop] = decl.value;\n  });\n  return object;\n};\n\nconst extractICSS = (css, removeRules = true) => {\n  const icssImports = {};\n  const icssExports = {};\n  css.each(node => {\n    if (node.type === \"rule\") {\n      if (node.selector.slice(0, 7) === \":import\") {\n        const matches = importPattern.exec(node.selector);\n\n        if (matches) {\n          const path = matches[1].replace(/'|\"/g, \"\");\n          icssImports[path] = Object.assign(icssImports[path] || {}, getDeclsObject(node));\n\n          if (removeRules) {\n            node.remove();\n          }\n        }\n      }\n\n      if (node.selector === \":export\") {\n        Object.assign(icssExports, getDeclsObject(node));\n\n        if (removeRules) {\n          node.remove();\n        }\n      }\n    }\n  });\n  return {\n    icssImports,\n    icssExports\n  };\n};\n\nvar _default = extractICSS;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}