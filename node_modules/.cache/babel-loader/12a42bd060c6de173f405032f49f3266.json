{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = shouldInstrument;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n\n  _jestRegexUtil = function _jestRegexUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _micromatch() {\n  const data = _interopRequireDefault(require('micromatch'));\n\n  _micromatch = function _micromatch() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst MOCKS_PATTERN = new RegExp((0, _jestRegexUtil().escapePathForRegex)(_path().default.sep + '__mocks__' + _path().default.sep));\n\nfunction shouldInstrument(filename, options, config) {\n  if (!options.collectCoverage) {\n    return false;\n  }\n\n  if (config.forceCoverageMatch.length && _micromatch().default.any(filename, config.forceCoverageMatch)) {\n    return true;\n  }\n\n  if (!config.testPathIgnorePatterns.some(pattern => !!filename.match(pattern))) {\n    if (config.testRegex.some(regex => new RegExp(regex).test(filename))) {\n      return false;\n    }\n\n    if (_micromatch().default.some((0, _jestUtil().replacePathSepForGlob)(filename), config.testMatch)) {\n      return false;\n    }\n  }\n\n  if ( // This configuration field contains an object in the form of:\n  // {'path/to/file.js': true}\n  options.collectCoverageOnlyFrom && !options.collectCoverageOnlyFrom[filename]) {\n    return false;\n  }\n\n  if ( // still cover if `only` is specified\n  !options.collectCoverageOnlyFrom && options.collectCoverageFrom && !_micromatch().default.some((0, _jestUtil().replacePathSepForGlob)(_path().default.relative(config.rootDir, filename)), options.collectCoverageFrom)) {\n    return false;\n  }\n\n  if (config.coveragePathIgnorePatterns.some(pattern => !!filename.match(pattern))) {\n    return false;\n  }\n\n  if (config.globalSetup === filename) {\n    return false;\n  }\n\n  if (config.globalTeardown === filename) {\n    return false;\n  }\n\n  if (config.setupFiles.includes(filename)) {\n    return false;\n  }\n\n  if (config.setupFilesAfterEnv.includes(filename)) {\n    return false;\n  }\n\n  if (MOCKS_PATTERN.test(filename)) {\n    return false;\n  }\n\n  if (options.changedFiles && !options.changedFiles.has(filename)) {\n    return false;\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@jest/transform/build/shouldInstrument.js"],"names":["Object","defineProperty","exports","value","default","shouldInstrument","_path","data","_interopRequireDefault","require","_jestRegexUtil","_jestUtil","_micromatch","obj","__esModule","MOCKS_PATTERN","RegExp","escapePathForRegex","sep","filename","options","config","collectCoverage","forceCoverageMatch","length","any","testPathIgnorePatterns","some","pattern","match","testRegex","regex","test","replacePathSepForGlob","testMatch","collectCoverageOnlyFrom","collectCoverageFrom","relative","rootDir","coveragePathIgnorePatterns","globalSetup","globalTeardown","setupFiles","includes","setupFilesAfterEnv","changedFiles","has"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = shouldInstrument;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n\n  _jestRegexUtil = function _jestRegexUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _micromatch() {\n  const data = _interopRequireDefault(require('micromatch'));\n\n  _micromatch = function _micromatch() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst MOCKS_PATTERN = new RegExp(\n  (0, _jestRegexUtil().escapePathForRegex)(\n    _path().default.sep + '__mocks__' + _path().default.sep\n  )\n);\n\nfunction shouldInstrument(filename, options, config) {\n  if (!options.collectCoverage) {\n    return false;\n  }\n\n  if (\n    config.forceCoverageMatch.length &&\n    _micromatch().default.any(filename, config.forceCoverageMatch)\n  ) {\n    return true;\n  }\n\n  if (\n    !config.testPathIgnorePatterns.some(pattern => !!filename.match(pattern))\n  ) {\n    if (config.testRegex.some(regex => new RegExp(regex).test(filename))) {\n      return false;\n    }\n\n    if (\n      _micromatch().default.some(\n        (0, _jestUtil().replacePathSepForGlob)(filename),\n        config.testMatch\n      )\n    ) {\n      return false;\n    }\n  }\n\n  if (\n    // This configuration field contains an object in the form of:\n    // {'path/to/file.js': true}\n    options.collectCoverageOnlyFrom &&\n    !options.collectCoverageOnlyFrom[filename]\n  ) {\n    return false;\n  }\n\n  if (\n    // still cover if `only` is specified\n    !options.collectCoverageOnlyFrom &&\n    options.collectCoverageFrom &&\n    !_micromatch().default.some(\n      (0, _jestUtil().replacePathSepForGlob)(\n        _path().default.relative(config.rootDir, filename)\n      ),\n      options.collectCoverageFrom\n    )\n  ) {\n    return false;\n  }\n\n  if (\n    config.coveragePathIgnorePatterns.some(pattern => !!filename.match(pattern))\n  ) {\n    return false;\n  }\n\n  if (config.globalSetup === filename) {\n    return false;\n  }\n\n  if (config.globalTeardown === filename) {\n    return false;\n  }\n\n  if (config.setupFiles.includes(filename)) {\n    return false;\n  }\n\n  if (config.setupFilesAfterEnv.includes(filename)) {\n    return false;\n  }\n\n  if (MOCKS_PATTERN.test(filename)) {\n    return false;\n  }\n\n  if (options.changedFiles && !options.changedFiles.has(filename)) {\n    return false;\n  }\n\n  return true;\n}\n"]},"metadata":{},"sourceType":"script"}