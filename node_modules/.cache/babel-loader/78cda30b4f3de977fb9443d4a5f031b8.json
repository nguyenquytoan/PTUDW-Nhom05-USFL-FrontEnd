{"ast":null,"code":"// @ts-check\n\n/** @typedef {import(\"../typings\").Hooks} HtmlWebpackPluginHooks */\n'use strict';\n/**\n * This file provides access to all public htmlWebpackPlugin hooks\n */\n\n/** @typedef {import(\"webpack/lib/Compilation.js\")} WebpackCompilation */\n\n/** @typedef {import(\"../index.js\")} HtmlWebpackPlugin */\n\nconst AsyncSeriesWaterfallHook = require('tapable').AsyncSeriesWaterfallHook; // The following is the API definition for all available hooks\n// For the TypeScript definition, see the Hooks type in typings.d.ts\n\n/**\n  beforeAssetTagGeneration:\n    AsyncSeriesWaterfallHook<{\n      assets: {\n        publicPath: string,\n        js: Array<string>,\n        css: Array<string>,\n        favicon?: string | undefined,\n        manifest?: string | undefined\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>,\n  alterAssetTags:\n    AsyncSeriesWaterfallHook<{\n      assetTags: {\n        scripts: Array<HtmlTagObject>,\n        styles: Array<HtmlTagObject>,\n        meta: Array<HtmlTagObject>,\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>,\n  alterAssetTagGroups:\n    AsyncSeriesWaterfallHook<{\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>,\n  afterTemplateExecution:\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>,\n  beforeEmit:\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>,\n  afterEmit:\n    AsyncSeriesWaterfallHook<{\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n*/\n\n/**\n * @type {WeakMap<WebpackCompilation, HtmlWebpackPluginHooks>}}\n */\n\n\nconst htmlWebpackPluginHooksMap = new WeakMap();\n/**\n * Returns all public hooks of the html webpack plugin for the given compilation\n *\n * @param {WebpackCompilation} compilation\n * @returns {HtmlWebpackPluginHooks}\n */\n\nfunction getHtmlWebpackPluginHooks(compilation) {\n  let hooks = htmlWebpackPluginHooksMap.get(compilation); // Setup the hooks only once\n\n  if (hooks === undefined) {\n    hooks = createHtmlWebpackPluginHooks();\n    htmlWebpackPluginHooksMap.set(compilation, hooks);\n  }\n\n  return hooks;\n}\n/**\n * Add hooks to the webpack compilation object to allow foreign plugins to\n * extend the HtmlWebpackPlugin\n *\n * @returns {HtmlWebpackPluginHooks}\n */\n\n\nfunction createHtmlWebpackPluginHooks() {\n  return {\n    beforeAssetTagGeneration: new AsyncSeriesWaterfallHook(['pluginArgs']),\n    alterAssetTags: new AsyncSeriesWaterfallHook(['pluginArgs']),\n    alterAssetTagGroups: new AsyncSeriesWaterfallHook(['pluginArgs']),\n    afterTemplateExecution: new AsyncSeriesWaterfallHook(['pluginArgs']),\n    beforeEmit: new AsyncSeriesWaterfallHook(['pluginArgs']),\n    afterEmit: new AsyncSeriesWaterfallHook(['pluginArgs'])\n  };\n}\n\nmodule.exports = {\n  getHtmlWebpackPluginHooks\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/html-webpack-plugin/lib/hooks.js"],"names":["AsyncSeriesWaterfallHook","require","htmlWebpackPluginHooksMap","WeakMap","getHtmlWebpackPluginHooks","compilation","hooks","get","undefined","createHtmlWebpackPluginHooks","set","beforeAssetTagGeneration","alterAssetTags","alterAssetTagGroups","afterTemplateExecution","beforeEmit","afterEmit","module","exports"],"mappings":"AAAA;;AACA;AACA;AACA;;;;AAIA;;AACA;;AAEA,MAAMA,wBAAwB,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,wBAApD,C,CAEA;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;;;;;AAGA,MAAME,yBAAyB,GAAG,IAAIC,OAAJ,EAAlC;AAEA;;;;;;;AAMA,SAASC,yBAAT,CAAoCC,WAApC,EAAiD;AAC/C,MAAIC,KAAK,GAAGJ,yBAAyB,CAACK,GAA1B,CAA8BF,WAA9B,CAAZ,CAD+C,CAE/C;;AACA,MAAIC,KAAK,KAAKE,SAAd,EAAyB;AACvBF,IAAAA,KAAK,GAAGG,4BAA4B,EAApC;AACAP,IAAAA,yBAAyB,CAACQ,GAA1B,CAA8BL,WAA9B,EAA2CC,KAA3C;AACD;;AACD,SAAOA,KAAP;AACD;AAED;;;;;;;;AAMA,SAASG,4BAAT,GAAyC;AACvC,SAAO;AACLE,IAAAA,wBAAwB,EAAE,IAAIX,wBAAJ,CAA6B,CAAC,YAAD,CAA7B,CADrB;AAELY,IAAAA,cAAc,EAAE,IAAIZ,wBAAJ,CAA6B,CAAC,YAAD,CAA7B,CAFX;AAGLa,IAAAA,mBAAmB,EAAE,IAAIb,wBAAJ,CAA6B,CAAC,YAAD,CAA7B,CAHhB;AAILc,IAAAA,sBAAsB,EAAE,IAAId,wBAAJ,CAA6B,CAAC,YAAD,CAA7B,CAJnB;AAKLe,IAAAA,UAAU,EAAE,IAAIf,wBAAJ,CAA6B,CAAC,YAAD,CAA7B,CALP;AAMLgB,IAAAA,SAAS,EAAE,IAAIhB,wBAAJ,CAA6B,CAAC,YAAD,CAA7B;AANN,GAAP;AAQD;;AAEDiB,MAAM,CAACC,OAAP,GAAiB;AACfd,EAAAA;AADe,CAAjB","sourcesContent":["// @ts-check\n/** @typedef {import(\"../typings\").Hooks} HtmlWebpackPluginHooks */\n'use strict';\n/**\n * This file provides access to all public htmlWebpackPlugin hooks\n */\n\n/** @typedef {import(\"webpack/lib/Compilation.js\")} WebpackCompilation */\n/** @typedef {import(\"../index.js\")} HtmlWebpackPlugin */\n\nconst AsyncSeriesWaterfallHook = require('tapable').AsyncSeriesWaterfallHook;\n\n// The following is the API definition for all available hooks\n// For the TypeScript definition, see the Hooks type in typings.d.ts\n/**\n  beforeAssetTagGeneration:\n    AsyncSeriesWaterfallHook<{\n      assets: {\n        publicPath: string,\n        js: Array<string>,\n        css: Array<string>,\n        favicon?: string | undefined,\n        manifest?: string | undefined\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>,\n  alterAssetTags:\n    AsyncSeriesWaterfallHook<{\n      assetTags: {\n        scripts: Array<HtmlTagObject>,\n        styles: Array<HtmlTagObject>,\n        meta: Array<HtmlTagObject>,\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>,\n  alterAssetTagGroups:\n    AsyncSeriesWaterfallHook<{\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>,\n  afterTemplateExecution:\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>,\n  beforeEmit:\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>,\n  afterEmit:\n    AsyncSeriesWaterfallHook<{\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n*/\n\n/**\n * @type {WeakMap<WebpackCompilation, HtmlWebpackPluginHooks>}}\n */\nconst htmlWebpackPluginHooksMap = new WeakMap();\n\n/**\n * Returns all public hooks of the html webpack plugin for the given compilation\n *\n * @param {WebpackCompilation} compilation\n * @returns {HtmlWebpackPluginHooks}\n */\nfunction getHtmlWebpackPluginHooks (compilation) {\n  let hooks = htmlWebpackPluginHooksMap.get(compilation);\n  // Setup the hooks only once\n  if (hooks === undefined) {\n    hooks = createHtmlWebpackPluginHooks();\n    htmlWebpackPluginHooksMap.set(compilation, hooks);\n  }\n  return hooks;\n}\n\n/**\n * Add hooks to the webpack compilation object to allow foreign plugins to\n * extend the HtmlWebpackPlugin\n *\n * @returns {HtmlWebpackPluginHooks}\n */\nfunction createHtmlWebpackPluginHooks () {\n  return {\n    beforeAssetTagGeneration: new AsyncSeriesWaterfallHook(['pluginArgs']),\n    alterAssetTags: new AsyncSeriesWaterfallHook(['pluginArgs']),\n    alterAssetTagGroups: new AsyncSeriesWaterfallHook(['pluginArgs']),\n    afterTemplateExecution: new AsyncSeriesWaterfallHook(['pluginArgs']),\n    beforeEmit: new AsyncSeriesWaterfallHook(['pluginArgs']),\n    afterEmit: new AsyncSeriesWaterfallHook(['pluginArgs'])\n  };\n}\n\nmodule.exports = {\n  getHtmlWebpackPluginHooks\n};\n"]},"metadata":{},"sourceType":"script"}