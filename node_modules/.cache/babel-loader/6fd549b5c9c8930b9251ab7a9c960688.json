{"ast":null,"code":"var fs = require(\"fs\");\n\nvar p = require(\"path\");\n\nvar minimatch = require(\"minimatch\");\n\nfunction patternMatcher(pattern) {\n  return function (path, stats) {\n    var minimatcher = new minimatch.Minimatch(pattern, {\n      matchBase: true\n    });\n    return (!minimatcher.negate || stats.isFile()) && minimatcher.match(path);\n  };\n}\n\nfunction toMatcherFunction(ignoreEntry) {\n  if (typeof ignoreEntry == \"function\") {\n    return ignoreEntry;\n  } else {\n    return patternMatcher(ignoreEntry);\n  }\n}\n\nfunction readdir(path, ignores, callback) {\n  if (typeof ignores == \"function\") {\n    callback = ignores;\n    ignores = [];\n  }\n\n  if (!callback) {\n    return new Promise(function (resolve, reject) {\n      readdir(path, ignores || [], function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  ignores = ignores.map(toMatcherFunction);\n  var list = [];\n  fs.readdir(path, function (err, files) {\n    if (err) {\n      return callback(err);\n    }\n\n    var pending = files.length;\n\n    if (!pending) {\n      // we are done, woop woop\n      return callback(null, list);\n    }\n\n    files.forEach(function (file) {\n      var filePath = p.join(path, file);\n      fs.stat(filePath, function (_err, stats) {\n        if (_err) {\n          return callback(_err);\n        }\n\n        if (ignores.some(function (matcher) {\n          return matcher(filePath, stats);\n        })) {\n          pending -= 1;\n\n          if (!pending) {\n            return callback(null, list);\n          }\n\n          return null;\n        }\n\n        if (stats.isDirectory()) {\n          readdir(filePath, ignores, function (__err, res) {\n            if (__err) {\n              return callback(__err);\n            }\n\n            list = list.concat(res);\n            pending -= 1;\n\n            if (!pending) {\n              return callback(null, list);\n            }\n          });\n        } else {\n          list.push(filePath);\n          pending -= 1;\n\n          if (!pending) {\n            return callback(null, list);\n          }\n        }\n      });\n    });\n  });\n}\n\nmodule.exports = readdir;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/recursive-readdir/index.js"],"names":["fs","require","p","minimatch","patternMatcher","pattern","path","stats","minimatcher","Minimatch","matchBase","negate","isFile","match","toMatcherFunction","ignoreEntry","readdir","ignores","callback","Promise","resolve","reject","err","data","map","list","files","pending","length","forEach","file","filePath","join","stat","_err","some","matcher","isDirectory","__err","res","concat","push","module","exports"],"mappings":"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","sourcesContent":["var fs = require(\"fs\");\nvar p = require(\"path\");\nvar minimatch = require(\"minimatch\");\n\nfunction patternMatcher(pattern) {\n  return function(path, stats) {\n    var minimatcher = new minimatch.Minimatch(pattern, { matchBase: true });\n    return (!minimatcher.negate || stats.isFile()) && minimatcher.match(path);\n  };\n}\n\nfunction toMatcherFunction(ignoreEntry) {\n  if (typeof ignoreEntry == \"function\") {\n    return ignoreEntry;\n  } else {\n    return patternMatcher(ignoreEntry);\n  }\n}\n\nfunction readdir(path, ignores, callback) {\n  if (typeof ignores == \"function\") {\n    callback = ignores;\n    ignores = [];\n  }\n\n  if (!callback) {\n    return new Promise(function(resolve, reject) {\n      readdir(path, ignores || [], function(err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  ignores = ignores.map(toMatcherFunction);\n\n  var list = [];\n\n  fs.readdir(path, function(err, files) {\n    if (err) {\n      return callback(err);\n    }\n\n    var pending = files.length;\n    if (!pending) {\n      // we are done, woop woop\n      return callback(null, list);\n    }\n\n    files.forEach(function(file) {\n      var filePath = p.join(path, file);\n      fs.stat(filePath, function(_err, stats) {\n        if (_err) {\n          return callback(_err);\n        }\n\n        if (\n          ignores.some(function(matcher) {\n            return matcher(filePath, stats);\n          })\n        ) {\n          pending -= 1;\n          if (!pending) {\n            return callback(null, list);\n          }\n          return null;\n        }\n\n        if (stats.isDirectory()) {\n          readdir(filePath, ignores, function(__err, res) {\n            if (__err) {\n              return callback(__err);\n            }\n\n            list = list.concat(res);\n            pending -= 1;\n            if (!pending) {\n              return callback(null, list);\n            }\n          });\n        } else {\n          list.push(filePath);\n          pending -= 1;\n          if (!pending) {\n            return callback(null, list);\n          }\n        }\n      });\n    });\n  });\n}\n\nmodule.exports = readdir;\n"]},"metadata":{},"sourceType":"script"}