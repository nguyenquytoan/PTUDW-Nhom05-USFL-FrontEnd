{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nconst {\n  URL\n} = require('url');\n\nmodule.exports = getPublicUrlOrPath;\n/**\n * Returns a URL or a path with slash at the end\n * In production can be URL, abolute path, relative path\n * In development always will be an absolute path\n * In development can use `path` module functions for operations\n *\n * @param {boolean} isEnvDevelopment\n * @param {(string|undefined)} homepage a valid url or pathname\n * @param {(string|undefined)} envPublicUrl a valid url or pathname\n * @returns {string}\n */\n\nfunction getPublicUrlOrPath(isEnvDevelopment, homepage, envPublicUrl) {\n  const stubDomain = 'https://create-react-app.dev';\n\n  if (envPublicUrl) {\n    // ensure last slash exists\n    envPublicUrl = envPublicUrl.endsWith('/') ? envPublicUrl : envPublicUrl + '/'; // validate if `envPublicUrl` is a URL or path like\n    // `stubDomain` is ignored if `envPublicUrl` contains a domain\n\n    const validPublicUrl = new URL(envPublicUrl, stubDomain);\n    return isEnvDevelopment ? envPublicUrl.startsWith('.') ? '/' : validPublicUrl.pathname : // Some apps do not use client-side routing with pushState.\n    // For these, \"homepage\" can be set to \".\" to enable relative asset paths.\n    envPublicUrl;\n  }\n\n  if (homepage) {\n    // strip last slash if exists\n    homepage = homepage.endsWith('/') ? homepage : homepage + '/'; // validate if `homepage` is a URL or path like and use just pathname\n\n    const validHomepagePathname = new URL(homepage, stubDomain).pathname;\n    return isEnvDevelopment ? homepage.startsWith('.') ? '/' : validHomepagePathname : // Some apps do not use client-side routing with pushState.\n    // For these, \"homepage\" can be set to \".\" to enable relative asset paths.\n    homepage.startsWith('.') ? homepage : validHomepagePathname;\n  }\n\n  return '/';\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/react-dev-utils/getPublicUrlOrPath.js"],"names":["URL","require","module","exports","getPublicUrlOrPath","isEnvDevelopment","homepage","envPublicUrl","stubDomain","endsWith","validPublicUrl","startsWith","pathname","validHomepagePathname"],"mappings":"AAAA;;;;;;AAOA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAUC,OAAO,CAAC,KAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,kBAAjB;AAEA;;;;;;;;;;;;AAWA,SAASA,kBAAT,CAA4BC,gBAA5B,EAA8CC,QAA9C,EAAwDC,YAAxD,EAAsE;AACpE,QAAMC,UAAU,GAAG,8BAAnB;;AAEA,MAAID,YAAJ,EAAkB;AAChB;AACAA,IAAAA,YAAY,GAAGA,YAAY,CAACE,QAAb,CAAsB,GAAtB,IACXF,YADW,GAEXA,YAAY,GAAG,GAFnB,CAFgB,CAMhB;AACA;;AACA,UAAMG,cAAc,GAAG,IAAIV,GAAJ,CAAQO,YAAR,EAAsBC,UAAtB,CAAvB;AAEA,WAAOH,gBAAgB,GACnBE,YAAY,CAACI,UAAb,CAAwB,GAAxB,IACE,GADF,GAEED,cAAc,CAACE,QAHE,GAInB;AACA;AACAL,IAAAA,YANJ;AAOD;;AAED,MAAID,QAAJ,EAAc;AACZ;AACAA,IAAAA,QAAQ,GAAGA,QAAQ,CAACG,QAAT,CAAkB,GAAlB,IAAyBH,QAAzB,GAAoCA,QAAQ,GAAG,GAA1D,CAFY,CAIZ;;AACA,UAAMO,qBAAqB,GAAG,IAAIb,GAAJ,CAAQM,QAAR,EAAkBE,UAAlB,EAA8BI,QAA5D;AACA,WAAOP,gBAAgB,GACnBC,QAAQ,CAACK,UAAT,CAAoB,GAApB,IACE,GADF,GAEEE,qBAHiB,GAInB;AACF;AACAP,IAAAA,QAAQ,CAACK,UAAT,CAAoB,GAApB,IACEL,QADF,GAEEO,qBARJ;AASD;;AAED,SAAO,GAAP;AACD","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nconst { URL } = require('url');\n\nmodule.exports = getPublicUrlOrPath;\n\n/**\n * Returns a URL or a path with slash at the end\n * In production can be URL, abolute path, relative path\n * In development always will be an absolute path\n * In development can use `path` module functions for operations\n *\n * @param {boolean} isEnvDevelopment\n * @param {(string|undefined)} homepage a valid url or pathname\n * @param {(string|undefined)} envPublicUrl a valid url or pathname\n * @returns {string}\n */\nfunction getPublicUrlOrPath(isEnvDevelopment, homepage, envPublicUrl) {\n  const stubDomain = 'https://create-react-app.dev';\n\n  if (envPublicUrl) {\n    // ensure last slash exists\n    envPublicUrl = envPublicUrl.endsWith('/')\n      ? envPublicUrl\n      : envPublicUrl + '/';\n\n    // validate if `envPublicUrl` is a URL or path like\n    // `stubDomain` is ignored if `envPublicUrl` contains a domain\n    const validPublicUrl = new URL(envPublicUrl, stubDomain);\n\n    return isEnvDevelopment\n      ? envPublicUrl.startsWith('.')\n        ? '/'\n        : validPublicUrl.pathname\n      : // Some apps do not use client-side routing with pushState.\n        // For these, \"homepage\" can be set to \".\" to enable relative asset paths.\n        envPublicUrl;\n  }\n\n  if (homepage) {\n    // strip last slash if exists\n    homepage = homepage.endsWith('/') ? homepage : homepage + '/';\n\n    // validate if `homepage` is a URL or path like and use just pathname\n    const validHomepagePathname = new URL(homepage, stubDomain).pathname;\n    return isEnvDevelopment\n      ? homepage.startsWith('.')\n        ? '/'\n        : validHomepagePathname\n      : // Some apps do not use client-side routing with pushState.\n      // For these, \"homepage\" can be set to \".\" to enable relative asset paths.\n      homepage.startsWith('.')\n      ? homepage\n      : validHomepagePathname;\n  }\n\n  return '/';\n}\n"]},"metadata":{},"sourceType":"script"}