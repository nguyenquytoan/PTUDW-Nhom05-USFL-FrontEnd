{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.buildSnapshotResolver = exports.isSnapshotPath = exports.DOT_EXTENSION = exports.EXTENSION = void 0;\n\nvar _path = _interopRequireDefault(require('path'));\n\nvar _chalk = _interopRequireDefault(require('chalk'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst EXTENSION = 'snap';\nexports.EXTENSION = EXTENSION;\nconst DOT_EXTENSION = '.' + EXTENSION;\nexports.DOT_EXTENSION = DOT_EXTENSION;\n\nconst isSnapshotPath = path => path.endsWith(DOT_EXTENSION);\n\nexports.isSnapshotPath = isSnapshotPath;\nconst cache = new Map();\n\nconst buildSnapshotResolver = config => {\n  const key = config.rootDir;\n\n  if (!cache.has(key)) {\n    cache.set(key, createSnapshotResolver(config.snapshotResolver));\n  }\n\n  return cache.get(key);\n};\n\nexports.buildSnapshotResolver = buildSnapshotResolver;\n\nfunction createSnapshotResolver(snapshotResolverPath) {\n  return typeof snapshotResolverPath === 'string' ? createCustomSnapshotResolver(snapshotResolverPath) : createDefaultSnapshotResolver();\n}\n\nfunction createDefaultSnapshotResolver() {\n  return {\n    resolveSnapshotPath: testPath => _path.default.join(_path.default.join(_path.default.dirname(testPath), '__snapshots__'), _path.default.basename(testPath) + DOT_EXTENSION),\n    resolveTestPath: snapshotPath => _path.default.resolve(_path.default.dirname(snapshotPath), '..', _path.default.basename(snapshotPath, DOT_EXTENSION)),\n    testPathForConsistencyCheck: _path.default.posix.join('consistency_check', '__tests__', 'example.test.js')\n  };\n}\n\nfunction createCustomSnapshotResolver(snapshotResolverPath) {\n  const custom = require(snapshotResolverPath);\n\n  const keys = [['resolveSnapshotPath', 'function'], ['resolveTestPath', 'function'], ['testPathForConsistencyCheck', 'string']];\n  keys.forEach(([propName, requiredType]) => {\n    if (typeof custom[propName] !== requiredType) {\n      throw new TypeError(mustImplement(propName, requiredType));\n    }\n  });\n  const customResolver = {\n    resolveSnapshotPath: testPath => custom.resolveSnapshotPath(testPath, DOT_EXTENSION),\n    resolveTestPath: snapshotPath => custom.resolveTestPath(snapshotPath, DOT_EXTENSION),\n    testPathForConsistencyCheck: custom.testPathForConsistencyCheck\n  };\n  verifyConsistentTransformations(customResolver);\n  return customResolver;\n}\n\nfunction mustImplement(propName, requiredType) {\n  return _chalk.default.bold(`Custom snapshot resolver must implement a \\`${propName}\\` as a ${requiredType}.`) + '\\nDocumentation: https://facebook.github.io/jest/docs/en/configuration.html#snapshotResolver';\n}\n\nfunction verifyConsistentTransformations(custom) {\n  const resolvedSnapshotPath = custom.resolveSnapshotPath(custom.testPathForConsistencyCheck);\n  const resolvedTestPath = custom.resolveTestPath(resolvedSnapshotPath);\n\n  if (resolvedTestPath !== custom.testPathForConsistencyCheck) {\n    throw new Error(_chalk.default.bold(`Custom snapshot resolver functions must transform paths consistently, i.e. expects resolveTestPath(resolveSnapshotPath('${custom.testPathForConsistencyCheck}')) === ${resolvedTestPath}`));\n  }\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-snapshot/build/snapshot_resolver.js"],"names":["Object","defineProperty","exports","value","buildSnapshotResolver","isSnapshotPath","DOT_EXTENSION","EXTENSION","_path","_interopRequireDefault","require","_chalk","obj","__esModule","default","path","endsWith","cache","Map","config","key","rootDir","has","set","createSnapshotResolver","snapshotResolver","get","snapshotResolverPath","createCustomSnapshotResolver","createDefaultSnapshotResolver","resolveSnapshotPath","testPath","join","dirname","basename","resolveTestPath","snapshotPath","resolve","testPathForConsistencyCheck","posix","custom","keys","forEach","propName","requiredType","TypeError","mustImplement","customResolver","verifyConsistentTransformations","bold","resolvedSnapshotPath","resolvedTestPath","Error"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.buildSnapshotResolver = exports.isSnapshotPath = exports.DOT_EXTENSION = exports.EXTENSION = void 0;\n\nvar _path = _interopRequireDefault(require('path'));\n\nvar _chalk = _interopRequireDefault(require('chalk'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst EXTENSION = 'snap';\nexports.EXTENSION = EXTENSION;\nconst DOT_EXTENSION = '.' + EXTENSION;\nexports.DOT_EXTENSION = DOT_EXTENSION;\n\nconst isSnapshotPath = path => path.endsWith(DOT_EXTENSION);\n\nexports.isSnapshotPath = isSnapshotPath;\nconst cache = new Map();\n\nconst buildSnapshotResolver = config => {\n  const key = config.rootDir;\n\n  if (!cache.has(key)) {\n    cache.set(key, createSnapshotResolver(config.snapshotResolver));\n  }\n\n  return cache.get(key);\n};\n\nexports.buildSnapshotResolver = buildSnapshotResolver;\n\nfunction createSnapshotResolver(snapshotResolverPath) {\n  return typeof snapshotResolverPath === 'string'\n    ? createCustomSnapshotResolver(snapshotResolverPath)\n    : createDefaultSnapshotResolver();\n}\n\nfunction createDefaultSnapshotResolver() {\n  return {\n    resolveSnapshotPath: testPath =>\n      _path.default.join(\n        _path.default.join(_path.default.dirname(testPath), '__snapshots__'),\n        _path.default.basename(testPath) + DOT_EXTENSION\n      ),\n    resolveTestPath: snapshotPath =>\n      _path.default.resolve(\n        _path.default.dirname(snapshotPath),\n        '..',\n        _path.default.basename(snapshotPath, DOT_EXTENSION)\n      ),\n    testPathForConsistencyCheck: _path.default.posix.join(\n      'consistency_check',\n      '__tests__',\n      'example.test.js'\n    )\n  };\n}\n\nfunction createCustomSnapshotResolver(snapshotResolverPath) {\n  const custom = require(snapshotResolverPath);\n\n  const keys = [\n    ['resolveSnapshotPath', 'function'],\n    ['resolveTestPath', 'function'],\n    ['testPathForConsistencyCheck', 'string']\n  ];\n  keys.forEach(([propName, requiredType]) => {\n    if (typeof custom[propName] !== requiredType) {\n      throw new TypeError(mustImplement(propName, requiredType));\n    }\n  });\n  const customResolver = {\n    resolveSnapshotPath: testPath =>\n      custom.resolveSnapshotPath(testPath, DOT_EXTENSION),\n    resolveTestPath: snapshotPath =>\n      custom.resolveTestPath(snapshotPath, DOT_EXTENSION),\n    testPathForConsistencyCheck: custom.testPathForConsistencyCheck\n  };\n  verifyConsistentTransformations(customResolver);\n  return customResolver;\n}\n\nfunction mustImplement(propName, requiredType) {\n  return (\n    _chalk.default.bold(\n      `Custom snapshot resolver must implement a \\`${propName}\\` as a ${requiredType}.`\n    ) +\n    '\\nDocumentation: https://facebook.github.io/jest/docs/en/configuration.html#snapshotResolver'\n  );\n}\n\nfunction verifyConsistentTransformations(custom) {\n  const resolvedSnapshotPath = custom.resolveSnapshotPath(\n    custom.testPathForConsistencyCheck\n  );\n  const resolvedTestPath = custom.resolveTestPath(resolvedSnapshotPath);\n\n  if (resolvedTestPath !== custom.testPathForConsistencyCheck) {\n    throw new Error(\n      _chalk.default.bold(\n        `Custom snapshot resolver functions must transform paths consistently, i.e. expects resolveTestPath(resolveSnapshotPath('${custom.testPathForConsistencyCheck}')) === ${resolvedTestPath}`\n      )\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}