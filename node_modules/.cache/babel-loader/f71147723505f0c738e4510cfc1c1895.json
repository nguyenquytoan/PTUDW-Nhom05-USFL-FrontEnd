{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = _default;\n\nfunction _istanbulLibInstrument() {\n  const data = require('istanbul-lib-instrument');\n\n  _istanbulLibInstrument = function _istanbulLibInstrument() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _istanbulLibCoverage() {\n  const data = require('istanbul-lib-coverage');\n\n  _istanbulLibCoverage = function _istanbulLibCoverage() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _transform() {\n  const data = require('@jest/transform');\n\n  _transform = function _transform() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction _default(source, filename, globalConfig, config, changedFiles) {\n  const coverageOptions = {\n    changedFiles,\n    collectCoverage: globalConfig.collectCoverage,\n    collectCoverageFrom: globalConfig.collectCoverageFrom,\n    collectCoverageOnlyFrom: globalConfig.collectCoverageOnlyFrom\n  };\n  let coverageWorkerResult = null;\n\n  if ((0, _transform().shouldInstrument)(filename, coverageOptions, config)) {\n    // Transform file with instrumentation to make sure initial coverage data is well mapped to original code.\n    const _transformSource = new (_transform().ScriptTransformer)(config).transformSource(filename, source, true),\n          code = _transformSource.code,\n          mapCoverage = _transformSource.mapCoverage,\n          sourceMapPath = _transformSource.sourceMapPath;\n\n    const extracted = (0, _istanbulLibInstrument().readInitialCoverage)(code); // Check extracted initial coverage is not null, this can happen when using /* istanbul ignore file */\n\n    if (extracted) {\n      coverageWorkerResult = {\n        coverage: (0, _istanbulLibCoverage().createFileCoverage)(extracted.coverageData),\n        sourceMapPath: mapCoverage ? sourceMapPath : null\n      };\n    }\n  }\n\n  return coverageWorkerResult;\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@jest/reporters/build/generateEmptyCoverage.js"],"names":["Object","defineProperty","exports","value","default","_default","_istanbulLibInstrument","data","require","_istanbulLibCoverage","_transform","source","filename","globalConfig","config","changedFiles","coverageOptions","collectCoverage","collectCoverageFrom","collectCoverageOnlyFrom","coverageWorkerResult","shouldInstrument","_transformSource","ScriptTransformer","transformSource","code","mapCoverage","sourceMapPath","extracted","readInitialCoverage","coverage","createFileCoverage","coverageData"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,SAASC,sBAAT,GAAkC;AAChC,QAAMC,IAAI,GAAGC,OAAO,CAAC,yBAAD,CAApB;;AAEAF,EAAAA,sBAAsB,GAAG,SAASA,sBAAT,GAAkC;AACzD,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASE,oBAAT,GAAgC;AAC9B,QAAMF,IAAI,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEAC,EAAAA,oBAAoB,GAAG,SAASA,oBAAT,GAAgC;AACrD,WAAOF,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASG,UAAT,GAAsB;AACpB,QAAMH,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAApB;;AAEAE,EAAAA,UAAU,GAAG,SAASA,UAAT,GAAsB;AACjC,WAAOH,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;AAED;;;;;;;;AAMA,SAASF,QAAT,CAAkBM,MAAlB,EAA0BC,QAA1B,EAAoCC,YAApC,EAAkDC,MAAlD,EAA0DC,YAA1D,EAAwE;AACtE,QAAMC,eAAe,GAAG;AACtBD,IAAAA,YADsB;AAEtBE,IAAAA,eAAe,EAAEJ,YAAY,CAACI,eAFR;AAGtBC,IAAAA,mBAAmB,EAAEL,YAAY,CAACK,mBAHZ;AAItBC,IAAAA,uBAAuB,EAAEN,YAAY,CAACM;AAJhB,GAAxB;AAMA,MAAIC,oBAAoB,GAAG,IAA3B;;AAEA,MAAI,CAAC,GAAGV,UAAU,GAAGW,gBAAjB,EAAmCT,QAAnC,EAA6CI,eAA7C,EAA8DF,MAA9D,CAAJ,EAA2E;AACzE;AACA,UAAMQ,gBAAgB,GAAG,KAAKZ,UAAU,EAAX,CAAea,iBAAnB,EACrBT,MADqB,EAErBU,eAFqB,CAELZ,QAFK,EAEKD,MAFL,EAEa,IAFb,CAAzB;AAAA,UAGEc,IAAI,GAAGH,gBAAgB,CAACG,IAH1B;AAAA,UAIEC,WAAW,GAAGJ,gBAAgB,CAACI,WAJjC;AAAA,UAKEC,aAAa,GAAGL,gBAAgB,CAACK,aALnC;;AAOA,UAAMC,SAAS,GAAG,CAAC,GAAGtB,sBAAsB,GAAGuB,mBAA7B,EAAkDJ,IAAlD,CAAlB,CATyE,CASE;;AAE3E,QAAIG,SAAJ,EAAe;AACbR,MAAAA,oBAAoB,GAAG;AACrBU,QAAAA,QAAQ,EAAE,CAAC,GAAGrB,oBAAoB,GAAGsB,kBAA3B,EACRH,SAAS,CAACI,YADF,CADW;AAIrBL,QAAAA,aAAa,EAAED,WAAW,GAAGC,aAAH,GAAmB;AAJxB,OAAvB;AAMD;AACF;;AAED,SAAOP,oBAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = _default;\n\nfunction _istanbulLibInstrument() {\n  const data = require('istanbul-lib-instrument');\n\n  _istanbulLibInstrument = function _istanbulLibInstrument() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _istanbulLibCoverage() {\n  const data = require('istanbul-lib-coverage');\n\n  _istanbulLibCoverage = function _istanbulLibCoverage() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _transform() {\n  const data = require('@jest/transform');\n\n  _transform = function _transform() {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction _default(source, filename, globalConfig, config, changedFiles) {\n  const coverageOptions = {\n    changedFiles,\n    collectCoverage: globalConfig.collectCoverage,\n    collectCoverageFrom: globalConfig.collectCoverageFrom,\n    collectCoverageOnlyFrom: globalConfig.collectCoverageOnlyFrom\n  };\n  let coverageWorkerResult = null;\n\n  if ((0, _transform().shouldInstrument)(filename, coverageOptions, config)) {\n    // Transform file with instrumentation to make sure initial coverage data is well mapped to original code.\n    const _transformSource = new (_transform()).ScriptTransformer(\n        config\n      ).transformSource(filename, source, true),\n      code = _transformSource.code,\n      mapCoverage = _transformSource.mapCoverage,\n      sourceMapPath = _transformSource.sourceMapPath;\n\n    const extracted = (0, _istanbulLibInstrument().readInitialCoverage)(code); // Check extracted initial coverage is not null, this can happen when using /* istanbul ignore file */\n\n    if (extracted) {\n      coverageWorkerResult = {\n        coverage: (0, _istanbulLibCoverage().createFileCoverage)(\n          extracted.coverageData\n        ),\n        sourceMapPath: mapCoverage ? sourceMapPath : null\n      };\n    }\n  }\n\n  return coverageWorkerResult;\n}\n"]},"metadata":{},"sourceType":"script"}