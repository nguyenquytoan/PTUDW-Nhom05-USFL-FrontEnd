{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar assert = require('assert');\n\nvar util = require('../../'); // test the internal isDate implementation\n\n\nvar Date2 = require('vm').runInNewContext('Date');\n\nvar d = new Date2();\nvar orig = util.inspect(d);\nDate2.prototype.foo = 'bar';\nvar after = util.inspect(d);\nassert.equal(orig, after); // test for sparse array\n\nvar a = ['foo', 'bar', 'baz'];\nassert.equal(util.inspect(a), '[ \\'foo\\', \\'bar\\', \\'baz\\' ]');\ndelete a[1];\nassert.equal(util.inspect(a), '[ \\'foo\\', , \\'baz\\' ]');\nassert.equal(util.inspect(a, true), '[ \\'foo\\', , \\'baz\\', [length]: 3 ]');\nassert.equal(util.inspect(new Array(5)), '[ , , , ,  ]'); // test for property descriptors\n\nvar getter = Object.create(null, {\n  a: {\n    get: function () {\n      return 'aaa';\n    }\n  }\n});\nvar setter = Object.create(null, {\n  b: {\n    set: function () {}\n  }\n});\nvar getterAndSetter = Object.create(null, {\n  c: {\n    get: function () {\n      return 'ccc';\n    },\n    set: function () {}\n  }\n});\nassert.equal(util.inspect(getter, true), '{ [a]: [Getter] }');\nassert.equal(util.inspect(setter, true), '{ [b]: [Setter] }');\nassert.equal(util.inspect(getterAndSetter, true), '{ [c]: [Getter/Setter] }'); // exceptions should print the error message, not '{}'\n\nassert.equal(util.inspect(new Error()), '[Error]');\nassert.equal(util.inspect(new Error('FAIL')), '[Error: FAIL]');\nassert.equal(util.inspect(new TypeError('FAIL')), '[TypeError: FAIL]');\nassert.equal(util.inspect(new SyntaxError('FAIL')), '[SyntaxError: FAIL]');\n\ntry {\n  undef();\n} catch (e) {\n  assert.equal(util.inspect(e), '[ReferenceError: undef is not defined]');\n}\n\nvar ex = util.inspect(new Error('FAIL'), true);\nassert.ok(ex.indexOf('[Error: FAIL]') != -1);\nassert.ok(ex.indexOf('[stack]') != -1);\nassert.ok(ex.indexOf('[message]') != -1); // GH-1941\n// should not throw:\n\nassert.equal(util.inspect(Object.create(Date.prototype)), '{}'); // GH-1944\n\nassert.doesNotThrow(function () {\n  var d = new Date();\n  d.toUTCString = null;\n  util.inspect(d);\n});\nassert.doesNotThrow(function () {\n  var r = /regexp/;\n  r.toString = null;\n  util.inspect(r);\n}); // bug with user-supplied inspect function returns non-string\n\nassert.doesNotThrow(function () {\n  util.inspect([{\n    inspect: function () {\n      return 123;\n    }\n  }]);\n}); // GH-2225\n\nvar x = {\n  inspect: util.inspect\n};\nassert.ok(util.inspect(x).indexOf('inspect') != -1); // util.inspect.styles and util.inspect.colors\n\nfunction test_color_style(style, input, implicit) {\n  var color_name = util.inspect.styles[style];\n  var color = ['', ''];\n  if (util.inspect.colors[color_name]) color = util.inspect.colors[color_name];\n  var without_color = util.inspect(input, false, 0, false);\n  var with_color = util.inspect(input, false, 0, true);\n  var expect = '\\u001b[' + color[0] + 'm' + without_color + '\\u001b[' + color[1] + 'm';\n  assert.equal(with_color, expect, 'util.inspect color for style ' + style);\n}\n\ntest_color_style('special', function () {});\ntest_color_style('number', 123.456);\ntest_color_style('boolean', true);\ntest_color_style('undefined', undefined);\ntest_color_style('null', null);\ntest_color_style('string', 'test string');\ntest_color_style('date', new Date());\ntest_color_style('regexp', /regexp/); // an object with \"hasOwnProperty\" overwritten should not throw\n\nassert.doesNotThrow(function () {\n  util.inspect({\n    hasOwnProperty: null\n  });\n}); // new API, accepts an \"options\" object\n\nvar subject = {\n  foo: 'bar',\n  hello: 31,\n  a: {\n    b: {\n      c: {\n        d: 0\n      }\n    }\n  }\n};\nObject.defineProperty(subject, 'hidden', {\n  enumerable: false,\n  value: null\n});\nassert(util.inspect(subject, {\n  showHidden: false\n}).indexOf('hidden') === -1);\nassert(util.inspect(subject, {\n  showHidden: true\n}).indexOf('hidden') !== -1);\nassert(util.inspect(subject, {\n  colors: false\n}).indexOf('\\u001b[32m') === -1);\nassert(util.inspect(subject, {\n  colors: true\n}).indexOf('\\u001b[32m') !== -1);\nassert(util.inspect(subject, {\n  depth: 2\n}).indexOf('c: [Object]') !== -1);\nassert(util.inspect(subject, {\n  depth: 0\n}).indexOf('a: [Object]') !== -1);\nassert(util.inspect(subject, {\n  depth: null\n}).indexOf('{ d: 0 }') !== -1); // \"customInspect\" option can enable/disable calling inspect() on objects\n\nsubject = {\n  inspect: function () {\n    return 123;\n  }\n};\nassert(util.inspect(subject, {\n  customInspect: true\n}).indexOf('123') !== -1);\nassert(util.inspect(subject, {\n  customInspect: true\n}).indexOf('inspect') === -1);\nassert(util.inspect(subject, {\n  customInspect: false\n}).indexOf('123') === -1);\nassert(util.inspect(subject, {\n  customInspect: false\n}).indexOf('inspect') !== -1); // custom inspect() functions should be able to return other Objects\n\nsubject.inspect = function () {\n  return {\n    foo: 'bar'\n  };\n};\n\nassert.equal(util.inspect(subject), '{ foo: \\'bar\\' }');\n\nsubject.inspect = function (depth, opts) {\n  assert.strictEqual(opts.customInspectOptions, true);\n};\n\nutil.inspect(subject, {\n  customInspectOptions: true\n}); // util.inspect with \"colors\" option should produce as many lines as without it\n\nfunction test_lines(input) {\n  var count_lines = function (str) {\n    return (str.match(/\\n/g) || []).length;\n  };\n\n  var without_color = util.inspect(input);\n  var with_color = util.inspect(input, {\n    colors: true\n  });\n  assert.equal(count_lines(without_color), count_lines(with_color));\n}\n\ntest_lines([1, 2, 3, 4, 5, 6, 7]);\ntest_lines(function () {\n  var big_array = [];\n\n  for (var i = 0; i < 100; i++) {\n    big_array.push(i);\n  }\n\n  return big_array;\n}());\ntest_lines({\n  foo: 'bar',\n  baz: 35,\n  b: {\n    a: 35\n  }\n});\ntest_lines({\n  foo: 'bar',\n  baz: 35,\n  b: {\n    a: 35\n  },\n  very_long_key: 'very_long_value',\n  even_longer_key: ['with even longer value in array']\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/util/test/node/inspect.js"],"names":["assert","require","util","Date2","runInNewContext","d","orig","inspect","prototype","foo","after","equal","a","Array","getter","Object","create","get","setter","b","set","getterAndSetter","c","Error","TypeError","SyntaxError","undef","e","ex","ok","indexOf","Date","doesNotThrow","toUTCString","r","toString","x","test_color_style","style","input","implicit","color_name","styles","color","colors","without_color","with_color","expect","undefined","hasOwnProperty","subject","hello","defineProperty","enumerable","value","showHidden","depth","customInspect","opts","strictEqual","customInspectOptions","test_lines","count_lines","str","match","length","big_array","i","push","baz","very_long_key","even_longer_key"],"mappings":"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","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\nvar assert = require('assert');\nvar util = require('../../');\n\n// test the internal isDate implementation\nvar Date2 = require('vm').runInNewContext('Date');\nvar d = new Date2();\nvar orig = util.inspect(d);\nDate2.prototype.foo = 'bar';\nvar after = util.inspect(d);\nassert.equal(orig, after);\n\n// test for sparse array\nvar a = ['foo', 'bar', 'baz'];\nassert.equal(util.inspect(a), '[ \\'foo\\', \\'bar\\', \\'baz\\' ]');\ndelete a[1];\nassert.equal(util.inspect(a), '[ \\'foo\\', , \\'baz\\' ]');\nassert.equal(util.inspect(a, true), '[ \\'foo\\', , \\'baz\\', [length]: 3 ]');\nassert.equal(util.inspect(new Array(5)), '[ , , , ,  ]');\n\n// test for property descriptors\nvar getter = Object.create(null, {\n  a: {\n    get: function() { return 'aaa'; }\n  }\n});\nvar setter = Object.create(null, {\n  b: {\n    set: function() {}\n  }\n});\nvar getterAndSetter = Object.create(null, {\n  c: {\n    get: function() { return 'ccc'; },\n    set: function() {}\n  }\n});\nassert.equal(util.inspect(getter, true), '{ [a]: [Getter] }');\nassert.equal(util.inspect(setter, true), '{ [b]: [Setter] }');\nassert.equal(util.inspect(getterAndSetter, true), '{ [c]: [Getter/Setter] }');\n\n// exceptions should print the error message, not '{}'\nassert.equal(util.inspect(new Error()), '[Error]');\nassert.equal(util.inspect(new Error('FAIL')), '[Error: FAIL]');\nassert.equal(util.inspect(new TypeError('FAIL')), '[TypeError: FAIL]');\nassert.equal(util.inspect(new SyntaxError('FAIL')), '[SyntaxError: FAIL]');\ntry {\n  undef();\n} catch (e) {\n  assert.equal(util.inspect(e), '[ReferenceError: undef is not defined]');\n}\nvar ex = util.inspect(new Error('FAIL'), true);\nassert.ok(ex.indexOf('[Error: FAIL]') != -1);\nassert.ok(ex.indexOf('[stack]') != -1);\nassert.ok(ex.indexOf('[message]') != -1);\n\n// GH-1941\n// should not throw:\nassert.equal(util.inspect(Object.create(Date.prototype)), '{}');\n\n// GH-1944\nassert.doesNotThrow(function() {\n  var d = new Date();\n  d.toUTCString = null;\n  util.inspect(d);\n});\n\nassert.doesNotThrow(function() {\n  var r = /regexp/;\n  r.toString = null;\n  util.inspect(r);\n});\n\n// bug with user-supplied inspect function returns non-string\nassert.doesNotThrow(function() {\n  util.inspect([{\n    inspect: function() { return 123; }\n  }]);\n});\n\n// GH-2225\nvar x = { inspect: util.inspect };\nassert.ok(util.inspect(x).indexOf('inspect') != -1);\n\n// util.inspect.styles and util.inspect.colors\nfunction test_color_style(style, input, implicit) {\n  var color_name = util.inspect.styles[style];\n  var color = ['', ''];\n  if(util.inspect.colors[color_name])\n    color = util.inspect.colors[color_name];\n\n  var without_color = util.inspect(input, false, 0, false);\n  var with_color = util.inspect(input, false, 0, true);\n  var expect = '\\u001b[' + color[0] + 'm' + without_color +\n               '\\u001b[' + color[1] + 'm';\n  assert.equal(with_color, expect, 'util.inspect color for style '+style);\n}\n\ntest_color_style('special', function(){});\ntest_color_style('number', 123.456);\ntest_color_style('boolean', true);\ntest_color_style('undefined', undefined);\ntest_color_style('null', null);\ntest_color_style('string', 'test string');\ntest_color_style('date', new Date);\ntest_color_style('regexp', /regexp/);\n\n// an object with \"hasOwnProperty\" overwritten should not throw\nassert.doesNotThrow(function() {\n  util.inspect({\n    hasOwnProperty: null\n  });\n});\n\n// new API, accepts an \"options\" object\nvar subject = { foo: 'bar', hello: 31, a: { b: { c: { d: 0 } } } };\nObject.defineProperty(subject, 'hidden', { enumerable: false, value: null });\n\nassert(util.inspect(subject, { showHidden: false }).indexOf('hidden') === -1);\nassert(util.inspect(subject, { showHidden: true }).indexOf('hidden') !== -1);\nassert(util.inspect(subject, { colors: false }).indexOf('\\u001b[32m') === -1);\nassert(util.inspect(subject, { colors: true }).indexOf('\\u001b[32m') !== -1);\nassert(util.inspect(subject, { depth: 2 }).indexOf('c: [Object]') !== -1);\nassert(util.inspect(subject, { depth: 0 }).indexOf('a: [Object]') !== -1);\nassert(util.inspect(subject, { depth: null }).indexOf('{ d: 0 }') !== -1);\n\n// \"customInspect\" option can enable/disable calling inspect() on objects\nsubject = { inspect: function() { return 123; } };\n\nassert(util.inspect(subject, { customInspect: true }).indexOf('123') !== -1);\nassert(util.inspect(subject, { customInspect: true }).indexOf('inspect') === -1);\nassert(util.inspect(subject, { customInspect: false }).indexOf('123') === -1);\nassert(util.inspect(subject, { customInspect: false }).indexOf('inspect') !== -1);\n\n// custom inspect() functions should be able to return other Objects\nsubject.inspect = function() { return { foo: 'bar' }; };\n\nassert.equal(util.inspect(subject), '{ foo: \\'bar\\' }');\n\nsubject.inspect = function(depth, opts) {\n  assert.strictEqual(opts.customInspectOptions, true);\n};\n\nutil.inspect(subject, { customInspectOptions: true });\n\n// util.inspect with \"colors\" option should produce as many lines as without it\nfunction test_lines(input) {\n  var count_lines = function(str) {\n    return (str.match(/\\n/g) || []).length;\n  }\n\n  var without_color = util.inspect(input);\n  var with_color = util.inspect(input, {colors: true});\n  assert.equal(count_lines(without_color), count_lines(with_color));\n}\n\ntest_lines([1, 2, 3, 4, 5, 6, 7]);\ntest_lines(function() {\n  var big_array = [];\n  for (var i = 0; i < 100; i++) {\n    big_array.push(i);\n  }\n  return big_array;\n}());\ntest_lines({foo: 'bar', baz: 35, b: {a: 35}});\ntest_lines({\n  foo: 'bar',\n  baz: 35,\n  b: {a: 35},\n  very_long_key: 'very_long_value',\n  even_longer_key: ['with even longer value in array']\n});\n"]},"metadata":{},"sourceType":"script"}