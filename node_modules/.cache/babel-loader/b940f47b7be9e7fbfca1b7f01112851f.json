{"ast":null,"code":"#!/usr/bin/env node\n'use strict';\n\nconst sane = require('../');\n\nconst argv = require('minimist')(process.argv.slice(2));\n\nconst execshell = require('exec-sh');\n\nif (argv._.length === 0) {\n  const msg = 'Usage: sane <command> [...directory] [--glob=<filePattern>] ' + '[--ignored=<filePattern>] [--poll] [--watchman] [--watchman-path=<watchmanBinaryPath>] [--dot] ' + '[--wait=<seconds>] [--only-changes] [--quiet]';\n  console.error(msg);\n  process.exit();\n}\n\nconst opts = {};\nconst command = argv._[0];\nconst dir = argv._[1] || process.cwd();\nconst waitTime = Number(argv.wait || argv.w);\nconst dot = argv.dot || argv.d;\nconst glob = argv.glob || argv.g;\nconst ignored = argv.ignored || argv.i;\nconst poll = argv.poll || argv.p;\nconst watchman = argv.watchman || argv.w;\nconst watchmanPath = argv['watchman-path'];\nconst onlyChanges = argv['only-changes'] | argv.o;\nconst quiet = argv.quiet | argv.q;\n\nif (dot) {\n  opts.dot = true;\n}\n\nif (glob) {\n  opts.glob = glob;\n}\n\nif (ignored) {\n  opts.ignored = ignored;\n}\n\nif (poll) {\n  opts.poll = true;\n}\n\nif (watchman) {\n  opts.watchman = true;\n}\n\nif (watchmanPath) {\n  opts.watchmanPath = watchmanPath;\n}\n\nlet wait = false;\nconst watcher = sane(dir, opts);\nwatcher.on('ready', function () {\n  if (!quiet) {\n    console.log('Watching: ', dir + '/' + (opts.glob || ''));\n  }\n\n  if (!onlyChanges) {\n    execshell(command);\n  }\n});\nwatcher.on('change', function (filepath) {\n  if (wait) {\n    return;\n  }\n\n  if (!quiet) {\n    console.log('Change detected in:', filepath);\n  }\n\n  execshell(command);\n\n  if (waitTime > 0) {\n    wait = true;\n    setTimeout(function () {\n      wait = false;\n    }, waitTime * 1000);\n  }\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/sane/src/cli.js"],"names":["sane","require","argv","process","slice","execshell","_","length","msg","console","error","exit","opts","command","dir","cwd","waitTime","Number","wait","w","dot","d","glob","g","ignored","i","poll","p","watchman","watchmanPath","onlyChanges","o","quiet","q","watcher","on","log","filepath","setTimeout"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n'use strict';\n\nconst sane = require('../');\nconst argv = require('minimist')(process.argv.slice(2));\nconst execshell = require('exec-sh');\n\nif (argv._.length === 0) {\n  const msg =\n    'Usage: sane <command> [...directory] [--glob=<filePattern>] ' +\n    '[--ignored=<filePattern>] [--poll] [--watchman] [--watchman-path=<watchmanBinaryPath>] [--dot] ' +\n    '[--wait=<seconds>] [--only-changes] [--quiet]';\n  console.error(msg);\n  process.exit();\n}\n\nconst opts = {};\nconst command = argv._[0];\nconst dir = argv._[1] || process.cwd();\nconst waitTime = Number(argv.wait || argv.w);\nconst dot = argv.dot || argv.d;\nconst glob = argv.glob || argv.g;\nconst ignored = argv.ignored || argv.i;\nconst poll = argv.poll || argv.p;\nconst watchman = argv.watchman || argv.w;\nconst watchmanPath = argv['watchman-path'];\nconst onlyChanges = argv['only-changes'] | argv.o;\nconst quiet = argv.quiet | argv.q;\n\nif (dot) {\n  opts.dot = true;\n}\nif (glob) {\n  opts.glob = glob;\n}\nif (ignored) {\n  opts.ignored = ignored;\n}\nif (poll) {\n  opts.poll = true;\n}\nif (watchman) {\n  opts.watchman = true;\n}\nif (watchmanPath) {\n  opts.watchmanPath = watchmanPath;\n}\n\nlet wait = false;\nconst watcher = sane(dir, opts);\n\nwatcher.on('ready', function() {\n  if (!quiet) {\n    console.log('Watching: ', dir + '/' + (opts.glob || ''));\n  }\n  if (!onlyChanges) {\n    execshell(command);\n  }\n});\n\nwatcher.on('change', function(filepath) {\n  if (wait) {\n    return;\n  }\n  if (!quiet) {\n    console.log('Change detected in:', filepath);\n  }\n  execshell(command);\n\n  if (waitTime > 0) {\n    wait = true;\n    setTimeout(function() {\n      wait = false;\n    }, waitTime * 1000);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}