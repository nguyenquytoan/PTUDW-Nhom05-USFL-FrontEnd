{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar path = require(\"path\");\n/**\r\n * Returns «true» if the last partial of the path starting with a period.\r\n */\n\n\nfunction isDotDirectory(filepath) {\n  return path.basename(filepath).startsWith('.');\n}\n\nexports.isDotDirectory = isDotDirectory;\n/**\r\n * Convert a windows-like path to a unix-style path.\r\n */\n\nfunction normalize(filepath) {\n  return filepath.replace(/\\\\/g, '/');\n}\n\nexports.normalize = normalize;\n/**\r\n * Returns normalized absolute path of provided filepath.\r\n */\n\nfunction makeAbsolute(cwd, filepath) {\n  return normalize(path.resolve(cwd, filepath));\n}\n\nexports.makeAbsolute = makeAbsolute;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/fast-glob/out/utils/path.js"],"names":["Object","defineProperty","exports","value","path","require","isDotDirectory","filepath","basename","startsWith","normalize","replace","makeAbsolute","cwd","resolve"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AACA;;;;;AAGA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B,SAAOH,IAAI,CAACI,QAAL,CAAcD,QAAd,EAAwBE,UAAxB,CAAmC,GAAnC,CAAP;AACH;;AACDP,OAAO,CAACI,cAAR,GAAyBA,cAAzB;AACA;;;;AAGA,SAASI,SAAT,CAAmBH,QAAnB,EAA6B;AACzB,SAAOA,QAAQ,CAACI,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAAP;AACH;;AACDT,OAAO,CAACQ,SAAR,GAAoBA,SAApB;AACA;;;;AAGA,SAASE,YAAT,CAAsBC,GAAtB,EAA2BN,QAA3B,EAAqC;AACjC,SAAOG,SAAS,CAACN,IAAI,CAACU,OAAL,CAAaD,GAAb,EAAkBN,QAAlB,CAAD,CAAhB;AACH;;AACDL,OAAO,CAACU,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path = require(\"path\");\r\n/**\r\n * Returns «true» if the last partial of the path starting with a period.\r\n */\r\nfunction isDotDirectory(filepath) {\r\n    return path.basename(filepath).startsWith('.');\r\n}\r\nexports.isDotDirectory = isDotDirectory;\r\n/**\r\n * Convert a windows-like path to a unix-style path.\r\n */\r\nfunction normalize(filepath) {\r\n    return filepath.replace(/\\\\/g, '/');\r\n}\r\nexports.normalize = normalize;\r\n/**\r\n * Returns normalized absolute path of provided filepath.\r\n */\r\nfunction makeAbsolute(cwd, filepath) {\r\n    return normalize(path.resolve(cwd, filepath));\r\n}\r\nexports.makeAbsolute = makeAbsolute;\r\n"]},"metadata":{},"sourceType":"script"}