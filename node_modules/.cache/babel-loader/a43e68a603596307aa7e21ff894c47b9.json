{"ast":null,"code":"\"use strict\";\n\nvar hrefInfo = require(\"./hrefInfo\");\n\nvar parseHost = require(\"./host\");\n\nvar parsePath = require(\"./path\");\n\nvar parsePort = require(\"./port\");\n\nvar parseQuery = require(\"./query\");\n\nvar parseUrlString = require(\"./urlstring\");\n\nvar pathUtils = require(\"../util/path\");\n\nfunction parseFromUrl(url, options, fallback) {\n  if (url) {\n    var urlObj = parseUrl(url, options); // Because the following occurs in the relate stage for \"to\" URLs,\n    // such had to be mostly duplicated here\n\n    var pathArray = pathUtils.resolveDotSegments(urlObj.path.absolute.array);\n    urlObj.path.absolute.array = pathArray;\n    urlObj.path.absolute.string = \"/\" + pathUtils.join(pathArray);\n    return urlObj;\n  } else {\n    return fallback;\n  }\n}\n\nfunction parseUrl(url, options) {\n  var urlObj = parseUrlString(url, options);\n  if (urlObj.valid === false) return urlObj;\n  parseHost(urlObj, options);\n  parsePort(urlObj, options);\n  parsePath(urlObj, options);\n  parseQuery(urlObj, options);\n  hrefInfo(urlObj);\n  return urlObj;\n}\n\nmodule.exports = {\n  from: parseFromUrl,\n  to: parseUrl\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/relateurl/lib/parse/index.js"],"names":["hrefInfo","require","parseHost","parsePath","parsePort","parseQuery","parseUrlString","pathUtils","parseFromUrl","url","options","fallback","urlObj","parseUrl","pathArray","resolveDotSegments","path","absolute","array","string","join","valid","module","exports","from","to"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAKC,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAIC,SAAS,GAAID,OAAO,CAAC,QAAD,CAAxB;;AACA,IAAIE,SAAS,GAAIF,OAAO,CAAC,QAAD,CAAxB;;AACA,IAAIG,SAAS,GAAIH,OAAO,CAAC,QAAD,CAAxB;;AACA,IAAII,UAAU,GAAGJ,OAAO,CAAC,SAAD,CAAxB;;AACA,IAAIK,cAAc,GAAGL,OAAO,CAAC,aAAD,CAA5B;;AACA,IAAIM,SAAS,GAAQN,OAAO,CAAC,cAAD,CAA5B;;AAIA,SAASO,YAAT,CAAsBC,GAAtB,EAA2BC,OAA3B,EAAoCC,QAApC,EACA;AACC,MAAIF,GAAJ,EACA;AACC,QAAIG,MAAM,GAAGC,QAAQ,CAACJ,GAAD,EAAMC,OAAN,CAArB,CADD,CAGC;AACA;;AAEA,QAAII,SAAS,GAAGP,SAAS,CAACQ,kBAAV,CAA6BH,MAAM,CAACI,IAAP,CAAYC,QAAZ,CAAqBC,KAAlD,CAAhB;AAEAN,IAAAA,MAAM,CAACI,IAAP,CAAYC,QAAZ,CAAqBC,KAArB,GAA8BJ,SAA9B;AACAF,IAAAA,MAAM,CAACI,IAAP,CAAYC,QAAZ,CAAqBE,MAArB,GAA8B,MAAMZ,SAAS,CAACa,IAAV,CAAeN,SAAf,CAApC;AAEA,WAAOF,MAAP;AACA,GAbD,MAeA;AACC,WAAOD,QAAP;AACA;AACD;;AAID,SAASE,QAAT,CAAkBJ,GAAlB,EAAuBC,OAAvB,EACA;AACC,MAAIE,MAAM,GAAGN,cAAc,CAACG,GAAD,EAAMC,OAAN,CAA3B;AAEA,MAAIE,MAAM,CAACS,KAAP,KAAe,KAAnB,EAA0B,OAAOT,MAAP;AAE1BV,EAAAA,SAAS,CAACU,MAAD,EAASF,OAAT,CAAT;AACAN,EAAAA,SAAS,CAACQ,MAAD,EAASF,OAAT,CAAT;AACAP,EAAAA,SAAS,CAACS,MAAD,EAASF,OAAT,CAAT;AACAL,EAAAA,UAAU,CAACO,MAAD,EAASF,OAAT,CAAV;AACAV,EAAAA,QAAQ,CAACY,MAAD,CAAR;AAEA,SAAOA,MAAP;AACA;;AAIDU,MAAM,CAACC,OAAP,GACA;AACCC,EAAAA,IAAI,EAAEhB,YADP;AAECiB,EAAAA,EAAE,EAAIZ;AAFP,CADA","sourcesContent":["\"use strict\";\n\nvar hrefInfo   = require(\"./hrefInfo\");\nvar parseHost  = require(\"./host\");\nvar parsePath  = require(\"./path\");\nvar parsePort  = require(\"./port\");\nvar parseQuery = require(\"./query\");\nvar parseUrlString = require(\"./urlstring\");\nvar pathUtils      = require(\"../util/path\");\n\n\n\nfunction parseFromUrl(url, options, fallback)\n{\n\tif (url)\n\t{\n\t\tvar urlObj = parseUrl(url, options);\n\t\t\n\t\t// Because the following occurs in the relate stage for \"to\" URLs,\n\t\t// such had to be mostly duplicated here\n\t\t\n\t\tvar pathArray = pathUtils.resolveDotSegments(urlObj.path.absolute.array);\n\t\t\n\t\turlObj.path.absolute.array  = pathArray;\n\t\turlObj.path.absolute.string = \"/\" + pathUtils.join(pathArray);\n\t\t\n\t\treturn urlObj;\n\t}\n\telse\n\t{\n\t\treturn fallback;\n\t}\n}\n\n\n\nfunction parseUrl(url, options)\n{\n\tvar urlObj = parseUrlString(url, options);\n\t\n\tif (urlObj.valid===false) return urlObj;\n\t\n\tparseHost(urlObj, options);\n\tparsePort(urlObj, options);\n\tparsePath(urlObj, options);\n\tparseQuery(urlObj, options);\n\threfInfo(urlObj);\n\t\n\treturn urlObj;\n}\n\n\n\nmodule.exports =\n{\n\tfrom: parseFromUrl,\n\tto:   parseUrl\n};\n"]},"metadata":{},"sourceType":"script"}