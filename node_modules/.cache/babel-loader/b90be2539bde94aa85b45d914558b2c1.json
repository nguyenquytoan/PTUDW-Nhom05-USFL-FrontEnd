{"ast":null,"code":"// @remove-file-on-eject\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'; // Makes the script crash on unhandled rejections instead of silently\n// ignoring them. In the future, promise rejections that are not handled will\n// terminate the Node.js process with a non-zero exit code.\n\nprocess.on('unhandledRejection', err => {\n  throw err;\n});\n\nconst fs = require('fs-extra');\n\nconst path = require('path');\n\nconst chalk = require('react-dev-utils/chalk');\n\nconst execSync = require('child_process').execSync;\n\nconst spawn = require('react-dev-utils/crossSpawn');\n\nconst {\n  defaultBrowsers\n} = require('react-dev-utils/browsersHelper');\n\nconst os = require('os');\n\nconst verifyTypeScriptSetup = require('./utils/verifyTypeScriptSetup');\n\nfunction isInGitRepository() {\n  try {\n    execSync('git rev-parse --is-inside-work-tree', {\n      stdio: 'ignore'\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction isInMercurialRepository() {\n  try {\n    execSync('hg --cwd . root', {\n      stdio: 'ignore'\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction tryGitInit() {\n  try {\n    execSync('git --version', {\n      stdio: 'ignore'\n    });\n\n    if (isInGitRepository() || isInMercurialRepository()) {\n      return false;\n    }\n\n    execSync('git init', {\n      stdio: 'ignore'\n    });\n    return true;\n  } catch (e) {\n    console.warn('Git repo not initialized', e);\n    return false;\n  }\n}\n\nfunction tryGitCommit(appPath) {\n  try {\n    execSync('git add -A', {\n      stdio: 'ignore'\n    });\n    execSync('git commit -m \"Initialize project using Create React App\"', {\n      stdio: 'ignore'\n    });\n    return true;\n  } catch (e) {\n    // We couldn't commit in already initialized git repo,\n    // maybe the commit author config is not set.\n    // In the future, we might supply our own committer\n    // like Ember CLI does, but for now, let's just\n    // remove the Git files to avoid a half-done state.\n    console.warn('Git commit not created', e);\n    console.warn('Removing .git directory...');\n\n    try {\n      // unlinkSync() doesn't work on directories.\n      fs.removeSync(path.join(appPath, '.git'));\n    } catch (removeErr) {// Ignore.\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = function (appPath, appName, verbose, originalDirectory, templateName) {\n  const appPackage = require(path.join(appPath, 'package.json'));\n\n  const useYarn = fs.existsSync(path.join(appPath, 'yarn.lock'));\n\n  if (!templateName) {\n    console.log('');\n    console.error(`A template was not provided. This is likely because you're using an outdated version of ${chalk.cyan('create-react-app')}.`);\n    console.error(`Please note that global installs of ${chalk.cyan('create-react-app')} are no longer supported.`);\n    return;\n  }\n\n  const templatePath = path.join(require.resolve(templateName, {\n    paths: [appPath]\n  }), '..');\n  let templateJsonPath;\n\n  if (templateName) {\n    templateJsonPath = path.join(templatePath, 'template.json');\n  } else {\n    // TODO: Remove support for this in v4.\n    templateJsonPath = path.join(appPath, '.template.dependencies.json');\n  }\n\n  let templateJson = {};\n\n  if (fs.existsSync(templateJsonPath)) {\n    templateJson = require(templateJsonPath);\n  }\n\n  const templatePackage = templateJson.package || {}; // Keys to ignore in templatePackage\n\n  const templatePackageBlacklist = ['name', 'version', 'description', 'keywords', 'bugs', 'license', 'author', 'contributors', 'files', 'browser', 'bin', 'man', 'directories', 'repository', 'devDependencies', 'peerDependencies', 'bundledDependencies', 'optionalDependencies', 'engineStrict', 'os', 'cpu', 'preferGlobal', 'private', 'publishConfig']; // Keys from templatePackage that will be merged with appPackage\n\n  const templatePackageToMerge = ['dependencies', 'scripts']; // Keys from templatePackage that will be added to appPackage,\n  // replacing any existing entries.\n\n  const templatePackageToReplace = Object.keys(templatePackage).filter(key => {\n    return !templatePackageBlacklist.includes(key) && !templatePackageToMerge.includes(key);\n  }); // Copy over some of the devDependencies\n\n  appPackage.dependencies = appPackage.dependencies || {}; // Setup the script rules\n  // TODO: deprecate 'scripts' key directly on templateJson\n\n  const templateScripts = templatePackage.scripts || templateJson.scripts || {};\n  appPackage.scripts = Object.assign({\n    start: 'react-scripts start',\n    build: 'react-scripts build',\n    test: 'react-scripts test',\n    eject: 'react-scripts eject'\n  }, templateScripts); // Update scripts for Yarn users\n\n  if (useYarn) {\n    appPackage.scripts = Object.entries(appPackage.scripts).reduce((acc, [key, value]) => ({ ...acc,\n      [key]: value.replace(/(npm run |npm )/, 'yarn ')\n    }), {});\n  } // Setup the eslint config\n\n\n  appPackage.eslintConfig = {\n    extends: 'react-app'\n  }; // Setup the browsers list\n\n  appPackage.browserslist = defaultBrowsers; // Add templatePackage keys/values to appPackage, replacing existing entries\n\n  templatePackageToReplace.forEach(key => {\n    appPackage[key] = templatePackage[key];\n  });\n  fs.writeFileSync(path.join(appPath, 'package.json'), JSON.stringify(appPackage, null, 2) + os.EOL);\n  const readmeExists = fs.existsSync(path.join(appPath, 'README.md'));\n\n  if (readmeExists) {\n    fs.renameSync(path.join(appPath, 'README.md'), path.join(appPath, 'README.old.md'));\n  } // Copy the files for the user\n\n\n  const templateDir = path.join(templatePath, 'template');\n\n  if (fs.existsSync(templateDir)) {\n    fs.copySync(templateDir, appPath);\n  } else {\n    console.error(`Could not locate supplied template: ${chalk.green(templateDir)}`);\n    return;\n  } // modifies README.md commands based on user used package manager.\n\n\n  if (useYarn) {\n    try {\n      const readme = fs.readFileSync(path.join(appPath, 'README.md'), 'utf8');\n      fs.writeFileSync(path.join(appPath, 'README.md'), readme.replace(/(npm run |npm )/g, 'yarn '), 'utf8');\n    } catch (err) {// Silencing the error. As it fall backs to using default npm commands.\n    }\n  }\n\n  const gitignoreExists = fs.existsSync(path.join(appPath, '.gitignore'));\n\n  if (gitignoreExists) {\n    // Append if there's already a `.gitignore` file there\n    const data = fs.readFileSync(path.join(appPath, 'gitignore'));\n    fs.appendFileSync(path.join(appPath, '.gitignore'), data);\n    fs.unlinkSync(path.join(appPath, 'gitignore'));\n  } else {\n    // Rename gitignore after the fact to prevent npm from renaming it to .npmignore\n    // See: https://github.com/npm/npm/issues/1862\n    fs.moveSync(path.join(appPath, 'gitignore'), path.join(appPath, '.gitignore'), []);\n  } // Initialize git repo\n\n\n  let initializedGit = false;\n\n  if (tryGitInit()) {\n    initializedGit = true;\n    console.log();\n    console.log('Initialized a git repository.');\n  }\n\n  let command;\n  let remove;\n  let args;\n\n  if (useYarn) {\n    command = 'yarnpkg';\n    remove = 'remove';\n    args = ['add'];\n  } else {\n    command = 'npm';\n    remove = 'uninstall';\n    args = ['install', '--save', verbose && '--verbose'].filter(e => e);\n  } // Install additional template dependencies, if present\n  // TODO: deprecate 'dependencies' key directly on templateJson\n\n\n  const templateDependencies = templatePackage.dependencies || templateJson.dependencies;\n\n  if (templateDependencies) {\n    args = args.concat(Object.keys(templateDependencies).map(key => {\n      return `${key}@${templateDependencies[key]}`;\n    }));\n  } // Install react and react-dom for backward compatibility with old CRA cli\n  // which doesn't install react and react-dom along with react-scripts\n\n\n  if (!isReactInstalled(appPackage)) {\n    args = args.concat(['react', 'react-dom']);\n  } // Install template dependencies, and react and react-dom if missing.\n\n\n  if ((!isReactInstalled(appPackage) || templateName) && args.length > 1) {\n    console.log();\n    console.log(`Installing template dependencies using ${command}...`);\n    const proc = spawn.sync(command, args, {\n      stdio: 'inherit'\n    });\n\n    if (proc.status !== 0) {\n      console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n      return;\n    }\n  }\n\n  if (args.find(arg => arg.includes('typescript'))) {\n    console.log();\n    verifyTypeScriptSetup();\n  } // Remove template\n\n\n  console.log(`Removing template package using ${command}...`);\n  console.log();\n  const proc = spawn.sync(command, [remove, templateName], {\n    stdio: 'inherit'\n  });\n\n  if (proc.status !== 0) {\n    console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n    return;\n  } // Create git commit if git repo was initialized\n\n\n  if (initializedGit && tryGitCommit(appPath)) {\n    console.log();\n    console.log('Created git commit.');\n  } // Display the most elegant way to cd.\n  // This needs to handle an undefined originalDirectory for\n  // backward compatibility with old global-cli's.\n\n\n  let cdpath;\n\n  if (originalDirectory && path.join(originalDirectory, appName) === appPath) {\n    cdpath = appName;\n  } else {\n    cdpath = appPath;\n  } // Change displayed command to yarn instead of yarnpkg\n\n\n  const displayedCommand = useYarn ? 'yarn' : 'npm';\n  console.log();\n  console.log(`Success! Created ${appName} at ${appPath}`);\n  console.log('Inside that directory, you can run several commands:');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} start`));\n  console.log('    Starts the development server.');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} ${useYarn ? '' : 'run '}build`));\n  console.log('    Bundles the app into static files for production.');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} test`));\n  console.log('    Starts the test runner.');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} ${useYarn ? '' : 'run '}eject`));\n  console.log('    Removes this tool and copies build dependencies, configuration files');\n  console.log('    and scripts into the app directory. If you do this, you can’t go back!');\n  console.log();\n  console.log('We suggest that you begin by typing:');\n  console.log();\n  console.log(chalk.cyan('  cd'), cdpath);\n  console.log(`  ${chalk.cyan(`${displayedCommand} start`)}`);\n\n  if (readmeExists) {\n    console.log();\n    console.log(chalk.yellow('You had a `README.md` file, we renamed it to `README.old.md`'));\n  }\n\n  console.log();\n  console.log('Happy hacking!');\n};\n\nfunction isReactInstalled(appPackage) {\n  const dependencies = appPackage.dependencies || {};\n  return typeof dependencies.react !== 'undefined' && typeof dependencies['react-dom'] !== 'undefined';\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/react-scripts/scripts/init.js"],"names":["process","on","err","fs","require","path","chalk","execSync","spawn","defaultBrowsers","os","verifyTypeScriptSetup","isInGitRepository","stdio","e","isInMercurialRepository","tryGitInit","console","warn","tryGitCommit","appPath","removeSync","join","removeErr","module","exports","appName","verbose","originalDirectory","templateName","appPackage","useYarn","existsSync","log","error","cyan","templatePath","resolve","paths","templateJsonPath","templateJson","templatePackage","package","templatePackageBlacklist","templatePackageToMerge","templatePackageToReplace","Object","keys","filter","key","includes","dependencies","templateScripts","scripts","assign","start","build","test","eject","entries","reduce","acc","value","replace","eslintConfig","extends","browserslist","forEach","writeFileSync","JSON","stringify","EOL","readmeExists","renameSync","templateDir","copySync","green","readme","readFileSync","gitignoreExists","data","appendFileSync","unlinkSync","moveSync","initializedGit","command","remove","args","templateDependencies","concat","map","isReactInstalled","length","proc","sync","status","find","arg","cdpath","displayedCommand","yellow","react"],"mappings":"AAAA;;AACA;;;;;;AAMA,a,CAEA;AACA;AACA;;AACAA,OAAO,CAACC,EAAR,CAAW,oBAAX,EAAiCC,GAAG,IAAI;AACtC,QAAMA,GAAN;AACD,CAFD;;AAIA,MAAMC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,uBAAD,CAArB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,eAAD,CAAP,CAAyBG,QAA1C;;AACA,MAAMC,KAAK,GAAGJ,OAAO,CAAC,4BAAD,CAArB;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAsBL,OAAO,CAAC,gCAAD,CAAnC;;AACA,MAAMM,EAAE,GAAGN,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMO,qBAAqB,GAAGP,OAAO,CAAC,+BAAD,CAArC;;AAEA,SAASQ,iBAAT,GAA6B;AAC3B,MAAI;AACFL,IAAAA,QAAQ,CAAC,qCAAD,EAAwC;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAAxC,CAAR;AACA,WAAO,IAAP;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF;;AAED,SAASC,uBAAT,GAAmC;AACjC,MAAI;AACFR,IAAAA,QAAQ,CAAC,iBAAD,EAAoB;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAApB,CAAR;AACA,WAAO,IAAP;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF;;AAED,SAASE,UAAT,GAAsB;AACpB,MAAI;AACFT,IAAAA,QAAQ,CAAC,eAAD,EAAkB;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAAlB,CAAR;;AACA,QAAID,iBAAiB,MAAMG,uBAAuB,EAAlD,EAAsD;AACpD,aAAO,KAAP;AACD;;AAEDR,IAAAA,QAAQ,CAAC,UAAD,EAAa;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAAb,CAAR;AACA,WAAO,IAAP;AACD,GARD,CAQE,OAAOC,CAAP,EAAU;AACVG,IAAAA,OAAO,CAACC,IAAR,CAAa,0BAAb,EAAyCJ,CAAzC;AACA,WAAO,KAAP;AACD;AACF;;AAED,SAASK,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,MAAI;AACFb,IAAAA,QAAQ,CAAC,YAAD,EAAe;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAAf,CAAR;AACAN,IAAAA,QAAQ,CAAC,2DAAD,EAA8D;AACpEM,MAAAA,KAAK,EAAE;AAD6D,KAA9D,CAAR;AAGA,WAAO,IAAP;AACD,GAND,CAME,OAAOC,CAAP,EAAU;AACV;AACA;AACA;AACA;AACA;AACAG,IAAAA,OAAO,CAACC,IAAR,CAAa,wBAAb,EAAuCJ,CAAvC;AACAG,IAAAA,OAAO,CAACC,IAAR,CAAa,4BAAb;;AACA,QAAI;AACF;AACAf,MAAAA,EAAE,CAACkB,UAAH,CAAchB,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,MAAnB,CAAd;AACD,KAHD,CAGE,OAAOG,SAAP,EAAkB,CAClB;AACD;;AACD,WAAO,KAAP;AACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiB,UACfL,OADe,EAEfM,OAFe,EAGfC,OAHe,EAIfC,iBAJe,EAKfC,YALe,EAMf;AACA,QAAMC,UAAU,GAAG1B,OAAO,CAACC,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,cAAnB,CAAD,CAA1B;;AACA,QAAMW,OAAO,GAAG5B,EAAE,CAAC6B,UAAH,CAAc3B,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,WAAnB,CAAd,CAAhB;;AAEA,MAAI,CAACS,YAAL,EAAmB;AACjBZ,IAAAA,OAAO,CAACgB,GAAR,CAAY,EAAZ;AACAhB,IAAAA,OAAO,CAACiB,KAAR,CACG,2FAA0F5B,KAAK,CAAC6B,IAAN,CACzF,kBADyF,CAEzF,GAHJ;AAKAlB,IAAAA,OAAO,CAACiB,KAAR,CACG,uCAAsC5B,KAAK,CAAC6B,IAAN,CACrC,kBADqC,CAErC,2BAHJ;AAKA;AACD;;AAED,QAAMC,YAAY,GAAG/B,IAAI,CAACiB,IAAL,CACnBlB,OAAO,CAACiC,OAAR,CAAgBR,YAAhB,EAA8B;AAAES,IAAAA,KAAK,EAAE,CAAClB,OAAD;AAAT,GAA9B,CADmB,EAEnB,IAFmB,CAArB;AAKA,MAAImB,gBAAJ;;AACA,MAAIV,YAAJ,EAAkB;AAChBU,IAAAA,gBAAgB,GAAGlC,IAAI,CAACiB,IAAL,CAAUc,YAAV,EAAwB,eAAxB,CAAnB;AACD,GAFD,MAEO;AACL;AACAG,IAAAA,gBAAgB,GAAGlC,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,6BAAnB,CAAnB;AACD;;AAED,MAAIoB,YAAY,GAAG,EAAnB;;AACA,MAAIrC,EAAE,CAAC6B,UAAH,CAAcO,gBAAd,CAAJ,EAAqC;AACnCC,IAAAA,YAAY,GAAGpC,OAAO,CAACmC,gBAAD,CAAtB;AACD;;AAED,QAAME,eAAe,GAAGD,YAAY,CAACE,OAAb,IAAwB,EAAhD,CArCA,CAuCA;;AACA,QAAMC,wBAAwB,GAAG,CAC/B,MAD+B,EAE/B,SAF+B,EAG/B,aAH+B,EAI/B,UAJ+B,EAK/B,MAL+B,EAM/B,SAN+B,EAO/B,QAP+B,EAQ/B,cAR+B,EAS/B,OAT+B,EAU/B,SAV+B,EAW/B,KAX+B,EAY/B,KAZ+B,EAa/B,aAb+B,EAc/B,YAd+B,EAe/B,iBAf+B,EAgB/B,kBAhB+B,EAiB/B,qBAjB+B,EAkB/B,sBAlB+B,EAmB/B,cAnB+B,EAoB/B,IApB+B,EAqB/B,KArB+B,EAsB/B,cAtB+B,EAuB/B,SAvB+B,EAwB/B,eAxB+B,CAAjC,CAxCA,CAmEA;;AACA,QAAMC,sBAAsB,GAAG,CAAC,cAAD,EAAiB,SAAjB,CAA/B,CApEA,CAsEA;AACA;;AACA,QAAMC,wBAAwB,GAAGC,MAAM,CAACC,IAAP,CAAYN,eAAZ,EAA6BO,MAA7B,CAAoCC,GAAG,IAAI;AAC1E,WACE,CAACN,wBAAwB,CAACO,QAAzB,CAAkCD,GAAlC,CAAD,IACA,CAACL,sBAAsB,CAACM,QAAvB,CAAgCD,GAAhC,CAFH;AAID,GALgC,CAAjC,CAxEA,CA+EA;;AACAnB,EAAAA,UAAU,CAACqB,YAAX,GAA0BrB,UAAU,CAACqB,YAAX,IAA2B,EAArD,CAhFA,CAkFA;AACA;;AACA,QAAMC,eAAe,GAAGX,eAAe,CAACY,OAAhB,IAA2Bb,YAAY,CAACa,OAAxC,IAAmD,EAA3E;AACAvB,EAAAA,UAAU,CAACuB,OAAX,GAAqBP,MAAM,CAACQ,MAAP,CACnB;AACEC,IAAAA,KAAK,EAAE,qBADT;AAEEC,IAAAA,KAAK,EAAE,qBAFT;AAGEC,IAAAA,IAAI,EAAE,oBAHR;AAIEC,IAAAA,KAAK,EAAE;AAJT,GADmB,EAOnBN,eAPmB,CAArB,CArFA,CA+FA;;AACA,MAAIrB,OAAJ,EAAa;AACXD,IAAAA,UAAU,CAACuB,OAAX,GAAqBP,MAAM,CAACa,OAAP,CAAe7B,UAAU,CAACuB,OAA1B,EAAmCO,MAAnC,CACnB,CAACC,GAAD,EAAM,CAACZ,GAAD,EAAMa,KAAN,CAAN,MAAwB,EACtB,GAAGD,GADmB;AAEtB,OAACZ,GAAD,GAAOa,KAAK,CAACC,OAAN,CAAc,iBAAd,EAAiC,OAAjC;AAFe,KAAxB,CADmB,EAKnB,EALmB,CAArB;AAOD,GAxGD,CA0GA;;;AACAjC,EAAAA,UAAU,CAACkC,YAAX,GAA0B;AACxBC,IAAAA,OAAO,EAAE;AADe,GAA1B,CA3GA,CA+GA;;AACAnC,EAAAA,UAAU,CAACoC,YAAX,GAA0BzD,eAA1B,CAhHA,CAkHA;;AACAoC,EAAAA,wBAAwB,CAACsB,OAAzB,CAAiClB,GAAG,IAAI;AACtCnB,IAAAA,UAAU,CAACmB,GAAD,CAAV,GAAkBR,eAAe,CAACQ,GAAD,CAAjC;AACD,GAFD;AAIA9C,EAAAA,EAAE,CAACiE,aAAH,CACE/D,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,cAAnB,CADF,EAEEiD,IAAI,CAACC,SAAL,CAAexC,UAAf,EAA2B,IAA3B,EAAiC,CAAjC,IAAsCpB,EAAE,CAAC6D,GAF3C;AAKA,QAAMC,YAAY,GAAGrE,EAAE,CAAC6B,UAAH,CAAc3B,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,WAAnB,CAAd,CAArB;;AACA,MAAIoD,YAAJ,EAAkB;AAChBrE,IAAAA,EAAE,CAACsE,UAAH,CACEpE,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,WAAnB,CADF,EAEEf,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,eAAnB,CAFF;AAID,GAlID,CAoIA;;;AACA,QAAMsD,WAAW,GAAGrE,IAAI,CAACiB,IAAL,CAAUc,YAAV,EAAwB,UAAxB,CAApB;;AACA,MAAIjC,EAAE,CAAC6B,UAAH,CAAc0C,WAAd,CAAJ,EAAgC;AAC9BvE,IAAAA,EAAE,CAACwE,QAAH,CAAYD,WAAZ,EAAyBtD,OAAzB;AACD,GAFD,MAEO;AACLH,IAAAA,OAAO,CAACiB,KAAR,CACG,uCAAsC5B,KAAK,CAACsE,KAAN,CAAYF,WAAZ,CAAyB,EADlE;AAGA;AACD,GA7ID,CA+IA;;;AACA,MAAI3C,OAAJ,EAAa;AACX,QAAI;AACF,YAAM8C,MAAM,GAAG1E,EAAE,CAAC2E,YAAH,CAAgBzE,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,WAAnB,CAAhB,EAAiD,MAAjD,CAAf;AACAjB,MAAAA,EAAE,CAACiE,aAAH,CACE/D,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,WAAnB,CADF,EAEEyD,MAAM,CAACd,OAAP,CAAe,kBAAf,EAAmC,OAAnC,CAFF,EAGE,MAHF;AAKD,KAPD,CAOE,OAAO7D,GAAP,EAAY,CACZ;AACD;AACF;;AAED,QAAM6E,eAAe,GAAG5E,EAAE,CAAC6B,UAAH,CAAc3B,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,YAAnB,CAAd,CAAxB;;AACA,MAAI2D,eAAJ,EAAqB;AACnB;AACA,UAAMC,IAAI,GAAG7E,EAAE,CAAC2E,YAAH,CAAgBzE,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,WAAnB,CAAhB,CAAb;AACAjB,IAAAA,EAAE,CAAC8E,cAAH,CAAkB5E,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,YAAnB,CAAlB,EAAoD4D,IAApD;AACA7E,IAAAA,EAAE,CAAC+E,UAAH,CAAc7E,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,WAAnB,CAAd;AACD,GALD,MAKO;AACL;AACA;AACAjB,IAAAA,EAAE,CAACgF,QAAH,CACE9E,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,WAAnB,CADF,EAEEf,IAAI,CAACiB,IAAL,CAAUF,OAAV,EAAmB,YAAnB,CAFF,EAGE,EAHF;AAKD,GA3KD,CA6KA;;;AACA,MAAIgE,cAAc,GAAG,KAArB;;AAEA,MAAIpE,UAAU,EAAd,EAAkB;AAChBoE,IAAAA,cAAc,GAAG,IAAjB;AACAnE,IAAAA,OAAO,CAACgB,GAAR;AACAhB,IAAAA,OAAO,CAACgB,GAAR,CAAY,+BAAZ;AACD;;AAED,MAAIoD,OAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,IAAJ;;AAEA,MAAIxD,OAAJ,EAAa;AACXsD,IAAAA,OAAO,GAAG,SAAV;AACAC,IAAAA,MAAM,GAAG,QAAT;AACAC,IAAAA,IAAI,GAAG,CAAC,KAAD,CAAP;AACD,GAJD,MAIO;AACLF,IAAAA,OAAO,GAAG,KAAV;AACAC,IAAAA,MAAM,GAAG,WAAT;AACAC,IAAAA,IAAI,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB5D,OAAO,IAAI,WAAjC,EAA8CqB,MAA9C,CAAqDlC,CAAC,IAAIA,CAA1D,CAAP;AACD,GAlMD,CAoMA;AACA;;;AACA,QAAM0E,oBAAoB,GACxB/C,eAAe,CAACU,YAAhB,IAAgCX,YAAY,CAACW,YAD/C;;AAEA,MAAIqC,oBAAJ,EAA0B;AACxBD,IAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CACL3C,MAAM,CAACC,IAAP,CAAYyC,oBAAZ,EAAkCE,GAAlC,CAAsCzC,GAAG,IAAI;AAC3C,aAAQ,GAAEA,GAAI,IAAGuC,oBAAoB,CAACvC,GAAD,CAAM,EAA3C;AACD,KAFD,CADK,CAAP;AAKD,GA9MD,CAgNA;AACA;;;AACA,MAAI,CAAC0C,gBAAgB,CAAC7D,UAAD,CAArB,EAAmC;AACjCyD,IAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAY,CAAC,OAAD,EAAU,WAAV,CAAZ,CAAP;AACD,GApND,CAsNA;;;AACA,MAAI,CAAC,CAACE,gBAAgB,CAAC7D,UAAD,CAAjB,IAAiCD,YAAlC,KAAmD0D,IAAI,CAACK,MAAL,GAAc,CAArE,EAAwE;AACtE3E,IAAAA,OAAO,CAACgB,GAAR;AACAhB,IAAAA,OAAO,CAACgB,GAAR,CAAa,0CAAyCoD,OAAQ,KAA9D;AAEA,UAAMQ,IAAI,GAAGrF,KAAK,CAACsF,IAAN,CAAWT,OAAX,EAAoBE,IAApB,EAA0B;AAAE1E,MAAAA,KAAK,EAAE;AAAT,KAA1B,CAAb;;AACA,QAAIgF,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AACrB9E,MAAAA,OAAO,CAACiB,KAAR,CAAe,KAAImD,OAAQ,IAAGE,IAAI,CAACjE,IAAL,CAAU,GAAV,CAAe,WAA7C;AACA;AACD;AACF;;AAED,MAAIiE,IAAI,CAACS,IAAL,CAAUC,GAAG,IAAIA,GAAG,CAAC/C,QAAJ,CAAa,YAAb,CAAjB,CAAJ,EAAkD;AAChDjC,IAAAA,OAAO,CAACgB,GAAR;AACAtB,IAAAA,qBAAqB;AACtB,GArOD,CAuOA;;;AACAM,EAAAA,OAAO,CAACgB,GAAR,CAAa,mCAAkCoD,OAAQ,KAAvD;AACApE,EAAAA,OAAO,CAACgB,GAAR;AAEA,QAAM4D,IAAI,GAAGrF,KAAK,CAACsF,IAAN,CAAWT,OAAX,EAAoB,CAACC,MAAD,EAASzD,YAAT,CAApB,EAA4C;AACvDhB,IAAAA,KAAK,EAAE;AADgD,GAA5C,CAAb;;AAGA,MAAIgF,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AACrB9E,IAAAA,OAAO,CAACiB,KAAR,CAAe,KAAImD,OAAQ,IAAGE,IAAI,CAACjE,IAAL,CAAU,GAAV,CAAe,WAA7C;AACA;AACD,GAjPD,CAmPA;;;AACA,MAAI8D,cAAc,IAAIjE,YAAY,CAACC,OAAD,CAAlC,EAA6C;AAC3CH,IAAAA,OAAO,CAACgB,GAAR;AACAhB,IAAAA,OAAO,CAACgB,GAAR,CAAY,qBAAZ;AACD,GAvPD,CAyPA;AACA;AACA;;;AACA,MAAIiE,MAAJ;;AACA,MAAItE,iBAAiB,IAAIvB,IAAI,CAACiB,IAAL,CAAUM,iBAAV,EAA6BF,OAA7B,MAA0CN,OAAnE,EAA4E;AAC1E8E,IAAAA,MAAM,GAAGxE,OAAT;AACD,GAFD,MAEO;AACLwE,IAAAA,MAAM,GAAG9E,OAAT;AACD,GAjQD,CAmQA;;;AACA,QAAM+E,gBAAgB,GAAGpE,OAAO,GAAG,MAAH,GAAY,KAA5C;AAEAd,EAAAA,OAAO,CAACgB,GAAR;AACAhB,EAAAA,OAAO,CAACgB,GAAR,CAAa,oBAAmBP,OAAQ,OAAMN,OAAQ,EAAtD;AACAH,EAAAA,OAAO,CAACgB,GAAR,CAAY,sDAAZ;AACAhB,EAAAA,OAAO,CAACgB,GAAR;AACAhB,EAAAA,OAAO,CAACgB,GAAR,CAAY3B,KAAK,CAAC6B,IAAN,CAAY,KAAIgE,gBAAiB,QAAjC,CAAZ;AACAlF,EAAAA,OAAO,CAACgB,GAAR,CAAY,oCAAZ;AACAhB,EAAAA,OAAO,CAACgB,GAAR;AACAhB,EAAAA,OAAO,CAACgB,GAAR,CACE3B,KAAK,CAAC6B,IAAN,CAAY,KAAIgE,gBAAiB,IAAGpE,OAAO,GAAG,EAAH,GAAQ,MAAO,OAA1D,CADF;AAGAd,EAAAA,OAAO,CAACgB,GAAR,CAAY,uDAAZ;AACAhB,EAAAA,OAAO,CAACgB,GAAR;AACAhB,EAAAA,OAAO,CAACgB,GAAR,CAAY3B,KAAK,CAAC6B,IAAN,CAAY,KAAIgE,gBAAiB,OAAjC,CAAZ;AACAlF,EAAAA,OAAO,CAACgB,GAAR,CAAY,6BAAZ;AACAhB,EAAAA,OAAO,CAACgB,GAAR;AACAhB,EAAAA,OAAO,CAACgB,GAAR,CACE3B,KAAK,CAAC6B,IAAN,CAAY,KAAIgE,gBAAiB,IAAGpE,OAAO,GAAG,EAAH,GAAQ,MAAO,OAA1D,CADF;AAGAd,EAAAA,OAAO,CAACgB,GAAR,CACE,0EADF;AAGAhB,EAAAA,OAAO,CAACgB,GAAR,CACE,4EADF;AAGAhB,EAAAA,OAAO,CAACgB,GAAR;AACAhB,EAAAA,OAAO,CAACgB,GAAR,CAAY,sCAAZ;AACAhB,EAAAA,OAAO,CAACgB,GAAR;AACAhB,EAAAA,OAAO,CAACgB,GAAR,CAAY3B,KAAK,CAAC6B,IAAN,CAAW,MAAX,CAAZ,EAAgC+D,MAAhC;AACAjF,EAAAA,OAAO,CAACgB,GAAR,CAAa,KAAI3B,KAAK,CAAC6B,IAAN,CAAY,GAAEgE,gBAAiB,QAA/B,CAAwC,EAAzD;;AACA,MAAI3B,YAAJ,EAAkB;AAChBvD,IAAAA,OAAO,CAACgB,GAAR;AACAhB,IAAAA,OAAO,CAACgB,GAAR,CACE3B,KAAK,CAAC8F,MAAN,CACE,8DADF,CADF;AAKD;;AACDnF,EAAAA,OAAO,CAACgB,GAAR;AACAhB,EAAAA,OAAO,CAACgB,GAAR,CAAY,gBAAZ;AACD,CAnTD;;AAqTA,SAAS0D,gBAAT,CAA0B7D,UAA1B,EAAsC;AACpC,QAAMqB,YAAY,GAAGrB,UAAU,CAACqB,YAAX,IAA2B,EAAhD;AAEA,SACE,OAAOA,YAAY,CAACkD,KAApB,KAA8B,WAA9B,IACA,OAAOlD,YAAY,CAAC,WAAD,CAAnB,KAAqC,WAFvC;AAID","sourcesContent":["// @remove-file-on-eject\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\n// Makes the script crash on unhandled rejections instead of silently\n// ignoring them. In the future, promise rejections that are not handled will\n// terminate the Node.js process with a non-zero exit code.\nprocess.on('unhandledRejection', err => {\n  throw err;\n});\n\nconst fs = require('fs-extra');\nconst path = require('path');\nconst chalk = require('react-dev-utils/chalk');\nconst execSync = require('child_process').execSync;\nconst spawn = require('react-dev-utils/crossSpawn');\nconst { defaultBrowsers } = require('react-dev-utils/browsersHelper');\nconst os = require('os');\nconst verifyTypeScriptSetup = require('./utils/verifyTypeScriptSetup');\n\nfunction isInGitRepository() {\n  try {\n    execSync('git rev-parse --is-inside-work-tree', { stdio: 'ignore' });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction isInMercurialRepository() {\n  try {\n    execSync('hg --cwd . root', { stdio: 'ignore' });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction tryGitInit() {\n  try {\n    execSync('git --version', { stdio: 'ignore' });\n    if (isInGitRepository() || isInMercurialRepository()) {\n      return false;\n    }\n\n    execSync('git init', { stdio: 'ignore' });\n    return true;\n  } catch (e) {\n    console.warn('Git repo not initialized', e);\n    return false;\n  }\n}\n\nfunction tryGitCommit(appPath) {\n  try {\n    execSync('git add -A', { stdio: 'ignore' });\n    execSync('git commit -m \"Initialize project using Create React App\"', {\n      stdio: 'ignore',\n    });\n    return true;\n  } catch (e) {\n    // We couldn't commit in already initialized git repo,\n    // maybe the commit author config is not set.\n    // In the future, we might supply our own committer\n    // like Ember CLI does, but for now, let's just\n    // remove the Git files to avoid a half-done state.\n    console.warn('Git commit not created', e);\n    console.warn('Removing .git directory...');\n    try {\n      // unlinkSync() doesn't work on directories.\n      fs.removeSync(path.join(appPath, '.git'));\n    } catch (removeErr) {\n      // Ignore.\n    }\n    return false;\n  }\n}\n\nmodule.exports = function(\n  appPath,\n  appName,\n  verbose,\n  originalDirectory,\n  templateName\n) {\n  const appPackage = require(path.join(appPath, 'package.json'));\n  const useYarn = fs.existsSync(path.join(appPath, 'yarn.lock'));\n\n  if (!templateName) {\n    console.log('');\n    console.error(\n      `A template was not provided. This is likely because you're using an outdated version of ${chalk.cyan(\n        'create-react-app'\n      )}.`\n    );\n    console.error(\n      `Please note that global installs of ${chalk.cyan(\n        'create-react-app'\n      )} are no longer supported.`\n    );\n    return;\n  }\n\n  const templatePath = path.join(\n    require.resolve(templateName, { paths: [appPath] }),\n    '..'\n  );\n\n  let templateJsonPath;\n  if (templateName) {\n    templateJsonPath = path.join(templatePath, 'template.json');\n  } else {\n    // TODO: Remove support for this in v4.\n    templateJsonPath = path.join(appPath, '.template.dependencies.json');\n  }\n\n  let templateJson = {};\n  if (fs.existsSync(templateJsonPath)) {\n    templateJson = require(templateJsonPath);\n  }\n\n  const templatePackage = templateJson.package || {};\n\n  // Keys to ignore in templatePackage\n  const templatePackageBlacklist = [\n    'name',\n    'version',\n    'description',\n    'keywords',\n    'bugs',\n    'license',\n    'author',\n    'contributors',\n    'files',\n    'browser',\n    'bin',\n    'man',\n    'directories',\n    'repository',\n    'devDependencies',\n    'peerDependencies',\n    'bundledDependencies',\n    'optionalDependencies',\n    'engineStrict',\n    'os',\n    'cpu',\n    'preferGlobal',\n    'private',\n    'publishConfig',\n  ];\n\n  // Keys from templatePackage that will be merged with appPackage\n  const templatePackageToMerge = ['dependencies', 'scripts'];\n\n  // Keys from templatePackage that will be added to appPackage,\n  // replacing any existing entries.\n  const templatePackageToReplace = Object.keys(templatePackage).filter(key => {\n    return (\n      !templatePackageBlacklist.includes(key) &&\n      !templatePackageToMerge.includes(key)\n    );\n  });\n\n  // Copy over some of the devDependencies\n  appPackage.dependencies = appPackage.dependencies || {};\n\n  // Setup the script rules\n  // TODO: deprecate 'scripts' key directly on templateJson\n  const templateScripts = templatePackage.scripts || templateJson.scripts || {};\n  appPackage.scripts = Object.assign(\n    {\n      start: 'react-scripts start',\n      build: 'react-scripts build',\n      test: 'react-scripts test',\n      eject: 'react-scripts eject',\n    },\n    templateScripts\n  );\n\n  // Update scripts for Yarn users\n  if (useYarn) {\n    appPackage.scripts = Object.entries(appPackage.scripts).reduce(\n      (acc, [key, value]) => ({\n        ...acc,\n        [key]: value.replace(/(npm run |npm )/, 'yarn '),\n      }),\n      {}\n    );\n  }\n\n  // Setup the eslint config\n  appPackage.eslintConfig = {\n    extends: 'react-app',\n  };\n\n  // Setup the browsers list\n  appPackage.browserslist = defaultBrowsers;\n\n  // Add templatePackage keys/values to appPackage, replacing existing entries\n  templatePackageToReplace.forEach(key => {\n    appPackage[key] = templatePackage[key];\n  });\n\n  fs.writeFileSync(\n    path.join(appPath, 'package.json'),\n    JSON.stringify(appPackage, null, 2) + os.EOL\n  );\n\n  const readmeExists = fs.existsSync(path.join(appPath, 'README.md'));\n  if (readmeExists) {\n    fs.renameSync(\n      path.join(appPath, 'README.md'),\n      path.join(appPath, 'README.old.md')\n    );\n  }\n\n  // Copy the files for the user\n  const templateDir = path.join(templatePath, 'template');\n  if (fs.existsSync(templateDir)) {\n    fs.copySync(templateDir, appPath);\n  } else {\n    console.error(\n      `Could not locate supplied template: ${chalk.green(templateDir)}`\n    );\n    return;\n  }\n\n  // modifies README.md commands based on user used package manager.\n  if (useYarn) {\n    try {\n      const readme = fs.readFileSync(path.join(appPath, 'README.md'), 'utf8');\n      fs.writeFileSync(\n        path.join(appPath, 'README.md'),\n        readme.replace(/(npm run |npm )/g, 'yarn '),\n        'utf8'\n      );\n    } catch (err) {\n      // Silencing the error. As it fall backs to using default npm commands.\n    }\n  }\n\n  const gitignoreExists = fs.existsSync(path.join(appPath, '.gitignore'));\n  if (gitignoreExists) {\n    // Append if there's already a `.gitignore` file there\n    const data = fs.readFileSync(path.join(appPath, 'gitignore'));\n    fs.appendFileSync(path.join(appPath, '.gitignore'), data);\n    fs.unlinkSync(path.join(appPath, 'gitignore'));\n  } else {\n    // Rename gitignore after the fact to prevent npm from renaming it to .npmignore\n    // See: https://github.com/npm/npm/issues/1862\n    fs.moveSync(\n      path.join(appPath, 'gitignore'),\n      path.join(appPath, '.gitignore'),\n      []\n    );\n  }\n\n  // Initialize git repo\n  let initializedGit = false;\n\n  if (tryGitInit()) {\n    initializedGit = true;\n    console.log();\n    console.log('Initialized a git repository.');\n  }\n\n  let command;\n  let remove;\n  let args;\n\n  if (useYarn) {\n    command = 'yarnpkg';\n    remove = 'remove';\n    args = ['add'];\n  } else {\n    command = 'npm';\n    remove = 'uninstall';\n    args = ['install', '--save', verbose && '--verbose'].filter(e => e);\n  }\n\n  // Install additional template dependencies, if present\n  // TODO: deprecate 'dependencies' key directly on templateJson\n  const templateDependencies =\n    templatePackage.dependencies || templateJson.dependencies;\n  if (templateDependencies) {\n    args = args.concat(\n      Object.keys(templateDependencies).map(key => {\n        return `${key}@${templateDependencies[key]}`;\n      })\n    );\n  }\n\n  // Install react and react-dom for backward compatibility with old CRA cli\n  // which doesn't install react and react-dom along with react-scripts\n  if (!isReactInstalled(appPackage)) {\n    args = args.concat(['react', 'react-dom']);\n  }\n\n  // Install template dependencies, and react and react-dom if missing.\n  if ((!isReactInstalled(appPackage) || templateName) && args.length > 1) {\n    console.log();\n    console.log(`Installing template dependencies using ${command}...`);\n\n    const proc = spawn.sync(command, args, { stdio: 'inherit' });\n    if (proc.status !== 0) {\n      console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n      return;\n    }\n  }\n\n  if (args.find(arg => arg.includes('typescript'))) {\n    console.log();\n    verifyTypeScriptSetup();\n  }\n\n  // Remove template\n  console.log(`Removing template package using ${command}...`);\n  console.log();\n\n  const proc = spawn.sync(command, [remove, templateName], {\n    stdio: 'inherit',\n  });\n  if (proc.status !== 0) {\n    console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n    return;\n  }\n\n  // Create git commit if git repo was initialized\n  if (initializedGit && tryGitCommit(appPath)) {\n    console.log();\n    console.log('Created git commit.');\n  }\n\n  // Display the most elegant way to cd.\n  // This needs to handle an undefined originalDirectory for\n  // backward compatibility with old global-cli's.\n  let cdpath;\n  if (originalDirectory && path.join(originalDirectory, appName) === appPath) {\n    cdpath = appName;\n  } else {\n    cdpath = appPath;\n  }\n\n  // Change displayed command to yarn instead of yarnpkg\n  const displayedCommand = useYarn ? 'yarn' : 'npm';\n\n  console.log();\n  console.log(`Success! Created ${appName} at ${appPath}`);\n  console.log('Inside that directory, you can run several commands:');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} start`));\n  console.log('    Starts the development server.');\n  console.log();\n  console.log(\n    chalk.cyan(`  ${displayedCommand} ${useYarn ? '' : 'run '}build`)\n  );\n  console.log('    Bundles the app into static files for production.');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} test`));\n  console.log('    Starts the test runner.');\n  console.log();\n  console.log(\n    chalk.cyan(`  ${displayedCommand} ${useYarn ? '' : 'run '}eject`)\n  );\n  console.log(\n    '    Removes this tool and copies build dependencies, configuration files'\n  );\n  console.log(\n    '    and scripts into the app directory. If you do this, you can’t go back!'\n  );\n  console.log();\n  console.log('We suggest that you begin by typing:');\n  console.log();\n  console.log(chalk.cyan('  cd'), cdpath);\n  console.log(`  ${chalk.cyan(`${displayedCommand} start`)}`);\n  if (readmeExists) {\n    console.log();\n    console.log(\n      chalk.yellow(\n        'You had a `README.md` file, we renamed it to `README.old.md`'\n      )\n    );\n  }\n  console.log();\n  console.log('Happy hacking!');\n};\n\nfunction isReactInstalled(appPackage) {\n  const dependencies = appPackage.dependencies || {};\n\n  return (\n    typeof dependencies.react !== 'undefined' &&\n    typeof dependencies['react-dom'] !== 'undefined'\n  );\n}\n"]},"metadata":{},"sourceType":"script"}