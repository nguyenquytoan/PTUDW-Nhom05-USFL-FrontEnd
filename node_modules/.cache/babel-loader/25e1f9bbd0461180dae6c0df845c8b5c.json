{"ast":null,"code":"\"use strict\";\n\nvar _process = _interopRequireDefault(require(\"process\"));\n\nvar _attribute = _interopRequireDefault(require(\"../selectors/attribute\"));\n\nvar _helpers = require(\"./util/helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n_process.default.throwDeprecation = true;\n(0, _helpers.test)('attribute selector', '[href]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'attribute');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector spaces (before)', '[  href]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.before, '  ');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'attribute');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector spaces (after)', '[href  ]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.after, '  ');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'attribute');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector spaces with namespace (both)', '[  foo|bar   ]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].ns, 'foo');\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'bar');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.before, '  ');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.after, '   ');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'attribute');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector spaces (both)', '[  href   ]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.before, '  ');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.after, '   ');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'attribute');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('multiple attribute selectors', '[href][class][name]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'class');\n  t.deepEqual(tree.nodes[0].nodes[2].attribute, 'name');\n});\n(0, _helpers.test)('select elements with or without a namespace', '[*|href]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].namespace, '*');\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n});\n(0, _helpers.test)('namespace with escapes', '[\\\\31 \\\\#\\\\32 |href]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.namespace, '1#2');\n  t.deepEqual(attr.raws.namespace, '\\\\31 \\\\#\\\\32 ');\n  attr.namespace = \"foo\";\n  t.deepEqual(attr.namespace, 'foo');\n  t.deepEqual(attr.raws.namespace, undefined);\n  attr.namespace = \"1\";\n  t.deepEqual(attr.namespace, '1');\n  t.deepEqual(attr.raws.namespace, '\\\\31');\n});\n(0, _helpers.test)('attribute selector with a empty value', '[href=\"\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, '');\n  t.true(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector with a value', '[name=james]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'name');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'james');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector with quoted value', '[name=\"james\"]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.attribute, 'name');\n  t.deepEqual(attr.operator, '=');\n  t.deepEqual(attr.value, 'james');\n  t.deepEqual(attr.quoteMark, '\"');\n  t.truthy(attr.quoted);\n  t.deepEqual(attr.getQuotedValue(), '\"james\"');\n});\n(0, _helpers.test)('attribute selector with escaped quote', '[title=\"Something \\\\\"weird\\\\\"\"]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.value, 'Something \"weird\"');\n  t.deepEqual(attr.getQuotedValue(), '\\\"Something \\\\\"weird\\\\\"\\\"');\n  t.deepEqual(attr.getQuotedValue({\n    smart: true\n  }), '\\'Something \"weird\"\\'');\n  t.deepEqual(attr.getQuotedValue({\n    quoteMark: null\n  }), 'Something\\\\ \\\\\"weird\\\\\"');\n  t.deepEqual(attr.quoteMark, '\"');\n  t.truthy(attr.quoted);\n  t.deepEqual(attr.raws.value, '\"Something \\\\\"weird\\\\\"\"');\n  t.deepEqual(tree.toString(), '[title=\"Something \\\\\"weird\\\\\"\"]');\n});\n(0, _helpers.test)('attribute selector with escaped colon', '[ng\\\\:cloak]', function (t, tree) {\n  t.deepEqual(tree.toString(), '[ng\\\\:cloak]');\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.raws.attribute, 'ng\\\\:cloak');\n  t.deepEqual(attr.attribute, 'ng:cloak');\n});\n(0, _helpers.test)('attribute selector with short hex escape', '[ng\\\\3a cloak]', function (t, tree) {\n  t.deepEqual(tree.toString(), '[ng\\\\3a cloak]');\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.raws.attribute, 'ng\\\\3a cloak');\n  t.deepEqual(attr.attribute, 'ng:cloak');\n});\n(0, _helpers.test)('attribute selector with hex escape', '[ng\\\\00003acloak]', function (t, tree) {\n  t.deepEqual(tree.toString(), '[ng\\\\00003acloak]');\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.raws.attribute, 'ng\\\\00003acloak');\n  t.deepEqual(attr.attribute, 'ng:cloak');\n});\n(0, _helpers.test)('assign attribute name requiring escape', '[ng\\\\:cloak]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  attr.attribute = \"ng:foo\";\n  t.deepEqual(attr.raws.attribute, 'ng\\\\:foo');\n  t.deepEqual(attr.attribute, 'ng:foo');\n  t.deepEqual(tree.toString(), '[ng\\\\:foo]');\n});\n(0, _helpers.test)('multiple attribute selectors + combinator', '[href][class][name] h1 > h2', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[2].attribute, 'name');\n  t.deepEqual(tree.nodes[0].nodes[3].value, ' ');\n  t.deepEqual(tree.nodes[0].nodes[5].value, '>');\n  t.deepEqual(tree.nodes[0].nodes[6].value, 'h2');\n});\n(0, _helpers.test)('attribute, class, combinator', '[href] > h2.test', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[1].value, '>');\n  t.deepEqual(tree.nodes[0].nodes[2].value, 'h2');\n  t.deepEqual(tree.nodes[0].nodes[3].value, 'test');\n});\n(0, _helpers.test)('attribute selector with quoted value & combinator', '[name=\"james\"] > h1', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'james');\n  t.deepEqual(tree.nodes[0].nodes[0].quoteMark, '\"');\n  t.deepEqual(tree.nodes[0].nodes[1].value, '>');\n  t.deepEqual(tree.nodes[0].nodes[2].value, 'h1');\n});\n(0, _helpers.test)('multiple quoted attribute selectors', '[href*=\"test.com\"][rel=\\'external\\'][id][class~=\"test\"] > [name]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test.com');\n  t.is(tree.nodes[0].nodes[0].quoteMark, '\"');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'rel');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'external');\n  t.is(tree.nodes[0].nodes[1].quoteMark, \"'\");\n  t.deepEqual(tree.nodes[0].nodes[2].attribute, 'id');\n  t.falsy(tree.nodes[0].nodes[2].value, 'should not have a value');\n  t.is(tree.nodes[0].nodes[2].quoteMark, undefined, 'should not have a quoteMark set');\n  t.deepEqual(tree.nodes[0].nodes[3].attribute, 'class');\n  t.deepEqual(tree.nodes[0].nodes[3].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[3].quoteMark, '\"');\n  t.deepEqual(tree.nodes[0].nodes[4].value, '>');\n  t.deepEqual(tree.nodes[0].nodes[5].attribute, 'name');\n  t.falsy(tree.nodes[0].nodes[5].value, 'should not have a value');\n  t.is(tree.nodes[0].nodes[5].quoteMark, undefined, 'should not have a quoteMark set');\n});\n(0, _helpers.test)('more attribute operators', '[href*=test],[href^=test],[href$=test],[href|=test]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '*=');\n  t.deepEqual(tree.nodes[1].nodes[0].operator, '^=');\n  t.deepEqual(tree.nodes[2].nodes[0].operator, '$=');\n  t.deepEqual(tree.nodes[3].nodes[0].operator, '|=');\n});\n(0, _helpers.test)('attribute selector with quoted value containing \"=\"', '[data-weird-attr=\"Something=weird\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'Something=weird');\n  t.is(tree.nodes[0].nodes[0].quoteMark, '\"');\n  t.deepEqual(tree.nodes[0].nodes[0].getQuotedValue(), '\"Something=weird\"');\n});\nvar selector = '[data-weird-attr*=\"Something=weird\"],' + '[data-weird-attr^=\"Something=weird\"],' + '[data-weird-attr$=\"Something=weird\"],' + '[data-weird-attr|=\"Something=weird\"]';\n(0, _helpers.test)('more attribute selector with quoted value containing \"=\"', selector, function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'Something=weird');\n  t.deepEqual(tree.nodes[1].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[1].nodes[0].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[0].value, 'Something=weird');\n  t.deepEqual(tree.nodes[2].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[2].nodes[0].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[0].value, 'Something=weird');\n  t.deepEqual(tree.nodes[3].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[3].nodes[0].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[0].value, 'Something=weird');\n});\n(0, _helpers.test)('attribute selector with quoted value containing multiple \"=\"', '[data-weird-attr=\"Something=weird SomethingElse=weirder\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'Something=weird SomethingElse=weirder');\n});\nselector = '[data-weird-attr*=\"Something=weird SomethingElse=weirder\"],' + '[data-weird-attr^=\"Something=weird SomethingElse=weirder\"],' + '[data-weird-attr$=\"Something=weird SomethingElse=weirder\"],' + '[data-weird-attr|=\"Something=weird SomethingElse=weirder\"]';\n(0, _helpers.test)('more attribute selector with quoted value containing multiple \"=\"', selector, function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'Something=weird SomethingElse=weirder');\n  t.deepEqual(tree.nodes[1].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[1].nodes[0].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[0].value, 'Something=weird SomethingElse=weirder');\n  t.deepEqual(tree.nodes[2].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[2].nodes[0].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[0].value, 'Something=weird SomethingElse=weirder');\n  t.deepEqual(tree.nodes[3].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[3].nodes[0].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[0].value, 'Something=weird SomethingElse=weirder');\n});\n(0, _helpers.test)('multiple attribute selectors with quoted value containing \"=\"', '[data-weird-foo=\"foo=weird\"][data-weird-bar=\"bar=weird\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'foo=weird');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[0].nodes[1].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'bar=weird');\n});\n(0, _helpers.test)('multiple attribute selectors with value containing escaped \"=\"', '[data-weird-foo=foo\\\\=weird][data-weird-bar=bar\\\\3d weird]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'foo=weird');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[0].nodes[1].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'bar=weird');\n});\nselector = '[data-weird-foo*=\"foo2=weirder\"][data-weird-bar*=\"bar2=weirder\"],' + '[data-weird-foo^=\"foo2=weirder\"][data-weird-bar^=\"bar2=weirder\"],' + '[data-weird-foo$=\"foo2=weirder\"][data-weird-bar$=\"bar2=weirder\"],' + '[data-weird-foo|=\"foo2=weirder\"][data-weird-bar|=\"bar2=weirder\"]';\n(0, _helpers.test)('more multiple attribute selectors with quoted value containing \"=\"', selector, function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'foo2=weirder');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[0].nodes[1].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'bar2=weirder');\n  t.deepEqual(tree.nodes[1].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[1].nodes[0].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[0].value, 'foo2=weirder');\n  t.deepEqual(tree.nodes[1].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[1].nodes[1].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[1].value, 'bar2=weirder');\n  t.deepEqual(tree.nodes[2].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[2].nodes[0].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[0].value, 'foo2=weirder');\n  t.deepEqual(tree.nodes[2].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[2].nodes[1].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[1].value, 'bar2=weirder');\n  t.deepEqual(tree.nodes[3].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[3].nodes[0].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[0].value, 'foo2=weirder');\n  t.deepEqual(tree.nodes[3].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[3].nodes[1].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[1].value, 'bar2=weirder');\n});\n(0, _helpers.test)('multiple attribute selectors with quoted value containing multiple \"=\"', '[data-weird-foo=\"foo1=weirder foo2=weirder\"][data-weird-bar=\"bar1=weirder bar2=weirder\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'foo1=weirder foo2=weirder');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[0].nodes[1].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'bar1=weirder bar2=weirder');\n});\nselector = '[data-weird-foo*=\"foo1=weirder foo2=weirder\"][data-weird-bar*=\"bar1=weirder bar2=weirder\"],' + '[data-weird-foo^=\"foo1=weirder foo2=weirder\"][data-weird-bar^=\"bar1=weirder bar2=weirder\"],' + '[data-weird-foo$=\"foo1=weirder foo2=weirder\"][data-weird-bar$=\"bar1=weirder bar2=weirder\"],' + '[data-weird-foo|=\"foo1=weirder foo2=weirder\"][data-weird-bar|=\"bar1=weirder bar2=weirder\"]';\n(0, _helpers.test)('more multiple attribute selectors with quoted value containing multiple \"=\"', selector, function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'foo1=weirder foo2=weirder');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[0].nodes[1].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'bar1=weirder bar2=weirder');\n  t.deepEqual(tree.nodes[1].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[1].nodes[0].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[0].value, 'foo1=weirder foo2=weirder');\n  t.deepEqual(tree.nodes[1].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[1].nodes[1].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[1].value, 'bar1=weirder bar2=weirder');\n  t.deepEqual(tree.nodes[2].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[2].nodes[0].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[0].value, 'foo1=weirder foo2=weirder');\n  t.deepEqual(tree.nodes[2].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[2].nodes[1].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[1].value, 'bar1=weirder bar2=weirder');\n  t.deepEqual(tree.nodes[3].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[3].nodes[0].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[0].value, 'foo1=weirder foo2=weirder');\n  t.deepEqual(tree.nodes[3].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[3].nodes[1].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[1].value, 'bar1=weirder bar2=weirder');\n});\n(0, _helpers.test)('spaces in attribute selectors', 'h1[  href  *=  \"test\"  ]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[1];\n  t.deepEqual(attr.attribute, 'href');\n  t.deepEqual(attr.spaces.attribute.before, '  ');\n  t.deepEqual(attr.spaces.attribute.after, '  ');\n  t.deepEqual(attr.operator, '*=');\n  t.deepEqual(attr.spaces.operator.after, '  ');\n  t.deepEqual(attr.value, 'test');\n  t.deepEqual(attr.spaces.value.after, '  ');\n  t.truthy(tree.nodes[0].nodes[1].quoted);\n});\n(0, _helpers.test)('insensitive attribute selector 1', '[href=\"test\" i]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n});\n(0, _helpers.test)('insensitive attribute selector with a empty value', '[href=\"\" i]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, '');\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n  t.true(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('insensitive attribute selector 2', '[href=TEsT i  ]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'TEsT');\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.value.after, ' ');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.insensitive.after, '  ');\n});\n(0, _helpers.test)('insensitive attribute selector 3', '[href=test i]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n});\n(0, _helpers.test)('capitalized insensitive attribute selector 3', '[href=test I]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n});\n(0, _helpers.test)('extraneous non-combinating whitespace', '  [href]   ,  [class]   ', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.before, '  ');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.after, '   ');\n  t.deepEqual(tree.nodes[1].nodes[0].attribute, 'class');\n  t.deepEqual(tree.nodes[1].nodes[0].spaces.before, '  ');\n  t.deepEqual(tree.nodes[1].nodes[0].spaces.after, '   ');\n});\n(0, _helpers.test)('comments within attribute selectors', '[href/* wow */=/* wow */test]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.attribute, 'href/* wow */');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.operator, '=/* wow */');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n});\n(0, _helpers.test)('comments within attribute selectors (2)', '[/* wow */href=test/* wow */]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.spaces.attribute.before, '/* wow */');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.value, 'test/* wow */');\n});\n(0, _helpers.test)('comments within attribute selectors (3)', '[href=test/* wow */i]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'testi');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.value, 'test/* wow */i');\n  t.falsy(tree.nodes[0].nodes[0].insensitive);\n});\n(0, _helpers.test)('comments within attribute selectors (4)', '[ /*before*/ href /* after-attr */ = /* after-operator */ te/*inside-value*/st/* wow */ /*omg*/i/*bbq*/ /*whodoesthis*/]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.attribute, 'href');\n  t.deepEqual(attr.value, 'test');\n  t.deepEqual(attr.getQuotedValue(), 'test');\n  t.deepEqual(attr.raws.value, 'te/*inside-value*/st');\n  t.deepEqual(attr.raws.spaces.value.after, '/* wow */ /*omg*/');\n  t.truthy(attr.insensitive);\n  t.deepEqual(attr.offsetOf(\"attribute\"), 13);\n  t.deepEqual(attr.offsetOf(\"operator\"), 35);\n  t.deepEqual(attr.offsetOf(\"insensitive\"), 95);\n  t.deepEqual(attr.raws.spaces.insensitive.after, '/*bbq*/ /*whodoesthis*/');\n  attr.value = \"foo\";\n  t.is(attr.raws.value, undefined);\n});\n(0, _helpers.test)('non standard modifiers', '[href=\"foo\" y]', function (t, tree) {\n  var attr = tree.atPosition(1, 13);\n  t.deepEqual(attr.insensitive, false);\n  t.deepEqual(attr.insensitiveFlag, '');\n  t.deepEqual(attr.raws.insensitiveFlag, 'y');\n  t.deepEqual(tree.toString(), '[href=\"foo\" y]');\n});\n(0, _helpers.test)('comment after insensitive(non space)', '[href=\"foo\" i/**/]', function (t, tree) {\n  // https://github.com/postcss/postcss-selector-parser/issues/150\n  var attr = tree.atPosition(1, 13);\n  t.deepEqual(attr.insensitive, true);\n  t.deepEqual(attr.insensitiveFlag, 'i');\n  t.is(attr.raws.insensitiveFlag, undefined);\n  t.deepEqual(attr.raws.spaces.insensitive.after, '/**/');\n  t.deepEqual(tree.toString(), '[href=\"foo\" i/**/]');\n});\n(0, _helpers.test)('comment after insensitive(space after)', '[href=\"foo\" i/**/ ]', function (t, tree) {\n  var attr = tree.atPosition(1, 13);\n  t.deepEqual(attr.insensitive, true);\n  t.deepEqual(attr.insensitiveFlag, 'i');\n  t.deepEqual(attr.raws.spaces.insensitive.after, '/**/ ');\n  t.deepEqual(tree.toString(), '[href=\"foo\" i/**/ ]');\n});\n(0, _helpers.test)('comment after insensitive(space before)', '[href=\"foo\" i /**/]', function (t, tree) {\n  var attr = tree.atPosition(1, 13);\n  t.deepEqual(attr.insensitive, true);\n  t.deepEqual(attr.insensitiveFlag, 'i');\n  t.deepEqual(attr.raws.spaces.insensitive.after, ' /**/');\n  t.deepEqual(tree.toString(), '[href=\"foo\" i /**/]');\n});\nvar testDeprecation = (0, _helpers.nodeVersionAtLeast)('7.0.0') || (0, _helpers.nodeVersionBefore)('6.0.0') ? _helpers.test : _helpers.test.skip;\ntestDeprecation('deprecated constructor', '', function (t) {\n  t.throws(function () {\n    return new _attribute.default({\n      value: '\"foo\"',\n      attribute: \"data-bar\"\n    });\n  }, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\n});\ntestDeprecation('deprecated get of raws.unquoted ', '', function (t) {\n  t.throws(function () {\n    var attr = new _attribute.default({\n      value: 'foo',\n      quoteMark: '\"',\n      attribute: \"data-bar\"\n    });\n    return attr.raws.unquoted;\n  }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\");\n});\ntestDeprecation('deprecated set of raws.unquoted ', '', function (t) {\n  t.throws(function () {\n    var attr = new _attribute.default({\n      value: 'foo',\n      quoteMark: '\"',\n      attribute: \"data-bar\"\n    });\n    attr.raws.unquoted = 'fooooo';\n  }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\");\n});\ntestDeprecation('smart quotes', '[data-foo=bar]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  attr.setValue('changed', {\n    quoteMark: '\"'\n  });\n  t.deepEqual(attr.toString(), '[data-foo=\"changed\"]');\n  attr.setValue('changed again', {\n    quoteMark: \"'\",\n    preferCurrentQuoteMark: true\n  });\n  t.deepEqual(attr.toString(), '[data-foo=\"changed again\"]');\n  attr.setValue('smart-ident', {\n    smart: true\n  });\n  t.deepEqual(attr.toString(), '[data-foo=smart-ident]');\n  attr.setValue('smart quoted', {\n    smart: true\n  });\n  t.deepEqual(attr.toString(), '[data-foo=smart\\\\ quoted]');\n  attr.setValue('smart quoted three spaces', {\n    smart: true\n  });\n  t.deepEqual(attr.toString(), '[data-foo=\"smart quoted three spaces\"]');\n  attr.setValue('smart quoted three spaces', {\n    smart: true,\n    quoteMark: \"'\"\n  });\n  t.deepEqual(attr.toString(), \"[data-foo='smart quoted three spaces']\");\n  attr.setValue(\"smart with 'single quotes'\", {\n    smart: true\n  });\n  t.deepEqual(attr.toString(), \"[data-foo=\\\"smart with 'single quotes'\\\"]\");\n  attr.setValue('smart with \"double quotes\"', {\n    smart: true\n  });\n  t.deepEqual(attr.toString(), \"[data-foo='smart with \\\"double quotes\\\"']\");\n});\ntestDeprecation('set Attribute#quoteMark', '[data-foo=bar]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  attr.quoteMark = '\"';\n  t.deepEqual(attr.toString(), '[data-foo=\"bar\"]');\n  attr.quoteMark = \"'\";\n  t.deepEqual(attr.toString(), \"[data-foo='bar']\");\n  attr.quoteMark = null;\n  t.deepEqual(attr.toString(), \"[data-foo=bar]\");\n  attr.value = \"has space\";\n  t.deepEqual(attr.toString(), \"[data-foo=has\\\\ space]\");\n  attr.quoteMark = '\"';\n  t.deepEqual(attr.toString(), '[data-foo=\"has space\"]');\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-selector-parser/dist/__tests__/attributes.js"],"names":["_process","_interopRequireDefault","require","_attribute","_helpers","obj","__esModule","default","throwDeprecation","test","t","tree","deepEqual","nodes","attribute","type","falsy","quoted","spaces","before","after","ns","namespace","attr","raws","undefined","operator","value","true","quoteMark","truthy","getQuotedValue","smart","toString","is","selector","insensitive","offsetOf","atPosition","insensitiveFlag","testDeprecation","nodeVersionAtLeast","nodeVersionBefore","skip","throws","unquoted","setValue","preferCurrentQuoteMark"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _process = _interopRequireDefault(require(\"process\"));\n\nvar _attribute = _interopRequireDefault(require(\"../selectors/attribute\"));\n\nvar _helpers = require(\"./util/helpers\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_process.default.throwDeprecation = true;\n(0, _helpers.test)('attribute selector', '[href]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'attribute');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector spaces (before)', '[  href]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.before, '  ');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'attribute');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector spaces (after)', '[href  ]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.after, '  ');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'attribute');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector spaces with namespace (both)', '[  foo|bar   ]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].ns, 'foo');\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'bar');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.before, '  ');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.after, '   ');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'attribute');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector spaces (both)', '[  href   ]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.before, '  ');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.attribute.after, '   ');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'attribute');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('multiple attribute selectors', '[href][class][name]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'class');\n  t.deepEqual(tree.nodes[0].nodes[2].attribute, 'name');\n});\n(0, _helpers.test)('select elements with or without a namespace', '[*|href]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].namespace, '*');\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n});\n(0, _helpers.test)('namespace with escapes', '[\\\\31 \\\\#\\\\32 |href]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.namespace, '1#2');\n  t.deepEqual(attr.raws.namespace, '\\\\31 \\\\#\\\\32 ');\n  attr.namespace = \"foo\";\n  t.deepEqual(attr.namespace, 'foo');\n  t.deepEqual(attr.raws.namespace, undefined);\n  attr.namespace = \"1\";\n  t.deepEqual(attr.namespace, '1');\n  t.deepEqual(attr.raws.namespace, '\\\\31');\n});\n(0, _helpers.test)('attribute selector with a empty value', '[href=\"\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, '');\n  t.true(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector with a value', '[name=james]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'name');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'james');\n  t.falsy(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('attribute selector with quoted value', '[name=\"james\"]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.attribute, 'name');\n  t.deepEqual(attr.operator, '=');\n  t.deepEqual(attr.value, 'james');\n  t.deepEqual(attr.quoteMark, '\"');\n  t.truthy(attr.quoted);\n  t.deepEqual(attr.getQuotedValue(), '\"james\"');\n});\n(0, _helpers.test)('attribute selector with escaped quote', '[title=\"Something \\\\\"weird\\\\\"\"]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.value, 'Something \"weird\"');\n  t.deepEqual(attr.getQuotedValue(), '\\\"Something \\\\\"weird\\\\\"\\\"');\n  t.deepEqual(attr.getQuotedValue({\n    smart: true\n  }), '\\'Something \"weird\"\\'');\n  t.deepEqual(attr.getQuotedValue({\n    quoteMark: null\n  }), 'Something\\\\ \\\\\"weird\\\\\"');\n  t.deepEqual(attr.quoteMark, '\"');\n  t.truthy(attr.quoted);\n  t.deepEqual(attr.raws.value, '\"Something \\\\\"weird\\\\\"\"');\n  t.deepEqual(tree.toString(), '[title=\"Something \\\\\"weird\\\\\"\"]');\n});\n(0, _helpers.test)('attribute selector with escaped colon', '[ng\\\\:cloak]', function (t, tree) {\n  t.deepEqual(tree.toString(), '[ng\\\\:cloak]');\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.raws.attribute, 'ng\\\\:cloak');\n  t.deepEqual(attr.attribute, 'ng:cloak');\n});\n(0, _helpers.test)('attribute selector with short hex escape', '[ng\\\\3a cloak]', function (t, tree) {\n  t.deepEqual(tree.toString(), '[ng\\\\3a cloak]');\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.raws.attribute, 'ng\\\\3a cloak');\n  t.deepEqual(attr.attribute, 'ng:cloak');\n});\n(0, _helpers.test)('attribute selector with hex escape', '[ng\\\\00003acloak]', function (t, tree) {\n  t.deepEqual(tree.toString(), '[ng\\\\00003acloak]');\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.raws.attribute, 'ng\\\\00003acloak');\n  t.deepEqual(attr.attribute, 'ng:cloak');\n});\n(0, _helpers.test)('assign attribute name requiring escape', '[ng\\\\:cloak]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  attr.attribute = \"ng:foo\";\n  t.deepEqual(attr.raws.attribute, 'ng\\\\:foo');\n  t.deepEqual(attr.attribute, 'ng:foo');\n  t.deepEqual(tree.toString(), '[ng\\\\:foo]');\n});\n(0, _helpers.test)('multiple attribute selectors + combinator', '[href][class][name] h1 > h2', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[2].attribute, 'name');\n  t.deepEqual(tree.nodes[0].nodes[3].value, ' ');\n  t.deepEqual(tree.nodes[0].nodes[5].value, '>');\n  t.deepEqual(tree.nodes[0].nodes[6].value, 'h2');\n});\n(0, _helpers.test)('attribute, class, combinator', '[href] > h2.test', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[1].value, '>');\n  t.deepEqual(tree.nodes[0].nodes[2].value, 'h2');\n  t.deepEqual(tree.nodes[0].nodes[3].value, 'test');\n});\n(0, _helpers.test)('attribute selector with quoted value & combinator', '[name=\"james\"] > h1', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'james');\n  t.deepEqual(tree.nodes[0].nodes[0].quoteMark, '\"');\n  t.deepEqual(tree.nodes[0].nodes[1].value, '>');\n  t.deepEqual(tree.nodes[0].nodes[2].value, 'h1');\n});\n(0, _helpers.test)('multiple quoted attribute selectors', '[href*=\"test.com\"][rel=\\'external\\'][id][class~=\"test\"] > [name]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test.com');\n  t.is(tree.nodes[0].nodes[0].quoteMark, '\"');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'rel');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'external');\n  t.is(tree.nodes[0].nodes[1].quoteMark, \"'\");\n  t.deepEqual(tree.nodes[0].nodes[2].attribute, 'id');\n  t.falsy(tree.nodes[0].nodes[2].value, 'should not have a value');\n  t.is(tree.nodes[0].nodes[2].quoteMark, undefined, 'should not have a quoteMark set');\n  t.deepEqual(tree.nodes[0].nodes[3].attribute, 'class');\n  t.deepEqual(tree.nodes[0].nodes[3].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[3].quoteMark, '\"');\n  t.deepEqual(tree.nodes[0].nodes[4].value, '>');\n  t.deepEqual(tree.nodes[0].nodes[5].attribute, 'name');\n  t.falsy(tree.nodes[0].nodes[5].value, 'should not have a value');\n  t.is(tree.nodes[0].nodes[5].quoteMark, undefined, 'should not have a quoteMark set');\n});\n(0, _helpers.test)('more attribute operators', '[href*=test],[href^=test],[href$=test],[href|=test]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '*=');\n  t.deepEqual(tree.nodes[1].nodes[0].operator, '^=');\n  t.deepEqual(tree.nodes[2].nodes[0].operator, '$=');\n  t.deepEqual(tree.nodes[3].nodes[0].operator, '|=');\n});\n(0, _helpers.test)('attribute selector with quoted value containing \"=\"', '[data-weird-attr=\"Something=weird\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'Something=weird');\n  t.is(tree.nodes[0].nodes[0].quoteMark, '\"');\n  t.deepEqual(tree.nodes[0].nodes[0].getQuotedValue(), '\"Something=weird\"');\n});\nvar selector = '[data-weird-attr*=\"Something=weird\"],' + '[data-weird-attr^=\"Something=weird\"],' + '[data-weird-attr$=\"Something=weird\"],' + '[data-weird-attr|=\"Something=weird\"]';\n(0, _helpers.test)('more attribute selector with quoted value containing \"=\"', selector, function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'Something=weird');\n  t.deepEqual(tree.nodes[1].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[1].nodes[0].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[0].value, 'Something=weird');\n  t.deepEqual(tree.nodes[2].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[2].nodes[0].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[0].value, 'Something=weird');\n  t.deepEqual(tree.nodes[3].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[3].nodes[0].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[0].value, 'Something=weird');\n});\n(0, _helpers.test)('attribute selector with quoted value containing multiple \"=\"', '[data-weird-attr=\"Something=weird SomethingElse=weirder\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'Something=weird SomethingElse=weirder');\n});\nselector = '[data-weird-attr*=\"Something=weird SomethingElse=weirder\"],' + '[data-weird-attr^=\"Something=weird SomethingElse=weirder\"],' + '[data-weird-attr$=\"Something=weird SomethingElse=weirder\"],' + '[data-weird-attr|=\"Something=weird SomethingElse=weirder\"]';\n(0, _helpers.test)('more attribute selector with quoted value containing multiple \"=\"', selector, function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'Something=weird SomethingElse=weirder');\n  t.deepEqual(tree.nodes[1].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[1].nodes[0].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[0].value, 'Something=weird SomethingElse=weirder');\n  t.deepEqual(tree.nodes[2].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[2].nodes[0].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[0].value, 'Something=weird SomethingElse=weirder');\n  t.deepEqual(tree.nodes[3].nodes[0].attribute, 'data-weird-attr');\n  t.deepEqual(tree.nodes[3].nodes[0].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[0].value, 'Something=weird SomethingElse=weirder');\n});\n(0, _helpers.test)('multiple attribute selectors with quoted value containing \"=\"', '[data-weird-foo=\"foo=weird\"][data-weird-bar=\"bar=weird\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'foo=weird');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[0].nodes[1].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'bar=weird');\n});\n(0, _helpers.test)('multiple attribute selectors with value containing escaped \"=\"', '[data-weird-foo=foo\\\\=weird][data-weird-bar=bar\\\\3d weird]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'foo=weird');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[0].nodes[1].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'bar=weird');\n});\nselector = '[data-weird-foo*=\"foo2=weirder\"][data-weird-bar*=\"bar2=weirder\"],' + '[data-weird-foo^=\"foo2=weirder\"][data-weird-bar^=\"bar2=weirder\"],' + '[data-weird-foo$=\"foo2=weirder\"][data-weird-bar$=\"bar2=weirder\"],' + '[data-weird-foo|=\"foo2=weirder\"][data-weird-bar|=\"bar2=weirder\"]';\n(0, _helpers.test)('more multiple attribute selectors with quoted value containing \"=\"', selector, function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'foo2=weirder');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[0].nodes[1].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'bar2=weirder');\n  t.deepEqual(tree.nodes[1].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[1].nodes[0].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[0].value, 'foo2=weirder');\n  t.deepEqual(tree.nodes[1].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[1].nodes[1].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[1].value, 'bar2=weirder');\n  t.deepEqual(tree.nodes[2].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[2].nodes[0].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[0].value, 'foo2=weirder');\n  t.deepEqual(tree.nodes[2].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[2].nodes[1].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[1].value, 'bar2=weirder');\n  t.deepEqual(tree.nodes[3].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[3].nodes[0].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[0].value, 'foo2=weirder');\n  t.deepEqual(tree.nodes[3].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[3].nodes[1].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[1].value, 'bar2=weirder');\n});\n(0, _helpers.test)('multiple attribute selectors with quoted value containing multiple \"=\"', '[data-weird-foo=\"foo1=weirder foo2=weirder\"][data-weird-bar=\"bar1=weirder bar2=weirder\"]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'foo1=weirder foo2=weirder');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[0].nodes[1].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'bar1=weirder bar2=weirder');\n});\nselector = '[data-weird-foo*=\"foo1=weirder foo2=weirder\"][data-weird-bar*=\"bar1=weirder bar2=weirder\"],' + '[data-weird-foo^=\"foo1=weirder foo2=weirder\"][data-weird-bar^=\"bar1=weirder bar2=weirder\"],' + '[data-weird-foo$=\"foo1=weirder foo2=weirder\"][data-weird-bar$=\"bar1=weirder bar2=weirder\"],' + '[data-weird-foo|=\"foo1=weirder foo2=weirder\"][data-weird-bar|=\"bar1=weirder bar2=weirder\"]';\n(0, _helpers.test)('more multiple attribute selectors with quoted value containing multiple \"=\"', selector, function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'foo1=weirder foo2=weirder');\n  t.deepEqual(tree.nodes[0].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[0].nodes[1].operator, '*=');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'bar1=weirder bar2=weirder');\n  t.deepEqual(tree.nodes[1].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[1].nodes[0].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[0].value, 'foo1=weirder foo2=weirder');\n  t.deepEqual(tree.nodes[1].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[1].nodes[1].operator, '^=');\n  t.deepEqual(tree.nodes[1].nodes[1].value, 'bar1=weirder bar2=weirder');\n  t.deepEqual(tree.nodes[2].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[2].nodes[0].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[0].value, 'foo1=weirder foo2=weirder');\n  t.deepEqual(tree.nodes[2].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[2].nodes[1].operator, '$=');\n  t.deepEqual(tree.nodes[2].nodes[1].value, 'bar1=weirder bar2=weirder');\n  t.deepEqual(tree.nodes[3].nodes[0].attribute, 'data-weird-foo');\n  t.deepEqual(tree.nodes[3].nodes[0].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[0].value, 'foo1=weirder foo2=weirder');\n  t.deepEqual(tree.nodes[3].nodes[1].attribute, 'data-weird-bar');\n  t.deepEqual(tree.nodes[3].nodes[1].operator, '|=');\n  t.deepEqual(tree.nodes[3].nodes[1].value, 'bar1=weirder bar2=weirder');\n});\n(0, _helpers.test)('spaces in attribute selectors', 'h1[  href  *=  \"test\"  ]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[1];\n  t.deepEqual(attr.attribute, 'href');\n  t.deepEqual(attr.spaces.attribute.before, '  ');\n  t.deepEqual(attr.spaces.attribute.after, '  ');\n  t.deepEqual(attr.operator, '*=');\n  t.deepEqual(attr.spaces.operator.after, '  ');\n  t.deepEqual(attr.value, 'test');\n  t.deepEqual(attr.spaces.value.after, '  ');\n  t.truthy(tree.nodes[0].nodes[1].quoted);\n});\n(0, _helpers.test)('insensitive attribute selector 1', '[href=\"test\" i]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n});\n(0, _helpers.test)('insensitive attribute selector with a empty value', '[href=\"\" i]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, '');\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n  t.true(tree.nodes[0].nodes[0].quoted);\n});\n(0, _helpers.test)('insensitive attribute selector 2', '[href=TEsT i  ]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'TEsT');\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.value.after, ' ');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.insensitive.after, '  ');\n});\n(0, _helpers.test)('insensitive attribute selector 3', '[href=test i]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n});\n(0, _helpers.test)('capitalized insensitive attribute selector 3', '[href=test I]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[0].insensitive, true);\n});\n(0, _helpers.test)('extraneous non-combinating whitespace', '  [href]   ,  [class]   ', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.before, '  ');\n  t.deepEqual(tree.nodes[0].nodes[0].spaces.after, '   ');\n  t.deepEqual(tree.nodes[1].nodes[0].attribute, 'class');\n  t.deepEqual(tree.nodes[1].nodes[0].spaces.before, '  ');\n  t.deepEqual(tree.nodes[1].nodes[0].spaces.after, '   ');\n});\n(0, _helpers.test)('comments within attribute selectors', '[href/* wow */=/* wow */test]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.attribute, 'href/* wow */');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.operator, '=/* wow */');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n});\n(0, _helpers.test)('comments within attribute selectors (2)', '[/* wow */href=test/* wow */]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'test');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.spaces.attribute.before, '/* wow */');\n  t.deepEqual(tree.nodes[0].nodes[0].operator, '=');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.value, 'test/* wow */');\n});\n(0, _helpers.test)('comments within attribute selectors (3)', '[href=test/* wow */i]', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].attribute, 'href');\n  t.deepEqual(tree.nodes[0].nodes[0].value, 'testi');\n  t.deepEqual(tree.nodes[0].nodes[0].raws.value, 'test/* wow */i');\n  t.falsy(tree.nodes[0].nodes[0].insensitive);\n});\n(0, _helpers.test)('comments within attribute selectors (4)', '[ /*before*/ href /* after-attr */ = /* after-operator */ te/*inside-value*/st/* wow */ /*omg*/i/*bbq*/ /*whodoesthis*/]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  t.deepEqual(attr.attribute, 'href');\n  t.deepEqual(attr.value, 'test');\n  t.deepEqual(attr.getQuotedValue(), 'test');\n  t.deepEqual(attr.raws.value, 'te/*inside-value*/st');\n  t.deepEqual(attr.raws.spaces.value.after, '/* wow */ /*omg*/');\n  t.truthy(attr.insensitive);\n  t.deepEqual(attr.offsetOf(\"attribute\"), 13);\n  t.deepEqual(attr.offsetOf(\"operator\"), 35);\n  t.deepEqual(attr.offsetOf(\"insensitive\"), 95);\n  t.deepEqual(attr.raws.spaces.insensitive.after, '/*bbq*/ /*whodoesthis*/');\n  attr.value = \"foo\";\n  t.is(attr.raws.value, undefined);\n});\n(0, _helpers.test)('non standard modifiers', '[href=\"foo\" y]', function (t, tree) {\n  var attr = tree.atPosition(1, 13);\n  t.deepEqual(attr.insensitive, false);\n  t.deepEqual(attr.insensitiveFlag, '');\n  t.deepEqual(attr.raws.insensitiveFlag, 'y');\n  t.deepEqual(tree.toString(), '[href=\"foo\" y]');\n});\n(0, _helpers.test)('comment after insensitive(non space)', '[href=\"foo\" i/**/]', function (t, tree) {\n  // https://github.com/postcss/postcss-selector-parser/issues/150\n  var attr = tree.atPosition(1, 13);\n  t.deepEqual(attr.insensitive, true);\n  t.deepEqual(attr.insensitiveFlag, 'i');\n  t.is(attr.raws.insensitiveFlag, undefined);\n  t.deepEqual(attr.raws.spaces.insensitive.after, '/**/');\n  t.deepEqual(tree.toString(), '[href=\"foo\" i/**/]');\n});\n(0, _helpers.test)('comment after insensitive(space after)', '[href=\"foo\" i/**/ ]', function (t, tree) {\n  var attr = tree.atPosition(1, 13);\n  t.deepEqual(attr.insensitive, true);\n  t.deepEqual(attr.insensitiveFlag, 'i');\n  t.deepEqual(attr.raws.spaces.insensitive.after, '/**/ ');\n  t.deepEqual(tree.toString(), '[href=\"foo\" i/**/ ]');\n});\n(0, _helpers.test)('comment after insensitive(space before)', '[href=\"foo\" i /**/]', function (t, tree) {\n  var attr = tree.atPosition(1, 13);\n  t.deepEqual(attr.insensitive, true);\n  t.deepEqual(attr.insensitiveFlag, 'i');\n  t.deepEqual(attr.raws.spaces.insensitive.after, ' /**/');\n  t.deepEqual(tree.toString(), '[href=\"foo\" i /**/]');\n});\nvar testDeprecation = (0, _helpers.nodeVersionAtLeast)('7.0.0') || (0, _helpers.nodeVersionBefore)('6.0.0') ? _helpers.test : _helpers.test.skip;\ntestDeprecation('deprecated constructor', '', function (t) {\n  t.throws(function () {\n    return new _attribute.default({\n      value: '\"foo\"',\n      attribute: \"data-bar\"\n    });\n  }, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\n});\ntestDeprecation('deprecated get of raws.unquoted ', '', function (t) {\n  t.throws(function () {\n    var attr = new _attribute.default({\n      value: 'foo',\n      quoteMark: '\"',\n      attribute: \"data-bar\"\n    });\n    return attr.raws.unquoted;\n  }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\");\n});\ntestDeprecation('deprecated set of raws.unquoted ', '', function (t) {\n  t.throws(function () {\n    var attr = new _attribute.default({\n      value: 'foo',\n      quoteMark: '\"',\n      attribute: \"data-bar\"\n    });\n    attr.raws.unquoted = 'fooooo';\n  }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\");\n});\ntestDeprecation('smart quotes', '[data-foo=bar]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  attr.setValue('changed', {\n    quoteMark: '\"'\n  });\n  t.deepEqual(attr.toString(), '[data-foo=\"changed\"]');\n  attr.setValue('changed again', {\n    quoteMark: \"'\",\n    preferCurrentQuoteMark: true\n  });\n  t.deepEqual(attr.toString(), '[data-foo=\"changed again\"]');\n  attr.setValue('smart-ident', {\n    smart: true\n  });\n  t.deepEqual(attr.toString(), '[data-foo=smart-ident]');\n  attr.setValue('smart quoted', {\n    smart: true\n  });\n  t.deepEqual(attr.toString(), '[data-foo=smart\\\\ quoted]');\n  attr.setValue('smart quoted three spaces', {\n    smart: true\n  });\n  t.deepEqual(attr.toString(), '[data-foo=\"smart quoted three spaces\"]');\n  attr.setValue('smart quoted three spaces', {\n    smart: true,\n    quoteMark: \"'\"\n  });\n  t.deepEqual(attr.toString(), \"[data-foo='smart quoted three spaces']\");\n  attr.setValue(\"smart with 'single quotes'\", {\n    smart: true\n  });\n  t.deepEqual(attr.toString(), \"[data-foo=\\\"smart with 'single quotes'\\\"]\");\n  attr.setValue('smart with \"double quotes\"', {\n    smart: true\n  });\n  t.deepEqual(attr.toString(), \"[data-foo='smart with \\\"double quotes\\\"']\");\n});\ntestDeprecation('set Attribute#quoteMark', '[data-foo=bar]', function (t, tree) {\n  var attr = tree.nodes[0].nodes[0];\n  attr.quoteMark = '\"';\n  t.deepEqual(attr.toString(), '[data-foo=\"bar\"]');\n  attr.quoteMark = \"'\";\n  t.deepEqual(attr.toString(), \"[data-foo='bar']\");\n  attr.quoteMark = null;\n  t.deepEqual(attr.toString(), \"[data-foo=bar]\");\n  attr.value = \"has space\";\n  t.deepEqual(attr.toString(), \"[data-foo=has\\\\ space]\");\n  attr.quoteMark = '\"';\n  t.deepEqual(attr.toString(), '[data-foo=\"has space\"]');\n});"]},"metadata":{},"sourceType":"script"}