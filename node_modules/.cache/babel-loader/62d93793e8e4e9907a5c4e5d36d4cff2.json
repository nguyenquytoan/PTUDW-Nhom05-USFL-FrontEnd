{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar path = require('path');\n\nvar loaderUtils = require(\"loader-utils\");\n\nvar validateOptions = require('schema-utils');\n\nmodule.exports = function () {};\n\nmodule.exports.pitch = function (request) {\n  if (this.cacheable) this.cacheable();\n  var options = loaderUtils.getOptions(this) || {};\n  validateOptions(require('./options.json'), options, 'Style Loader (Useable)');\n  options.hmr = typeof options.hmr === 'undefined' ? true : options.hmr; // The variable is needed, because the function should be inlined.\n  // If is just stored it in options, JSON.stringify will quote\n  // the function and it would be just a string at runtime\n\n  var insertInto;\n\n  if (typeof options.insertInto === \"function\") {\n    insertInto = options.insertInto.toString();\n  } // We need to check if it a string, or variable will be \"undefined\"\n  // and the loader crashes\n\n\n  if (typeof options.insertInto === \"string\") {\n    insertInto = '\"' + options.insertInto + '\"';\n  }\n\n  var hmr = [// Hot Module Replacement\n  \"if(module.hot) {\", \"\tvar lastRefs = module.hot.data && module.hot.data.refs || 0;\", \"\", \"\tif(lastRefs) {\", \"\t\texports.ref();\", \"\t\tif(!content.locals) {\", \"\t\t\trefs = lastRefs;\", \"\t\t}\", \"\t}\", \"\", \"\tif(!content.locals) {\", \"\t\tmodule.hot.accept();\", \"\t}\", \"\", \"\tmodule.hot.dispose(function(data) {\", \"\t\tdata.refs = content.locals ? 0 : refs;\", \"\", \"\t\tif(dispose) {\", \"\t\t\tdispose();\", \"\t\t}\", \"\t});\", \"}\"].join(\"\\n\");\n  return [\"var refs = 0;\", \"var dispose;\", \"var content = require(\" + loaderUtils.stringifyRequest(this, \"!!\" + request) + \");\", \"var options = \" + JSON.stringify(options) + \";\", \"options.insertInto = \" + insertInto + \";\", \"\", \"if(typeof content === 'string') content = [[module.id, content, '']];\", // Export CSS Modules\n  \"if(content.locals) exports.locals = content.locals;\", \"\", \"exports.use = exports.ref = function() {\", \"\tif(!(refs++)) {\", \"\t\tdispose = require(\" + loaderUtils.stringifyRequest(this, \"!\" + path.join(__dirname, \"lib\", \"addStyles.js\")) + \")(content, options);\", \"\t}\", \"\", \"\treturn exports;\", \"};\", \"\", \"exports.unuse = exports.unref = function() {\", \"  if(refs > 0 && !(--refs)) {\", \"\t   dispose();\", \"\t\t dispose = null;\", \"  }\", \"};\", options.hmr ? hmr : \"\"].join(\"\\n\");\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/style-loader/useable.js"],"names":["path","require","loaderUtils","validateOptions","module","exports","pitch","request","cacheable","options","getOptions","hmr","insertInto","toString","join","stringifyRequest","JSON","stringify","__dirname"],"mappings":"AAAA;;;;AAIA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAIE,eAAe,GAAGF,OAAO,CAAC,cAAD,CAA7B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,YAAY,CAAE,CAA/B;;AAEAD,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuB,UAAUC,OAAV,EAAmB;AACzC,MAAI,KAAKC,SAAT,EAAoB,KAAKA,SAAL;AAEpB,MAAIC,OAAO,GAAGP,WAAW,CAACQ,UAAZ,CAAuB,IAAvB,KAAgC,EAA9C;AAEAP,EAAAA,eAAe,CAACF,OAAO,CAAC,gBAAD,CAAR,EAA4BQ,OAA5B,EAAqC,wBAArC,CAAf;AAEAA,EAAAA,OAAO,CAACE,GAAR,GAAc,OAAOF,OAAO,CAACE,GAAf,KAAuB,WAAvB,GAAqC,IAArC,GAA4CF,OAAO,CAACE,GAAlE,CAPyC,CASzC;AACA;AACA;;AACA,MAAIC,UAAJ;;AAEA,MAAI,OAAOH,OAAO,CAACG,UAAf,KAA8B,UAAlC,EAA8C;AAC7CA,IAAAA,UAAU,GAAGH,OAAO,CAACG,UAAR,CAAmBC,QAAnB,EAAb;AACA,GAhBwC,CAkBzC;AACA;;;AACA,MAAI,OAAOJ,OAAO,CAACG,UAAf,KAA8B,QAAlC,EAA4C;AAC3CA,IAAAA,UAAU,GAAG,MAAMH,OAAO,CAACG,UAAd,GAA2B,GAAxC;AACA;;AAED,MAAID,GAAG,GAAG,CACT;AACA,oBAFS,EAGT,+DAHS,EAIT,EAJS,EAKT,iBALS,EAMT,kBANS,EAOT,yBAPS,EAQT,qBARS,EAST,KATS,EAUT,IAVS,EAWT,EAXS,EAYT,wBAZS,EAaT,wBAbS,EAcT,IAdS,EAeT,EAfS,EAgBT,sCAhBS,EAiBT,0CAjBS,EAkBT,EAlBS,EAmBT,iBAnBS,EAoBT,eApBS,EAqBT,KArBS,EAsBT,MAtBS,EAuBT,GAvBS,EAwBRG,IAxBQ,CAwBH,IAxBG,CAAV;AA0BA,SAAO,CACN,eADM,EAEN,cAFM,EAGN,2BAA2BZ,WAAW,CAACa,gBAAZ,CAA6B,IAA7B,EAAmC,OAAOR,OAA1C,CAA3B,GAAgF,IAH1E,EAIN,mBAAmBS,IAAI,CAACC,SAAL,CAAeR,OAAf,CAAnB,GAA6C,GAJvC,EAKN,0BAA0BG,UAA1B,GAAuC,GALjC,EAMN,EANM,EAON,uEAPM,EAQN;AACA,uDATM,EAUN,EAVM,EAWN,0CAXM,EAYN,kBAZM,EAaN,yBAAyBV,WAAW,CAACa,gBAAZ,CAA6B,IAA7B,EAAmC,MAAMf,IAAI,CAACc,IAAL,CAAUI,SAAV,EAAqB,KAArB,EAA4B,cAA5B,CAAzC,CAAzB,GAAiH,sBAb3G,EAcN,IAdM,EAeN,EAfM,EAgBN,kBAhBM,EAiBN,IAjBM,EAkBN,EAlBM,EAmBN,8CAnBM,EAoBN,+BApBM,EAqBN,gBArBM,EAsBN,oBAtBM,EAuBN,KAvBM,EAwBN,IAxBM,EAyBNT,OAAO,CAACE,GAAR,GAAcA,GAAd,GAAoB,EAzBd,EA0BLG,IA1BK,CA0BA,IA1BA,CAAP;AA2BA,CA7ED","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar path = require('path');\n\nvar loaderUtils = require(\"loader-utils\");\nvar validateOptions = require('schema-utils');\n\nmodule.exports = function () {};\n\nmodule.exports.pitch = function (request) {\n\tif (this.cacheable) this.cacheable();\n\n\tvar options = loaderUtils.getOptions(this) || {};\n\n\tvalidateOptions(require('./options.json'), options, 'Style Loader (Useable)');\n\n\toptions.hmr = typeof options.hmr === 'undefined' ? true : options.hmr;\n\n\t// The variable is needed, because the function should be inlined.\n\t// If is just stored it in options, JSON.stringify will quote\n\t// the function and it would be just a string at runtime\n\tvar insertInto;\n\n\tif (typeof options.insertInto === \"function\") {\n\t\tinsertInto = options.insertInto.toString();\n\t}\n\n\t// We need to check if it a string, or variable will be \"undefined\"\n\t// and the loader crashes\n\tif (typeof options.insertInto === \"string\") {\n\t\tinsertInto = '\"' + options.insertInto + '\"';\n\t}\n\n\tvar hmr = [\n\t\t// Hot Module Replacement\n\t\t\"if(module.hot) {\",\n\t\t\"\tvar lastRefs = module.hot.data && module.hot.data.refs || 0;\",\n\t\t\"\",\n\t\t\"\tif(lastRefs) {\",\n\t\t\"\t\texports.ref();\",\n\t\t\"\t\tif(!content.locals) {\",\n\t\t\"\t\t\trefs = lastRefs;\",\n\t\t\"\t\t}\",\n\t\t\"\t}\",\n\t\t\"\",\n\t\t\"\tif(!content.locals) {\",\n\t\t\"\t\tmodule.hot.accept();\",\n\t\t\"\t}\",\n\t\t\"\",\n\t\t\"\tmodule.hot.dispose(function(data) {\",\n\t\t\"\t\tdata.refs = content.locals ? 0 : refs;\",\n\t\t\"\",\n\t\t\"\t\tif(dispose) {\",\n\t\t\"\t\t\tdispose();\",\n\t\t\"\t\t}\",\n\t\t\"\t});\",\n\t\t\"}\"\n\t].join(\"\\n\");\n\n\treturn [\n\t\t\"var refs = 0;\",\n\t\t\"var dispose;\",\n\t\t\"var content = require(\" + loaderUtils.stringifyRequest(this, \"!!\" + request) + \");\",\n\t\t\"var options = \" + JSON.stringify(options) + \";\",\n\t\t\"options.insertInto = \" + insertInto + \";\",\n\t\t\"\",\n\t\t\"if(typeof content === 'string') content = [[module.id, content, '']];\",\n\t\t// Export CSS Modules\n\t\t\"if(content.locals) exports.locals = content.locals;\",\n\t\t\"\",\n\t\t\"exports.use = exports.ref = function() {\",\n\t\t\"\tif(!(refs++)) {\",\n\t\t\"\t\tdispose = require(\" + loaderUtils.stringifyRequest(this, \"!\" + path.join(__dirname, \"lib\", \"addStyles.js\")) + \")(content, options);\",\n\t\t\"\t}\",\n\t\t\"\",\n\t\t\"\treturn exports;\",\n\t\t\"};\",\n\t\t\"\",\n\t\t\"exports.unuse = exports.unref = function() {\",\n\t\t\"  if(refs > 0 && !(--refs)) {\",\n\t\t\"\t   dispose();\",\n\t\t\"\t\t dispose = null;\",\n\t\t\"  }\",\n\t\t\"};\",\n\t\toptions.hmr ? hmr : \"\"\n\t].join(\"\\n\");\n};\n"]},"metadata":{},"sourceType":"script"}