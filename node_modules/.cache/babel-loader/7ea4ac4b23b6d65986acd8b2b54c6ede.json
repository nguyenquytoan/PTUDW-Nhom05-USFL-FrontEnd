{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'removes unknown elements content and attributes, removes attrs with default values';\nexports.params = {\n  unknownContent: true,\n  unknownAttrs: true,\n  defaultAttrs: true,\n  uselessOverrides: true,\n  keepDataAttrs: true,\n  keepAriaAttrs: true,\n  keepRoleAttr: false\n};\n\nvar collections = require('./_collections'),\n    elems = collections.elems,\n    attrsGroups = collections.attrsGroups,\n    elemsGroups = collections.elemsGroups,\n    attrsGroupsDefaults = collections.attrsGroupsDefaults,\n    attrsInheritable = collections.inheritableAttrs,\n    applyGroups = collections.presentationNonInheritableGroupAttrs; // collect and extend all references\n\n\nfor (var elem in elems) {\n  elem = elems[elem];\n\n  if (elem.attrsGroups) {\n    elem.attrs = elem.attrs || [];\n    elem.attrsGroups.forEach(function (attrsGroupName) {\n      elem.attrs = elem.attrs.concat(attrsGroups[attrsGroupName]);\n      var groupDefaults = attrsGroupsDefaults[attrsGroupName];\n\n      if (groupDefaults) {\n        elem.defaults = elem.defaults || {};\n\n        for (var attrName in groupDefaults) {\n          elem.defaults[attrName] = groupDefaults[attrName];\n        }\n      }\n    });\n  }\n\n  if (elem.contentGroups) {\n    elem.content = elem.content || [];\n    elem.contentGroups.forEach(function (contentGroupName) {\n      elem.content = elem.content.concat(elemsGroups[contentGroupName]);\n    });\n  }\n}\n/**\n * Remove unknown elements content and attributes,\n * remove attributes with default values.\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\n\n\nexports.fn = function (item, params) {\n  // elems w/o namespace prefix\n  if (item.isElem() && !item.prefix) {\n    var elem = item.elem; // remove unknown element's content\n\n    if (params.unknownContent && !item.isEmpty() && elems[elem] && // make sure we know of this element before checking its children\n    elem !== 'foreignObject' // Don't check foreignObject\n    ) {\n        item.content.forEach(function (content, i) {\n          if (content.isElem() && !content.prefix && (elems[elem].content && // Do we have a record of its permitted content?\n          elems[elem].content.indexOf(content.elem) === -1 || !elems[elem].content && // we dont know about its permitted content\n          !elems[content.elem] // check that we know about the element at all\n          )) {\n            item.content.splice(i, 1);\n          }\n        });\n      } // remove element's unknown attrs and attrs with default values\n\n\n    if (elems[elem] && elems[elem].attrs) {\n      item.eachAttr(function (attr) {\n        if (attr.name !== 'xmlns' && (attr.prefix === 'xml' || !attr.prefix) && (!params.keepDataAttrs || attr.name.indexOf('data-') != 0) && (!params.keepAriaAttrs || attr.name.indexOf('aria-') != 0) && (!params.keepRoleAttr || attr.name != 'role')) {\n          if ( // unknown attrs\n          params.unknownAttrs && elems[elem].attrs.indexOf(attr.name) === -1 || // attrs with default values\n          params.defaultAttrs && !item.hasAttr('id') && elems[elem].defaults && elems[elem].defaults[attr.name] === attr.value && (attrsInheritable.indexOf(attr.name) < 0 || !item.parentNode.computedAttr(attr.name)) || // useless overrides\n          params.uselessOverrides && !item.hasAttr('id') && applyGroups.indexOf(attr.name) < 0 && attrsInheritable.indexOf(attr.name) > -1 && item.parentNode.computedAttr(attr.name, attr.value)) {\n            item.removeAttr(attr.name);\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/svgo/plugins/removeUnknownsAndDefaults.js"],"names":["exports","type","active","description","params","unknownContent","unknownAttrs","defaultAttrs","uselessOverrides","keepDataAttrs","keepAriaAttrs","keepRoleAttr","collections","require","elems","attrsGroups","elemsGroups","attrsGroupsDefaults","attrsInheritable","inheritableAttrs","applyGroups","presentationNonInheritableGroupAttrs","elem","attrs","forEach","attrsGroupName","concat","groupDefaults","defaults","attrName","contentGroups","content","contentGroupName","fn","item","isElem","prefix","isEmpty","i","indexOf","splice","eachAttr","attr","name","hasAttr","value","parentNode","computedAttr","removeAttr"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'removes unknown elements content and attributes, removes attrs with default values';\n\nexports.params = {\n    unknownContent: true,\n    unknownAttrs: true,\n    defaultAttrs: true,\n    uselessOverrides: true,\n    keepDataAttrs: true,\n    keepAriaAttrs: true,\n    keepRoleAttr: false\n};\n\nvar collections = require('./_collections'),\n    elems = collections.elems,\n    attrsGroups = collections.attrsGroups,\n    elemsGroups = collections.elemsGroups,\n    attrsGroupsDefaults = collections.attrsGroupsDefaults,\n    attrsInheritable = collections.inheritableAttrs,\n    applyGroups = collections.presentationNonInheritableGroupAttrs;\n\n// collect and extend all references\nfor (var elem in elems) {\n    elem = elems[elem];\n\n    if (elem.attrsGroups) {\n        elem.attrs = elem.attrs || [];\n\n        elem.attrsGroups.forEach(function(attrsGroupName) {\n            elem.attrs = elem.attrs.concat(attrsGroups[attrsGroupName]);\n\n            var groupDefaults = attrsGroupsDefaults[attrsGroupName];\n\n            if (groupDefaults) {\n                elem.defaults = elem.defaults || {};\n\n                for (var attrName in groupDefaults) {\n                    elem.defaults[attrName] = groupDefaults[attrName];\n                }\n            }\n        });\n\n    }\n\n    if (elem.contentGroups) {\n        elem.content = elem.content || [];\n\n        elem.contentGroups.forEach(function(contentGroupName) {\n            elem.content = elem.content.concat(elemsGroups[contentGroupName]);\n        });\n    }\n}\n\n/**\n * Remove unknown elements content and attributes,\n * remove attributes with default values.\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(item, params) {\n\n    // elems w/o namespace prefix\n    if (item.isElem() && !item.prefix) {\n\n        var elem = item.elem;\n\n        // remove unknown element's content\n        if (\n            params.unknownContent &&\n            !item.isEmpty() &&\n            elems[elem] && // make sure we know of this element before checking its children\n            elem !== 'foreignObject' // Don't check foreignObject\n        ) {\n            item.content.forEach(function(content, i) {\n                if (\n                    content.isElem() &&\n                    !content.prefix &&\n                    (\n                        (\n                            elems[elem].content && // Do we have a record of its permitted content?\n                            elems[elem].content.indexOf(content.elem) === -1\n                        ) ||\n                        (\n                            !elems[elem].content && // we dont know about its permitted content\n                            !elems[content.elem] // check that we know about the element at all\n                        )\n                    )\n                ) {\n                    item.content.splice(i, 1);\n                }\n            });\n        }\n\n        // remove element's unknown attrs and attrs with default values\n        if (elems[elem] && elems[elem].attrs) {\n\n            item.eachAttr(function(attr) {\n\n                if (\n                    attr.name !== 'xmlns' &&\n                    (attr.prefix === 'xml' || !attr.prefix) &&\n                    (!params.keepDataAttrs || attr.name.indexOf('data-') != 0) &&\n                    (!params.keepAriaAttrs || attr.name.indexOf('aria-') != 0) &&\n                    (!params.keepRoleAttr || attr.name != 'role')\n                ) {\n                    if (\n                        // unknown attrs\n                        (\n                            params.unknownAttrs &&\n                            elems[elem].attrs.indexOf(attr.name) === -1\n                        ) ||\n                        // attrs with default values\n                        (\n                            params.defaultAttrs &&\n                            !item.hasAttr('id') &&\n                            elems[elem].defaults &&\n                            elems[elem].defaults[attr.name] === attr.value && (\n                                attrsInheritable.indexOf(attr.name) < 0 ||\n                                !item.parentNode.computedAttr(attr.name)\n                            )\n                        ) ||\n                        // useless overrides\n                        (\n                            params.uselessOverrides &&\n                            !item.hasAttr('id') &&\n                            applyGroups.indexOf(attr.name) < 0 &&\n                            attrsInheritable.indexOf(attr.name) > -1 &&\n                            item.parentNode.computedAttr(attr.name, attr.value)\n                        )\n                    ) {\n                        item.removeAttr(attr.name);\n                    }\n                }\n\n            });\n\n        }\n\n    }\n\n};\n"]},"metadata":{},"sourceType":"script"}