{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ReplaySubject_1 = require(\"../ReplaySubject\");\n\nfunction shareReplay(configOrBufferSize, windowTime, scheduler) {\n  var config;\n\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    config = configOrBufferSize;\n  } else {\n    config = {\n      bufferSize: configOrBufferSize,\n      windowTime: windowTime,\n      refCount: false,\n      scheduler: scheduler\n    };\n  }\n\n  return function (source) {\n    return source.lift(shareReplayOperator(config));\n  };\n}\n\nexports.shareReplay = shareReplay;\n\nfunction shareReplayOperator(_a) {\n  var _b = _a.bufferSize,\n      bufferSize = _b === void 0 ? Number.POSITIVE_INFINITY : _b,\n      _c = _a.windowTime,\n      windowTime = _c === void 0 ? Number.POSITIVE_INFINITY : _c,\n      useRefCount = _a.refCount,\n      scheduler = _a.scheduler;\n  var subject;\n  var refCount = 0;\n  var subscription;\n  var hasError = false;\n  var isComplete = false;\n  return function shareReplayOperation(source) {\n    refCount++;\n\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);\n      subscription = source.subscribe({\n        next: function (value) {\n          subject.next(value);\n        },\n        error: function (err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete: function () {\n          isComplete = true;\n          subscription = undefined;\n          subject.complete();\n        }\n      });\n    }\n\n    var innerSub = subject.subscribe(this);\n    this.add(function () {\n      refCount--;\n      innerSub.unsubscribe();\n\n      if (subscription && !isComplete && useRefCount && refCount === 0) {\n        subscription.unsubscribe();\n        subscription = undefined;\n        subject = undefined;\n      }\n    });\n  };\n}","map":{"version":3,"sources":["../../src/internal/operators/shareReplay.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AA2DA,SAAgB,WAAhB,CACE,kBADF,EAEE,UAFF,EAGE,SAHF,EAG2B;AAEzB,MAAI,MAAJ;;AACA,MAAI,kBAAkB,IAAI,OAAO,kBAAP,KAA8B,QAAxD,EAAkE;AAChE,IAAA,MAAM,GAAG,kBAAT;AACD,GAFD,MAEO;AACL,IAAA,MAAM,GAAG;AACP,MAAA,UAAU,EAAE,kBADL;AAEP,MAAA,UAAU,EAAA,UAFH;AAGP,MAAA,QAAQ,EAAE,KAHH;AAIP,MAAA,SAAS,EAAA;AAJF,KAAT;AAMD;;AACD,SAAO,UAAC,MAAD,EAAsB;AAAK,WAAA,MAAM,CAAC,IAAP,CAAY,mBAAmB,CAA/B,MAA+B,CAA/B,CAAA;AAAwC,GAA1E;AACD;;AAjBD,OAAA,CAAA,WAAA,GAAA,WAAA;;AAmBA,SAAS,mBAAT,CAAgC,EAAhC,EAKoB;MAJlB,EAAA,GAAA,EAAA,CAAA,U;MAAA,UAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,MAAA,CAAA,iBAAA,GAAA,E;MACA,EAAA,GAAA,EAAA,CAAA,U;MAAA,UAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,MAAA,CAAA,iBAAA,GAAA,E;MACA,WAAA,GAAA,EAAA,CAAA,Q;MACA,SAAA,GAAA,EAAA,CAAA,S;AAEA,MAAI,OAAJ;AACA,MAAI,QAAQ,GAAG,CAAf;AACA,MAAI,YAAJ;AACA,MAAI,QAAQ,GAAG,KAAf;AACA,MAAI,UAAU,GAAG,KAAjB;AAEA,SAAO,SAAS,oBAAT,CAAmD,MAAnD,EAAwE;AAC7E,IAAA,QAAQ;;AACR,QAAI,CAAC,OAAD,IAAY,QAAhB,EAA0B;AACxB,MAAA,QAAQ,GAAG,KAAX;AACA,MAAA,OAAO,GAAG,IAAI,eAAA,CAAA,aAAJ,CAAqB,UAArB,EAAiC,UAAjC,EAA6C,SAA7C,CAAV;AACA,MAAA,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB;AAC9B,QAAA,IAAI,EAAA,UAAC,KAAD,EAAM;AAAI,UAAA,OAAO,CAAC,IAAR,CAAa,KAAb;AAAsB,SADN;AAE9B,QAAA,KAAK,EAAA,UAAC,GAAD,EAAI;AACP,UAAA,QAAQ,GAAG,IAAX;AACA,UAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACD,SAL6B;AAM9B,QAAA,QAAQ,EAAA,YAAA;AACN,UAAA,UAAU,GAAG,IAAb;AACA,UAAA,YAAY,GAAG,SAAf;AACA,UAAA,OAAO,CAAC,QAAR;AACD;AAV6B,OAAjB,CAAf;AAYD;;AAED,QAAM,QAAQ,GAAG,OAAO,CAAC,SAAR,CAAkB,IAAlB,CAAjB;AACA,SAAK,GAAL,CAAS,YAAA;AACP,MAAA,QAAQ;AACR,MAAA,QAAQ,CAAC,WAAT;;AACA,UAAI,YAAY,IAAI,CAAC,UAAjB,IAA+B,WAA/B,IAA8C,QAAQ,KAAK,CAA/D,EAAkE;AAChE,QAAA,YAAY,CAAC,WAAb;AACA,QAAA,YAAY,GAAG,SAAf;AACA,QAAA,OAAO,GAAG,SAAV;AACD;AACF,KARD;AASD,GA7BD;AA8BD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ReplaySubject_1 = require(\"../ReplaySubject\");\nfunction shareReplay(configOrBufferSize, windowTime, scheduler) {\n    var config;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        config = configOrBufferSize;\n    }\n    else {\n        config = {\n            bufferSize: configOrBufferSize,\n            windowTime: windowTime,\n            refCount: false,\n            scheduler: scheduler\n        };\n    }\n    return function (source) { return source.lift(shareReplayOperator(config)); };\n}\nexports.shareReplay = shareReplay;\nfunction shareReplayOperator(_a) {\n    var _b = _a.bufferSize, bufferSize = _b === void 0 ? Number.POSITIVE_INFINITY : _b, _c = _a.windowTime, windowTime = _c === void 0 ? Number.POSITIVE_INFINITY : _c, useRefCount = _a.refCount, scheduler = _a.scheduler;\n    var subject;\n    var refCount = 0;\n    var subscription;\n    var hasError = false;\n    var isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);\n            subscription = source.subscribe({\n                next: function (value) { subject.next(value); },\n                error: function (err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete: function () {\n                    isComplete = true;\n                    subscription = undefined;\n                    subject.complete();\n                },\n            });\n        }\n        var innerSub = subject.subscribe(this);\n        this.add(function () {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && !isComplete && useRefCount && refCount === 0) {\n                subscription.unsubscribe();\n                subscription = undefined;\n                subject = undefined;\n            }\n        });\n    };\n}\n//# sourceMappingURL=shareReplay.js.map"]},"metadata":{},"sourceType":"script"}