{"ast":null,"code":"/**\n * @fileoverview Rule to flag the generator functions that does not have yield.\n * @author Toru Nagashima\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"require generator functions to contain `yield`\",\n      category: \"ECMAScript 6\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/require-yield\"\n    },\n    schema: []\n  },\n\n  create(context) {\n    const stack = [];\n    /**\n     * If the node is a generator function, start counting `yield` keywords.\n     * @param {Node} node A function node to check.\n     * @returns {void}\n     */\n\n    function beginChecking(node) {\n      if (node.generator) {\n        stack.push(0);\n      }\n    }\n    /**\n     * If the node is a generator function, end counting `yield` keywords, then\n     * reports result.\n     * @param {Node} node A function node to check.\n     * @returns {void}\n     */\n\n\n    function endChecking(node) {\n      if (!node.generator) {\n        return;\n      }\n\n      const countYield = stack.pop();\n\n      if (countYield === 0 && node.body.body.length > 0) {\n        context.report({\n          node,\n          message: \"This generator function does not have 'yield'.\"\n        });\n      }\n    }\n\n    return {\n      FunctionDeclaration: beginChecking,\n      \"FunctionDeclaration:exit\": endChecking,\n      FunctionExpression: beginChecking,\n      \"FunctionExpression:exit\": endChecking,\n\n      // Increases the count of `yield` keyword.\n      YieldExpression() {\n        /* istanbul ignore else */\n        if (stack.length > 0) {\n          stack[stack.length - 1] += 1;\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/lib/rules/require-yield.js"],"names":["module","exports","meta","type","docs","description","category","recommended","url","schema","create","context","stack","beginChecking","node","generator","push","endChecking","countYield","pop","body","length","report","message","FunctionDeclaration","FunctionExpression","YieldExpression"],"mappings":"AAAA;;;;AAKA,a,CAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,gDADX;AAEFC,MAAAA,QAAQ,EAAE,cAFR;AAGFC,MAAAA,WAAW,EAAE,IAHX;AAIFC,MAAAA,GAAG,EAAE;AAJH,KAHJ;AAUFC,IAAAA,MAAM,EAAE;AAVN,GADO;;AAcbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AACZ,UAAMC,KAAK,GAAG,EAAd;AAEA;;;;;;AAKA,aAASC,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,UAAIA,IAAI,CAACC,SAAT,EAAoB;AAChBH,QAAAA,KAAK,CAACI,IAAN,CAAW,CAAX;AACH;AACJ;AAED;;;;;;;;AAMA,aAASC,WAAT,CAAqBH,IAArB,EAA2B;AACvB,UAAI,CAACA,IAAI,CAACC,SAAV,EAAqB;AACjB;AACH;;AAED,YAAMG,UAAU,GAAGN,KAAK,CAACO,GAAN,EAAnB;;AAEA,UAAID,UAAU,KAAK,CAAf,IAAoBJ,IAAI,CAACM,IAAL,CAAUA,IAAV,CAAeC,MAAf,GAAwB,CAAhD,EAAmD;AAC/CV,QAAAA,OAAO,CAACW,MAAR,CAAe;AAAER,UAAAA,IAAF;AAAQS,UAAAA,OAAO,EAAE;AAAjB,SAAf;AACH;AACJ;;AAED,WAAO;AACHC,MAAAA,mBAAmB,EAAEX,aADlB;AAEH,kCAA4BI,WAFzB;AAGHQ,MAAAA,kBAAkB,EAAEZ,aAHjB;AAIH,iCAA2BI,WAJxB;;AAMH;AACAS,MAAAA,eAAe,GAAG;AAEd;AACA,YAAId,KAAK,CAACS,MAAN,GAAe,CAAnB,EAAsB;AAClBT,UAAAA,KAAK,CAACA,KAAK,CAACS,MAAN,GAAe,CAAhB,CAAL,IAA2B,CAA3B;AACH;AACJ;;AAbE,KAAP;AAeH;;AA7DY,CAAjB","sourcesContent":["/**\n * @fileoverview Rule to flag the generator functions that does not have yield.\n * @author Toru Nagashima\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"require generator functions to contain `yield`\",\n            category: \"ECMAScript 6\",\n            recommended: true,\n            url: \"https://eslint.org/docs/rules/require-yield\"\n        },\n\n        schema: []\n    },\n\n    create(context) {\n        const stack = [];\n\n        /**\n         * If the node is a generator function, start counting `yield` keywords.\n         * @param {Node} node A function node to check.\n         * @returns {void}\n         */\n        function beginChecking(node) {\n            if (node.generator) {\n                stack.push(0);\n            }\n        }\n\n        /**\n         * If the node is a generator function, end counting `yield` keywords, then\n         * reports result.\n         * @param {Node} node A function node to check.\n         * @returns {void}\n         */\n        function endChecking(node) {\n            if (!node.generator) {\n                return;\n            }\n\n            const countYield = stack.pop();\n\n            if (countYield === 0 && node.body.body.length > 0) {\n                context.report({ node, message: \"This generator function does not have 'yield'.\" });\n            }\n        }\n\n        return {\n            FunctionDeclaration: beginChecking,\n            \"FunctionDeclaration:exit\": endChecking,\n            FunctionExpression: beginChecking,\n            \"FunctionExpression:exit\": endChecking,\n\n            // Increases the count of `yield` keyword.\n            YieldExpression() {\n\n                /* istanbul ignore else */\n                if (stack.length > 0) {\n                    stack[stack.length - 1] += 1;\n                }\n            }\n        };\n    }\n};\n"]},"metadata":{},"sourceType":"script"}