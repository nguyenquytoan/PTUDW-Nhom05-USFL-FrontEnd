{"ast":null,"code":"\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\"),\n    isValue = require(\"../value/is\"),\n    is = require(\"./is\");\n\nvar resolveCoercedValue = function (value, coerceItem) {\n  var coercedValue = [];\n  var iterator = value[Symbol.iterator]();\n  var item;\n\n  while (!(item = iterator.next()).done) {\n    var newItemValue = coerceItem(item.value);\n    if (!isValue(newItemValue)) throw new Error(\"Stop propagation\");\n    coercedValue.push(newItemValue);\n  }\n\n  return coercedValue;\n};\n\nmodule.exports = function (value\n/*, options*/\n) {\n  var options = arguments[1];\n\n  if (is(value, options)) {\n    if (!options) return value;\n    if (typeof options.coerceItem !== \"function\") return value;\n\n    try {\n      return resolveCoercedValue(value, options.coerceItem);\n    } catch (error) {// Ignore, let validation error propagate\n    }\n  }\n\n  return resolveException(value, \"%v is not expected iterable value\", options);\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/type/iterable/ensure.js"],"names":["resolveException","require","isValue","is","resolveCoercedValue","value","coerceItem","coercedValue","iterator","Symbol","item","next","done","newItemValue","Error","push","module","exports","options","arguments","error"],"mappings":"AAAA;;AAEA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,0BAAD,CAA9B;AAAA,IACIC,OAAO,GAAYD,OAAO,CAAC,aAAD,CAD9B;AAAA,IAEIE,EAAE,GAAiBF,OAAO,CAAC,MAAD,CAF9B;;AAIA,IAAIG,mBAAmB,GAAG,UAAUC,KAAV,EAAiBC,UAAjB,EAA6B;AACtD,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAACD,QAAR,CAAL,EAAf;AACA,MAAIE,IAAJ;;AACA,SAAO,CAAC,CAACA,IAAI,GAAGF,QAAQ,CAACG,IAAT,EAAR,EAAyBC,IAAjC,EAAuC;AACtC,QAAIC,YAAY,GAAGP,UAAU,CAACI,IAAI,CAACL,KAAN,CAA7B;AACA,QAAI,CAACH,OAAO,CAACW,YAAD,CAAZ,EAA4B,MAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AAC5BP,IAAAA,YAAY,CAACQ,IAAb,CAAkBF,YAAlB;AACA;;AACD,SAAON,YAAP;AACA,CAVD;;AAWAS,MAAM,CAACC,OAAP,GAAiB,UAAUZ;AAAK;AAAf,EAA8B;AAC9C,MAAIa,OAAO,GAAGC,SAAS,CAAC,CAAD,CAAvB;;AACA,MAAIhB,EAAE,CAACE,KAAD,EAAQa,OAAR,CAAN,EAAwB;AACvB,QAAI,CAACA,OAAL,EAAc,OAAOb,KAAP;AACd,QAAI,OAAOa,OAAO,CAACZ,UAAf,KAA8B,UAAlC,EAA8C,OAAOD,KAAP;;AAC9C,QAAI;AAAE,aAAOD,mBAAmB,CAACC,KAAD,EAAQa,OAAO,CAACZ,UAAhB,CAA1B;AAAwD,KAA9D,CACA,OAAOc,KAAP,EAAc,CACb;AACA;AACD;;AACD,SAAOpB,gBAAgB,CAACK,KAAD,EAAQ,mCAAR,EAA6Ca,OAA7C,CAAvB;AACA,CAXD","sourcesContent":["\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\")\n  , isValue          = require(\"../value/is\")\n  , is               = require(\"./is\");\n\nvar resolveCoercedValue = function (value, coerceItem) {\n\tvar coercedValue = [];\n\tvar iterator = value[Symbol.iterator]();\n\tvar item;\n\twhile (!(item = iterator.next()).done) {\n\t\tvar newItemValue = coerceItem(item.value);\n\t\tif (!isValue(newItemValue)) throw new Error(\"Stop propagation\");\n\t\tcoercedValue.push(newItemValue);\n\t}\n\treturn coercedValue;\n};\nmodule.exports = function (value/*, options*/) {\n\tvar options = arguments[1];\n\tif (is(value, options)) {\n\t\tif (!options) return value;\n\t\tif (typeof options.coerceItem !== \"function\") return value;\n\t\ttry { return resolveCoercedValue(value, options.coerceItem); }\n\t\tcatch (error) {\n\t\t\t// Ignore, let validation error propagate\n\t\t}\n\t}\n\treturn resolveException(value, \"%v is not expected iterable value\", options);\n};\n"]},"metadata":{},"sourceType":"script"}