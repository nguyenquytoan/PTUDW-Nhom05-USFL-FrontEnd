{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _pluginTransformTypescript = _interopRequireDefault(require(\"@babel/plugin-transform-typescript\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = (0, _helperPluginUtils.declare)((api, {\n  allExtensions = false,\n  allowDeclareFields,\n  allowNamespaces,\n  jsxPragma,\n  isTSX = false,\n  onlyRemoveTypeImports\n}) => {\n  api.assertVersion(7);\n\n  if (typeof allExtensions !== \"boolean\") {\n    throw new Error(\".allExtensions must be a boolean, or undefined\");\n  }\n\n  if (typeof isTSX !== \"boolean\") {\n    throw new Error(\".isTSX must be a boolean, or undefined\");\n  }\n\n  if (isTSX && !allExtensions) {\n    throw new Error(\"isTSX:true requires allExtensions:true\");\n  }\n\n  const pluginOptions = isTSX => ({\n    allowDeclareFields,\n    allowNamespaces,\n    isTSX,\n    jsxPragma,\n    onlyRemoveTypeImports\n  });\n\n  return {\n    overrides: allExtensions ? [{\n      plugins: [[_pluginTransformTypescript.default, pluginOptions(isTSX)]]\n    }] : [{\n      test: /\\.ts$/,\n      plugins: [[_pluginTransformTypescript.default, pluginOptions(false)]]\n    }, {\n      test: /\\.tsx$/,\n      plugins: [[_pluginTransformTypescript.default, pluginOptions(true)]]\n    }]\n  };\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@babel/preset-typescript/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_pluginTransformTypescript","_interopRequireDefault","obj","__esModule","_default","declare","api","allExtensions","allowDeclareFields","allowNamespaces","jsxPragma","isTSX","onlyRemoveTypeImports","assertVersion","Error","pluginOptions","overrides","plugins","test"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;;AAEA,IAAIC,0BAA0B,GAAGC,sBAAsB,CAACF,OAAO,CAAC,oCAAD,CAAR,CAAvD;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,QAAQ,GAAG,CAAC,GAAGN,kBAAkB,CAACO,OAAvB,EAAgC,CAACC,GAAD,EAAM;AACnDC,EAAAA,aAAa,GAAG,KADmC;AAEnDC,EAAAA,kBAFmD;AAGnDC,EAAAA,eAHmD;AAInDC,EAAAA,SAJmD;AAKnDC,EAAAA,KAAK,GAAG,KAL2C;AAMnDC,EAAAA;AANmD,CAAN,KAOzC;AACJN,EAAAA,GAAG,CAACO,aAAJ,CAAkB,CAAlB;;AAEA,MAAI,OAAON,aAAP,KAAyB,SAA7B,EAAwC;AACtC,UAAM,IAAIO,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,MAAI,OAAOH,KAAP,KAAiB,SAArB,EAAgC;AAC9B,UAAM,IAAIG,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,MAAIH,KAAK,IAAI,CAACJ,aAAd,EAA6B;AAC3B,UAAM,IAAIO,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,QAAMC,aAAa,GAAGJ,KAAK,KAAK;AAC9BH,IAAAA,kBAD8B;AAE9BC,IAAAA,eAF8B;AAG9BE,IAAAA,KAH8B;AAI9BD,IAAAA,SAJ8B;AAK9BE,IAAAA;AAL8B,GAAL,CAA3B;;AAQA,SAAO;AACLI,IAAAA,SAAS,EAAET,aAAa,GAAG,CAAC;AAC1BU,MAAAA,OAAO,EAAE,CAAC,CAACjB,0BAA0B,CAACH,OAA5B,EAAqCkB,aAAa,CAACJ,KAAD,CAAlD,CAAD;AADiB,KAAD,CAAH,GAEnB,CAAC;AACJO,MAAAA,IAAI,EAAE,OADF;AAEJD,MAAAA,OAAO,EAAE,CAAC,CAACjB,0BAA0B,CAACH,OAA5B,EAAqCkB,aAAa,CAAC,KAAD,CAAlD,CAAD;AAFL,KAAD,EAGF;AACDG,MAAAA,IAAI,EAAE,QADL;AAEDD,MAAAA,OAAO,EAAE,CAAC,CAACjB,0BAA0B,CAACH,OAA5B,EAAqCkB,aAAa,CAAC,IAAD,CAAlD,CAAD;AAFR,KAHE;AAHA,GAAP;AAWD,CAzCc,CAAf;;AA2CApB,OAAO,CAACE,OAAR,GAAkBO,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _pluginTransformTypescript = _interopRequireDefault(require(\"@babel/plugin-transform-typescript\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = (0, _helperPluginUtils.declare)((api, {\n  allExtensions = false,\n  allowDeclareFields,\n  allowNamespaces,\n  jsxPragma,\n  isTSX = false,\n  onlyRemoveTypeImports\n}) => {\n  api.assertVersion(7);\n\n  if (typeof allExtensions !== \"boolean\") {\n    throw new Error(\".allExtensions must be a boolean, or undefined\");\n  }\n\n  if (typeof isTSX !== \"boolean\") {\n    throw new Error(\".isTSX must be a boolean, or undefined\");\n  }\n\n  if (isTSX && !allExtensions) {\n    throw new Error(\"isTSX:true requires allExtensions:true\");\n  }\n\n  const pluginOptions = isTSX => ({\n    allowDeclareFields,\n    allowNamespaces,\n    isTSX,\n    jsxPragma,\n    onlyRemoveTypeImports\n  });\n\n  return {\n    overrides: allExtensions ? [{\n      plugins: [[_pluginTransformTypescript.default, pluginOptions(isTSX)]]\n    }] : [{\n      test: /\\.ts$/,\n      plugins: [[_pluginTransformTypescript.default, pluginOptions(false)]]\n    }, {\n      test: /\\.tsx$/,\n      plugins: [[_pluginTransformTypescript.default, pluginOptions(true)]]\n    }]\n  };\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}