{"ast":null,"code":"import pathToRegexp from \"path-to-regexp\";\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n  const generator = pathToRegexp.compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\n\n\nfunction generatePath(path = \"/\", params = {}) {\n  return path === \"/\" ? path : compilePath(path)(params, {\n    pretty: true\n  });\n}\n\nexport default generatePath;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/react-router/modules/generatePath.js"],"names":["pathToRegexp","cache","cacheLimit","cacheCount","compilePath","path","generator","compile","generatePath","params","pretty"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,UAAU,GAAG,KAAnB;AACA,IAAIC,UAAU,GAAG,CAAjB;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIJ,KAAK,CAACI,IAAD,CAAT,EAAiB,OAAOJ,KAAK,CAACI,IAAD,CAAZ;AAEjB,QAAMC,SAAS,GAAGN,YAAY,CAACO,OAAb,CAAqBF,IAArB,CAAlB;;AAEA,MAAIF,UAAU,GAAGD,UAAjB,EAA6B;AAC3BD,IAAAA,KAAK,CAACI,IAAD,CAAL,GAAcC,SAAd;AACAH,IAAAA,UAAU;AACX;;AAED,SAAOG,SAAP;AACD;AAED;;;;;AAGA,SAASE,YAAT,CAAsBH,IAAI,GAAG,GAA7B,EAAkCI,MAAM,GAAG,EAA3C,EAA+C;AAC7C,SAAOJ,IAAI,KAAK,GAAT,GAAeA,IAAf,GAAsBD,WAAW,CAACC,IAAD,CAAX,CAAkBI,MAAlB,EAA0B;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAA1B,CAA7B;AACD;;AAED,eAAeF,YAAf","sourcesContent":["import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n\n  const generator = pathToRegexp.compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\nfunction generatePath(path = \"/\", params = {}) {\n  return path === \"/\" ? path : compilePath(path)(params, { pretty: true });\n}\n\nexport default generatePath;\n"]},"metadata":{},"sourceType":"module"}