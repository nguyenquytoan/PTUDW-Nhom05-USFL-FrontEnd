{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = replaceRuleSelector;\n\nvar _list = require(\"postcss/lib/list\");\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _balancedMatch = require(\"balanced-match\");\n\nvar _balancedMatch2 = _interopRequireDefault(_balancedMatch);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar pseudoClass = \":matches\";\nvar selectorElementRE = /^[a-zA-Z]/;\n\nfunction isElementSelector(selector) {\n  var matches = selectorElementRE.exec(selector); // console.log({selector, matches})\n\n  return matches;\n}\n\nfunction normalizeSelector(selector, preWhitespace, pre) {\n  if (isElementSelector(selector) && !isElementSelector(pre)) {\n    return `${preWhitespace}${selector}${pre}`;\n  }\n\n  return `${preWhitespace}${pre}${selector}`;\n}\n\nfunction explodeSelector(selector, options) {\n  if (selector && selector.indexOf(pseudoClass) > -1) {\n    var newSelectors = [];\n    var preWhitespaceMatches = selector.match(/^\\s+/);\n    var preWhitespace = preWhitespaceMatches ? preWhitespaceMatches[0] : \"\";\n\n    var selectorPart = _list2.default.comma(selector);\n\n    selectorPart.forEach(function (part) {\n      var position = part.indexOf(pseudoClass);\n      var pre = part.slice(0, position);\n      var body = part.slice(position);\n      var matches = (0, _balancedMatch2.default)(\"(\", \")\", body);\n      var bodySelectors = matches && matches.body ? _list2.default.comma(matches.body).reduce(function (acc, s) {\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(explodeSelector(s, options)));\n      }, []) : [body];\n      var postSelectors = matches && matches.post ? explodeSelector(matches.post, options) : [];\n      var newParts = void 0;\n\n      if (postSelectors.length === 0) {\n        // the test below is a poor way to try we are facing a piece of a\n        // selector...\n        if (position === -1 || pre.indexOf(\" \") > -1) {\n          newParts = bodySelectors.map(function (s) {\n            return preWhitespace + pre + s;\n          });\n        } else {\n          newParts = bodySelectors.map(function (s) {\n            return normalizeSelector(s, preWhitespace, pre);\n          });\n        }\n      } else {\n        newParts = [];\n        postSelectors.forEach(function (postS) {\n          bodySelectors.forEach(function (s) {\n            newParts.push(preWhitespace + pre + s + postS);\n          });\n        });\n      }\n\n      newSelectors = [].concat(_toConsumableArray(newSelectors), _toConsumableArray(newParts));\n    });\n    return newSelectors;\n  }\n\n  return [selector];\n}\n\nfunction replaceRuleSelector(rule, options) {\n  var indentation = rule.raws && rule.raws.before ? rule.raws.before.split(\"\\n\").pop() : \"\";\n  return explodeSelector(rule.selector, options).join(\",\" + (options.lineBreak ? \"\\n\" + indentation : \" \"));\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-selector-matches/dist/replaceRuleSelector.js"],"names":["Object","defineProperty","exports","value","default","replaceRuleSelector","_list","require","_list2","_interopRequireDefault","_balancedMatch","_balancedMatch2","obj","__esModule","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","pseudoClass","selectorElementRE","isElementSelector","selector","matches","exec","normalizeSelector","preWhitespace","pre","explodeSelector","options","indexOf","newSelectors","preWhitespaceMatches","match","selectorPart","comma","forEach","part","position","slice","body","bodySelectors","reduce","acc","s","concat","postSelectors","post","newParts","map","postS","push","rule","indentation","raws","before","split","pop","join","lineBreak","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = replaceRuleSelector;\n\nvar _list = require(\"postcss/lib/list\");\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _balancedMatch = require(\"balanced-match\");\n\nvar _balancedMatch2 = _interopRequireDefault(_balancedMatch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar pseudoClass = \":matches\";\nvar selectorElementRE = /^[a-zA-Z]/;\n\nfunction isElementSelector(selector) {\n  var matches = selectorElementRE.exec(selector);\n  // console.log({selector, matches})\n  return matches;\n}\n\nfunction normalizeSelector(selector, preWhitespace, pre) {\n  if (isElementSelector(selector) && !isElementSelector(pre)) {\n    return `${preWhitespace}${selector}${pre}`;\n  }\n\n  return `${preWhitespace}${pre}${selector}`;\n}\n\nfunction explodeSelector(selector, options) {\n  if (selector && selector.indexOf(pseudoClass) > -1) {\n    var newSelectors = [];\n    var preWhitespaceMatches = selector.match(/^\\s+/);\n    var preWhitespace = preWhitespaceMatches ? preWhitespaceMatches[0] : \"\";\n    var selectorPart = _list2.default.comma(selector);\n    selectorPart.forEach(function (part) {\n      var position = part.indexOf(pseudoClass);\n      var pre = part.slice(0, position);\n      var body = part.slice(position);\n      var matches = (0, _balancedMatch2.default)(\"(\", \")\", body);\n\n      var bodySelectors = matches && matches.body ? _list2.default.comma(matches.body).reduce(function (acc, s) {\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(explodeSelector(s, options)));\n      }, []) : [body];\n\n      var postSelectors = matches && matches.post ? explodeSelector(matches.post, options) : [];\n\n      var newParts = void 0;\n      if (postSelectors.length === 0) {\n        // the test below is a poor way to try we are facing a piece of a\n        // selector...\n        if (position === -1 || pre.indexOf(\" \") > -1) {\n          newParts = bodySelectors.map(function (s) {\n            return preWhitespace + pre + s;\n          });\n        } else {\n          newParts = bodySelectors.map(function (s) {\n            return normalizeSelector(s, preWhitespace, pre);\n          });\n        }\n      } else {\n        newParts = [];\n        postSelectors.forEach(function (postS) {\n          bodySelectors.forEach(function (s) {\n            newParts.push(preWhitespace + pre + s + postS);\n          });\n        });\n      }\n      newSelectors = [].concat(_toConsumableArray(newSelectors), _toConsumableArray(newParts));\n    });\n\n    return newSelectors;\n  }\n  return [selector];\n}\n\nfunction replaceRuleSelector(rule, options) {\n  var indentation = rule.raws && rule.raws.before ? rule.raws.before.split(\"\\n\").pop() : \"\";\n  return explodeSelector(rule.selector, options).join(\",\" + (options.lineBreak ? \"\\n\" + indentation : \" \"));\n}\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}