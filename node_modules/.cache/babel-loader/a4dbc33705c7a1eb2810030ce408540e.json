{"ast":null,"code":"// @ts-check\n\n/** @typedef {import(\"webpack/lib/Compilation.js\")} WebpackCompilation */\n'use strict';\n/**\n * @type {{[sortmode: string] : (entryPointNames: Array<string>, compilation, htmlWebpackPluginOptions) => Array<string> }}\n * This file contains different sort methods for the entry chunks names\n */\n\nmodule.exports = {};\n/**\n * Performs identity mapping (no-sort).\n * @param  {Array} chunks the chunks to sort\n * @return {Array} The sorted chunks\n */\n\nmodule.exports.none = chunks => chunks;\n/**\n * Sort manually by the chunks\n * @param  {string[]} entryPointNames the chunks to sort\n * @param  {WebpackCompilation} compilation the webpack compilation\n * @param  htmlWebpackPluginOptions the plugin options\n * @return {string[]} The sorted chunks\n */\n\n\nmodule.exports.manual = (entryPointNames, compilation, htmlWebpackPluginOptions) => {\n  const chunks = htmlWebpackPluginOptions.chunks;\n\n  if (!Array.isArray(chunks)) {\n    return entryPointNames;\n  } // Remove none existing entries from\n  // htmlWebpackPluginOptions.chunks\n\n\n  return chunks.filter(entryPointName => {\n    return compilation.entrypoints.has(entryPointName);\n  });\n};\n/**\n * Defines the default sorter.\n */\n\n\nmodule.exports.auto = module.exports.none;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/html-webpack-plugin/lib/chunksorter.js"],"names":["module","exports","none","chunks","manual","entryPointNames","compilation","htmlWebpackPluginOptions","Array","isArray","filter","entryPointName","entrypoints","has","auto"],"mappings":"AAAA;;AACA;AACA;AAEA;;;;;AAIAA,MAAM,CAACC,OAAP,GAAiB,EAAjB;AAEA;;;;;;AAKAD,MAAM,CAACC,OAAP,CAAeC,IAAf,GAAsBC,MAAM,IAAIA,MAAhC;AAEA;;;;;;;;;AAOAH,MAAM,CAACC,OAAP,CAAeG,MAAf,GAAwB,CAACC,eAAD,EAAkBC,WAAlB,EAA+BC,wBAA/B,KAA4D;AAClF,QAAMJ,MAAM,GAAGI,wBAAwB,CAACJ,MAAxC;;AACA,MAAI,CAACK,KAAK,CAACC,OAAN,CAAcN,MAAd,CAAL,EAA4B;AAC1B,WAAOE,eAAP;AACD,GAJiF,CAKlF;AACA;;;AACA,SAAOF,MAAM,CAACO,MAAP,CAAeC,cAAD,IAAoB;AACvC,WAAOL,WAAW,CAACM,WAAZ,CAAwBC,GAAxB,CAA4BF,cAA5B,CAAP;AACD,GAFM,CAAP;AAGD,CAVD;AAYA;;;;;AAGAX,MAAM,CAACC,OAAP,CAAea,IAAf,GAAsBd,MAAM,CAACC,OAAP,CAAeC,IAArC","sourcesContent":["// @ts-check\n/** @typedef {import(\"webpack/lib/Compilation.js\")} WebpackCompilation */\n'use strict';\n\n/**\n * @type {{[sortmode: string] : (entryPointNames: Array<string>, compilation, htmlWebpackPluginOptions) => Array<string> }}\n * This file contains different sort methods for the entry chunks names\n */\nmodule.exports = {};\n\n/**\n * Performs identity mapping (no-sort).\n * @param  {Array} chunks the chunks to sort\n * @return {Array} The sorted chunks\n */\nmodule.exports.none = chunks => chunks;\n\n/**\n * Sort manually by the chunks\n * @param  {string[]} entryPointNames the chunks to sort\n * @param  {WebpackCompilation} compilation the webpack compilation\n * @param  htmlWebpackPluginOptions the plugin options\n * @return {string[]} The sorted chunks\n */\nmodule.exports.manual = (entryPointNames, compilation, htmlWebpackPluginOptions) => {\n  const chunks = htmlWebpackPluginOptions.chunks;\n  if (!Array.isArray(chunks)) {\n    return entryPointNames;\n  }\n  // Remove none existing entries from\n  // htmlWebpackPluginOptions.chunks\n  return chunks.filter((entryPointName) => {\n    return compilation.entrypoints.has(entryPointName);\n  });\n};\n\n/**\n * Defines the default sorter.\n */\nmodule.exports.auto = module.exports.none;\n"]},"metadata":{},"sourceType":"script"}