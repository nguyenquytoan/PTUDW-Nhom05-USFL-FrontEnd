{"ast":null,"code":"\"use strict\";\n\nvar assert = require(\"chai\").assert,\n    coerceToFinite = require(\"../../finite/coerce\");\n\ndescribe(\"finite/coerce\", function () {\n  it(\"Should return input number\", function () {\n    assert.equal(coerceToFinite(123.123), 123.123);\n  });\n  it(\"Should coerce string\", function () {\n    assert.equal(coerceToFinite(\"12\"), 12);\n  });\n  it(\"Should coerce booleans\", function () {\n    assert.equal(coerceToFinite(true), 1);\n  });\n  it(\"Should coerce number objects\", function () {\n    assert.equal(coerceToFinite(new Number(343)), 343);\n  });\n  it(\"Should coerce objects\", function () {\n    assert.equal(coerceToFinite({\n      valueOf: function () {\n        return 23;\n      }\n    }), 23);\n  });\n  it(\"Should reject infinite number\", function () {\n    assert.equal(coerceToFinite(Infinity), null);\n  });\n  it(\"Should reject NaN\", function () {\n    assert.equal(coerceToFinite(NaN), null);\n  });\n\n  if (typeof Object.create === \"function\") {\n    it(\"Should not coerce objects with no number representation\", function () {\n      assert.equal(coerceToFinite(Object.create(null)), null);\n    });\n  }\n\n  it(\"Should not coerce null\", function () {\n    assert.equal(coerceToFinite(null), null);\n  });\n  it(\"Should not coerce undefined\", function () {\n    assert.equal(coerceToFinite(undefined), null);\n  });\n\n  if (typeof Symbol === \"function\") {\n    it(\"Should not coerce symbols\", function () {\n      assert.equal(coerceToFinite(Symbol(\"foo\")), null);\n    });\n  }\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/type/test/finite/coerce.js"],"names":["assert","require","coerceToFinite","describe","it","equal","Number","valueOf","Infinity","NaN","Object","create","undefined","Symbol"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAWC,OAAO,CAAC,MAAD,CAAP,CAAgBD,MAArC;AAAA,IACIE,cAAc,GAAGD,OAAO,CAAC,qBAAD,CAD5B;;AAGAE,QAAQ,CAAC,eAAD,EAAkB,YAAY;AACrCC,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAY;AAC5CJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC,OAAD,CAA3B,EAAsC,OAAtC;AACA,GAFC,CAAF;AAGAE,EAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC,IAAD,CAA3B,EAAmC,EAAnC;AAAyC,GAAhF,CAAF;AACAE,EAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC,IAAD,CAA3B,EAAmC,CAAnC;AAAwC,GAAjF,CAAF;AACAE,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAY;AAC9CJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC,IAAII,MAAJ,CAAW,GAAX,CAAD,CAA3B,EAA8C,GAA9C;AACA,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAY;AACvCJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC;AAAEK,MAAAA,OAAO,EAAE,YAAY;AAAE,eAAO,EAAP;AAAY;AAArC,KAAD,CAA3B,EAAsE,EAAtE;AACA,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAY;AAC/CJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAACM,QAAD,CAA3B,EAAuC,IAAvC;AACA,GAFC,CAAF;AAGAJ,EAAAA,EAAE,CAAC,mBAAD,EAAsB,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAACO,GAAD,CAA3B,EAAkC,IAAlC;AAA0C,GAA9E,CAAF;;AAEA,MAAI,OAAOC,MAAM,CAACC,MAAd,KAAyB,UAA7B,EAAyC;AACxCP,IAAAA,EAAE,CAAC,yDAAD,EAA4D,YAAY;AACzEJ,MAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAACQ,MAAM,CAACC,MAAP,CAAc,IAAd,CAAD,CAA3B,EAAkD,IAAlD;AACA,KAFC,CAAF;AAGA;;AAEDP,EAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC,IAAD,CAA3B,EAAmC,IAAnC;AAA2C,GAApF,CAAF;AACAE,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAC7CJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAACU,SAAD,CAA3B,EAAwC,IAAxC;AACA,GAFC,CAAF;;AAIA,MAAI,OAAOC,MAAP,KAAkB,UAAtB,EAAkC;AACjCT,IAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAY;AAC3CJ,MAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAACW,MAAM,CAAC,KAAD,CAAP,CAA3B,EAA4C,IAA5C;AACA,KAFC,CAAF;AAGA;AACD,CAlCO,CAAR","sourcesContent":["\"use strict\";\n\nvar assert         = require(\"chai\").assert\n  , coerceToFinite = require(\"../../finite/coerce\");\n\ndescribe(\"finite/coerce\", function () {\n\tit(\"Should return input number\", function () {\n\t\tassert.equal(coerceToFinite(123.123), 123.123);\n\t});\n\tit(\"Should coerce string\", function () { assert.equal(coerceToFinite(\"12\"), 12); });\n\tit(\"Should coerce booleans\", function () { assert.equal(coerceToFinite(true), 1); });\n\tit(\"Should coerce number objects\", function () {\n\t\tassert.equal(coerceToFinite(new Number(343)), 343);\n\t});\n\tit(\"Should coerce objects\", function () {\n\t\tassert.equal(coerceToFinite({ valueOf: function () { return 23; } }), 23);\n\t});\n\n\tit(\"Should reject infinite number\", function () {\n\t\tassert.equal(coerceToFinite(Infinity), null);\n\t});\n\tit(\"Should reject NaN\", function () { assert.equal(coerceToFinite(NaN), null); });\n\n\tif (typeof Object.create === \"function\") {\n\t\tit(\"Should not coerce objects with no number representation\", function () {\n\t\t\tassert.equal(coerceToFinite(Object.create(null)), null);\n\t\t});\n\t}\n\n\tit(\"Should not coerce null\", function () { assert.equal(coerceToFinite(null), null); });\n\tit(\"Should not coerce undefined\", function () {\n\t\tassert.equal(coerceToFinite(undefined), null);\n\t});\n\n\tif (typeof Symbol === \"function\") {\n\t\tit(\"Should not coerce symbols\", function () {\n\t\t\tassert.equal(coerceToFinite(Symbol(\"foo\")), null);\n\t\t});\n\t}\n});\n"]},"metadata":{},"sourceType":"script"}