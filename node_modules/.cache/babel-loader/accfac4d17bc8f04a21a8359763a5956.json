{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = false;\nexports.description = 'removes arbitrary elements by ID or className (disabled by default)';\nexports.params = {\n  id: [],\n  class: []\n};\n/**\n * Remove arbitrary SVG elements by ID or className.\n *\n * @param id\n *   examples:\n *\n *     > single: remove element with ID of `elementID`\n *     ---\n *     removeElementsByAttr:\n *       id: 'elementID'\n *\n *     > list: remove multiple elements by ID\n *     ---\n *     removeElementsByAttr:\n *       id:\n *         - 'elementID'\n *         - 'anotherID'\n *\n * @param class\n *   examples:\n *\n *     > single: remove all elements with class of `elementClass`\n *     ---\n *     removeElementsByAttr:\n *       class: 'elementClass'\n *\n *     > list: remove all elements with class of `elementClass` or `anotherClass`\n *     ---\n *     removeElementsByAttr:\n *       class:\n *         - 'elementClass'\n *         - 'anotherClass'\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Eli Dupuis (@elidupuis)\n */\n\nexports.fn = function (item, params) {\n  var elemId, elemClass; // wrap params in an array if not already\n\n  ['id', 'class'].forEach(function (key) {\n    if (!Array.isArray(params[key])) {\n      params[key] = [params[key]];\n    }\n  }); // abort if current item is no an element\n\n  if (!item.isElem()) {\n    return;\n  } // remove element if it's `id` matches configured `id` params\n\n\n  elemId = item.attr('id');\n\n  if (elemId) {\n    return params.id.indexOf(elemId.value) === -1;\n  } // remove element if it's `class` contains any of the configured `class` params\n\n\n  elemClass = item.attr('class');\n\n  if (elemClass) {\n    var hasClassRegex = new RegExp(params.class.join('|'));\n    return !hasClassRegex.test(elemClass.value);\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/svgo/plugins/removeElementsByAttr.js"],"names":["exports","type","active","description","params","id","class","fn","item","elemId","elemClass","forEach","key","Array","isArray","isElem","attr","indexOf","value","hasClassRegex","RegExp","join","test"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,IAAR,GAAe,SAAf;AAEAD,OAAO,CAACE,MAAR,GAAiB,KAAjB;AAEAF,OAAO,CAACG,WAAR,GAAsB,qEAAtB;AAEAH,OAAO,CAACI,MAAR,GAAiB;AACbC,EAAAA,EAAE,EAAE,EADS;AAEbC,EAAAA,KAAK,EAAE;AAFM,CAAjB;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCAN,OAAO,CAACO,EAAR,GAAa,UAASC,IAAT,EAAeJ,MAAf,EAAuB;AAChC,MAAIK,MAAJ,EAAYC,SAAZ,CADgC,CAGhC;;AACA,GAAC,IAAD,EAAO,OAAP,EAAgBC,OAAhB,CAAwB,UAASC,GAAT,EAAc;AAClC,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcV,MAAM,CAACQ,GAAD,CAApB,CAAL,EAAiC;AAC7BR,MAAAA,MAAM,CAACQ,GAAD,CAAN,GAAc,CAAER,MAAM,CAACQ,GAAD,CAAR,CAAd;AACH;AACJ,GAJD,EAJgC,CAUhC;;AACA,MAAI,CAACJ,IAAI,CAACO,MAAL,EAAL,EAAoB;AAChB;AACH,GAb+B,CAehC;;;AACAN,EAAAA,MAAM,GAAGD,IAAI,CAACQ,IAAL,CAAU,IAAV,CAAT;;AACA,MAAIP,MAAJ,EAAY;AACR,WAAOL,MAAM,CAACC,EAAP,CAAUY,OAAV,CAAkBR,MAAM,CAACS,KAAzB,MAAoC,CAAC,CAA5C;AACH,GAnB+B,CAqBhC;;;AACAR,EAAAA,SAAS,GAAGF,IAAI,CAACQ,IAAL,CAAU,OAAV,CAAZ;;AACA,MAAIN,SAAJ,EAAe;AACX,QAAIS,aAAa,GAAG,IAAIC,MAAJ,CAAWhB,MAAM,CAACE,KAAP,CAAae,IAAb,CAAkB,GAAlB,CAAX,CAApB;AACA,WAAO,CAACF,aAAa,CAACG,IAAd,CAAmBZ,SAAS,CAACQ,KAA7B,CAAR;AACH;AACJ,CA3BD","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = false;\n\nexports.description = 'removes arbitrary elements by ID or className (disabled by default)';\n\nexports.params = {\n    id: [],\n    class: []\n};\n\n/**\n * Remove arbitrary SVG elements by ID or className.\n *\n * @param id\n *   examples:\n *\n *     > single: remove element with ID of `elementID`\n *     ---\n *     removeElementsByAttr:\n *       id: 'elementID'\n *\n *     > list: remove multiple elements by ID\n *     ---\n *     removeElementsByAttr:\n *       id:\n *         - 'elementID'\n *         - 'anotherID'\n *\n * @param class\n *   examples:\n *\n *     > single: remove all elements with class of `elementClass`\n *     ---\n *     removeElementsByAttr:\n *       class: 'elementClass'\n *\n *     > list: remove all elements with class of `elementClass` or `anotherClass`\n *     ---\n *     removeElementsByAttr:\n *       class:\n *         - 'elementClass'\n *         - 'anotherClass'\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Eli Dupuis (@elidupuis)\n */\nexports.fn = function(item, params) {\n    var elemId, elemClass;\n\n    // wrap params in an array if not already\n    ['id', 'class'].forEach(function(key) {\n        if (!Array.isArray(params[key])) {\n            params[key] = [ params[key] ];\n        }\n    });\n\n    // abort if current item is no an element\n    if (!item.isElem()) {\n        return;\n    }\n\n    // remove element if it's `id` matches configured `id` params\n    elemId = item.attr('id');\n    if (elemId) {\n        return params.id.indexOf(elemId.value) === -1;\n    }\n\n    // remove element if it's `class` contains any of the configured `class` params\n    elemClass = item.attr('class');\n    if (elemClass) {\n        var hasClassRegex = new RegExp(params.class.join('|'));\n        return !hasClassRegex.test(elemClass.value);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}