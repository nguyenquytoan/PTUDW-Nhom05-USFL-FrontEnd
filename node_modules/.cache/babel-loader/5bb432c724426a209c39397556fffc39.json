{"ast":null,"code":"/**\n * @fileoverview Rule to flag when using constructor for wrapper objects\n * @author Ilya Volodin\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow `new` operators with the `String`, `Number`, and `Boolean` objects\",\n      category: \"Best Practices\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-new-wrappers\"\n    },\n    schema: []\n  },\n\n  create(context) {\n    return {\n      NewExpression(node) {\n        const wrapperObjects = [\"String\", \"Number\", \"Boolean\", \"Math\", \"JSON\"];\n\n        if (wrapperObjects.indexOf(node.callee.name) > -1) {\n          context.report({\n            node,\n            message: \"Do not use {{fn}} as a constructor.\",\n            data: {\n              fn: node.callee.name\n            }\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/lib/rules/no-new-wrappers.js"],"names":["module","exports","meta","type","docs","description","category","recommended","url","schema","create","context","NewExpression","node","wrapperObjects","indexOf","callee","name","report","message","data","fn"],"mappings":"AAAA;;;;AAKA,a,CAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,6EADX;AAEFC,MAAAA,QAAQ,EAAE,gBAFR;AAGFC,MAAAA,WAAW,EAAE,KAHX;AAIFC,MAAAA,GAAG,EAAE;AAJH,KAHJ;AAUFC,IAAAA,MAAM,EAAE;AAVN,GADO;;AAcbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ,WAAO;AAEHC,MAAAA,aAAa,CAACC,IAAD,EAAO;AAChB,cAAMC,cAAc,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,MAAhC,EAAwC,MAAxC,CAAvB;;AAEA,YAAIA,cAAc,CAACC,OAAf,CAAuBF,IAAI,CAACG,MAAL,CAAYC,IAAnC,IAA2C,CAAC,CAAhD,EAAmD;AAC/CN,UAAAA,OAAO,CAACO,MAAR,CAAe;AAAEL,YAAAA,IAAF;AAAQM,YAAAA,OAAO,EAAE,qCAAjB;AAAwDC,YAAAA,IAAI,EAAE;AAAEC,cAAAA,EAAE,EAAER,IAAI,CAACG,MAAL,CAAYC;AAAlB;AAA9D,WAAf;AACH;AACJ;;AARE,KAAP;AAWH;;AA3BY,CAAjB","sourcesContent":["/**\n * @fileoverview Rule to flag when using constructor for wrapper objects\n * @author Ilya Volodin\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"disallow `new` operators with the `String`, `Number`, and `Boolean` objects\",\n            category: \"Best Practices\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-new-wrappers\"\n        },\n\n        schema: []\n    },\n\n    create(context) {\n\n        return {\n\n            NewExpression(node) {\n                const wrapperObjects = [\"String\", \"Number\", \"Boolean\", \"Math\", \"JSON\"];\n\n                if (wrapperObjects.indexOf(node.callee.name) > -1) {\n                    context.report({ node, message: \"Do not use {{fn}} as a constructor.\", data: { fn: node.callee.name } });\n                }\n            }\n        };\n\n    }\n};\n"]},"metadata":{},"sourceType":"script"}