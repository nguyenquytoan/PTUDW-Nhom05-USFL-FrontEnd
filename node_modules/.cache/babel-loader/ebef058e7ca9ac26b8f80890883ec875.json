{"ast":null,"code":"/**\n * @fileoverview Defines a schema for configs.\n * @author Sylvan Mably\n */\n\"use strict\";\n\nconst baseConfigProperties = {\n  $schema: {\n    type: \"string\"\n  },\n  env: {\n    type: \"object\"\n  },\n  extends: {\n    $ref: \"#/definitions/stringOrStrings\"\n  },\n  globals: {\n    type: \"object\"\n  },\n  overrides: {\n    type: \"array\",\n    items: {\n      $ref: \"#/definitions/overrideConfig\"\n    },\n    additionalItems: false\n  },\n  parser: {\n    type: [\"string\", \"null\"]\n  },\n  parserOptions: {\n    type: \"object\"\n  },\n  plugins: {\n    type: \"array\"\n  },\n  processor: {\n    type: \"string\"\n  },\n  rules: {\n    type: \"object\"\n  },\n  settings: {\n    type: \"object\"\n  },\n  noInlineConfig: {\n    type: \"boolean\"\n  },\n  reportUnusedDisableDirectives: {\n    type: \"boolean\"\n  },\n  ecmaFeatures: {\n    type: \"object\"\n  } // deprecated; logs a warning when used\n\n};\nconst configSchema = {\n  definitions: {\n    stringOrStrings: {\n      oneOf: [{\n        type: \"string\"\n      }, {\n        type: \"array\",\n        items: {\n          type: \"string\"\n        },\n        additionalItems: false\n      }]\n    },\n    stringOrStringsRequired: {\n      oneOf: [{\n        type: \"string\"\n      }, {\n        type: \"array\",\n        items: {\n          type: \"string\"\n        },\n        additionalItems: false,\n        minItems: 1\n      }]\n    },\n    // Config at top-level.\n    objectConfig: {\n      type: \"object\",\n      properties: {\n        root: {\n          type: \"boolean\"\n        },\n        ignorePatterns: {\n          $ref: \"#/definitions/stringOrStrings\"\n        },\n        ...baseConfigProperties\n      },\n      additionalProperties: false\n    },\n    // Config in `overrides`.\n    overrideConfig: {\n      type: \"object\",\n      properties: {\n        excludedFiles: {\n          $ref: \"#/definitions/stringOrStrings\"\n        },\n        files: {\n          $ref: \"#/definitions/stringOrStringsRequired\"\n        },\n        ...baseConfigProperties\n      },\n      required: [\"files\"],\n      additionalProperties: false\n    }\n  },\n  $ref: \"#/definitions/objectConfig\"\n};\nmodule.exports = configSchema;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/conf/config-schema.js"],"names":["baseConfigProperties","$schema","type","env","extends","$ref","globals","overrides","items","additionalItems","parser","parserOptions","plugins","processor","rules","settings","noInlineConfig","reportUnusedDisableDirectives","ecmaFeatures","configSchema","definitions","stringOrStrings","oneOf","stringOrStringsRequired","minItems","objectConfig","properties","root","ignorePatterns","additionalProperties","overrideConfig","excludedFiles","files","required","module","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview Defines a schema for configs.\n * @author Sylvan Mably\n */\n\n\"use strict\";\n\nconst baseConfigProperties = {\n    $schema: { type: \"string\" },\n    env: { type: \"object\" },\n    extends: { $ref: \"#/definitions/stringOrStrings\" },\n    globals: { type: \"object\" },\n    overrides: {\n        type: \"array\",\n        items: { $ref: \"#/definitions/overrideConfig\" },\n        additionalItems: false\n    },\n    parser: { type: [\"string\", \"null\"] },\n    parserOptions: { type: \"object\" },\n    plugins: { type: \"array\" },\n    processor: { type: \"string\" },\n    rules: { type: \"object\" },\n    settings: { type: \"object\" },\n    noInlineConfig: { type: \"boolean\" },\n    reportUnusedDisableDirectives: { type: \"boolean\" },\n\n    ecmaFeatures: { type: \"object\" } // deprecated; logs a warning when used\n};\n\nconst configSchema = {\n    definitions: {\n        stringOrStrings: {\n            oneOf: [\n                { type: \"string\" },\n                {\n                    type: \"array\",\n                    items: { type: \"string\" },\n                    additionalItems: false\n                }\n            ]\n        },\n        stringOrStringsRequired: {\n            oneOf: [\n                { type: \"string\" },\n                {\n                    type: \"array\",\n                    items: { type: \"string\" },\n                    additionalItems: false,\n                    minItems: 1\n                }\n            ]\n        },\n\n        // Config at top-level.\n        objectConfig: {\n            type: \"object\",\n            properties: {\n                root: { type: \"boolean\" },\n                ignorePatterns: { $ref: \"#/definitions/stringOrStrings\" },\n                ...baseConfigProperties\n            },\n            additionalProperties: false\n        },\n\n        // Config in `overrides`.\n        overrideConfig: {\n            type: \"object\",\n            properties: {\n                excludedFiles: { $ref: \"#/definitions/stringOrStrings\" },\n                files: { $ref: \"#/definitions/stringOrStringsRequired\" },\n                ...baseConfigProperties\n            },\n            required: [\"files\"],\n            additionalProperties: false\n        }\n    },\n\n    $ref: \"#/definitions/objectConfig\"\n};\n\nmodule.exports = configSchema;\n"]},"metadata":{},"sourceType":"script"}