{"ast":null,"code":"var Buffer = require('buffer').Buffer;\n\nvar fs = require('fs');\n\nvar test = require('tape');\n\nvar http = require('../..');\n\ntest('timeout', function (t) {\n  var req = http.get({\n    path: '/browserify.png?copies=5',\n    requestTimeout: 10 // ms\n\n  }, function (res) {\n    res.on('data', function (data) {});\n    res.on('end', function () {\n      t.fail('request completed (should have timed out)');\n    });\n  });\n  req.on('requestTimeout', function () {\n    t.pass('got timeout');\n    t.end();\n  });\n}); // TODO: reenable this if there's a way to make it simultaneously\n// fast and reliable\n\ntest.skip('no timeout after success', function (t) {\n  var req = http.get({\n    path: '/basic.txt',\n    requestTimeout: 50000 // ms\n\n  }, function (res) {\n    res.on('data', function (data) {});\n    res.on('end', function () {\n      t.pass('success');\n      global.setTimeout(function () {\n        t.end();\n      }, 50000);\n    });\n  });\n  req.on('requestTimeout', function () {\n    t.fail('unexpected timeout');\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/stream-http/test/browser/timeout.js"],"names":["Buffer","require","fs","test","http","t","req","get","path","requestTimeout","res","on","data","fail","pass","end","skip","global","setTimeout"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,MAA/B;;AACA,IAAIE,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIG,IAAI,GAAGH,OAAO,CAAC,OAAD,CAAlB;;AAEAE,IAAI,CAAC,SAAD,EAAY,UAAUE,CAAV,EAAa;AAC5B,MAAIC,GAAG,GAAGF,IAAI,CAACG,GAAL,CAAS;AAClBC,IAAAA,IAAI,EAAE,0BADY;AAElBC,IAAAA,cAAc,EAAE,EAFE,CAEC;;AAFD,GAAT,EAGP,UAAUC,GAAV,EAAe;AACjBA,IAAAA,GAAG,CAACC,EAAJ,CAAO,MAAP,EAAe,UAAUC,IAAV,EAAgB,CAC9B,CADD;AAEAF,IAAAA,GAAG,CAACC,EAAJ,CAAO,KAAP,EAAc,YAAY;AACzBN,MAAAA,CAAC,CAACQ,IAAF,CAAO,2CAAP;AACA,KAFD;AAGA,GATS,CAAV;AAUAP,EAAAA,GAAG,CAACK,EAAJ,CAAO,gBAAP,EAAyB,YAAY;AACpCN,IAAAA,CAAC,CAACS,IAAF,CAAO,aAAP;AACAT,IAAAA,CAAC,CAACU,GAAF;AACA,GAHD;AAIA,CAfG,CAAJ,C,CAiBA;AACA;;AACAZ,IAAI,CAACa,IAAL,CAAU,0BAAV,EAAsC,UAAUX,CAAV,EAAa;AAClD,MAAIC,GAAG,GAAGF,IAAI,CAACG,GAAL,CAAS;AAClBC,IAAAA,IAAI,EAAE,YADY;AAElBC,IAAAA,cAAc,EAAE,KAFE,CAEI;;AAFJ,GAAT,EAGP,UAAUC,GAAV,EAAe;AACjBA,IAAAA,GAAG,CAACC,EAAJ,CAAO,MAAP,EAAe,UAAUC,IAAV,EAAgB,CAC9B,CADD;AAEAF,IAAAA,GAAG,CAACC,EAAJ,CAAO,KAAP,EAAc,YAAY;AACzBN,MAAAA,CAAC,CAACS,IAAF,CAAO,SAAP;AACAG,MAAAA,MAAM,CAACC,UAAP,CAAkB,YAAY;AAC7Bb,QAAAA,CAAC,CAACU,GAAF;AACA,OAFD,EAEG,KAFH;AAGA,KALD;AAMA,GAZS,CAAV;AAaAT,EAAAA,GAAG,CAACK,EAAJ,CAAO,gBAAP,EAAyB,YAAY;AACpCN,IAAAA,CAAC,CAACQ,IAAF,CAAO,oBAAP;AACA,GAFD;AAGA,CAjBD","sourcesContent":["var Buffer = require('buffer').Buffer\nvar fs = require('fs')\nvar test = require('tape')\n\nvar http = require('../..')\n\ntest('timeout', function (t) {\n\tvar req = http.get({\n\t\tpath: '/browserify.png?copies=5',\n\t\trequestTimeout: 10 // ms\n\t}, function (res) {\n\t\tres.on('data', function (data) {\n\t\t})\n\t\tres.on('end', function () {\n\t\t\tt.fail('request completed (should have timed out)')\n\t\t})\n\t})\n\treq.on('requestTimeout', function () {\n\t\tt.pass('got timeout')\n\t\tt.end()\n\t})\n})\n\n// TODO: reenable this if there's a way to make it simultaneously\n// fast and reliable\ntest.skip('no timeout after success', function (t) {\n\tvar req = http.get({\n\t\tpath: '/basic.txt',\n\t\trequestTimeout: 50000 // ms\n\t}, function (res) {\n\t\tres.on('data', function (data) {\n\t\t})\n\t\tres.on('end', function () {\n\t\t\tt.pass('success')\n\t\t\tglobal.setTimeout(function () {\n\t\t\t\tt.end()\n\t\t\t}, 50000)\n\t\t})\n\t})\n\treq.on('requestTimeout', function () {\n\t\tt.fail('unexpected timeout')\n\t})\n})"]},"metadata":{},"sourceType":"script"}