{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _sourceMap = require(\"source-map\");\n\nvar _webpackSources = require(\"webpack-sources\");\n\nvar _RequestShortener = _interopRequireDefault(require(\"webpack/lib/RequestShortener\"));\n\nvar _webpack = require(\"webpack\");\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nvar _package = _interopRequireDefault(require(\"terser/package.json\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _TaskRunner = _interopRequireDefault(require(\"./TaskRunner\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst warningRegex = /\\[.+:([0-9]+),([0-9]+)\\]/;\n\nclass TerserPlugin {\n  constructor(options = {}) {\n    (0, _schemaUtils.default)(_options.default, options, {\n      name: 'Terser Plugin',\n      baseDataPath: 'options'\n    });\n    const {\n      minify,\n      terserOptions = {},\n      test = /\\.m?js(\\?.*)?$/i,\n      chunkFilter = () => true,\n      warningsFilter = () => true,\n      extractComments = true,\n      sourceMap,\n      cache = true,\n      cacheKeys = defaultCacheKeys => defaultCacheKeys,\n      parallel = true,\n      include,\n      exclude\n    } = options;\n    this.options = {\n      test,\n      chunkFilter,\n      warningsFilter,\n      extractComments,\n      sourceMap,\n      cache,\n      cacheKeys,\n      parallel,\n      include,\n      exclude,\n      minify,\n      terserOptions\n    };\n  }\n\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === 'string');\n  }\n\n  static buildSourceMap(inputSourceMap) {\n    if (!inputSourceMap || !TerserPlugin.isSourceMap(inputSourceMap)) {\n      return null;\n    }\n\n    return new _sourceMap.SourceMapConsumer(inputSourceMap);\n  }\n\n  static buildError(error, file, sourceMap, requestShortener) {\n    // Handling error which should have line, col, filename and message\n    if (error.line) {\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line: error.line,\n        column: error.col\n      });\n\n      if (original && original.source && requestShortener) {\n        return new Error(`${file} from Terser\\n${error.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${error.line},${error.col}]${error.stack ? `\\n${error.stack.split('\\n').slice(1).join('\\n')}` : ''}`);\n      }\n\n      return new Error(`${file} from Terser\\n${error.message} [${file}:${error.line},${error.col}]${error.stack ? `\\n${error.stack.split('\\n').slice(1).join('\\n')}` : ''}`);\n    }\n\n    if (error.stack) {\n      return new Error(`${file} from Terser\\n${error.stack}`);\n    }\n\n    return new Error(`${file} from Terser\\n${error.message}`);\n  }\n\n  static buildWarning(warning, file, sourceMap, requestShortener, warningsFilter) {\n    let warningMessage = warning;\n    let locationMessage = '';\n    let source = null;\n\n    if (sourceMap) {\n      const match = warningRegex.exec(warning);\n\n      if (match) {\n        const line = +match[1];\n        const column = +match[2];\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, '')}`;\n          locationMessage = `[${requestShortener.shorten(original.source)}:${original.line},${original.column}]`;\n        }\n      }\n    } // Todo change order in next major release\n\n\n    if (warningsFilter && !warningsFilter(warning, source, file)) {\n      return null;\n    }\n\n    return `Terser Plugin: ${warningMessage}${locationMessage}`;\n  }\n\n  static removeQueryString(filename) {\n    let targetFilename = filename;\n    const queryStringIdx = targetFilename.indexOf('?');\n\n    if (queryStringIdx >= 0) {\n      targetFilename = targetFilename.substr(0, queryStringIdx);\n    }\n\n    return targetFilename;\n  }\n\n  static hasAsset(commentFilename, assets) {\n    const assetFilenames = Object.keys(assets).map(assetFilename => TerserPlugin.removeQueryString(assetFilename));\n    return assetFilenames.includes(TerserPlugin.removeQueryString(commentFilename));\n  }\n\n  static isWebpack4() {\n    return _webpack.version[0] === '4';\n  }\n\n  *taskGenerator(compiler, compilation, allExtractedComments, file) {\n    let inputSourceMap;\n    const asset = compilation.assets[file];\n\n    try {\n      let input;\n\n      if (this.options.sourceMap && asset.sourceAndMap) {\n        const {\n          source,\n          map\n        } = asset.sourceAndMap();\n        input = source;\n\n        if (TerserPlugin.isSourceMap(map)) {\n          inputSourceMap = map;\n        } else {\n          inputSourceMap = map;\n          compilation.warnings.push(new Error(`${file} contains invalid source map`));\n        }\n      } else {\n        input = asset.source();\n        inputSourceMap = null;\n      } // Handling comment extraction\n\n\n      let commentsFilename = false;\n\n      if (this.options.extractComments) {\n        commentsFilename = this.options.extractComments.filename || '[file].LICENSE.txt[query]';\n\n        if (TerserPlugin.isWebpack4()) {\n          // Todo remove this in next major release\n          if (typeof commentsFilename === 'function') {\n            commentsFilename = commentsFilename.bind(null, file);\n          }\n        }\n\n        let query = '';\n        let filename = file;\n        const querySplit = filename.indexOf('?');\n\n        if (querySplit >= 0) {\n          query = filename.substr(querySplit);\n          filename = filename.substr(0, querySplit);\n        }\n\n        const lastSlashIndex = filename.lastIndexOf('/');\n        const basename = lastSlashIndex === -1 ? filename : filename.substr(lastSlashIndex + 1);\n        const data = {\n          filename,\n          basename,\n          query\n        };\n        commentsFilename = compilation.getPath(commentsFilename, data);\n      }\n\n      if (commentsFilename && TerserPlugin.hasAsset(commentsFilename, compilation.assets)) {\n        // Todo make error and stop uglifing in next major release\n        compilation.warnings.push(new Error(`The comment file \"${TerserPlugin.removeQueryString(commentsFilename)}\" conflicts with an existing asset, this may lead to code corruption, please use a different name`));\n      }\n\n      const callback = taskResult => {\n        let {\n          code\n        } = taskResult;\n        const {\n          error,\n          map,\n          warnings\n        } = taskResult;\n        const {\n          extractedComments\n        } = taskResult;\n        let sourceMap = null;\n\n        if (error || warnings && warnings.length > 0) {\n          sourceMap = TerserPlugin.buildSourceMap(inputSourceMap);\n        } // Handling results\n        // Error case: add errors, and go to next file\n\n\n        if (error) {\n          compilation.errors.push(TerserPlugin.buildError(error, file, sourceMap, new _RequestShortener.default(compiler.context)));\n          return;\n        }\n\n        const hasExtractedComments = commentsFilename && extractedComments && extractedComments.length > 0;\n        const hasBannerForExtractedComments = hasExtractedComments && this.options.extractComments.banner !== false;\n        let outputSource;\n        let shebang;\n\n        if (hasExtractedComments && hasBannerForExtractedComments && code.startsWith('#!')) {\n          const firstNewlinePosition = code.indexOf('\\n');\n          shebang = code.substring(0, firstNewlinePosition);\n          code = code.substring(firstNewlinePosition + 1);\n        }\n\n        if (map) {\n          outputSource = new _webpackSources.SourceMapSource(code, file, map, input, inputSourceMap, true);\n        } else {\n          outputSource = new _webpackSources.RawSource(code);\n        } // Write extracted comments to commentsFilename\n\n\n        if (hasExtractedComments) {\n          if (!allExtractedComments[commentsFilename]) {\n            // eslint-disable-next-line no-param-reassign\n            allExtractedComments[commentsFilename] = [];\n          } // eslint-disable-next-line no-param-reassign\n\n\n          allExtractedComments[commentsFilename] = allExtractedComments[commentsFilename].concat(extractedComments); // Add a banner to the original file\n\n          if (hasBannerForExtractedComments) {\n            let banner = this.options.extractComments.banner || `For license information please see ${_path.default.relative(_path.default.dirname(file), commentsFilename).replace(/\\\\/g, '/')}`;\n\n            if (typeof banner === 'function') {\n              banner = banner(commentsFilename);\n            }\n\n            if (banner) {\n              outputSource = new _webpackSources.ConcatSource(shebang ? `${shebang}\\n` : '', `/*! ${banner} */\\n`, outputSource);\n            }\n          }\n        } // Updating assets\n        // eslint-disable-next-line no-param-reassign\n\n\n        compilation.assets[file] = outputSource; // Handling warnings\n\n        if (warnings && warnings.length > 0) {\n          warnings.forEach(warning => {\n            const builtWarning = TerserPlugin.buildWarning(warning, file, sourceMap, new _RequestShortener.default(compiler.context), this.options.warningsFilter);\n\n            if (builtWarning) {\n              compilation.warnings.push(builtWarning);\n            }\n          });\n        }\n      };\n\n      const task = {\n        asset,\n        file,\n        input,\n        inputSourceMap,\n        commentsFilename,\n        extractComments: this.options.extractComments,\n        terserOptions: this.options.terserOptions,\n        minify: this.options.minify,\n        callback\n      };\n\n      if (TerserPlugin.isWebpack4()) {\n        const {\n          outputOptions: {\n            hashSalt,\n            hashDigest,\n            hashDigestLength,\n            hashFunction\n          }\n        } = compilation;\n\n        const hash = _webpack.util.createHash(hashFunction);\n\n        if (hashSalt) {\n          hash.update(hashSalt);\n        }\n\n        hash.update(input);\n        const digest = hash.digest(hashDigest);\n\n        if (this.options.cache) {\n          const defaultCacheKeys = {\n            terser: _package.default.version,\n            // eslint-disable-next-line global-require\n            'terser-webpack-plugin': require('../package.json').version,\n            'terser-webpack-plugin-options': this.options,\n            nodeVersion: process.version,\n            filename: file,\n            contentHash: digest.substr(0, hashDigestLength)\n          };\n          task.cacheKeys = this.options.cacheKeys(defaultCacheKeys, file);\n        }\n      } else {\n        task.cacheKeys = {\n          terser: _package.default.version,\n          // eslint-disable-next-line global-require\n          'terser-webpack-plugin': require('../package.json').version,\n          'terser-webpack-plugin-options': this.options\n        };\n      }\n\n      yield task;\n    } catch (error) {\n      compilation.errors.push(TerserPlugin.buildError(error, file, TerserPlugin.buildSourceMap(inputSourceMap), new _RequestShortener.default(compiler.context)));\n    }\n  }\n\n  apply(compiler) {\n    const {\n      devtool,\n      output,\n      plugins\n    } = compiler.options;\n    this.options.sourceMap = typeof this.options.sourceMap === 'undefined' ? devtool && !devtool.includes('eval') && !devtool.includes('cheap') && (devtool.includes('source-map') || // Todo remove when `webpack@5` support will be dropped\n    devtool.includes('sourcemap')) || plugins && plugins.some(plugin => plugin instanceof _webpack.SourceMapDevToolPlugin && plugin.options && plugin.options.columns) : Boolean(this.options.sourceMap);\n\n    if (typeof this.options.terserOptions.module === 'undefined' && typeof output.module !== 'undefined') {\n      this.options.terserOptions.module = output.module;\n    }\n\n    if (typeof this.options.terserOptions.ecma === 'undefined' && typeof output.ecmaVersion !== 'undefined') {\n      this.options.terserOptions.ecma = output.ecmaVersion;\n    }\n\n    const optimizeFn = async (compilation, chunks) => {\n      const matchObject = _webpack.ModuleFilenameHelpers.matchObject.bind( // eslint-disable-next-line no-undefined\n      undefined, this.options);\n\n      const files = [].concat(Array.from(compilation.additionalChunkAssets || [])).concat(Array.from(chunks).filter(chunk => this.options.chunkFilter && this.options.chunkFilter(chunk)).reduce((acc, chunk) => acc.concat(Array.from(chunk.files || [])), [])).filter(file => matchObject(file));\n\n      if (files.length === 0) {\n        return Promise.resolve();\n      }\n\n      const CacheEngine = TerserPlugin.isWebpack4() ? // eslint-disable-next-line global-require\n      require('./Webpack4Cache').default : // eslint-disable-next-line global-require\n      require('./Webpack5Cache').default;\n      const allExtractedComments = {};\n      const taskGenerator = this.taskGenerator.bind(this, compiler, compilation, allExtractedComments);\n      const taskRunner = new _TaskRunner.default({\n        taskGenerator,\n        files,\n        cache: new CacheEngine(compiler, compilation, this.options),\n        parallel: this.options.parallel\n      });\n      await taskRunner.run();\n      await taskRunner.exit();\n      Object.keys(allExtractedComments).forEach(commentsFilename => {\n        const extractedComments = new Set([...allExtractedComments[commentsFilename].sort()]); // eslint-disable-next-line no-param-reassign\n\n        compilation.assets[commentsFilename] = new _webpackSources.RawSource(`${Array.from(extractedComments).join('\\n\\n')}\\n`);\n      });\n      return Promise.resolve();\n    };\n\n    const plugin = {\n      name: this.constructor.name\n    };\n    compiler.hooks.compilation.tap(plugin, compilation => {\n      if (this.options.sourceMap) {\n        compilation.hooks.buildModule.tap(plugin, moduleArg => {\n          // to get detailed location info about errors\n          // eslint-disable-next-line no-param-reassign\n          moduleArg.useSourceMap = true;\n        });\n      }\n\n      if (!TerserPlugin.isWebpack4()) {\n        const hooks = _webpack.javascript.JavascriptModulesPlugin.getCompilationHooks(compilation);\n\n        const data = (0, _serializeJavascript.default)({\n          terser: _package.default.version,\n          terserOptions: this.options.terserOptions\n        });\n        hooks.chunkHash.tap(plugin, (chunk, hash) => {\n          hash.update('TerserPlugin');\n          hash.update(data);\n        });\n      } else {\n        // Todo remove after drop `webpack@4` compatibility\n        const {\n          mainTemplate,\n          chunkTemplate\n        } = compilation;\n        const data = (0, _serializeJavascript.default)({\n          terser: _package.default.version,\n          terserOptions: this.options.terserOptions\n        }); // Regenerate `contenthash` for minified assets\n\n        for (const template of [mainTemplate, chunkTemplate]) {\n          template.hooks.hashForChunk.tap(plugin, hash => {\n            hash.update('TerserPlugin');\n            hash.update(data);\n          });\n        }\n      }\n\n      compilation.hooks.optimizeChunkAssets.tapPromise(plugin, optimizeFn.bind(this, compilation));\n    });\n  }\n\n}\n\nvar _default = TerserPlugin;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/terser-webpack-plugin/dist/index.js"],"names":["Object","defineProperty","exports","value","default","_path","_interopRequireDefault","require","_sourceMap","_webpackSources","_RequestShortener","_webpack","_schemaUtils","_serializeJavascript","_package","_options","_TaskRunner","obj","__esModule","warningRegex","TerserPlugin","constructor","options","name","baseDataPath","minify","terserOptions","test","chunkFilter","warningsFilter","extractComments","sourceMap","cache","cacheKeys","defaultCacheKeys","parallel","include","exclude","isSourceMap","input","Boolean","version","sources","Array","isArray","mappings","buildSourceMap","inputSourceMap","SourceMapConsumer","buildError","error","file","requestShortener","line","original","originalPositionFor","column","col","source","Error","message","shorten","stack","split","slice","join","buildWarning","warning","warningMessage","locationMessage","match","exec","replace","removeQueryString","filename","targetFilename","queryStringIdx","indexOf","substr","hasAsset","commentFilename","assets","assetFilenames","keys","map","assetFilename","includes","isWebpack4","taskGenerator","compiler","compilation","allExtractedComments","asset","sourceAndMap","warnings","push","commentsFilename","bind","query","querySplit","lastSlashIndex","lastIndexOf","basename","data","getPath","callback","taskResult","code","extractedComments","length","errors","context","hasExtractedComments","hasBannerForExtractedComments","banner","outputSource","shebang","startsWith","firstNewlinePosition","substring","SourceMapSource","RawSource","concat","relative","dirname","ConcatSource","forEach","builtWarning","task","outputOptions","hashSalt","hashDigest","hashDigestLength","hashFunction","hash","util","createHash","update","digest","terser","nodeVersion","process","contentHash","apply","devtool","output","plugins","some","plugin","SourceMapDevToolPlugin","columns","module","ecma","ecmaVersion","optimizeFn","chunks","matchObject","ModuleFilenameHelpers","undefined","files","from","additionalChunkAssets","filter","chunk","reduce","acc","Promise","resolve","CacheEngine","taskRunner","run","exit","Set","sort","hooks","tap","buildModule","moduleArg","useSourceMap","javascript","JavascriptModulesPlugin","getCompilationHooks","chunkHash","mainTemplate","chunkTemplate","template","hashForChunk","optimizeChunkAssets","tapPromise","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _sourceMap = require(\"source-map\");\n\nvar _webpackSources = require(\"webpack-sources\");\n\nvar _RequestShortener = _interopRequireDefault(require(\"webpack/lib/RequestShortener\"));\n\nvar _webpack = require(\"webpack\");\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nvar _package = _interopRequireDefault(require(\"terser/package.json\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _TaskRunner = _interopRequireDefault(require(\"./TaskRunner\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst warningRegex = /\\[.+:([0-9]+),([0-9]+)\\]/;\n\nclass TerserPlugin {\n  constructor(options = {}) {\n    (0, _schemaUtils.default)(_options.default, options, {\n      name: 'Terser Plugin',\n      baseDataPath: 'options'\n    });\n    const {\n      minify,\n      terserOptions = {},\n      test = /\\.m?js(\\?.*)?$/i,\n      chunkFilter = () => true,\n      warningsFilter = () => true,\n      extractComments = true,\n      sourceMap,\n      cache = true,\n      cacheKeys = defaultCacheKeys => defaultCacheKeys,\n      parallel = true,\n      include,\n      exclude\n    } = options;\n    this.options = {\n      test,\n      chunkFilter,\n      warningsFilter,\n      extractComments,\n      sourceMap,\n      cache,\n      cacheKeys,\n      parallel,\n      include,\n      exclude,\n      minify,\n      terserOptions\n    };\n  }\n\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === 'string');\n  }\n\n  static buildSourceMap(inputSourceMap) {\n    if (!inputSourceMap || !TerserPlugin.isSourceMap(inputSourceMap)) {\n      return null;\n    }\n\n    return new _sourceMap.SourceMapConsumer(inputSourceMap);\n  }\n\n  static buildError(error, file, sourceMap, requestShortener) {\n    // Handling error which should have line, col, filename and message\n    if (error.line) {\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line: error.line,\n        column: error.col\n      });\n\n      if (original && original.source && requestShortener) {\n        return new Error(`${file} from Terser\\n${error.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${error.line},${error.col}]${error.stack ? `\\n${error.stack.split('\\n').slice(1).join('\\n')}` : ''}`);\n      }\n\n      return new Error(`${file} from Terser\\n${error.message} [${file}:${error.line},${error.col}]${error.stack ? `\\n${error.stack.split('\\n').slice(1).join('\\n')}` : ''}`);\n    }\n\n    if (error.stack) {\n      return new Error(`${file} from Terser\\n${error.stack}`);\n    }\n\n    return new Error(`${file} from Terser\\n${error.message}`);\n  }\n\n  static buildWarning(warning, file, sourceMap, requestShortener, warningsFilter) {\n    let warningMessage = warning;\n    let locationMessage = '';\n    let source = null;\n\n    if (sourceMap) {\n      const match = warningRegex.exec(warning);\n\n      if (match) {\n        const line = +match[1];\n        const column = +match[2];\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, '')}`;\n          locationMessage = `[${requestShortener.shorten(original.source)}:${original.line},${original.column}]`;\n        }\n      }\n    } // Todo change order in next major release\n\n\n    if (warningsFilter && !warningsFilter(warning, source, file)) {\n      return null;\n    }\n\n    return `Terser Plugin: ${warningMessage}${locationMessage}`;\n  }\n\n  static removeQueryString(filename) {\n    let targetFilename = filename;\n    const queryStringIdx = targetFilename.indexOf('?');\n\n    if (queryStringIdx >= 0) {\n      targetFilename = targetFilename.substr(0, queryStringIdx);\n    }\n\n    return targetFilename;\n  }\n\n  static hasAsset(commentFilename, assets) {\n    const assetFilenames = Object.keys(assets).map(assetFilename => TerserPlugin.removeQueryString(assetFilename));\n    return assetFilenames.includes(TerserPlugin.removeQueryString(commentFilename));\n  }\n\n  static isWebpack4() {\n    return _webpack.version[0] === '4';\n  }\n\n  *taskGenerator(compiler, compilation, allExtractedComments, file) {\n    let inputSourceMap;\n    const asset = compilation.assets[file];\n\n    try {\n      let input;\n\n      if (this.options.sourceMap && asset.sourceAndMap) {\n        const {\n          source,\n          map\n        } = asset.sourceAndMap();\n        input = source;\n\n        if (TerserPlugin.isSourceMap(map)) {\n          inputSourceMap = map;\n        } else {\n          inputSourceMap = map;\n          compilation.warnings.push(new Error(`${file} contains invalid source map`));\n        }\n      } else {\n        input = asset.source();\n        inputSourceMap = null;\n      } // Handling comment extraction\n\n\n      let commentsFilename = false;\n\n      if (this.options.extractComments) {\n        commentsFilename = this.options.extractComments.filename || '[file].LICENSE.txt[query]';\n\n        if (TerserPlugin.isWebpack4()) {\n          // Todo remove this in next major release\n          if (typeof commentsFilename === 'function') {\n            commentsFilename = commentsFilename.bind(null, file);\n          }\n        }\n\n        let query = '';\n        let filename = file;\n        const querySplit = filename.indexOf('?');\n\n        if (querySplit >= 0) {\n          query = filename.substr(querySplit);\n          filename = filename.substr(0, querySplit);\n        }\n\n        const lastSlashIndex = filename.lastIndexOf('/');\n        const basename = lastSlashIndex === -1 ? filename : filename.substr(lastSlashIndex + 1);\n        const data = {\n          filename,\n          basename,\n          query\n        };\n        commentsFilename = compilation.getPath(commentsFilename, data);\n      }\n\n      if (commentsFilename && TerserPlugin.hasAsset(commentsFilename, compilation.assets)) {\n        // Todo make error and stop uglifing in next major release\n        compilation.warnings.push(new Error(`The comment file \"${TerserPlugin.removeQueryString(commentsFilename)}\" conflicts with an existing asset, this may lead to code corruption, please use a different name`));\n      }\n\n      const callback = taskResult => {\n        let {\n          code\n        } = taskResult;\n        const {\n          error,\n          map,\n          warnings\n        } = taskResult;\n        const {\n          extractedComments\n        } = taskResult;\n        let sourceMap = null;\n\n        if (error || warnings && warnings.length > 0) {\n          sourceMap = TerserPlugin.buildSourceMap(inputSourceMap);\n        } // Handling results\n        // Error case: add errors, and go to next file\n\n\n        if (error) {\n          compilation.errors.push(TerserPlugin.buildError(error, file, sourceMap, new _RequestShortener.default(compiler.context)));\n          return;\n        }\n\n        const hasExtractedComments = commentsFilename && extractedComments && extractedComments.length > 0;\n        const hasBannerForExtractedComments = hasExtractedComments && this.options.extractComments.banner !== false;\n        let outputSource;\n        let shebang;\n\n        if (hasExtractedComments && hasBannerForExtractedComments && code.startsWith('#!')) {\n          const firstNewlinePosition = code.indexOf('\\n');\n          shebang = code.substring(0, firstNewlinePosition);\n          code = code.substring(firstNewlinePosition + 1);\n        }\n\n        if (map) {\n          outputSource = new _webpackSources.SourceMapSource(code, file, map, input, inputSourceMap, true);\n        } else {\n          outputSource = new _webpackSources.RawSource(code);\n        } // Write extracted comments to commentsFilename\n\n\n        if (hasExtractedComments) {\n          if (!allExtractedComments[commentsFilename]) {\n            // eslint-disable-next-line no-param-reassign\n            allExtractedComments[commentsFilename] = [];\n          } // eslint-disable-next-line no-param-reassign\n\n\n          allExtractedComments[commentsFilename] = allExtractedComments[commentsFilename].concat(extractedComments); // Add a banner to the original file\n\n          if (hasBannerForExtractedComments) {\n            let banner = this.options.extractComments.banner || `For license information please see ${_path.default.relative(_path.default.dirname(file), commentsFilename).replace(/\\\\/g, '/')}`;\n\n            if (typeof banner === 'function') {\n              banner = banner(commentsFilename);\n            }\n\n            if (banner) {\n              outputSource = new _webpackSources.ConcatSource(shebang ? `${shebang}\\n` : '', `/*! ${banner} */\\n`, outputSource);\n            }\n          }\n        } // Updating assets\n        // eslint-disable-next-line no-param-reassign\n\n\n        compilation.assets[file] = outputSource; // Handling warnings\n\n        if (warnings && warnings.length > 0) {\n          warnings.forEach(warning => {\n            const builtWarning = TerserPlugin.buildWarning(warning, file, sourceMap, new _RequestShortener.default(compiler.context), this.options.warningsFilter);\n\n            if (builtWarning) {\n              compilation.warnings.push(builtWarning);\n            }\n          });\n        }\n      };\n\n      const task = {\n        asset,\n        file,\n        input,\n        inputSourceMap,\n        commentsFilename,\n        extractComments: this.options.extractComments,\n        terserOptions: this.options.terserOptions,\n        minify: this.options.minify,\n        callback\n      };\n\n      if (TerserPlugin.isWebpack4()) {\n        const {\n          outputOptions: {\n            hashSalt,\n            hashDigest,\n            hashDigestLength,\n            hashFunction\n          }\n        } = compilation;\n\n        const hash = _webpack.util.createHash(hashFunction);\n\n        if (hashSalt) {\n          hash.update(hashSalt);\n        }\n\n        hash.update(input);\n        const digest = hash.digest(hashDigest);\n\n        if (this.options.cache) {\n          const defaultCacheKeys = {\n            terser: _package.default.version,\n            // eslint-disable-next-line global-require\n            'terser-webpack-plugin': require('../package.json').version,\n            'terser-webpack-plugin-options': this.options,\n            nodeVersion: process.version,\n            filename: file,\n            contentHash: digest.substr(0, hashDigestLength)\n          };\n          task.cacheKeys = this.options.cacheKeys(defaultCacheKeys, file);\n        }\n      } else {\n        task.cacheKeys = {\n          terser: _package.default.version,\n          // eslint-disable-next-line global-require\n          'terser-webpack-plugin': require('../package.json').version,\n          'terser-webpack-plugin-options': this.options\n        };\n      }\n\n      yield task;\n    } catch (error) {\n      compilation.errors.push(TerserPlugin.buildError(error, file, TerserPlugin.buildSourceMap(inputSourceMap), new _RequestShortener.default(compiler.context)));\n    }\n  }\n\n  apply(compiler) {\n    const {\n      devtool,\n      output,\n      plugins\n    } = compiler.options;\n    this.options.sourceMap = typeof this.options.sourceMap === 'undefined' ? devtool && !devtool.includes('eval') && !devtool.includes('cheap') && (devtool.includes('source-map') || // Todo remove when `webpack@5` support will be dropped\n    devtool.includes('sourcemap')) || plugins && plugins.some(plugin => plugin instanceof _webpack.SourceMapDevToolPlugin && plugin.options && plugin.options.columns) : Boolean(this.options.sourceMap);\n\n    if (typeof this.options.terserOptions.module === 'undefined' && typeof output.module !== 'undefined') {\n      this.options.terserOptions.module = output.module;\n    }\n\n    if (typeof this.options.terserOptions.ecma === 'undefined' && typeof output.ecmaVersion !== 'undefined') {\n      this.options.terserOptions.ecma = output.ecmaVersion;\n    }\n\n    const optimizeFn = async (compilation, chunks) => {\n      const matchObject = _webpack.ModuleFilenameHelpers.matchObject.bind( // eslint-disable-next-line no-undefined\n      undefined, this.options);\n\n      const files = [].concat(Array.from(compilation.additionalChunkAssets || [])).concat(Array.from(chunks).filter(chunk => this.options.chunkFilter && this.options.chunkFilter(chunk)).reduce((acc, chunk) => acc.concat(Array.from(chunk.files || [])), [])).filter(file => matchObject(file));\n\n      if (files.length === 0) {\n        return Promise.resolve();\n      }\n\n      const CacheEngine = TerserPlugin.isWebpack4() ? // eslint-disable-next-line global-require\n      require('./Webpack4Cache').default : // eslint-disable-next-line global-require\n      require('./Webpack5Cache').default;\n      const allExtractedComments = {};\n      const taskGenerator = this.taskGenerator.bind(this, compiler, compilation, allExtractedComments);\n      const taskRunner = new _TaskRunner.default({\n        taskGenerator,\n        files,\n        cache: new CacheEngine(compiler, compilation, this.options),\n        parallel: this.options.parallel\n      });\n      await taskRunner.run();\n      await taskRunner.exit();\n      Object.keys(allExtractedComments).forEach(commentsFilename => {\n        const extractedComments = new Set([...allExtractedComments[commentsFilename].sort()]); // eslint-disable-next-line no-param-reassign\n\n        compilation.assets[commentsFilename] = new _webpackSources.RawSource(`${Array.from(extractedComments).join('\\n\\n')}\\n`);\n      });\n      return Promise.resolve();\n    };\n\n    const plugin = {\n      name: this.constructor.name\n    };\n    compiler.hooks.compilation.tap(plugin, compilation => {\n      if (this.options.sourceMap) {\n        compilation.hooks.buildModule.tap(plugin, moduleArg => {\n          // to get detailed location info about errors\n          // eslint-disable-next-line no-param-reassign\n          moduleArg.useSourceMap = true;\n        });\n      }\n\n      if (!TerserPlugin.isWebpack4()) {\n        const hooks = _webpack.javascript.JavascriptModulesPlugin.getCompilationHooks(compilation);\n\n        const data = (0, _serializeJavascript.default)({\n          terser: _package.default.version,\n          terserOptions: this.options.terserOptions\n        });\n        hooks.chunkHash.tap(plugin, (chunk, hash) => {\n          hash.update('TerserPlugin');\n          hash.update(data);\n        });\n      } else {\n        // Todo remove after drop `webpack@4` compatibility\n        const {\n          mainTemplate,\n          chunkTemplate\n        } = compilation;\n        const data = (0, _serializeJavascript.default)({\n          terser: _package.default.version,\n          terserOptions: this.options.terserOptions\n        }); // Regenerate `contenthash` for minified assets\n\n        for (const template of [mainTemplate, chunkTemplate]) {\n          template.hooks.hashForChunk.tap(plugin, hash => {\n            hash.update('TerserPlugin');\n            hash.update(data);\n          });\n        }\n      }\n\n      compilation.hooks.optimizeChunkAssets.tapPromise(plugin, optimizeFn.bind(this, compilation));\n    });\n  }\n\n}\n\nvar _default = TerserPlugin;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}