{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.mjs';\nimport '../_version.mjs';\n\nconst getFriendlyURL = url => {\n  const urlObj = new URL(url, location);\n\n  if (urlObj.origin === location.origin) {\n    return urlObj.pathname;\n  }\n\n  return urlObj.href;\n};\n\nexport const messages = {\n  strategyStart: (strategyName, request) => `Using ${strategyName} to ` + `respond to '${getFriendlyURL(request.url)}'`,\n  printFinalResponse: response => {\n    if (response) {\n      logger.groupCollapsed(`View the final response here.`);\n      logger.log(response);\n      logger.groupEnd();\n    }\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-strategies/utils/messages.mjs"],"names":["logger","getFriendlyURL","url","urlObj","URL","location","origin","pathname","href","messages","strategyStart","strategyName","request","printFinalResponse","response","groupCollapsed","log","groupEnd"],"mappings":"AAAA;;;;;;;AAQA,SAAQA,MAAR,QAAqB,kCAArB;AACA,OAAO,iBAAP;;AAEA,MAAMC,cAAc,GAAIC,GAAD,IAAS;AAC9B,QAAMC,MAAM,GAAG,IAAIC,GAAJ,CAAQF,GAAR,EAAaG,QAAb,CAAf;;AACA,MAAIF,MAAM,CAACG,MAAP,KAAkBD,QAAQ,CAACC,MAA/B,EAAuC;AACrC,WAAOH,MAAM,CAACI,QAAd;AACD;;AACD,SAAOJ,MAAM,CAACK,IAAd;AACD,CAND;;AAQA,OAAO,MAAMC,QAAQ,GAAG;AACtBC,EAAAA,aAAa,EAAE,CAACC,YAAD,EAAeC,OAAf,KAA4B,SAAQD,YAAa,MAAtB,GACvC,eAAcV,cAAc,CAACW,OAAO,CAACV,GAAT,CAAc,GAFvB;AAGtBW,EAAAA,kBAAkB,EAAGC,QAAD,IAAc;AAChC,QAAIA,QAAJ,EAAc;AACZd,MAAAA,MAAM,CAACe,cAAP,CAAuB,+BAAvB;AACAf,MAAAA,MAAM,CAACgB,GAAP,CAAWF,QAAX;AACAd,MAAAA,MAAM,CAACiB,QAAP;AACD;AACF;AATqB,CAAjB","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport {logger} from 'workbox-core/_private/logger.mjs';\nimport '../_version.mjs';\n\nconst getFriendlyURL = (url) => {\n  const urlObj = new URL(url, location);\n  if (urlObj.origin === location.origin) {\n    return urlObj.pathname;\n  }\n  return urlObj.href;\n};\n\nexport const messages = {\n  strategyStart: (strategyName, request) => `Using ${strategyName} to ` +\n    `respond to '${getFriendlyURL(request.url)}'`,\n  printFinalResponse: (response) => {\n    if (response) {\n      logger.groupCollapsed(`View the final response here.`);\n      logger.log(response);\n      logger.groupEnd();\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}