{"ast":null,"code":"var dns = require('dns');\n\nvar retry = require('../lib/retry');\n\nfunction faultTolerantResolve(address, cb) {\n  var opts = {\n    retries: 2,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: 2 * 1000,\n    randomize: true\n  };\n  var operation = retry.operation(opts);\n  operation.attempt(function (currentAttempt) {\n    dns.resolve(address, function (err, addresses) {\n      if (operation.retry(err)) {\n        return;\n      }\n\n      cb(operation.mainError(), operation.errors(), addresses);\n    });\n  });\n}\n\nfaultTolerantResolve('nodejs.org', function (err, errors, addresses) {\n  console.warn('err:');\n  console.log(err);\n  console.warn('addresses:');\n  console.log(addresses);\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/retry/example/dns.js"],"names":["dns","require","retry","faultTolerantResolve","address","cb","opts","retries","factor","minTimeout","maxTimeout","randomize","operation","attempt","currentAttempt","resolve","err","addresses","mainError","errors","console","warn","log"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AAEA,SAASE,oBAAT,CAA8BC,OAA9B,EAAuCC,EAAvC,EAA2C;AACzC,MAAIC,IAAI,GAAG;AACTC,IAAAA,OAAO,EAAE,CADA;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,UAAU,EAAE,IAAI,IAHP;AAITC,IAAAA,UAAU,EAAE,IAAI,IAJP;AAKTC,IAAAA,SAAS,EAAE;AALF,GAAX;AAOA,MAAIC,SAAS,GAAGV,KAAK,CAACU,SAAN,CAAgBN,IAAhB,CAAhB;AAEAM,EAAAA,SAAS,CAACC,OAAV,CAAkB,UAASC,cAAT,EAAyB;AACzCd,IAAAA,GAAG,CAACe,OAAJ,CAAYX,OAAZ,EAAqB,UAASY,GAAT,EAAcC,SAAd,EAAyB;AAC5C,UAAIL,SAAS,CAACV,KAAV,CAAgBc,GAAhB,CAAJ,EAA0B;AACxB;AACD;;AAEDX,MAAAA,EAAE,CAACO,SAAS,CAACM,SAAV,EAAD,EAAwBN,SAAS,CAACO,MAAV,EAAxB,EAA4CF,SAA5C,CAAF;AACD,KAND;AAOD,GARD;AASD;;AAEDd,oBAAoB,CAAC,YAAD,EAAe,UAASa,GAAT,EAAcG,MAAd,EAAsBF,SAAtB,EAAiC;AAClEG,EAAAA,OAAO,CAACC,IAAR,CAAa,MAAb;AACAD,EAAAA,OAAO,CAACE,GAAR,CAAYN,GAAZ;AAEAI,EAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACAD,EAAAA,OAAO,CAACE,GAAR,CAAYL,SAAZ;AACD,CANmB,CAApB","sourcesContent":["var dns = require('dns');\nvar retry = require('../lib/retry');\n\nfunction faultTolerantResolve(address, cb) {\n  var opts = {\n    retries: 2,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: 2 * 1000,\n    randomize: true\n  };\n  var operation = retry.operation(opts);\n\n  operation.attempt(function(currentAttempt) {\n    dns.resolve(address, function(err, addresses) {\n      if (operation.retry(err)) {\n        return;\n      }\n\n      cb(operation.mainError(), operation.errors(), addresses);\n    });\n  });\n}\n\nfaultTolerantResolve('nodejs.org', function(err, errors, addresses) {\n  console.warn('err:');\n  console.log(err);\n\n  console.warn('addresses:');\n  console.log(addresses);\n});"]},"metadata":{},"sourceType":"script"}