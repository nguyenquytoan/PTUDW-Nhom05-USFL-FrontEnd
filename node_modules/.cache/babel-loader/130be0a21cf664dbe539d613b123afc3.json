{"ast":null,"code":"// @remove-file-on-eject\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nconst fs = require('fs');\n\nconst chalk = require('react-dev-utils/chalk');\n\nconst paths = require('../../config/paths');\n\nconst modules = require('../../config/modules');\n\nmodule.exports = (resolve, rootDir, isEjecting) => {\n  // Use this instead of `paths.testsSetup` to avoid putting\n  // an absolute filename into configuration after ejecting.\n  const setupTestsMatches = paths.testsSetup.match(/src[/\\\\]setupTests\\.(.+)/);\n  const setupTestsFileExtension = setupTestsMatches && setupTestsMatches[1] || 'js';\n  const setupTestsFile = fs.existsSync(paths.testsSetup) ? `<rootDir>/src/setupTests.${setupTestsFileExtension}` : undefined;\n  const config = {\n    roots: ['<rootDir>/src'],\n    collectCoverageFrom: ['src/**/*.{js,jsx,ts,tsx}', '!src/**/*.d.ts'],\n    setupFiles: [isEjecting ? 'react-app-polyfill/jsdom' : require.resolve('react-app-polyfill/jsdom')],\n    setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : [],\n    testMatch: ['<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}', '<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}'],\n    testEnvironment: 'jest-environment-jsdom-fourteen',\n    transform: {\n      '^.+\\\\.(js|jsx|ts|tsx)$': isEjecting ? '<rootDir>/node_modules/babel-jest' : resolve('config/jest/babelTransform.js'),\n      '^.+\\\\.css$': resolve('config/jest/cssTransform.js'),\n      '^(?!.*\\\\.(js|jsx|ts|tsx|css|json)$)': resolve('config/jest/fileTransform.js')\n    },\n    transformIgnorePatterns: ['[/\\\\\\\\]node_modules[/\\\\\\\\].+\\\\.(js|jsx|ts|tsx)$', '^.+\\\\.module\\\\.(css|sass|scss)$'],\n    modulePaths: modules.additionalModulePaths || [],\n    moduleNameMapper: {\n      '^react-native$': 'react-native-web',\n      '^.+\\\\.module\\\\.(css|sass|scss)$': 'identity-obj-proxy',\n      ...(modules.jestAliases || {})\n    },\n    moduleFileExtensions: [...paths.moduleFileExtensions, 'node'].filter(ext => !ext.includes('mjs')),\n    watchPlugins: ['jest-watch-typeahead/filename', 'jest-watch-typeahead/testname']\n  };\n\n  if (rootDir) {\n    config.rootDir = rootDir;\n  }\n\n  const overrides = Object.assign({}, require(paths.appPackageJson).jest);\n  const supportedKeys = ['clearMocks', 'collectCoverageFrom', 'coveragePathIgnorePatterns', 'coverageReporters', 'coverageThreshold', 'displayName', 'extraGlobals', 'globalSetup', 'globalTeardown', 'moduleNameMapper', 'resetMocks', 'resetModules', 'restoreMocks', 'snapshotSerializers', 'transform', 'transformIgnorePatterns', 'watchPathIgnorePatterns'];\n\n  if (overrides) {\n    supportedKeys.forEach(key => {\n      if (Object.prototype.hasOwnProperty.call(overrides, key)) {\n        if (Array.isArray(config[key]) || typeof config[key] !== 'object') {\n          // for arrays or primitive types, directly override the config key\n          config[key] = overrides[key];\n        } else {\n          // for object types, extend gracefully\n          config[key] = Object.assign({}, config[key], overrides[key]);\n        }\n\n        delete overrides[key];\n      }\n    });\n    const unsupportedKeys = Object.keys(overrides);\n\n    if (unsupportedKeys.length) {\n      const isOverridingSetupFile = unsupportedKeys.indexOf('setupFilesAfterEnv') > -1;\n\n      if (isOverridingSetupFile) {\n        console.error(chalk.red('We detected ' + chalk.bold('setupFilesAfterEnv') + ' in your package.json.\\n\\n' + 'Remove it from Jest configuration, and put the initialization code in ' + chalk.bold('src/setupTests.js') + '.\\nThis file will be loaded automatically.\\n'));\n      } else {\n        console.error(chalk.red('\\nOut of the box, Create React App only supports overriding ' + 'these Jest options:\\n\\n' + supportedKeys.map(key => chalk.bold('  \\u2022 ' + key)).join('\\n') + '.\\n\\n' + 'These options in your package.json Jest configuration ' + 'are not currently supported by Create React App:\\n\\n' + unsupportedKeys.map(key => chalk.bold('  \\u2022 ' + key)).join('\\n') + '\\n\\nIf you wish to override other Jest options, you need to ' + 'eject from the default setup. You can do so by running ' + chalk.bold('npm run eject') + ' but remember that this is a one-way operation. ' + 'You may also file an issue with Create React App to discuss ' + 'supporting more options out of the box.\\n'));\n      }\n\n      process.exit(1);\n    }\n  }\n\n  return config;\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/react-scripts/scripts/utils/createJestConfig.js"],"names":["fs","require","chalk","paths","modules","module","exports","resolve","rootDir","isEjecting","setupTestsMatches","testsSetup","match","setupTestsFileExtension","setupTestsFile","existsSync","undefined","config","roots","collectCoverageFrom","setupFiles","setupFilesAfterEnv","testMatch","testEnvironment","transform","transformIgnorePatterns","modulePaths","additionalModulePaths","moduleNameMapper","jestAliases","moduleFileExtensions","filter","ext","includes","watchPlugins","overrides","Object","assign","appPackageJson","jest","supportedKeys","forEach","key","prototype","hasOwnProperty","call","Array","isArray","unsupportedKeys","keys","length","isOverridingSetupFile","indexOf","console","error","red","bold","map","join","process","exit"],"mappings":"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","sourcesContent":["// @remove-file-on-eject\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nconst fs = require('fs');\nconst chalk = require('react-dev-utils/chalk');\nconst paths = require('../../config/paths');\nconst modules = require('../../config/modules');\n\nmodule.exports = (resolve, rootDir, isEjecting) => {\n  // Use this instead of `paths.testsSetup` to avoid putting\n  // an absolute filename into configuration after ejecting.\n  const setupTestsMatches = paths.testsSetup.match(/src[/\\\\]setupTests\\.(.+)/);\n  const setupTestsFileExtension =\n    (setupTestsMatches && setupTestsMatches[1]) || 'js';\n  const setupTestsFile = fs.existsSync(paths.testsSetup)\n    ? `<rootDir>/src/setupTests.${setupTestsFileExtension}`\n    : undefined;\n\n  const config = {\n    roots: ['<rootDir>/src'],\n\n    collectCoverageFrom: ['src/**/*.{js,jsx,ts,tsx}', '!src/**/*.d.ts'],\n\n    setupFiles: [\n      isEjecting\n        ? 'react-app-polyfill/jsdom'\n        : require.resolve('react-app-polyfill/jsdom'),\n    ],\n\n    setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : [],\n    testMatch: [\n      '<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}',\n      '<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}',\n    ],\n    testEnvironment: 'jest-environment-jsdom-fourteen',\n    transform: {\n      '^.+\\\\.(js|jsx|ts|tsx)$': isEjecting\n        ? '<rootDir>/node_modules/babel-jest'\n        : resolve('config/jest/babelTransform.js'),\n      '^.+\\\\.css$': resolve('config/jest/cssTransform.js'),\n      '^(?!.*\\\\.(js|jsx|ts|tsx|css|json)$)': resolve(\n        'config/jest/fileTransform.js'\n      ),\n    },\n    transformIgnorePatterns: [\n      '[/\\\\\\\\]node_modules[/\\\\\\\\].+\\\\.(js|jsx|ts|tsx)$',\n      '^.+\\\\.module\\\\.(css|sass|scss)$',\n    ],\n    modulePaths: modules.additionalModulePaths || [],\n    moduleNameMapper: {\n      '^react-native$': 'react-native-web',\n      '^.+\\\\.module\\\\.(css|sass|scss)$': 'identity-obj-proxy',\n      ...(modules.jestAliases || {}),\n    },\n    moduleFileExtensions: [...paths.moduleFileExtensions, 'node'].filter(\n      ext => !ext.includes('mjs')\n    ),\n    watchPlugins: [\n      'jest-watch-typeahead/filename',\n      'jest-watch-typeahead/testname',\n    ],\n  };\n  if (rootDir) {\n    config.rootDir = rootDir;\n  }\n  const overrides = Object.assign({}, require(paths.appPackageJson).jest);\n  const supportedKeys = [\n    'clearMocks',\n    'collectCoverageFrom',\n    'coveragePathIgnorePatterns',\n    'coverageReporters',\n    'coverageThreshold',\n    'displayName',\n    'extraGlobals',\n    'globalSetup',\n    'globalTeardown',\n    'moduleNameMapper',\n    'resetMocks',\n    'resetModules',\n    'restoreMocks',\n    'snapshotSerializers',\n    'transform',\n    'transformIgnorePatterns',\n    'watchPathIgnorePatterns',\n  ];\n  if (overrides) {\n    supportedKeys.forEach(key => {\n      if (Object.prototype.hasOwnProperty.call(overrides, key)) {\n        if (Array.isArray(config[key]) || typeof config[key] !== 'object') {\n          // for arrays or primitive types, directly override the config key\n          config[key] = overrides[key];\n        } else {\n          // for object types, extend gracefully\n          config[key] = Object.assign({}, config[key], overrides[key]);\n        }\n\n        delete overrides[key];\n      }\n    });\n    const unsupportedKeys = Object.keys(overrides);\n    if (unsupportedKeys.length) {\n      const isOverridingSetupFile =\n        unsupportedKeys.indexOf('setupFilesAfterEnv') > -1;\n\n      if (isOverridingSetupFile) {\n        console.error(\n          chalk.red(\n            'We detected ' +\n              chalk.bold('setupFilesAfterEnv') +\n              ' in your package.json.\\n\\n' +\n              'Remove it from Jest configuration, and put the initialization code in ' +\n              chalk.bold('src/setupTests.js') +\n              '.\\nThis file will be loaded automatically.\\n'\n          )\n        );\n      } else {\n        console.error(\n          chalk.red(\n            '\\nOut of the box, Create React App only supports overriding ' +\n              'these Jest options:\\n\\n' +\n              supportedKeys\n                .map(key => chalk.bold('  \\u2022 ' + key))\n                .join('\\n') +\n              '.\\n\\n' +\n              'These options in your package.json Jest configuration ' +\n              'are not currently supported by Create React App:\\n\\n' +\n              unsupportedKeys\n                .map(key => chalk.bold('  \\u2022 ' + key))\n                .join('\\n') +\n              '\\n\\nIf you wish to override other Jest options, you need to ' +\n              'eject from the default setup. You can do so by running ' +\n              chalk.bold('npm run eject') +\n              ' but remember that this is a one-way operation. ' +\n              'You may also file an issue with Create React App to discuss ' +\n              'supporting more options out of the box.\\n'\n          )\n        );\n      }\n\n      process.exit(1);\n    }\n  }\n  return config;\n};\n"]},"metadata":{},"sourceType":"script"}