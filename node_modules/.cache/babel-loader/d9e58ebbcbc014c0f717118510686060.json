{"ast":null,"code":"var fs = require('fs');\n\nvar write = require('write');\n\nvar flatted = require('flatted');\n\nmodule.exports = {\n  tryParse: function (filePath, defaultValue) {\n    var result;\n\n    try {\n      result = this.readJSON(filePath);\n    } catch (ex) {\n      result = defaultValue;\n    }\n\n    return result;\n  },\n\n  /**\n   * Read json file synchronously using flatted\n   *\n   * @method readJSON\n   * @param  {String} filePath Json filepath\n   * @returns {*} parse result\n   */\n  readJSON: function (filePath) {\n    return flatted.parse(fs.readFileSync(filePath, {\n      encoding: 'utf8'\n    }));\n  },\n\n  /**\n   * Write json file synchronously using circular-json\n   *\n   * @method writeJSON\n   * @param  {String} filePath Json filepath\n   * @param  {*} data Object to serialize\n   */\n  writeJSON: function (filePath, data) {\n    write.sync(filePath, flatted.stringify(data));\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/flat-cache/utils.js"],"names":["fs","require","write","flatted","module","exports","tryParse","filePath","defaultValue","result","readJSON","ex","parse","readFileSync","encoding","writeJSON","data","sync","stringify"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAE,IAAF,CAAhB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAE,OAAF,CAAnB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAE,SAAF,CAArB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QAAQ,EAAE,UAAWC,QAAX,EAAqBC,YAArB,EAAoC;AAC5C,QAAIC,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAG,KAAKC,QAAL,CAAeH,QAAf,CAAT;AACD,KAFD,CAEE,OAAOI,EAAP,EAAW;AACXF,MAAAA,MAAM,GAAGD,YAAT;AACD;;AACD,WAAOC,MAAP;AACD,GATc;;AAWf;;;;;;;AAOAC,EAAAA,QAAQ,EAAE,UAAWH,QAAX,EAAsB;AAC9B,WAAOJ,OAAO,CAACS,KAAR,CAAeZ,EAAE,CAACa,YAAH,CAAiBN,QAAjB,EAA2B;AAC/CO,MAAAA,QAAQ,EAAE;AADqC,KAA3B,CAAf,CAAP;AAGD,GAtBc;;AAwBf;;;;;;;AAOAC,EAAAA,SAAS,EAAE,UAAWR,QAAX,EAAqBS,IAArB,EAA4B;AACrCd,IAAAA,KAAK,CAACe,IAAN,CAAYV,QAAZ,EAAsBJ,OAAO,CAACe,SAAR,CAAmBF,IAAnB,CAAtB;AACD;AAjCc,CAAjB","sourcesContent":["var fs = require( 'fs' );\nvar write = require( 'write' );\nvar flatted = require( 'flatted' );\n\nmodule.exports = {\n  tryParse: function ( filePath, defaultValue ) {\n    var result;\n    try {\n      result = this.readJSON( filePath );\n    } catch (ex) {\n      result = defaultValue;\n    }\n    return result;\n  },\n\n  /**\n   * Read json file synchronously using flatted\n   *\n   * @method readJSON\n   * @param  {String} filePath Json filepath\n   * @returns {*} parse result\n   */\n  readJSON: function ( filePath ) {\n    return flatted.parse( fs.readFileSync( filePath, {\n      encoding: 'utf8'\n    } ) );\n  },\n\n  /**\n   * Write json file synchronously using circular-json\n   *\n   * @method writeJSON\n   * @param  {String} filePath Json filepath\n   * @param  {*} data Object to serialize\n   */\n  writeJSON: function ( filePath, data ) {\n    write.sync( filePath, flatted.stringify( data ) );\n  }\n};\n"]},"metadata":{},"sourceType":"script"}