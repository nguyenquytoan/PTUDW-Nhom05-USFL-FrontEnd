{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar assert = require('assert');\n\nvar util = require('../../');\n\nsuite('inspect');\ntest('util.inspect - test for sparse array', function () {\n  var a = ['foo', 'bar', 'baz'];\n  assert.equal(util.inspect(a), '[ \\'foo\\', \\'bar\\', \\'baz\\' ]');\n  delete a[1];\n  assert.equal(util.inspect(a), '[ \\'foo\\', , \\'baz\\' ]');\n  assert.equal(util.inspect(a, true), '[ \\'foo\\', , \\'baz\\', [length]: 3 ]');\n  assert.equal(util.inspect(new Array(5)), '[ , , , ,  ]');\n});\ntest('util.inspect -  exceptions should print the error message, not \\'{}\\'', function () {\n  assert.equal(util.inspect(new Error()), '[Error]');\n  assert.equal(util.inspect(new Error('FAIL')), '[Error: FAIL]');\n  assert.equal(util.inspect(new TypeError('FAIL')), '[TypeError: FAIL]');\n  assert.equal(util.inspect(new SyntaxError('FAIL')), '[SyntaxError: FAIL]');\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/util/test/browser/inspect.js"],"names":["assert","require","util","suite","test","a","equal","inspect","Array","Error","TypeError","SyntaxError"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAAlB;;AAEAE,KAAK,CAAC,SAAD,CAAL;AAEAC,IAAI,CAAC,sCAAD,EAAyC,YAAY;AACvD,MAAIC,CAAC,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAR;AACAL,EAAAA,MAAM,CAACM,KAAP,CAAaJ,IAAI,CAACK,OAAL,CAAaF,CAAb,CAAb,EAA8B,+BAA9B;AACA,SAAOA,CAAC,CAAC,CAAD,CAAR;AACAL,EAAAA,MAAM,CAACM,KAAP,CAAaJ,IAAI,CAACK,OAAL,CAAaF,CAAb,CAAb,EAA8B,wBAA9B;AACAL,EAAAA,MAAM,CAACM,KAAP,CAAaJ,IAAI,CAACK,OAAL,CAAaF,CAAb,EAAgB,IAAhB,CAAb,EAAoC,qCAApC;AACAL,EAAAA,MAAM,CAACM,KAAP,CAAaJ,IAAI,CAACK,OAAL,CAAa,IAAIC,KAAJ,CAAU,CAAV,CAAb,CAAb,EAAyC,cAAzC;AACD,CAPG,CAAJ;AASAJ,IAAI,CAAC,uEAAD,EAA0E,YAAY;AACxFJ,EAAAA,MAAM,CAACM,KAAP,CAAaJ,IAAI,CAACK,OAAL,CAAa,IAAIE,KAAJ,EAAb,CAAb,EAAwC,SAAxC;AACAT,EAAAA,MAAM,CAACM,KAAP,CAAaJ,IAAI,CAACK,OAAL,CAAa,IAAIE,KAAJ,CAAU,MAAV,CAAb,CAAb,EAA8C,eAA9C;AACAT,EAAAA,MAAM,CAACM,KAAP,CAAaJ,IAAI,CAACK,OAAL,CAAa,IAAIG,SAAJ,CAAc,MAAd,CAAb,CAAb,EAAkD,mBAAlD;AACAV,EAAAA,MAAM,CAACM,KAAP,CAAaJ,IAAI,CAACK,OAAL,CAAa,IAAII,WAAJ,CAAgB,MAAhB,CAAb,CAAb,EAAoD,qBAApD;AACD,CALG,CAAJ","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar assert = require('assert');\nvar util = require('../../');\n\nsuite('inspect');\n\ntest('util.inspect - test for sparse array', function () {\n  var a = ['foo', 'bar', 'baz'];\n  assert.equal(util.inspect(a), '[ \\'foo\\', \\'bar\\', \\'baz\\' ]');\n  delete a[1];\n  assert.equal(util.inspect(a), '[ \\'foo\\', , \\'baz\\' ]');\n  assert.equal(util.inspect(a, true), '[ \\'foo\\', , \\'baz\\', [length]: 3 ]');\n  assert.equal(util.inspect(new Array(5)), '[ , , , ,  ]');\n});\n\ntest('util.inspect -  exceptions should print the error message, not \\'{}\\'', function () {\n  assert.equal(util.inspect(new Error()), '[Error]');\n  assert.equal(util.inspect(new Error('FAIL')), '[Error: FAIL]');\n  assert.equal(util.inspect(new TypeError('FAIL')), '[TypeError: FAIL]');\n  assert.equal(util.inspect(new SyntaxError('FAIL')), '[SyntaxError: FAIL]');\n});\n"]},"metadata":{},"sourceType":"script"}