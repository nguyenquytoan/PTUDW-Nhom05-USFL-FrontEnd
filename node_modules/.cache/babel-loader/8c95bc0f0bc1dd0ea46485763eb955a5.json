{"ast":null,"code":"var Buffer = require('buffer').Buffer;\n\nvar test = require('tape');\n\nvar http = require('../..');\n\ntest('disable fetch', function (t) {\n  var originalFetch;\n\n  if (typeof fetch === 'function') {\n    originalFetch = fetch;\n  }\n\n  var fetchCalled = false;\n\n  fetch = function (input, options) {\n    fetchCalled = true;\n\n    if (originalFetch) {\n      return originalFetch(input, options);\n    }\n  };\n\n  http.get({\n    path: '/browserify.png',\n    mode: 'disable-fetch'\n  }, function (res) {\n    t.ok(!fetchCalled, 'fetch was not called');\n\n    if (originalFetch) {\n      fetch = originalFetch;\n    }\n\n    res.on('end', function () {\n      t.ok(res.headers['content-type'] === 'image/png', 'content-type was set correctly');\n      t.end();\n    });\n    res.on('data', function () {});\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/stream-http/test/browser/disable-fetch.js"],"names":["Buffer","require","test","http","t","originalFetch","fetch","fetchCalled","input","options","get","path","mode","res","ok","on","headers","end"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,MAA/B;;AACA,IAAIE,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIE,IAAI,GAAGF,OAAO,CAAC,OAAD,CAAlB;;AAEAC,IAAI,CAAC,eAAD,EAAkB,UAAUE,CAAV,EAAa;AAClC,MAAIC,aAAJ;;AACA,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC;AAChCD,IAAAA,aAAa,GAAGC,KAAhB;AACA;;AAED,MAAIC,WAAW,GAAG,KAAlB;;AACAD,EAAAA,KAAK,GAAG,UAAUE,KAAV,EAAiBC,OAAjB,EAA0B;AACjCF,IAAAA,WAAW,GAAG,IAAd;;AACA,QAAIF,aAAJ,EAAmB;AAClB,aAAOA,aAAa,CAACG,KAAD,EAAQC,OAAR,CAApB;AACA;AACD,GALD;;AAOAN,EAAAA,IAAI,CAACO,GAAL,CAAS;AACRC,IAAAA,IAAI,EAAE,iBADE;AAERC,IAAAA,IAAI,EAAE;AAFE,GAAT,EAGG,UAAUC,GAAV,EAAe;AACjBT,IAAAA,CAAC,CAACU,EAAF,CAAK,CAACP,WAAN,EAAmB,sBAAnB;;AAEA,QAAIF,aAAJ,EAAmB;AAClBC,MAAAA,KAAK,GAAGD,aAAR;AACA;;AAEDQ,IAAAA,GAAG,CAACE,EAAJ,CAAO,KAAP,EAAc,YAAY;AACzBX,MAAAA,CAAC,CAACU,EAAF,CAAKD,GAAG,CAACG,OAAJ,CAAY,cAAZ,MAAgC,WAArC,EAAkD,gCAAlD;AACAZ,MAAAA,CAAC,CAACa,GAAF;AACA,KAHD;AAKAJ,IAAAA,GAAG,CAACE,EAAJ,CAAO,MAAP,EAAe,YAAY,CAAE,CAA7B;AACA,GAhBD;AAiBA,CA/BG,CAAJ","sourcesContent":["var Buffer = require('buffer').Buffer\nvar test = require('tape')\n\nvar http = require('../..')\n\ntest('disable fetch', function (t) {\n\tvar originalFetch\n\tif (typeof fetch === 'function') {\n\t\toriginalFetch = fetch\n\t}\n\n\tvar fetchCalled = false\n\tfetch = function (input, options) {\n\t\tfetchCalled = true\n\t\tif (originalFetch) {\n\t\t\treturn originalFetch(input, options)\n\t\t}\n\t}\n\n\thttp.get({\n\t\tpath: '/browserify.png',\n\t\tmode: 'disable-fetch'\n\t}, function (res) {\n\t\tt.ok(!fetchCalled, 'fetch was not called')\n\n\t\tif (originalFetch) {\n\t\t\tfetch = originalFetch\n\t\t}\n\n\t\tres.on('end', function () {\n\t\t\tt.ok(res.headers['content-type'] === 'image/png', 'content-type was set correctly')\n\t\t\tt.end()\n\t\t})\n\n\t\tres.on('data', function () {})\n\t})\n})\n"]},"metadata":{},"sourceType":"script"}