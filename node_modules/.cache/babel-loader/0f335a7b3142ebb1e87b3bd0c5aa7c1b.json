{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\"use strict\"; // test using assert\n\nvar qs = require('../'); // folding block, commented to pass gjslint\n// {{{\n// [ wonkyQS, canonicalQS, obj ]\n\n\nvar qsTestCases = [['foo=918854443121279438895193', 'foo=918854443121279438895193', {\n  'foo': '918854443121279438895193'\n}], ['foo=bar', 'foo=bar', {\n  'foo': 'bar'\n}], ['foo=bar&foo=quux', 'foo=bar&foo=quux', {\n  'foo': ['bar', 'quux']\n}], ['foo=1&bar=2', 'foo=1&bar=2', {\n  'foo': '1',\n  'bar': '2'\n}], ['my+weird+field=q1%212%22%27w%245%267%2Fz8%29%3F', 'my%20weird%20field=q1!2%22\\'w%245%267%2Fz8)%3F', {\n  'my weird field': 'q1!2\"\\'w$5&7/z8)?'\n}], ['foo%3Dbaz=bar', 'foo%3Dbaz=bar', {\n  'foo=baz': 'bar'\n}], ['foo=baz=bar', 'foo=baz%3Dbar', {\n  'foo': 'baz=bar'\n}], ['str=foo&arr=1&arr=2&arr=3&somenull=&undef=', 'str=foo&arr=1&arr=2&arr=3&somenull=&undef=', {\n  'str': 'foo',\n  'arr': ['1', '2', '3'],\n  'somenull': '',\n  'undef': ''\n}], [' foo = bar ', '%20foo%20=%20bar%20', {\n  ' foo ': ' bar '\n}], // disable test that fails ['foo=%zx', 'foo=%25zx', {'foo': '%zx'}],\n['foo=%EF%BF%BD', 'foo=%EF%BF%BD', {\n  'foo': '\\ufffd'\n}], // See: https://github.com/joyent/node/issues/1707\n['hasOwnProperty=x&toString=foo&valueOf=bar&__defineGetter__=baz', 'hasOwnProperty=x&toString=foo&valueOf=bar&__defineGetter__=baz', {\n  hasOwnProperty: 'x',\n  toString: 'foo',\n  valueOf: 'bar',\n  __defineGetter__: 'baz'\n}], // See: https://github.com/joyent/node/issues/3058\n['foo&bar=baz', 'foo=&bar=baz', {\n  foo: '',\n  bar: 'baz'\n}]]; // [ wonkyQS, canonicalQS, obj ]\n\nvar qsColonTestCases = [['foo:bar', 'foo:bar', {\n  'foo': 'bar'\n}], ['foo:bar;foo:quux', 'foo:bar;foo:quux', {\n  'foo': ['bar', 'quux']\n}], ['foo:1&bar:2;baz:quux', 'foo:1%26bar%3A2;baz:quux', {\n  'foo': '1&bar:2',\n  'baz': 'quux'\n}], ['foo%3Abaz:bar', 'foo%3Abaz:bar', {\n  'foo:baz': 'bar'\n}], ['foo:baz:bar', 'foo:baz%3Abar', {\n  'foo': 'baz:bar'\n}]]; // [wonkyObj, qs, canonicalObj]\n\nvar extendedFunction = function () {};\n\nextendedFunction.prototype = {\n  a: 'b'\n};\nvar qsWeirdObjects = [[{\n  regexp: /./g\n}, 'regexp=', {\n  'regexp': ''\n}], [{\n  regexp: new RegExp('.', 'g')\n}, 'regexp=', {\n  'regexp': ''\n}], [{\n  fn: function () {}\n}, 'fn=', {\n  'fn': ''\n}], [{\n  fn: new Function('')\n}, 'fn=', {\n  'fn': ''\n}], [{\n  math: Math\n}, 'math=', {\n  'math': ''\n}], [{\n  e: extendedFunction\n}, 'e=', {\n  'e': ''\n}], [{\n  d: new Date()\n}, 'd=', {\n  'd': ''\n}], [{\n  d: Date\n}, 'd=', {\n  'd': ''\n}], [{\n  f: new Boolean(false),\n  t: new Boolean(true)\n}, 'f=&t=', {\n  'f': '',\n  't': ''\n}], [{\n  f: false,\n  t: true\n}, 'f=false&t=true', {\n  'f': 'false',\n  't': 'true'\n}], [{\n  n: null\n}, 'n=', {\n  'n': ''\n}], [{\n  nan: NaN\n}, 'nan=', {\n  'nan': ''\n}], [{\n  inf: Infinity\n}, 'inf=', {\n  'inf': ''\n}]]; // }}}\n\nvar qsNoMungeTestCases = [['', {}], ['foo=bar&foo=baz', {\n  'foo': ['bar', 'baz']\n}], ['blah=burp', {\n  'blah': 'burp'\n}], ['gragh=1&gragh=3&goo=2', {\n  'gragh': ['1', '3'],\n  'goo': '2'\n}], ['frappucino=muffin&goat%5B%5D=scone&pond=moose', {\n  'frappucino': 'muffin',\n  'goat[]': 'scone',\n  'pond': 'moose'\n}], ['trololol=yes&lololo=no', {\n  'trololol': 'yes',\n  'lololo': 'no'\n}]];\n\nexports['test basic'] = function (assert) {\n  assert.strictEqual('918854443121279438895193', qs.parse('id=918854443121279438895193').id, 'prase id=918854443121279438895193');\n};\n\nexports['test that the canonical qs is parsed properly'] = function (assert) {\n  qsTestCases.forEach(function (testCase) {\n    assert.deepEqual(testCase[2], qs.parse(testCase[0]), 'parse ' + testCase[0]);\n  });\n};\n\nexports['test that the colon test cases can do the same'] = function (assert) {\n  qsColonTestCases.forEach(function (testCase) {\n    assert.deepEqual(testCase[2], qs.parse(testCase[0], ';', ':'), 'parse ' + testCase[0] + ' -> ; :');\n  });\n};\n\nexports['test the weird objects, that they get parsed properly'] = function (assert) {\n  qsWeirdObjects.forEach(function (testCase) {\n    assert.deepEqual(testCase[2], qs.parse(testCase[1]), 'parse ' + testCase[1]);\n  });\n};\n\nexports['test non munge test cases'] = function (assert) {\n  qsNoMungeTestCases.forEach(function (testCase) {\n    assert.deepEqual(testCase[0], qs.stringify(testCase[1], '&', '=', false), 'stringify ' + JSON.stringify(testCase[1]) + ' -> & =');\n  });\n};\n\nexports['test the nested qs-in-qs case'] = function (assert) {\n  var f = qs.parse('a=b&q=x%3Dy%26y%3Dz');\n  f.q = qs.parse(f.q);\n  assert.deepEqual(f, {\n    a: 'b',\n    q: {\n      x: 'y',\n      y: 'z'\n    }\n  }, 'parse a=b&q=x%3Dy%26y%3Dz');\n};\n\nexports['test nested in colon'] = function (assert) {\n  var f = qs.parse('a:b;q:x%3Ay%3By%3Az', ';', ':');\n  f.q = qs.parse(f.q, ';', ':');\n  assert.deepEqual(f, {\n    a: 'b',\n    q: {\n      x: 'y',\n      y: 'z'\n    }\n  }, 'parse a:b;q:x%3Ay%3By%3Az -> ; :');\n};\n\nexports['test stringifying'] = function (assert) {\n  qsTestCases.forEach(function (testCase) {\n    assert.equal(testCase[1], qs.stringify(testCase[2]), 'stringify ' + JSON.stringify(testCase[2]));\n  });\n  qsColonTestCases.forEach(function (testCase) {\n    assert.equal(testCase[1], qs.stringify(testCase[2], ';', ':'), 'stringify ' + JSON.stringify(testCase[2]) + ' -> ; :');\n  });\n  qsWeirdObjects.forEach(function (testCase) {\n    assert.equal(testCase[1], qs.stringify(testCase[0]), 'stringify ' + JSON.stringify(testCase[0]));\n  });\n};\n\nexports['test stringifying nested'] = function (assert) {\n  var f = qs.stringify({\n    a: 'b',\n    q: qs.stringify({\n      x: 'y',\n      y: 'z'\n    })\n  });\n  assert.equal(f, 'a=b&q=x%3Dy%26y%3Dz', JSON.stringify({\n    a: 'b',\n    'qs.stringify -> q': {\n      x: 'y',\n      y: 'z'\n    }\n  }));\n  var threw = false;\n\n  try {\n    qs.parse(undefined);\n  } catch (error) {\n    threw = true;\n  }\n\n  assert.ok(!threw, \"does not throws on undefined\");\n};\n\nexports['test nested in colon'] = function (assert) {\n  var f = qs.stringify({\n    a: 'b',\n    q: qs.stringify({\n      x: 'y',\n      y: 'z'\n    }, ';', ':')\n  }, ';', ':');\n  assert.equal(f, 'a:b;q:x%3Ay%3By%3Az', 'stringify ' + JSON.stringify({\n    a: 'b',\n    'qs.stringify -> q': {\n      x: 'y',\n      y: 'z'\n    }\n  }) + ' -> ; : ');\n  assert.deepEqual({}, qs.parse(), 'parse undefined');\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/querystring/test/index.js"],"names":["qs","require","qsTestCases","hasOwnProperty","toString","valueOf","__defineGetter__","foo","bar","qsColonTestCases","extendedFunction","prototype","a","qsWeirdObjects","regexp","RegExp","fn","Function","math","Math","e","d","Date","f","Boolean","t","n","nan","NaN","inf","Infinity","qsNoMungeTestCases","exports","assert","strictEqual","parse","id","forEach","testCase","deepEqual","stringify","JSON","q","x","y","equal","threw","undefined","error","ok"],"mappings":"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","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\"use strict\";\n\n// test using assert\nvar qs = require('../');\n\n// folding block, commented to pass gjslint\n// {{{\n// [ wonkyQS, canonicalQS, obj ]\nvar qsTestCases = [\n  ['foo=918854443121279438895193',\n   'foo=918854443121279438895193',\n   {'foo': '918854443121279438895193'}],\n  ['foo=bar', 'foo=bar', {'foo': 'bar'}],\n  ['foo=bar&foo=quux', 'foo=bar&foo=quux', {'foo': ['bar', 'quux']}],\n  ['foo=1&bar=2', 'foo=1&bar=2', {'foo': '1', 'bar': '2'}],\n  ['my+weird+field=q1%212%22%27w%245%267%2Fz8%29%3F',\n  'my%20weird%20field=q1!2%22\\'w%245%267%2Fz8)%3F',\n  {'my weird field': 'q1!2\"\\'w$5&7/z8)?' }],\n  ['foo%3Dbaz=bar', 'foo%3Dbaz=bar', {'foo=baz': 'bar'}],\n  ['foo=baz=bar', 'foo=baz%3Dbar', {'foo': 'baz=bar'}],\n  ['str=foo&arr=1&arr=2&arr=3&somenull=&undef=',\n   'str=foo&arr=1&arr=2&arr=3&somenull=&undef=',\n   { 'str': 'foo',\n     'arr': ['1', '2', '3'],\n     'somenull': '',\n     'undef': ''}],\n  [' foo = bar ', '%20foo%20=%20bar%20', {' foo ': ' bar '}],\n  // disable test that fails ['foo=%zx', 'foo=%25zx', {'foo': '%zx'}],\n  ['foo=%EF%BF%BD', 'foo=%EF%BF%BD', {'foo': '\\ufffd' }],\n  // See: https://github.com/joyent/node/issues/1707\n  ['hasOwnProperty=x&toString=foo&valueOf=bar&__defineGetter__=baz',\n    'hasOwnProperty=x&toString=foo&valueOf=bar&__defineGetter__=baz',\n    { hasOwnProperty: 'x',\n      toString: 'foo',\n      valueOf: 'bar',\n      __defineGetter__: 'baz' }],\n  // See: https://github.com/joyent/node/issues/3058\n  ['foo&bar=baz', 'foo=&bar=baz', { foo: '', bar: 'baz' }]\n];\n\n// [ wonkyQS, canonicalQS, obj ]\nvar qsColonTestCases = [\n  ['foo:bar', 'foo:bar', {'foo': 'bar'}],\n  ['foo:bar;foo:quux', 'foo:bar;foo:quux', {'foo': ['bar', 'quux']}],\n  ['foo:1&bar:2;baz:quux',\n   'foo:1%26bar%3A2;baz:quux',\n   {'foo': '1&bar:2', 'baz': 'quux'}],\n  ['foo%3Abaz:bar', 'foo%3Abaz:bar', {'foo:baz': 'bar'}],\n  ['foo:baz:bar', 'foo:baz%3Abar', {'foo': 'baz:bar'}]\n];\n\n// [wonkyObj, qs, canonicalObj]\nvar extendedFunction = function() {};\nextendedFunction.prototype = {a: 'b'};\nvar qsWeirdObjects = [\n  [{regexp: /./g}, 'regexp=', {'regexp': ''}],\n  [{regexp: new RegExp('.', 'g')}, 'regexp=', {'regexp': ''}],\n  [{fn: function() {}}, 'fn=', {'fn': ''}],\n  [{fn: new Function('')}, 'fn=', {'fn': ''}],\n  [{math: Math}, 'math=', {'math': ''}],\n  [{e: extendedFunction}, 'e=', {'e': ''}],\n  [{d: new Date()}, 'd=', {'d': ''}],\n  [{d: Date}, 'd=', {'d': ''}],\n  [{f: new Boolean(false), t: new Boolean(true)}, 'f=&t=', {'f': '', 't': ''}],\n  [{f: false, t: true}, 'f=false&t=true', {'f': 'false', 't': 'true'}],\n  [{n: null}, 'n=', {'n': ''}],\n  [{nan: NaN}, 'nan=', {'nan': ''}],\n  [{inf: Infinity}, 'inf=', {'inf': ''}]\n];\n// }}}\n\nvar qsNoMungeTestCases = [\n  ['', {}],\n  ['foo=bar&foo=baz', {'foo': ['bar', 'baz']}],\n  ['blah=burp', {'blah': 'burp'}],\n  ['gragh=1&gragh=3&goo=2', {'gragh': ['1', '3'], 'goo': '2'}],\n  ['frappucino=muffin&goat%5B%5D=scone&pond=moose',\n   {'frappucino': 'muffin', 'goat[]': 'scone', 'pond': 'moose'}],\n  ['trololol=yes&lololo=no', {'trololol': 'yes', 'lololo': 'no'}]\n];\n\nexports['test basic'] = function(assert) {\n  assert.strictEqual('918854443121279438895193',\n                   qs.parse('id=918854443121279438895193').id,\n                   'prase id=918854443121279438895193');\n};\n\nexports['test that the canonical qs is parsed properly'] = function(assert) {\n  qsTestCases.forEach(function(testCase) {\n    assert.deepEqual(testCase[2], qs.parse(testCase[0]),\n                     'parse ' + testCase[0]);\n  });\n};\n\n\nexports['test that the colon test cases can do the same'] = function(assert) {\n  qsColonTestCases.forEach(function(testCase) {\n    assert.deepEqual(testCase[2], qs.parse(testCase[0], ';', ':'),\n                     'parse ' + testCase[0] + ' -> ; :');\n  });\n};\n\nexports['test the weird objects, that they get parsed properly'] = function(assert) {\n  qsWeirdObjects.forEach(function(testCase) {\n    assert.deepEqual(testCase[2], qs.parse(testCase[1]),\n                     'parse ' + testCase[1]);\n  });\n};\n\nexports['test non munge test cases'] = function(assert) {\n  qsNoMungeTestCases.forEach(function(testCase) {\n    assert.deepEqual(testCase[0], qs.stringify(testCase[1], '&', '=', false),\n                     'stringify ' + JSON.stringify(testCase[1]) + ' -> & =');\n  });\n};\n\nexports['test the nested qs-in-qs case'] = function(assert) {\n  var f = qs.parse('a=b&q=x%3Dy%26y%3Dz');\n  f.q = qs.parse(f.q);\n  assert.deepEqual(f, { a: 'b', q: { x: 'y', y: 'z' } },\n                   'parse a=b&q=x%3Dy%26y%3Dz');\n};\n\nexports['test nested in colon'] = function(assert) {\n  var f = qs.parse('a:b;q:x%3Ay%3By%3Az', ';', ':');\n  f.q = qs.parse(f.q, ';', ':');\n  assert.deepEqual(f, { a: 'b', q: { x: 'y', y: 'z' } },\n                   'parse a:b;q:x%3Ay%3By%3Az -> ; :');\n};\n\nexports['test stringifying'] = function(assert) {\n  qsTestCases.forEach(function(testCase) {\n    assert.equal(testCase[1], qs.stringify(testCase[2]),\n                 'stringify ' + JSON.stringify(testCase[2]));\n  });\n\n  qsColonTestCases.forEach(function(testCase) {\n    assert.equal(testCase[1], qs.stringify(testCase[2], ';', ':'),\n                 'stringify ' + JSON.stringify(testCase[2]) + ' -> ; :');\n  });\n\n  qsWeirdObjects.forEach(function(testCase) {\n    assert.equal(testCase[1], qs.stringify(testCase[0]),\n                 'stringify ' + JSON.stringify(testCase[0]));\n  });\n};\n\nexports['test stringifying nested'] = function(assert) {\n  var f = qs.stringify({\n    a: 'b',\n    q: qs.stringify({\n      x: 'y',\n      y: 'z'\n    })\n  });\n  assert.equal(f, 'a=b&q=x%3Dy%26y%3Dz',\n               JSON.stringify({\n                  a: 'b',\n                  'qs.stringify -> q': {\n                    x: 'y',\n                    y: 'z'\n                  }\n                }));\n\n  var threw = false;\n  try { qs.parse(undefined); } catch(error) { threw = true; }\n  assert.ok(!threw, \"does not throws on undefined\");\n};\n\nexports['test nested in colon'] = function(assert) {\n  var f = qs.stringify({\n    a: 'b',\n    q: qs.stringify({\n      x: 'y',\n      y: 'z'\n    }, ';', ':')\n  }, ';', ':');\n  assert.equal(f, 'a:b;q:x%3Ay%3By%3Az',\n               'stringify ' + JSON.stringify({\n                  a: 'b',\n                  'qs.stringify -> q': {\n                    x: 'y',\n                    y: 'z'\n                  }\n                }) + ' -> ; : ');\n\n\n  assert.deepEqual({}, qs.parse(), 'parse undefined');\n};\n"]},"metadata":{},"sourceType":"script"}