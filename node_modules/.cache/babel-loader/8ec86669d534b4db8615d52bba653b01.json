{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.JSON5 = factory();\n})(this, function () {\n  'use strict';\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var _global = createCommonjsModule(function (module) {\n    // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n    var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self // eslint-disable-next-line no-new-func\n    : Function('return this')();\n\n    if (typeof __g == 'number') {\n      __g = global;\n    } // eslint-disable-line no-undef\n\n  });\n\n  var _core = createCommonjsModule(function (module) {\n    var core = module.exports = {\n      version: '2.6.5'\n    };\n\n    if (typeof __e == 'number') {\n      __e = core;\n    } // eslint-disable-line no-undef\n\n  });\n\n  var _core_1 = _core.version;\n\n  var _isObject = function (it) {\n    return typeof it === 'object' ? it !== null : typeof it === 'function';\n  };\n\n  var _anObject = function (it) {\n    if (!_isObject(it)) {\n      throw TypeError(it + ' is not an object!');\n    }\n\n    return it;\n  };\n\n  var _fails = function (exec) {\n    try {\n      return !!exec();\n    } catch (e) {\n      return true;\n    }\n  }; // Thank's IE8 for his funny defineProperty\n\n\n  var _descriptors = !_fails(function () {\n    return Object.defineProperty({}, 'a', {\n      get: function () {\n        return 7;\n      }\n    }).a != 7;\n  });\n\n  var document = _global.document; // typeof document.createElement is 'object' in old IE\n\n  var is = _isObject(document) && _isObject(document.createElement);\n\n  var _domCreate = function (it) {\n    return is ? document.createElement(it) : {};\n  };\n\n  var _ie8DomDefine = !_descriptors && !_fails(function () {\n    return Object.defineProperty(_domCreate('div'), 'a', {\n      get: function () {\n        return 7;\n      }\n    }).a != 7;\n  }); // 7.1.1 ToPrimitive(input [, PreferredType])\n  // instead of the ES6 spec version, we didn't implement @@toPrimitive case\n  // and the second argument - flag - preferred type is a string\n\n\n  var _toPrimitive = function (it, S) {\n    if (!_isObject(it)) {\n      return it;\n    }\n\n    var fn, val;\n\n    if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) {\n      return val;\n    }\n\n    if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) {\n      return val;\n    }\n\n    if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) {\n      return val;\n    }\n\n    throw TypeError(\"Can't convert object to primitive value\");\n  };\n\n  var dP = Object.defineProperty;\n  var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n    _anObject(O);\n\n    P = _toPrimitive(P, true);\n\n    _anObject(Attributes);\n\n    if (_ie8DomDefine) {\n      try {\n        return dP(O, P, Attributes);\n      } catch (e) {\n        /* empty */\n      }\n    }\n\n    if ('get' in Attributes || 'set' in Attributes) {\n      throw TypeError('Accessors not supported!');\n    }\n\n    if ('value' in Attributes) {\n      O[P] = Attributes.value;\n    }\n\n    return O;\n  };\n  var _objectDp = {\n    f: f\n  };\n\n  var _propertyDesc = function (bitmap, value) {\n    return {\n      enumerable: !(bitmap & 1),\n      configurable: !(bitmap & 2),\n      writable: !(bitmap & 4),\n      value: value\n    };\n  };\n\n  var _hide = _descriptors ? function (object, key, value) {\n    return _objectDp.f(object, key, _propertyDesc(1, value));\n  } : function (object, key, value) {\n    object[key] = value;\n    return object;\n  };\n\n  var hasOwnProperty = {}.hasOwnProperty;\n\n  var _has = function (it, key) {\n    return hasOwnProperty.call(it, key);\n  };\n\n  var id = 0;\n  var px = Math.random();\n\n  var _uid = function (key) {\n    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n  };\n\n  var _library = false;\n\n  var _shared = createCommonjsModule(function (module) {\n    var SHARED = '__core-js_shared__';\n    var store = _global[SHARED] || (_global[SHARED] = {});\n    (module.exports = function (key, value) {\n      return store[key] || (store[key] = value !== undefined ? value : {});\n    })('versions', []).push({\n      version: _core.version,\n      mode: _library ? 'pure' : 'global',\n      copyright: 'Â© 2019 Denis Pushkarev (zloirock.ru)'\n    });\n  });\n\n  var _functionToString = _shared('native-function-to-string', Function.toString);\n\n  var _redefine = createCommonjsModule(function (module) {\n    var SRC = _uid('src');\n\n    var TO_STRING = 'toString';\n\n    var TPL = ('' + _functionToString).split(TO_STRING);\n\n    _core.inspectSource = function (it) {\n      return _functionToString.call(it);\n    };\n\n    (module.exports = function (O, key, val, safe) {\n      var isFunction = typeof val == 'function';\n\n      if (isFunction) {\n        _has(val, 'name') || _hide(val, 'name', key);\n      }\n\n      if (O[key] === val) {\n        return;\n      }\n\n      if (isFunction) {\n        _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n      }\n\n      if (O === _global) {\n        O[key] = val;\n      } else if (!safe) {\n        delete O[key];\n\n        _hide(O, key, val);\n      } else if (O[key]) {\n        O[key] = val;\n      } else {\n        _hide(O, key, val);\n      } // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\n    })(Function.prototype, TO_STRING, function toString() {\n      return typeof this == 'function' && this[SRC] || _functionToString.call(this);\n    });\n  });\n\n  var _aFunction = function (it) {\n    if (typeof it != 'function') {\n      throw TypeError(it + ' is not a function!');\n    }\n\n    return it;\n  }; // optional / simple context binding\n\n\n  var _ctx = function (fn, that, length) {\n    _aFunction(fn);\n\n    if (that === undefined) {\n      return fn;\n    }\n\n    switch (length) {\n      case 1:\n        return function (a) {\n          return fn.call(that, a);\n        };\n\n      case 2:\n        return function (a, b) {\n          return fn.call(that, a, b);\n        };\n\n      case 3:\n        return function (a, b, c) {\n          return fn.call(that, a, b, c);\n        };\n    }\n\n    return function ()\n    /* ...args */\n    {\n      return fn.apply(that, arguments);\n    };\n  };\n\n  var PROTOTYPE = 'prototype';\n\n  var $export = function (type, name, source) {\n    var IS_FORCED = type & $export.F;\n    var IS_GLOBAL = type & $export.G;\n    var IS_STATIC = type & $export.S;\n    var IS_PROTO = type & $export.P;\n    var IS_BIND = type & $export.B;\n    var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n    var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n    var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n    var key, own, out, exp;\n\n    if (IS_GLOBAL) {\n      source = name;\n    }\n\n    for (key in source) {\n      // contains in native\n      own = !IS_FORCED && target && target[key] !== undefined; // export native or passed\n\n      out = (own ? target : source)[key]; // bind timers to global for call from export context\n\n      exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out; // extend global\n\n      if (target) {\n        _redefine(target, key, out, type & $export.U);\n      } // export\n\n\n      if (exports[key] != out) {\n        _hide(exports, key, exp);\n      }\n\n      if (IS_PROTO && expProto[key] != out) {\n        expProto[key] = out;\n      }\n    }\n  };\n\n  _global.core = _core; // type bitmap\n\n  $export.F = 1; // forced\n\n  $export.G = 2; // global\n\n  $export.S = 4; // static\n\n  $export.P = 8; // proto\n\n  $export.B = 16; // bind\n\n  $export.W = 32; // wrap\n\n  $export.U = 64; // safe\n\n  $export.R = 128; // real proto method for `library`\n\n  var _export = $export; // 7.1.4 ToInteger\n\n  var ceil = Math.ceil;\n  var floor = Math.floor;\n\n  var _toInteger = function (it) {\n    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n  }; // 7.2.1 RequireObjectCoercible(argument)\n\n\n  var _defined = function (it) {\n    if (it == undefined) {\n      throw TypeError(\"Can't call method on  \" + it);\n    }\n\n    return it;\n  }; // true  -> String#at\n  // false -> String#codePointAt\n\n\n  var _stringAt = function (TO_STRING) {\n    return function (that, pos) {\n      var s = String(_defined(that));\n\n      var i = _toInteger(pos);\n\n      var l = s.length;\n      var a, b;\n\n      if (i < 0 || i >= l) {\n        return TO_STRING ? '' : undefined;\n      }\n\n      a = s.charCodeAt(i);\n      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n    };\n  };\n\n  var $at = _stringAt(false);\n\n  _export(_export.P, 'String', {\n    // 21.1.3.3 String.prototype.codePointAt(pos)\n    codePointAt: function codePointAt(pos) {\n      return $at(this, pos);\n    }\n  });\n\n  var codePointAt = _core.String.codePointAt;\n  var max = Math.max;\n  var min = Math.min;\n\n  var _toAbsoluteIndex = function (index, length) {\n    index = _toInteger(index);\n    return index < 0 ? max(index + length, 0) : min(index, length);\n  };\n\n  var fromCharCode = String.fromCharCode;\n  var $fromCodePoint = String.fromCodePoint; // length should be 1, old FF problem\n\n  _export(_export.S + _export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n    // 21.1.2.2 String.fromCodePoint(...codePoints)\n    fromCodePoint: function fromCodePoint(x) {\n      var arguments$1 = arguments; // eslint-disable-line no-unused-vars\n\n      var res = [];\n      var aLen = arguments.length;\n      var i = 0;\n      var code;\n\n      while (aLen > i) {\n        code = +arguments$1[i++];\n\n        if (_toAbsoluteIndex(code, 0x10ffff) !== code) {\n          throw RangeError(code + ' is not a valid code point');\n        }\n\n        res.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00));\n      }\n\n      return res.join('');\n    }\n  });\n\n  var fromCodePoint = _core.String.fromCodePoint; // This is a generated file. Do not edit.\n\n  var Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\n  var ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\n  var ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n  var unicode = {\n    Space_Separator: Space_Separator,\n    ID_Start: ID_Start,\n    ID_Continue: ID_Continue\n  };\n  var util = {\n    isSpaceSeparator: function isSpaceSeparator(c) {\n      return typeof c === 'string' && unicode.Space_Separator.test(c);\n    },\n    isIdStartChar: function isIdStartChar(c) {\n      return typeof c === 'string' && (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c === '$' || c === '_' || unicode.ID_Start.test(c));\n    },\n    isIdContinueChar: function isIdContinueChar(c) {\n      return typeof c === 'string' && (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c >= '0' && c <= '9' || c === '$' || c === '_' || c === '\\u200C' || c === '\\u200D' || unicode.ID_Continue.test(c));\n    },\n    isDigit: function isDigit(c) {\n      return typeof c === 'string' && /[0-9]/.test(c);\n    },\n    isHexDigit: function isHexDigit(c) {\n      return typeof c === 'string' && /[0-9A-Fa-f]/.test(c);\n    }\n  };\n  var source;\n  var parseState;\n  var stack;\n  var pos;\n  var line;\n  var column;\n  var token;\n  var key;\n  var root;\n\n  var parse = function parse(text, reviver) {\n    source = String(text);\n    parseState = 'start';\n    stack = [];\n    pos = 0;\n    line = 1;\n    column = 0;\n    token = undefined;\n    key = undefined;\n    root = undefined;\n\n    do {\n      token = lex(); // This code is unreachable.\n      // if (!parseStates[parseState]) {\n      //     throw invalidParseState()\n      // }\n\n      parseStates[parseState]();\n    } while (token.type !== 'eof');\n\n    if (typeof reviver === 'function') {\n      return internalize({\n        '': root\n      }, '', reviver);\n    }\n\n    return root;\n  };\n\n  function internalize(holder, name, reviver) {\n    var value = holder[name];\n\n    if (value != null && typeof value === 'object') {\n      for (var key in value) {\n        var replacement = internalize(value, key, reviver);\n\n        if (replacement === undefined) {\n          delete value[key];\n        } else {\n          value[key] = replacement;\n        }\n      }\n    }\n\n    return reviver.call(holder, name, value);\n  }\n\n  var lexState;\n  var buffer;\n  var doubleQuote;\n  var sign;\n  var c;\n\n  function lex() {\n    lexState = 'default';\n    buffer = '';\n    doubleQuote = false;\n    sign = 1;\n\n    for (;;) {\n      c = peek(); // This code is unreachable.\n      // if (!lexStates[lexState]) {\n      //     throw invalidLexState(lexState)\n      // }\n\n      var token = lexStates[lexState]();\n\n      if (token) {\n        return token;\n      }\n    }\n  }\n\n  function peek() {\n    if (source[pos]) {\n      return String.fromCodePoint(source.codePointAt(pos));\n    }\n  }\n\n  function read() {\n    var c = peek();\n\n    if (c === '\\n') {\n      line++;\n      column = 0;\n    } else if (c) {\n      column += c.length;\n    } else {\n      column++;\n    }\n\n    if (c) {\n      pos += c.length;\n    }\n\n    return c;\n  }\n\n  var lexStates = {\n    default: function default$1() {\n      switch (c) {\n        case '\\t':\n        case '\\v':\n        case '\\f':\n        case ' ':\n        case '\\u00A0':\n        case '\\uFEFF':\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n          read();\n          return;\n\n        case '/':\n          read();\n          lexState = 'comment';\n          return;\n\n        case undefined:\n          read();\n          return newToken('eof');\n      }\n\n      if (util.isSpaceSeparator(c)) {\n        read();\n        return;\n      } // This code is unreachable.\n      // if (!lexStates[parseState]) {\n      //     throw invalidLexState(parseState)\n      // }\n\n\n      return lexStates[parseState]();\n    },\n    comment: function comment() {\n      switch (c) {\n        case '*':\n          read();\n          lexState = 'multiLineComment';\n          return;\n\n        case '/':\n          read();\n          lexState = 'singleLineComment';\n          return;\n      }\n\n      throw invalidChar(read());\n    },\n    multiLineComment: function multiLineComment() {\n      switch (c) {\n        case '*':\n          read();\n          lexState = 'multiLineCommentAsterisk';\n          return;\n\n        case undefined:\n          throw invalidChar(read());\n      }\n\n      read();\n    },\n    multiLineCommentAsterisk: function multiLineCommentAsterisk() {\n      switch (c) {\n        case '*':\n          read();\n          return;\n\n        case '/':\n          read();\n          lexState = 'default';\n          return;\n\n        case undefined:\n          throw invalidChar(read());\n      }\n\n      read();\n      lexState = 'multiLineComment';\n    },\n    singleLineComment: function singleLineComment() {\n      switch (c) {\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n          read();\n          lexState = 'default';\n          return;\n\n        case undefined:\n          read();\n          return newToken('eof');\n      }\n\n      read();\n    },\n    value: function value() {\n      switch (c) {\n        case '{':\n        case '[':\n          return newToken('punctuator', read());\n\n        case 'n':\n          read();\n          literal('ull');\n          return newToken('null', null);\n\n        case 't':\n          read();\n          literal('rue');\n          return newToken('boolean', true);\n\n        case 'f':\n          read();\n          literal('alse');\n          return newToken('boolean', false);\n\n        case '-':\n        case '+':\n          if (read() === '-') {\n            sign = -1;\n          }\n\n          lexState = 'sign';\n          return;\n\n        case '.':\n          buffer = read();\n          lexState = 'decimalPointLeading';\n          return;\n\n        case '0':\n          buffer = read();\n          lexState = 'zero';\n          return;\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n          buffer = read();\n          lexState = 'decimalInteger';\n          return;\n\n        case 'I':\n          read();\n          literal('nfinity');\n          return newToken('numeric', Infinity);\n\n        case 'N':\n          read();\n          literal('aN');\n          return newToken('numeric', NaN);\n\n        case '\"':\n        case \"'\":\n          doubleQuote = read() === '\"';\n          buffer = '';\n          lexState = 'string';\n          return;\n      }\n\n      throw invalidChar(read());\n    },\n    identifierNameStartEscape: function identifierNameStartEscape() {\n      if (c !== 'u') {\n        throw invalidChar(read());\n      }\n\n      read();\n      var u = unicodeEscape();\n\n      switch (u) {\n        case '$':\n        case '_':\n          break;\n\n        default:\n          if (!util.isIdStartChar(u)) {\n            throw invalidIdentifier();\n          }\n\n          break;\n      }\n\n      buffer += u;\n      lexState = 'identifierName';\n    },\n    identifierName: function identifierName() {\n      switch (c) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n          buffer += read();\n          return;\n\n        case '\\\\':\n          read();\n          lexState = 'identifierNameEscape';\n          return;\n      }\n\n      if (util.isIdContinueChar(c)) {\n        buffer += read();\n        return;\n      }\n\n      return newToken('identifier', buffer);\n    },\n    identifierNameEscape: function identifierNameEscape() {\n      if (c !== 'u') {\n        throw invalidChar(read());\n      }\n\n      read();\n      var u = unicodeEscape();\n\n      switch (u) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n          break;\n\n        default:\n          if (!util.isIdContinueChar(u)) {\n            throw invalidIdentifier();\n          }\n\n          break;\n      }\n\n      buffer += u;\n      lexState = 'identifierName';\n    },\n    sign: function sign$1() {\n      switch (c) {\n        case '.':\n          buffer = read();\n          lexState = 'decimalPointLeading';\n          return;\n\n        case '0':\n          buffer = read();\n          lexState = 'zero';\n          return;\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n          buffer = read();\n          lexState = 'decimalInteger';\n          return;\n\n        case 'I':\n          read();\n          literal('nfinity');\n          return newToken('numeric', sign * Infinity);\n\n        case 'N':\n          read();\n          literal('aN');\n          return newToken('numeric', NaN);\n      }\n\n      throw invalidChar(read());\n    },\n    zero: function zero() {\n      switch (c) {\n        case '.':\n          buffer += read();\n          lexState = 'decimalPoint';\n          return;\n\n        case 'e':\n        case 'E':\n          buffer += read();\n          lexState = 'decimalExponent';\n          return;\n\n        case 'x':\n        case 'X':\n          buffer += read();\n          lexState = 'hexadecimal';\n          return;\n      }\n\n      return newToken('numeric', sign * 0);\n    },\n    decimalInteger: function decimalInteger() {\n      switch (c) {\n        case '.':\n          buffer += read();\n          lexState = 'decimalPoint';\n          return;\n\n        case 'e':\n        case 'E':\n          buffer += read();\n          lexState = 'decimalExponent';\n          return;\n      }\n\n      if (util.isDigit(c)) {\n        buffer += read();\n        return;\n      }\n\n      return newToken('numeric', sign * Number(buffer));\n    },\n    decimalPointLeading: function decimalPointLeading() {\n      if (util.isDigit(c)) {\n        buffer += read();\n        lexState = 'decimalFraction';\n        return;\n      }\n\n      throw invalidChar(read());\n    },\n    decimalPoint: function decimalPoint() {\n      switch (c) {\n        case 'e':\n        case 'E':\n          buffer += read();\n          lexState = 'decimalExponent';\n          return;\n      }\n\n      if (util.isDigit(c)) {\n        buffer += read();\n        lexState = 'decimalFraction';\n        return;\n      }\n\n      return newToken('numeric', sign * Number(buffer));\n    },\n    decimalFraction: function decimalFraction() {\n      switch (c) {\n        case 'e':\n        case 'E':\n          buffer += read();\n          lexState = 'decimalExponent';\n          return;\n      }\n\n      if (util.isDigit(c)) {\n        buffer += read();\n        return;\n      }\n\n      return newToken('numeric', sign * Number(buffer));\n    },\n    decimalExponent: function decimalExponent() {\n      switch (c) {\n        case '+':\n        case '-':\n          buffer += read();\n          lexState = 'decimalExponentSign';\n          return;\n      }\n\n      if (util.isDigit(c)) {\n        buffer += read();\n        lexState = 'decimalExponentInteger';\n        return;\n      }\n\n      throw invalidChar(read());\n    },\n    decimalExponentSign: function decimalExponentSign() {\n      if (util.isDigit(c)) {\n        buffer += read();\n        lexState = 'decimalExponentInteger';\n        return;\n      }\n\n      throw invalidChar(read());\n    },\n    decimalExponentInteger: function decimalExponentInteger() {\n      if (util.isDigit(c)) {\n        buffer += read();\n        return;\n      }\n\n      return newToken('numeric', sign * Number(buffer));\n    },\n    hexadecimal: function hexadecimal() {\n      if (util.isHexDigit(c)) {\n        buffer += read();\n        lexState = 'hexadecimalInteger';\n        return;\n      }\n\n      throw invalidChar(read());\n    },\n    hexadecimalInteger: function hexadecimalInteger() {\n      if (util.isHexDigit(c)) {\n        buffer += read();\n        return;\n      }\n\n      return newToken('numeric', sign * Number(buffer));\n    },\n    string: function string() {\n      switch (c) {\n        case '\\\\':\n          read();\n          buffer += escape();\n          return;\n\n        case '\"':\n          if (doubleQuote) {\n            read();\n            return newToken('string', buffer);\n          }\n\n          buffer += read();\n          return;\n\n        case \"'\":\n          if (!doubleQuote) {\n            read();\n            return newToken('string', buffer);\n          }\n\n          buffer += read();\n          return;\n\n        case '\\n':\n        case '\\r':\n          throw invalidChar(read());\n\n        case '\\u2028':\n        case '\\u2029':\n          separatorChar(c);\n          break;\n\n        case undefined:\n          throw invalidChar(read());\n      }\n\n      buffer += read();\n    },\n    start: function start() {\n      switch (c) {\n        case '{':\n        case '[':\n          return newToken('punctuator', read());\n        // This code is unreachable since the default lexState handles eof.\n        // case undefined:\n        //     return newToken('eof')\n      }\n\n      lexState = 'value';\n    },\n    beforePropertyName: function beforePropertyName() {\n      switch (c) {\n        case '$':\n        case '_':\n          buffer = read();\n          lexState = 'identifierName';\n          return;\n\n        case '\\\\':\n          read();\n          lexState = 'identifierNameStartEscape';\n          return;\n\n        case '}':\n          return newToken('punctuator', read());\n\n        case '\"':\n        case \"'\":\n          doubleQuote = read() === '\"';\n          lexState = 'string';\n          return;\n      }\n\n      if (util.isIdStartChar(c)) {\n        buffer += read();\n        lexState = 'identifierName';\n        return;\n      }\n\n      throw invalidChar(read());\n    },\n    afterPropertyName: function afterPropertyName() {\n      if (c === ':') {\n        return newToken('punctuator', read());\n      }\n\n      throw invalidChar(read());\n    },\n    beforePropertyValue: function beforePropertyValue() {\n      lexState = 'value';\n    },\n    afterPropertyValue: function afterPropertyValue() {\n      switch (c) {\n        case ',':\n        case '}':\n          return newToken('punctuator', read());\n      }\n\n      throw invalidChar(read());\n    },\n    beforeArrayValue: function beforeArrayValue() {\n      if (c === ']') {\n        return newToken('punctuator', read());\n      }\n\n      lexState = 'value';\n    },\n    afterArrayValue: function afterArrayValue() {\n      switch (c) {\n        case ',':\n        case ']':\n          return newToken('punctuator', read());\n      }\n\n      throw invalidChar(read());\n    },\n    end: function end() {\n      // This code is unreachable since it's handled by the default lexState.\n      // if (c === undefined) {\n      //     read()\n      //     return newToken('eof')\n      // }\n      throw invalidChar(read());\n    }\n  };\n\n  function newToken(type, value) {\n    return {\n      type: type,\n      value: value,\n      line: line,\n      column: column\n    };\n  }\n\n  function literal(s) {\n    for (var i = 0, list = s; i < list.length; i += 1) {\n      var c = list[i];\n      var p = peek();\n\n      if (p !== c) {\n        throw invalidChar(read());\n      }\n\n      read();\n    }\n  }\n\n  function escape() {\n    var c = peek();\n\n    switch (c) {\n      case 'b':\n        read();\n        return '\\b';\n\n      case 'f':\n        read();\n        return '\\f';\n\n      case 'n':\n        read();\n        return '\\n';\n\n      case 'r':\n        read();\n        return '\\r';\n\n      case 't':\n        read();\n        return '\\t';\n\n      case 'v':\n        read();\n        return '\\v';\n\n      case '0':\n        read();\n\n        if (util.isDigit(peek())) {\n          throw invalidChar(read());\n        }\n\n        return '\\0';\n\n      case 'x':\n        read();\n        return hexEscape();\n\n      case 'u':\n        read();\n        return unicodeEscape();\n\n      case '\\n':\n      case '\\u2028':\n      case '\\u2029':\n        read();\n        return '';\n\n      case '\\r':\n        read();\n\n        if (peek() === '\\n') {\n          read();\n        }\n\n        return '';\n\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        throw invalidChar(read());\n\n      case undefined:\n        throw invalidChar(read());\n    }\n\n    return read();\n  }\n\n  function hexEscape() {\n    var buffer = '';\n    var c = peek();\n\n    if (!util.isHexDigit(c)) {\n      throw invalidChar(read());\n    }\n\n    buffer += read();\n    c = peek();\n\n    if (!util.isHexDigit(c)) {\n      throw invalidChar(read());\n    }\n\n    buffer += read();\n    return String.fromCodePoint(parseInt(buffer, 16));\n  }\n\n  function unicodeEscape() {\n    var buffer = '';\n    var count = 4;\n\n    while (count-- > 0) {\n      var c = peek();\n\n      if (!util.isHexDigit(c)) {\n        throw invalidChar(read());\n      }\n\n      buffer += read();\n    }\n\n    return String.fromCodePoint(parseInt(buffer, 16));\n  }\n\n  var parseStates = {\n    start: function start() {\n      if (token.type === 'eof') {\n        throw invalidEOF();\n      }\n\n      push();\n    },\n    beforePropertyName: function beforePropertyName() {\n      switch (token.type) {\n        case 'identifier':\n        case 'string':\n          key = token.value;\n          parseState = 'afterPropertyName';\n          return;\n\n        case 'punctuator':\n          // This code is unreachable since it's handled by the lexState.\n          // if (token.value !== '}') {\n          //     throw invalidToken()\n          // }\n          pop();\n          return;\n\n        case 'eof':\n          throw invalidEOF();\n      } // This code is unreachable since it's handled by the lexState.\n      // throw invalidToken()\n\n    },\n    afterPropertyName: function afterPropertyName() {\n      // This code is unreachable since it's handled by the lexState.\n      // if (token.type !== 'punctuator' || token.value !== ':') {\n      //     throw invalidToken()\n      // }\n      if (token.type === 'eof') {\n        throw invalidEOF();\n      }\n\n      parseState = 'beforePropertyValue';\n    },\n    beforePropertyValue: function beforePropertyValue() {\n      if (token.type === 'eof') {\n        throw invalidEOF();\n      }\n\n      push();\n    },\n    beforeArrayValue: function beforeArrayValue() {\n      if (token.type === 'eof') {\n        throw invalidEOF();\n      }\n\n      if (token.type === 'punctuator' && token.value === ']') {\n        pop();\n        return;\n      }\n\n      push();\n    },\n    afterPropertyValue: function afterPropertyValue() {\n      // This code is unreachable since it's handled by the lexState.\n      // if (token.type !== 'punctuator') {\n      //     throw invalidToken()\n      // }\n      if (token.type === 'eof') {\n        throw invalidEOF();\n      }\n\n      switch (token.value) {\n        case ',':\n          parseState = 'beforePropertyName';\n          return;\n\n        case '}':\n          pop();\n      } // This code is unreachable since it's handled by the lexState.\n      // throw invalidToken()\n\n    },\n    afterArrayValue: function afterArrayValue() {\n      // This code is unreachable since it's handled by the lexState.\n      // if (token.type !== 'punctuator') {\n      //     throw invalidToken()\n      // }\n      if (token.type === 'eof') {\n        throw invalidEOF();\n      }\n\n      switch (token.value) {\n        case ',':\n          parseState = 'beforeArrayValue';\n          return;\n\n        case ']':\n          pop();\n      } // This code is unreachable since it's handled by the lexState.\n      // throw invalidToken()\n\n    },\n    end: function end() {// This code is unreachable since it's handled by the lexState.\n      // if (token.type !== 'eof') {\n      //     throw invalidToken()\n      // }\n    }\n  };\n\n  function push() {\n    var value;\n\n    switch (token.type) {\n      case 'punctuator':\n        switch (token.value) {\n          case '{':\n            value = {};\n            break;\n\n          case '[':\n            value = [];\n            break;\n        }\n\n        break;\n\n      case 'null':\n      case 'boolean':\n      case 'numeric':\n      case 'string':\n        value = token.value;\n        break;\n      // This code is unreachable.\n      // default:\n      //     throw invalidToken()\n    }\n\n    if (root === undefined) {\n      root = value;\n    } else {\n      var parent = stack[stack.length - 1];\n\n      if (Array.isArray(parent)) {\n        parent.push(value);\n      } else {\n        parent[key] = value;\n      }\n    }\n\n    if (value !== null && typeof value === 'object') {\n      stack.push(value);\n\n      if (Array.isArray(value)) {\n        parseState = 'beforeArrayValue';\n      } else {\n        parseState = 'beforePropertyName';\n      }\n    } else {\n      var current = stack[stack.length - 1];\n\n      if (current == null) {\n        parseState = 'end';\n      } else if (Array.isArray(current)) {\n        parseState = 'afterArrayValue';\n      } else {\n        parseState = 'afterPropertyValue';\n      }\n    }\n  }\n\n  function pop() {\n    stack.pop();\n    var current = stack[stack.length - 1];\n\n    if (current == null) {\n      parseState = 'end';\n    } else if (Array.isArray(current)) {\n      parseState = 'afterArrayValue';\n    } else {\n      parseState = 'afterPropertyValue';\n    }\n  } // This code is unreachable.\n  // function invalidParseState () {\n  //     return new Error(`JSON5: invalid parse state '${parseState}'`)\n  // }\n  // This code is unreachable.\n  // function invalidLexState (state) {\n  //     return new Error(`JSON5: invalid lex state '${state}'`)\n  // }\n\n\n  function invalidChar(c) {\n    if (c === undefined) {\n      return syntaxError(\"JSON5: invalid end of input at \" + line + \":\" + column);\n    }\n\n    return syntaxError(\"JSON5: invalid character '\" + formatChar(c) + \"' at \" + line + \":\" + column);\n  }\n\n  function invalidEOF() {\n    return syntaxError(\"JSON5: invalid end of input at \" + line + \":\" + column);\n  } // This code is unreachable.\n  // function invalidToken () {\n  //     if (token.type === 'eof') {\n  //         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n  //     }\n  //     const c = String.fromCodePoint(token.value.codePointAt(0))\n  //     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n  // }\n\n\n  function invalidIdentifier() {\n    column -= 5;\n    return syntaxError(\"JSON5: invalid identifier character at \" + line + \":\" + column);\n  }\n\n  function separatorChar(c) {\n    console.warn(\"JSON5: '\" + formatChar(c) + \"' in strings is not valid ECMAScript; consider escaping\");\n  }\n\n  function formatChar(c) {\n    var replacements = {\n      \"'\": \"\\\\'\",\n      '\"': '\\\\\"',\n      '\\\\': '\\\\\\\\',\n      '\\b': '\\\\b',\n      '\\f': '\\\\f',\n      '\\n': '\\\\n',\n      '\\r': '\\\\r',\n      '\\t': '\\\\t',\n      '\\v': '\\\\v',\n      '\\0': '\\\\0',\n      '\\u2028': '\\\\u2028',\n      '\\u2029': '\\\\u2029'\n    };\n\n    if (replacements[c]) {\n      return replacements[c];\n    }\n\n    if (c < ' ') {\n      var hexString = c.charCodeAt(0).toString(16);\n      return '\\\\x' + ('00' + hexString).substring(hexString.length);\n    }\n\n    return c;\n  }\n\n  function syntaxError(message) {\n    var err = new SyntaxError(message);\n    err.lineNumber = line;\n    err.columnNumber = column;\n    return err;\n  }\n\n  var stringify = function stringify(value, replacer, space) {\n    var stack = [];\n    var indent = '';\n    var propertyList;\n    var replacerFunc;\n    var gap = '';\n    var quote;\n\n    if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {\n      space = replacer.space;\n      quote = replacer.quote;\n      replacer = replacer.replacer;\n    }\n\n    if (typeof replacer === 'function') {\n      replacerFunc = replacer;\n    } else if (Array.isArray(replacer)) {\n      propertyList = [];\n\n      for (var i = 0, list = replacer; i < list.length; i += 1) {\n        var v = list[i];\n        var item = void 0;\n\n        if (typeof v === 'string') {\n          item = v;\n        } else if (typeof v === 'number' || v instanceof String || v instanceof Number) {\n          item = String(v);\n        }\n\n        if (item !== undefined && propertyList.indexOf(item) < 0) {\n          propertyList.push(item);\n        }\n      }\n    }\n\n    if (space instanceof Number) {\n      space = Number(space);\n    } else if (space instanceof String) {\n      space = String(space);\n    }\n\n    if (typeof space === 'number') {\n      if (space > 0) {\n        space = Math.min(10, Math.floor(space));\n        gap = '          '.substr(0, space);\n      }\n    } else if (typeof space === 'string') {\n      gap = space.substr(0, 10);\n    }\n\n    return serializeProperty('', {\n      '': value\n    });\n\n    function serializeProperty(key, holder) {\n      var value = holder[key];\n\n      if (value != null) {\n        if (typeof value.toJSON5 === 'function') {\n          value = value.toJSON5(key);\n        } else if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key);\n        }\n      }\n\n      if (replacerFunc) {\n        value = replacerFunc.call(holder, key, value);\n      }\n\n      if (value instanceof Number) {\n        value = Number(value);\n      } else if (value instanceof String) {\n        value = String(value);\n      } else if (value instanceof Boolean) {\n        value = value.valueOf();\n      }\n\n      switch (value) {\n        case null:\n          return 'null';\n\n        case true:\n          return 'true';\n\n        case false:\n          return 'false';\n      }\n\n      if (typeof value === 'string') {\n        return quoteString(value, false);\n      }\n\n      if (typeof value === 'number') {\n        return String(value);\n      }\n\n      if (typeof value === 'object') {\n        return Array.isArray(value) ? serializeArray(value) : serializeObject(value);\n      }\n\n      return undefined;\n    }\n\n    function quoteString(value) {\n      var quotes = {\n        \"'\": 0.1,\n        '\"': 0.2\n      };\n      var replacements = {\n        \"'\": \"\\\\'\",\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\',\n        '\\b': '\\\\b',\n        '\\f': '\\\\f',\n        '\\n': '\\\\n',\n        '\\r': '\\\\r',\n        '\\t': '\\\\t',\n        '\\v': '\\\\v',\n        '\\0': '\\\\0',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029'\n      };\n      var product = '';\n\n      for (var i = 0; i < value.length; i++) {\n        var c = value[i];\n\n        switch (c) {\n          case \"'\":\n          case '\"':\n            quotes[c]++;\n            product += c;\n            continue;\n\n          case '\\0':\n            if (util.isDigit(value[i + 1])) {\n              product += '\\\\x00';\n              continue;\n            }\n\n        }\n\n        if (replacements[c]) {\n          product += replacements[c];\n          continue;\n        }\n\n        if (c < ' ') {\n          var hexString = c.charCodeAt(0).toString(16);\n          product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n          continue;\n        }\n\n        product += c;\n      }\n\n      var quoteChar = quote || Object.keys(quotes).reduce(function (a, b) {\n        return quotes[a] < quotes[b] ? a : b;\n      });\n      product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n      return quoteChar + product + quoteChar;\n    }\n\n    function serializeObject(value) {\n      if (stack.indexOf(value) >= 0) {\n        throw TypeError('Converting circular structure to JSON5');\n      }\n\n      stack.push(value);\n      var stepback = indent;\n      indent = indent + gap;\n      var keys = propertyList || Object.keys(value);\n      var partial = [];\n\n      for (var i = 0, list = keys; i < list.length; i += 1) {\n        var key = list[i];\n        var propertyString = serializeProperty(key, value);\n\n        if (propertyString !== undefined) {\n          var member = serializeKey(key) + ':';\n\n          if (gap !== '') {\n            member += ' ';\n          }\n\n          member += propertyString;\n          partial.push(member);\n        }\n      }\n\n      var final;\n\n      if (partial.length === 0) {\n        final = '{}';\n      } else {\n        var properties;\n\n        if (gap === '') {\n          properties = partial.join(',');\n          final = '{' + properties + '}';\n        } else {\n          var separator = ',\\n' + indent;\n          properties = partial.join(separator);\n          final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n        }\n      }\n\n      stack.pop();\n      indent = stepback;\n      return final;\n    }\n\n    function serializeKey(key) {\n      if (key.length === 0) {\n        return quoteString(key, true);\n      }\n\n      var firstChar = String.fromCodePoint(key.codePointAt(0));\n\n      if (!util.isIdStartChar(firstChar)) {\n        return quoteString(key, true);\n      }\n\n      for (var i = firstChar.length; i < key.length; i++) {\n        if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n          return quoteString(key, true);\n        }\n      }\n\n      return key;\n    }\n\n    function serializeArray(value) {\n      if (stack.indexOf(value) >= 0) {\n        throw TypeError('Converting circular structure to JSON5');\n      }\n\n      stack.push(value);\n      var stepback = indent;\n      indent = indent + gap;\n      var partial = [];\n\n      for (var i = 0; i < value.length; i++) {\n        var propertyString = serializeProperty(String(i), value);\n        partial.push(propertyString !== undefined ? propertyString : 'null');\n      }\n\n      var final;\n\n      if (partial.length === 0) {\n        final = '[]';\n      } else {\n        if (gap === '') {\n          var properties = partial.join(',');\n          final = '[' + properties + ']';\n        } else {\n          var separator = ',\\n' + indent;\n          var properties$1 = partial.join(separator);\n          final = '[\\n' + indent + properties$1 + ',\\n' + stepback + ']';\n        }\n      }\n\n      stack.pop();\n      indent = stepback;\n      return final;\n    }\n  };\n\n  var JSON5 = {\n    parse: parse,\n    stringify: stringify\n  };\n  var lib = JSON5;\n  var es5 = lib;\n  return es5;\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/json5/dist/index.js"],"names":["global","factory","exports","module","define","amd","JSON5","createCommonjsModule","fn","_global","window","Math","self","Function","__g","_core","core","version","__e","_core_1","_isObject","it","_anObject","TypeError","_fails","exec","e","_descriptors","Object","defineProperty","get","a","document","is","createElement","_domCreate","_ie8DomDefine","_toPrimitive","S","val","toString","call","valueOf","dP","f","O","P","Attributes","value","_objectDp","_propertyDesc","bitmap","enumerable","configurable","writable","_hide","object","key","hasOwnProperty","_has","id","px","random","_uid","concat","undefined","_library","_shared","SHARED","store","push","mode","copyright","_functionToString","_redefine","SRC","TO_STRING","TPL","split","inspectSource","safe","isFunction","join","String","prototype","_aFunction","_ctx","that","length","b","c","apply","arguments","PROTOTYPE","$export","type","name","source","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","target","expProto","own","out","exp","U","W","R","_export","ceil","floor","_toInteger","isNaN","_defined","_stringAt","pos","s","i","l","charCodeAt","charAt","slice","$at","codePointAt","max","min","_toAbsoluteIndex","index","fromCharCode","$fromCodePoint","fromCodePoint","x","arguments$1","res","aLen","code","RangeError","Space_Separator","ID_Start","ID_Continue","unicode","util","isSpaceSeparator","test","isIdStartChar","isIdContinueChar","isDigit","isHexDigit","parseState","stack","line","column","token","root","parse","text","reviver","lex","parseStates","internalize","holder","replacement","lexState","buffer","doubleQuote","sign","peek","lexStates","read","default","default$1","newToken","comment","invalidChar","multiLineComment","multiLineCommentAsterisk","singleLineComment","literal","Infinity","NaN","identifierNameStartEscape","u","unicodeEscape","invalidIdentifier","identifierName","identifierNameEscape","sign$1","zero","decimalInteger","Number","decimalPointLeading","decimalPoint","decimalFraction","decimalExponent","decimalExponentSign","decimalExponentInteger","hexadecimal","hexadecimalInteger","string","escape","separatorChar","start","beforePropertyName","afterPropertyName","beforePropertyValue","afterPropertyValue","beforeArrayValue","afterArrayValue","end","list","p","hexEscape","parseInt","count","invalidEOF","pop","parent","Array","isArray","current","syntaxError","formatChar","console","warn","replacements","hexString","substring","message","err","SyntaxError","lineNumber","columnNumber","stringify","replacer","space","indent","propertyList","replacerFunc","gap","quote","v","item","indexOf","substr","serializeProperty","toJSON5","toJSON","Boolean","quoteString","serializeArray","serializeObject","quotes","product","quoteChar","keys","reduce","replace","RegExp","stepback","partial","propertyString","member","serializeKey","final","properties","separator","firstChar","properties$1","lib","es5"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.JSON5 = factory());\n}(this, (function () { 'use strict';\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar _global = createCommonjsModule(function (module) {\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self\n\t  // eslint-disable-next-line no-new-func\n\t  : Function('return this')();\n\tif (typeof __g == 'number') { __g = global; } // eslint-disable-line no-undef\n\t});\n\n\tvar _core = createCommonjsModule(function (module) {\n\tvar core = module.exports = { version: '2.6.5' };\n\tif (typeof __e == 'number') { __e = core; } // eslint-disable-line no-undef\n\t});\n\tvar _core_1 = _core.version;\n\n\tvar _isObject = function (it) {\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n\tvar _anObject = function (it) {\n\t  if (!_isObject(it)) { throw TypeError(it + ' is not an object!'); }\n\t  return it;\n\t};\n\n\tvar _fails = function (exec) {\n\t  try {\n\t    return !!exec();\n\t  } catch (e) {\n\t    return true;\n\t  }\n\t};\n\n\t// Thank's IE8 for his funny defineProperty\n\tvar _descriptors = !_fails(function () {\n\t  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\tvar document = _global.document;\n\t// typeof document.createElement is 'object' in old IE\n\tvar is = _isObject(document) && _isObject(document.createElement);\n\tvar _domCreate = function (it) {\n\t  return is ? document.createElement(it) : {};\n\t};\n\n\tvar _ie8DomDefine = !_descriptors && !_fails(function () {\n\t  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tvar _toPrimitive = function (it, S) {\n\t  if (!_isObject(it)) { return it; }\n\t  var fn, val;\n\t  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n\tvar dP = Object.defineProperty;\n\n\tvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n\t  _anObject(O);\n\t  P = _toPrimitive(P, true);\n\t  _anObject(Attributes);\n\t  if (_ie8DomDefine) { try {\n\t    return dP(O, P, Attributes);\n\t  } catch (e) { /* empty */ } }\n\t  if ('get' in Attributes || 'set' in Attributes) { throw TypeError('Accessors not supported!'); }\n\t  if ('value' in Attributes) { O[P] = Attributes.value; }\n\t  return O;\n\t};\n\n\tvar _objectDp = {\n\t\tf: f\n\t};\n\n\tvar _propertyDesc = function (bitmap, value) {\n\t  return {\n\t    enumerable: !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable: !(bitmap & 4),\n\t    value: value\n\t  };\n\t};\n\n\tvar _hide = _descriptors ? function (object, key, value) {\n\t  return _objectDp.f(object, key, _propertyDesc(1, value));\n\t} : function (object, key, value) {\n\t  object[key] = value;\n\t  return object;\n\t};\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tvar _has = function (it, key) {\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n\tvar id = 0;\n\tvar px = Math.random();\n\tvar _uid = function (key) {\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n\tvar _library = false;\n\n\tvar _shared = createCommonjsModule(function (module) {\n\tvar SHARED = '__core-js_shared__';\n\tvar store = _global[SHARED] || (_global[SHARED] = {});\n\n\t(module.exports = function (key, value) {\n\t  return store[key] || (store[key] = value !== undefined ? value : {});\n\t})('versions', []).push({\n\t  version: _core.version,\n\t  mode: _library ? 'pure' : 'global',\n\t  copyright: 'Â© 2019 Denis Pushkarev (zloirock.ru)'\n\t});\n\t});\n\n\tvar _functionToString = _shared('native-function-to-string', Function.toString);\n\n\tvar _redefine = createCommonjsModule(function (module) {\n\tvar SRC = _uid('src');\n\n\tvar TO_STRING = 'toString';\n\tvar TPL = ('' + _functionToString).split(TO_STRING);\n\n\t_core.inspectSource = function (it) {\n\t  return _functionToString.call(it);\n\t};\n\n\t(module.exports = function (O, key, val, safe) {\n\t  var isFunction = typeof val == 'function';\n\t  if (isFunction) { _has(val, 'name') || _hide(val, 'name', key); }\n\t  if (O[key] === val) { return; }\n\t  if (isFunction) { _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key))); }\n\t  if (O === _global) {\n\t    O[key] = val;\n\t  } else if (!safe) {\n\t    delete O[key];\n\t    _hide(O, key, val);\n\t  } else if (O[key]) {\n\t    O[key] = val;\n\t  } else {\n\t    _hide(O, key, val);\n\t  }\n\t// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\t})(Function.prototype, TO_STRING, function toString() {\n\t  return typeof this == 'function' && this[SRC] || _functionToString.call(this);\n\t});\n\t});\n\n\tvar _aFunction = function (it) {\n\t  if (typeof it != 'function') { throw TypeError(it + ' is not a function!'); }\n\t  return it;\n\t};\n\n\t// optional / simple context binding\n\n\tvar _ctx = function (fn, that, length) {\n\t  _aFunction(fn);\n\t  if (that === undefined) { return fn; }\n\t  switch (length) {\n\t    case 1: return function (a) {\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function (a, b) {\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function (a, b, c) {\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function (/* ...args */) {\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n\tvar PROTOTYPE = 'prototype';\n\n\tvar $export = function (type, name, source) {\n\t  var IS_FORCED = type & $export.F;\n\t  var IS_GLOBAL = type & $export.G;\n\t  var IS_STATIC = type & $export.S;\n\t  var IS_PROTO = type & $export.P;\n\t  var IS_BIND = type & $export.B;\n\t  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n\t  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n\t  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n\t  var key, own, out, exp;\n\t  if (IS_GLOBAL) { source = name; }\n\t  for (key in source) {\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    // export native or passed\n\t    out = (own ? target : source)[key];\n\t    // bind timers to global for call from export context\n\t    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n\t    // extend global\n\t    if (target) { _redefine(target, key, out, type & $export.U); }\n\t    // export\n\t    if (exports[key] != out) { _hide(exports, key, exp); }\n\t    if (IS_PROTO && expProto[key] != out) { expProto[key] = out; }\n\t  }\n\t};\n\t_global.core = _core;\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library`\n\tvar _export = $export;\n\n\t// 7.1.4 ToInteger\n\tvar ceil = Math.ceil;\n\tvar floor = Math.floor;\n\tvar _toInteger = function (it) {\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tvar _defined = function (it) {\n\t  if (it == undefined) { throw TypeError(\"Can't call method on  \" + it); }\n\t  return it;\n\t};\n\n\t// true  -> String#at\n\t// false -> String#codePointAt\n\tvar _stringAt = function (TO_STRING) {\n\t  return function (that, pos) {\n\t    var s = String(_defined(that));\n\t    var i = _toInteger(pos);\n\t    var l = s.length;\n\t    var a, b;\n\t    if (i < 0 || i >= l) { return TO_STRING ? '' : undefined; }\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n\t      ? TO_STRING ? s.charAt(i) : a\n\t      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\n\tvar $at = _stringAt(false);\n\t_export(_export.P, 'String', {\n\t  // 21.1.3.3 String.prototype.codePointAt(pos)\n\t  codePointAt: function codePointAt(pos) {\n\t    return $at(this, pos);\n\t  }\n\t});\n\n\tvar codePointAt = _core.String.codePointAt;\n\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tvar _toAbsoluteIndex = function (index, length) {\n\t  index = _toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n\tvar fromCharCode = String.fromCharCode;\n\tvar $fromCodePoint = String.fromCodePoint;\n\n\t// length should be 1, old FF problem\n\t_export(_export.S + _export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n\t  // 21.1.2.2 String.fromCodePoint(...codePoints)\n\t  fromCodePoint: function fromCodePoint(x) {\n\t    var arguments$1 = arguments;\n\t // eslint-disable-line no-unused-vars\n\t    var res = [];\n\t    var aLen = arguments.length;\n\t    var i = 0;\n\t    var code;\n\t    while (aLen > i) {\n\t      code = +arguments$1[i++];\n\t      if (_toAbsoluteIndex(code, 0x10ffff) !== code) { throw RangeError(code + ' is not a valid code point'); }\n\t      res.push(code < 0x10000\n\t        ? fromCharCode(code)\n\t        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n\t      );\n\t    } return res.join('');\n\t  }\n\t});\n\n\tvar fromCodePoint = _core.String.fromCodePoint;\n\n\t// This is a generated file. Do not edit.\n\tvar Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\n\tvar ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\n\tvar ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n\n\tvar unicode = {\n\t\tSpace_Separator: Space_Separator,\n\t\tID_Start: ID_Start,\n\t\tID_Continue: ID_Continue\n\t};\n\n\tvar util = {\n\t    isSpaceSeparator: function isSpaceSeparator (c) {\n\t        return typeof c === 'string' && unicode.Space_Separator.test(c)\n\t    },\n\n\t    isIdStartChar: function isIdStartChar (c) {\n\t        return typeof c === 'string' && (\n\t            (c >= 'a' && c <= 'z') ||\n\t        (c >= 'A' && c <= 'Z') ||\n\t        (c === '$') || (c === '_') ||\n\t        unicode.ID_Start.test(c)\n\t        )\n\t    },\n\n\t    isIdContinueChar: function isIdContinueChar (c) {\n\t        return typeof c === 'string' && (\n\t            (c >= 'a' && c <= 'z') ||\n\t        (c >= 'A' && c <= 'Z') ||\n\t        (c >= '0' && c <= '9') ||\n\t        (c === '$') || (c === '_') ||\n\t        (c === '\\u200C') || (c === '\\u200D') ||\n\t        unicode.ID_Continue.test(c)\n\t        )\n\t    },\n\n\t    isDigit: function isDigit (c) {\n\t        return typeof c === 'string' && /[0-9]/.test(c)\n\t    },\n\n\t    isHexDigit: function isHexDigit (c) {\n\t        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n\t    },\n\t};\n\n\tvar source;\n\tvar parseState;\n\tvar stack;\n\tvar pos;\n\tvar line;\n\tvar column;\n\tvar token;\n\tvar key;\n\tvar root;\n\n\tvar parse = function parse (text, reviver) {\n\t    source = String(text);\n\t    parseState = 'start';\n\t    stack = [];\n\t    pos = 0;\n\t    line = 1;\n\t    column = 0;\n\t    token = undefined;\n\t    key = undefined;\n\t    root = undefined;\n\n\t    do {\n\t        token = lex();\n\n\t        // This code is unreachable.\n\t        // if (!parseStates[parseState]) {\n\t        //     throw invalidParseState()\n\t        // }\n\n\t        parseStates[parseState]();\n\t    } while (token.type !== 'eof')\n\n\t    if (typeof reviver === 'function') {\n\t        return internalize({'': root}, '', reviver)\n\t    }\n\n\t    return root\n\t};\n\n\tfunction internalize (holder, name, reviver) {\n\t    var value = holder[name];\n\t    if (value != null && typeof value === 'object') {\n\t        for (var key in value) {\n\t            var replacement = internalize(value, key, reviver);\n\t            if (replacement === undefined) {\n\t                delete value[key];\n\t            } else {\n\t                value[key] = replacement;\n\t            }\n\t        }\n\t    }\n\n\t    return reviver.call(holder, name, value)\n\t}\n\n\tvar lexState;\n\tvar buffer;\n\tvar doubleQuote;\n\tvar sign;\n\tvar c;\n\n\tfunction lex () {\n\t    lexState = 'default';\n\t    buffer = '';\n\t    doubleQuote = false;\n\t    sign = 1;\n\n\t    for (;;) {\n\t        c = peek();\n\n\t        // This code is unreachable.\n\t        // if (!lexStates[lexState]) {\n\t        //     throw invalidLexState(lexState)\n\t        // }\n\n\t        var token = lexStates[lexState]();\n\t        if (token) {\n\t            return token\n\t        }\n\t    }\n\t}\n\n\tfunction peek () {\n\t    if (source[pos]) {\n\t        return String.fromCodePoint(source.codePointAt(pos))\n\t    }\n\t}\n\n\tfunction read () {\n\t    var c = peek();\n\n\t    if (c === '\\n') {\n\t        line++;\n\t        column = 0;\n\t    } else if (c) {\n\t        column += c.length;\n\t    } else {\n\t        column++;\n\t    }\n\n\t    if (c) {\n\t        pos += c.length;\n\t    }\n\n\t    return c\n\t}\n\n\tvar lexStates = {\n\t    default: function default$1 () {\n\t        switch (c) {\n\t        case '\\t':\n\t        case '\\v':\n\t        case '\\f':\n\t        case ' ':\n\t        case '\\u00A0':\n\t        case '\\uFEFF':\n\t        case '\\n':\n\t        case '\\r':\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            read();\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'comment';\n\t            return\n\n\t        case undefined:\n\t            read();\n\t            return newToken('eof')\n\t        }\n\n\t        if (util.isSpaceSeparator(c)) {\n\t            read();\n\t            return\n\t        }\n\n\t        // This code is unreachable.\n\t        // if (!lexStates[parseState]) {\n\t        //     throw invalidLexState(parseState)\n\t        // }\n\n\t        return lexStates[parseState]()\n\t    },\n\n\t    comment: function comment () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            lexState = 'multiLineComment';\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'singleLineComment';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    multiLineComment: function multiLineComment () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            lexState = 'multiLineCommentAsterisk';\n\t            return\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t    },\n\n\t    multiLineCommentAsterisk: function multiLineCommentAsterisk () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'default';\n\t            return\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        lexState = 'multiLineComment';\n\t    },\n\n\t    singleLineComment: function singleLineComment () {\n\t        switch (c) {\n\t        case '\\n':\n\t        case '\\r':\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            read();\n\t            lexState = 'default';\n\t            return\n\n\t        case undefined:\n\t            read();\n\t            return newToken('eof')\n\t        }\n\n\t        read();\n\t    },\n\n\t    value: function value () {\n\t        switch (c) {\n\t        case '{':\n\t        case '[':\n\t            return newToken('punctuator', read())\n\n\t        case 'n':\n\t            read();\n\t            literal('ull');\n\t            return newToken('null', null)\n\n\t        case 't':\n\t            read();\n\t            literal('rue');\n\t            return newToken('boolean', true)\n\n\t        case 'f':\n\t            read();\n\t            literal('alse');\n\t            return newToken('boolean', false)\n\n\t        case '-':\n\t        case '+':\n\t            if (read() === '-') {\n\t                sign = -1;\n\t            }\n\n\t            lexState = 'sign';\n\t            return\n\n\t        case '.':\n\t            buffer = read();\n\t            lexState = 'decimalPointLeading';\n\t            return\n\n\t        case '0':\n\t            buffer = read();\n\t            lexState = 'zero';\n\t            return\n\n\t        case '1':\n\t        case '2':\n\t        case '3':\n\t        case '4':\n\t        case '5':\n\t        case '6':\n\t        case '7':\n\t        case '8':\n\t        case '9':\n\t            buffer = read();\n\t            lexState = 'decimalInteger';\n\t            return\n\n\t        case 'I':\n\t            read();\n\t            literal('nfinity');\n\t            return newToken('numeric', Infinity)\n\n\t        case 'N':\n\t            read();\n\t            literal('aN');\n\t            return newToken('numeric', NaN)\n\n\t        case '\"':\n\t        case \"'\":\n\t            doubleQuote = (read() === '\"');\n\t            buffer = '';\n\t            lexState = 'string';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    identifierNameStartEscape: function identifierNameStartEscape () {\n\t        if (c !== 'u') {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        var u = unicodeEscape();\n\t        switch (u) {\n\t        case '$':\n\t        case '_':\n\t            break\n\n\t        default:\n\t            if (!util.isIdStartChar(u)) {\n\t                throw invalidIdentifier()\n\t            }\n\n\t            break\n\t        }\n\n\t        buffer += u;\n\t        lexState = 'identifierName';\n\t    },\n\n\t    identifierName: function identifierName () {\n\t        switch (c) {\n\t        case '$':\n\t        case '_':\n\t        case '\\u200C':\n\t        case '\\u200D':\n\t            buffer += read();\n\t            return\n\n\t        case '\\\\':\n\t            read();\n\t            lexState = 'identifierNameEscape';\n\t            return\n\t        }\n\n\t        if (util.isIdContinueChar(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('identifier', buffer)\n\t    },\n\n\t    identifierNameEscape: function identifierNameEscape () {\n\t        if (c !== 'u') {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        var u = unicodeEscape();\n\t        switch (u) {\n\t        case '$':\n\t        case '_':\n\t        case '\\u200C':\n\t        case '\\u200D':\n\t            break\n\n\t        default:\n\t            if (!util.isIdContinueChar(u)) {\n\t                throw invalidIdentifier()\n\t            }\n\n\t            break\n\t        }\n\n\t        buffer += u;\n\t        lexState = 'identifierName';\n\t    },\n\n\t    sign: function sign$1 () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer = read();\n\t            lexState = 'decimalPointLeading';\n\t            return\n\n\t        case '0':\n\t            buffer = read();\n\t            lexState = 'zero';\n\t            return\n\n\t        case '1':\n\t        case '2':\n\t        case '3':\n\t        case '4':\n\t        case '5':\n\t        case '6':\n\t        case '7':\n\t        case '8':\n\t        case '9':\n\t            buffer = read();\n\t            lexState = 'decimalInteger';\n\t            return\n\n\t        case 'I':\n\t            read();\n\t            literal('nfinity');\n\t            return newToken('numeric', sign * Infinity)\n\n\t        case 'N':\n\t            read();\n\t            literal('aN');\n\t            return newToken('numeric', NaN)\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    zero: function zero () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer += read();\n\t            lexState = 'decimalPoint';\n\t            return\n\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\n\t        case 'x':\n\t        case 'X':\n\t            buffer += read();\n\t            lexState = 'hexadecimal';\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * 0)\n\t    },\n\n\t    decimalInteger: function decimalInteger () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer += read();\n\t            lexState = 'decimalPoint';\n\t            return\n\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalPointLeading: function decimalPointLeading () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalFraction';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalPoint: function decimalPoint () {\n\t        switch (c) {\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalFraction';\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalFraction: function decimalFraction () {\n\t        switch (c) {\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalExponent: function decimalExponent () {\n\t        switch (c) {\n\t        case '+':\n\t        case '-':\n\t            buffer += read();\n\t            lexState = 'decimalExponentSign';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalExponentInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalExponentSign: function decimalExponentSign () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalExponentInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalExponentInteger: function decimalExponentInteger () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    hexadecimal: function hexadecimal () {\n\t        if (util.isHexDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'hexadecimalInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    hexadecimalInteger: function hexadecimalInteger () {\n\t        if (util.isHexDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    string: function string () {\n\t        switch (c) {\n\t        case '\\\\':\n\t            read();\n\t            buffer += escape();\n\t            return\n\n\t        case '\"':\n\t            if (doubleQuote) {\n\t                read();\n\t                return newToken('string', buffer)\n\t            }\n\n\t            buffer += read();\n\t            return\n\n\t        case \"'\":\n\t            if (!doubleQuote) {\n\t                read();\n\t                return newToken('string', buffer)\n\t            }\n\n\t            buffer += read();\n\t            return\n\n\t        case '\\n':\n\t        case '\\r':\n\t            throw invalidChar(read())\n\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            separatorChar(c);\n\t            break\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        buffer += read();\n\t    },\n\n\t    start: function start () {\n\t        switch (c) {\n\t        case '{':\n\t        case '[':\n\t            return newToken('punctuator', read())\n\n\t        // This code is unreachable since the default lexState handles eof.\n\t        // case undefined:\n\t        //     return newToken('eof')\n\t        }\n\n\t        lexState = 'value';\n\t    },\n\n\t    beforePropertyName: function beforePropertyName () {\n\t        switch (c) {\n\t        case '$':\n\t        case '_':\n\t            buffer = read();\n\t            lexState = 'identifierName';\n\t            return\n\n\t        case '\\\\':\n\t            read();\n\t            lexState = 'identifierNameStartEscape';\n\t            return\n\n\t        case '}':\n\t            return newToken('punctuator', read())\n\n\t        case '\"':\n\t        case \"'\":\n\t            doubleQuote = (read() === '\"');\n\t            lexState = 'string';\n\t            return\n\t        }\n\n\t        if (util.isIdStartChar(c)) {\n\t            buffer += read();\n\t            lexState = 'identifierName';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    afterPropertyName: function afterPropertyName () {\n\t        if (c === ':') {\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    beforePropertyValue: function beforePropertyValue () {\n\t        lexState = 'value';\n\t    },\n\n\t    afterPropertyValue: function afterPropertyValue () {\n\t        switch (c) {\n\t        case ',':\n\t        case '}':\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    beforeArrayValue: function beforeArrayValue () {\n\t        if (c === ']') {\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        lexState = 'value';\n\t    },\n\n\t    afterArrayValue: function afterArrayValue () {\n\t        switch (c) {\n\t        case ',':\n\t        case ']':\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    end: function end () {\n\t        // This code is unreachable since it's handled by the default lexState.\n\t        // if (c === undefined) {\n\t        //     read()\n\t        //     return newToken('eof')\n\t        // }\n\n\t        throw invalidChar(read())\n\t    },\n\t};\n\n\tfunction newToken (type, value) {\n\t    return {\n\t        type: type,\n\t        value: value,\n\t        line: line,\n\t        column: column,\n\t    }\n\t}\n\n\tfunction literal (s) {\n\t    for (var i = 0, list = s; i < list.length; i += 1) {\n\t        var c = list[i];\n\n\t        var p = peek();\n\n\t        if (p !== c) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t    }\n\t}\n\n\tfunction escape () {\n\t    var c = peek();\n\t    switch (c) {\n\t    case 'b':\n\t        read();\n\t        return '\\b'\n\n\t    case 'f':\n\t        read();\n\t        return '\\f'\n\n\t    case 'n':\n\t        read();\n\t        return '\\n'\n\n\t    case 'r':\n\t        read();\n\t        return '\\r'\n\n\t    case 't':\n\t        read();\n\t        return '\\t'\n\n\t    case 'v':\n\t        read();\n\t        return '\\v'\n\n\t    case '0':\n\t        read();\n\t        if (util.isDigit(peek())) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        return '\\0'\n\n\t    case 'x':\n\t        read();\n\t        return hexEscape()\n\n\t    case 'u':\n\t        read();\n\t        return unicodeEscape()\n\n\t    case '\\n':\n\t    case '\\u2028':\n\t    case '\\u2029':\n\t        read();\n\t        return ''\n\n\t    case '\\r':\n\t        read();\n\t        if (peek() === '\\n') {\n\t            read();\n\t        }\n\n\t        return ''\n\n\t    case '1':\n\t    case '2':\n\t    case '3':\n\t    case '4':\n\t    case '5':\n\t    case '6':\n\t    case '7':\n\t    case '8':\n\t    case '9':\n\t        throw invalidChar(read())\n\n\t    case undefined:\n\t        throw invalidChar(read())\n\t    }\n\n\t    return read()\n\t}\n\n\tfunction hexEscape () {\n\t    var buffer = '';\n\t    var c = peek();\n\n\t    if (!util.isHexDigit(c)) {\n\t        throw invalidChar(read())\n\t    }\n\n\t    buffer += read();\n\n\t    c = peek();\n\t    if (!util.isHexDigit(c)) {\n\t        throw invalidChar(read())\n\t    }\n\n\t    buffer += read();\n\n\t    return String.fromCodePoint(parseInt(buffer, 16))\n\t}\n\n\tfunction unicodeEscape () {\n\t    var buffer = '';\n\t    var count = 4;\n\n\t    while (count-- > 0) {\n\t        var c = peek();\n\t        if (!util.isHexDigit(c)) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        buffer += read();\n\t    }\n\n\t    return String.fromCodePoint(parseInt(buffer, 16))\n\t}\n\n\tvar parseStates = {\n\t    start: function start () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        push();\n\t    },\n\n\t    beforePropertyName: function beforePropertyName () {\n\t        switch (token.type) {\n\t        case 'identifier':\n\t        case 'string':\n\t            key = token.value;\n\t            parseState = 'afterPropertyName';\n\t            return\n\n\t        case 'punctuator':\n\t            // This code is unreachable since it's handled by the lexState.\n\t            // if (token.value !== '}') {\n\t            //     throw invalidToken()\n\t            // }\n\n\t            pop();\n\t            return\n\n\t        case 'eof':\n\t            throw invalidEOF()\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    afterPropertyName: function afterPropertyName () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator' || token.value !== ':') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        parseState = 'beforePropertyValue';\n\t    },\n\n\t    beforePropertyValue: function beforePropertyValue () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        push();\n\t    },\n\n\t    beforeArrayValue: function beforeArrayValue () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        if (token.type === 'punctuator' && token.value === ']') {\n\t            pop();\n\t            return\n\t        }\n\n\t        push();\n\t    },\n\n\t    afterPropertyValue: function afterPropertyValue () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        switch (token.value) {\n\t        case ',':\n\t            parseState = 'beforePropertyName';\n\t            return\n\n\t        case '}':\n\t            pop();\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    afterArrayValue: function afterArrayValue () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        switch (token.value) {\n\t        case ',':\n\t            parseState = 'beforeArrayValue';\n\t            return\n\n\t        case ']':\n\t            pop();\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    end: function end () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'eof') {\n\t        //     throw invalidToken()\n\t        // }\n\t    },\n\t};\n\n\tfunction push () {\n\t    var value;\n\n\t    switch (token.type) {\n\t    case 'punctuator':\n\t        switch (token.value) {\n\t        case '{':\n\t            value = {};\n\t            break\n\n\t        case '[':\n\t            value = [];\n\t            break\n\t        }\n\n\t        break\n\n\t    case 'null':\n\t    case 'boolean':\n\t    case 'numeric':\n\t    case 'string':\n\t        value = token.value;\n\t        break\n\n\t    // This code is unreachable.\n\t    // default:\n\t    //     throw invalidToken()\n\t    }\n\n\t    if (root === undefined) {\n\t        root = value;\n\t    } else {\n\t        var parent = stack[stack.length - 1];\n\t        if (Array.isArray(parent)) {\n\t            parent.push(value);\n\t        } else {\n\t            parent[key] = value;\n\t        }\n\t    }\n\n\t    if (value !== null && typeof value === 'object') {\n\t        stack.push(value);\n\n\t        if (Array.isArray(value)) {\n\t            parseState = 'beforeArrayValue';\n\t        } else {\n\t            parseState = 'beforePropertyName';\n\t        }\n\t    } else {\n\t        var current = stack[stack.length - 1];\n\t        if (current == null) {\n\t            parseState = 'end';\n\t        } else if (Array.isArray(current)) {\n\t            parseState = 'afterArrayValue';\n\t        } else {\n\t            parseState = 'afterPropertyValue';\n\t        }\n\t    }\n\t}\n\n\tfunction pop () {\n\t    stack.pop();\n\n\t    var current = stack[stack.length - 1];\n\t    if (current == null) {\n\t        parseState = 'end';\n\t    } else if (Array.isArray(current)) {\n\t        parseState = 'afterArrayValue';\n\t    } else {\n\t        parseState = 'afterPropertyValue';\n\t    }\n\t}\n\n\t// This code is unreachable.\n\t// function invalidParseState () {\n\t//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n\t// }\n\n\t// This code is unreachable.\n\t// function invalidLexState (state) {\n\t//     return new Error(`JSON5: invalid lex state '${state}'`)\n\t// }\n\n\tfunction invalidChar (c) {\n\t    if (c === undefined) {\n\t        return syntaxError((\"JSON5: invalid end of input at \" + line + \":\" + column))\n\t    }\n\n\t    return syntaxError((\"JSON5: invalid character '\" + (formatChar(c)) + \"' at \" + line + \":\" + column))\n\t}\n\n\tfunction invalidEOF () {\n\t    return syntaxError((\"JSON5: invalid end of input at \" + line + \":\" + column))\n\t}\n\n\t// This code is unreachable.\n\t// function invalidToken () {\n\t//     if (token.type === 'eof') {\n\t//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n\t//     }\n\n\t//     const c = String.fromCodePoint(token.value.codePointAt(0))\n\t//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n\t// }\n\n\tfunction invalidIdentifier () {\n\t    column -= 5;\n\t    return syntaxError((\"JSON5: invalid identifier character at \" + line + \":\" + column))\n\t}\n\n\tfunction separatorChar (c) {\n\t    console.warn((\"JSON5: '\" + (formatChar(c)) + \"' in strings is not valid ECMAScript; consider escaping\"));\n\t}\n\n\tfunction formatChar (c) {\n\t    var replacements = {\n\t        \"'\": \"\\\\'\",\n\t        '\"': '\\\\\"',\n\t        '\\\\': '\\\\\\\\',\n\t        '\\b': '\\\\b',\n\t        '\\f': '\\\\f',\n\t        '\\n': '\\\\n',\n\t        '\\r': '\\\\r',\n\t        '\\t': '\\\\t',\n\t        '\\v': '\\\\v',\n\t        '\\0': '\\\\0',\n\t        '\\u2028': '\\\\u2028',\n\t        '\\u2029': '\\\\u2029',\n\t    };\n\n\t    if (replacements[c]) {\n\t        return replacements[c]\n\t    }\n\n\t    if (c < ' ') {\n\t        var hexString = c.charCodeAt(0).toString(16);\n\t        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n\t    }\n\n\t    return c\n\t}\n\n\tfunction syntaxError (message) {\n\t    var err = new SyntaxError(message);\n\t    err.lineNumber = line;\n\t    err.columnNumber = column;\n\t    return err\n\t}\n\n\tvar stringify = function stringify (value, replacer, space) {\n\t    var stack = [];\n\t    var indent = '';\n\t    var propertyList;\n\t    var replacerFunc;\n\t    var gap = '';\n\t    var quote;\n\n\t    if (\n\t        replacer != null &&\n\t        typeof replacer === 'object' &&\n\t        !Array.isArray(replacer)\n\t    ) {\n\t        space = replacer.space;\n\t        quote = replacer.quote;\n\t        replacer = replacer.replacer;\n\t    }\n\n\t    if (typeof replacer === 'function') {\n\t        replacerFunc = replacer;\n\t    } else if (Array.isArray(replacer)) {\n\t        propertyList = [];\n\t        for (var i = 0, list = replacer; i < list.length; i += 1) {\n\t            var v = list[i];\n\n\t            var item = (void 0);\n\n\t            if (typeof v === 'string') {\n\t                item = v;\n\t            } else if (\n\t                typeof v === 'number' ||\n\t                v instanceof String ||\n\t                v instanceof Number\n\t            ) {\n\t                item = String(v);\n\t            }\n\n\t            if (item !== undefined && propertyList.indexOf(item) < 0) {\n\t                propertyList.push(item);\n\t            }\n\t        }\n\t    }\n\n\t    if (space instanceof Number) {\n\t        space = Number(space);\n\t    } else if (space instanceof String) {\n\t        space = String(space);\n\t    }\n\n\t    if (typeof space === 'number') {\n\t        if (space > 0) {\n\t            space = Math.min(10, Math.floor(space));\n\t            gap = '          '.substr(0, space);\n\t        }\n\t    } else if (typeof space === 'string') {\n\t        gap = space.substr(0, 10);\n\t    }\n\n\t    return serializeProperty('', {'': value})\n\n\t    function serializeProperty (key, holder) {\n\t        var value = holder[key];\n\t        if (value != null) {\n\t            if (typeof value.toJSON5 === 'function') {\n\t                value = value.toJSON5(key);\n\t            } else if (typeof value.toJSON === 'function') {\n\t                value = value.toJSON(key);\n\t            }\n\t        }\n\n\t        if (replacerFunc) {\n\t            value = replacerFunc.call(holder, key, value);\n\t        }\n\n\t        if (value instanceof Number) {\n\t            value = Number(value);\n\t        } else if (value instanceof String) {\n\t            value = String(value);\n\t        } else if (value instanceof Boolean) {\n\t            value = value.valueOf();\n\t        }\n\n\t        switch (value) {\n\t        case null: return 'null'\n\t        case true: return 'true'\n\t        case false: return 'false'\n\t        }\n\n\t        if (typeof value === 'string') {\n\t            return quoteString(value, false)\n\t        }\n\n\t        if (typeof value === 'number') {\n\t            return String(value)\n\t        }\n\n\t        if (typeof value === 'object') {\n\t            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n\t        }\n\n\t        return undefined\n\t    }\n\n\t    function quoteString (value) {\n\t        var quotes = {\n\t            \"'\": 0.1,\n\t            '\"': 0.2,\n\t        };\n\n\t        var replacements = {\n\t            \"'\": \"\\\\'\",\n\t            '\"': '\\\\\"',\n\t            '\\\\': '\\\\\\\\',\n\t            '\\b': '\\\\b',\n\t            '\\f': '\\\\f',\n\t            '\\n': '\\\\n',\n\t            '\\r': '\\\\r',\n\t            '\\t': '\\\\t',\n\t            '\\v': '\\\\v',\n\t            '\\0': '\\\\0',\n\t            '\\u2028': '\\\\u2028',\n\t            '\\u2029': '\\\\u2029',\n\t        };\n\n\t        var product = '';\n\n\t        for (var i = 0; i < value.length; i++) {\n\t            var c = value[i];\n\t            switch (c) {\n\t            case \"'\":\n\t            case '\"':\n\t                quotes[c]++;\n\t                product += c;\n\t                continue\n\n\t            case '\\0':\n\t                if (util.isDigit(value[i + 1])) {\n\t                    product += '\\\\x00';\n\t                    continue\n\t                }\n\t            }\n\n\t            if (replacements[c]) {\n\t                product += replacements[c];\n\t                continue\n\t            }\n\n\t            if (c < ' ') {\n\t                var hexString = c.charCodeAt(0).toString(16);\n\t                product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n\t                continue\n\t            }\n\n\t            product += c;\n\t        }\n\n\t        var quoteChar = quote || Object.keys(quotes).reduce(function (a, b) { return (quotes[a] < quotes[b]) ? a : b; });\n\n\t        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n\n\t        return quoteChar + product + quoteChar\n\t    }\n\n\t    function serializeObject (value) {\n\t        if (stack.indexOf(value) >= 0) {\n\t            throw TypeError('Converting circular structure to JSON5')\n\t        }\n\n\t        stack.push(value);\n\n\t        var stepback = indent;\n\t        indent = indent + gap;\n\n\t        var keys = propertyList || Object.keys(value);\n\t        var partial = [];\n\t        for (var i = 0, list = keys; i < list.length; i += 1) {\n\t            var key = list[i];\n\n\t            var propertyString = serializeProperty(key, value);\n\t            if (propertyString !== undefined) {\n\t                var member = serializeKey(key) + ':';\n\t                if (gap !== '') {\n\t                    member += ' ';\n\t                }\n\t                member += propertyString;\n\t                partial.push(member);\n\t            }\n\t        }\n\n\t        var final;\n\t        if (partial.length === 0) {\n\t            final = '{}';\n\t        } else {\n\t            var properties;\n\t            if (gap === '') {\n\t                properties = partial.join(',');\n\t                final = '{' + properties + '}';\n\t            } else {\n\t                var separator = ',\\n' + indent;\n\t                properties = partial.join(separator);\n\t                final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n\t            }\n\t        }\n\n\t        stack.pop();\n\t        indent = stepback;\n\t        return final\n\t    }\n\n\t    function serializeKey (key) {\n\t        if (key.length === 0) {\n\t            return quoteString(key, true)\n\t        }\n\n\t        var firstChar = String.fromCodePoint(key.codePointAt(0));\n\t        if (!util.isIdStartChar(firstChar)) {\n\t            return quoteString(key, true)\n\t        }\n\n\t        for (var i = firstChar.length; i < key.length; i++) {\n\t            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n\t                return quoteString(key, true)\n\t            }\n\t        }\n\n\t        return key\n\t    }\n\n\t    function serializeArray (value) {\n\t        if (stack.indexOf(value) >= 0) {\n\t            throw TypeError('Converting circular structure to JSON5')\n\t        }\n\n\t        stack.push(value);\n\n\t        var stepback = indent;\n\t        indent = indent + gap;\n\n\t        var partial = [];\n\t        for (var i = 0; i < value.length; i++) {\n\t            var propertyString = serializeProperty(String(i), value);\n\t            partial.push((propertyString !== undefined) ? propertyString : 'null');\n\t        }\n\n\t        var final;\n\t        if (partial.length === 0) {\n\t            final = '[]';\n\t        } else {\n\t            if (gap === '') {\n\t                var properties = partial.join(',');\n\t                final = '[' + properties + ']';\n\t            } else {\n\t                var separator = ',\\n' + indent;\n\t                var properties$1 = partial.join(separator);\n\t                final = '[\\n' + indent + properties$1 + ',\\n' + stepback + ']';\n\t            }\n\t        }\n\n\t        stack.pop();\n\t        indent = stepback;\n\t        return final\n\t    }\n\t};\n\n\tvar JSON5 = {\n\t    parse: parse,\n\t    stringify: stringify,\n\t};\n\n\tvar lib = JSON5;\n\n\tvar es5 = lib;\n\n\treturn es5;\n\n})));\n"]},"metadata":{},"sourceType":"script"}