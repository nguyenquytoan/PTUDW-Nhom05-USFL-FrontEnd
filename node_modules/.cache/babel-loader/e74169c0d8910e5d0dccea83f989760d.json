{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst child_process = require('child_process');\n\nconst os = require('os');\n\nconst chalk = require('chalk');\n\nconst shellQuote = require('shell-quote');\n\nfunction isTerminalEditor(editor) {\n  switch (editor) {\n    case 'vim':\n    case 'emacs':\n    case 'nano':\n      return true;\n  }\n\n  return false;\n} // Map from full process name to binary that starts the process\n// We can't just re-use full process name, because it will spawn a new instance\n// of the app every time\n\n\nconst COMMON_EDITORS_OSX = {\n  '/Applications/Atom.app/Contents/MacOS/Atom': 'atom',\n  '/Applications/Atom Beta.app/Contents/MacOS/Atom Beta': '/Applications/Atom Beta.app/Contents/MacOS/Atom Beta',\n  '/Applications/Brackets.app/Contents/MacOS/Brackets': 'brackets',\n  '/Applications/Sublime Text.app/Contents/MacOS/Sublime Text': '/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Sublime Text Dev.app/Contents/MacOS/Sublime Text': '/Applications/Sublime Text Dev.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Sublime Text 2.app/Contents/MacOS/Sublime Text 2': '/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Visual Studio Code.app/Contents/MacOS/Electron': 'code',\n  '/Applications/Visual Studio Code - Insiders.app/Contents/MacOS/Electron': 'code-insiders',\n  '/Applications/VSCodium.app/Contents/MacOS/Electron': 'vscodium',\n  '/Applications/AppCode.app/Contents/MacOS/appcode': '/Applications/AppCode.app/Contents/MacOS/appcode',\n  '/Applications/CLion.app/Contents/MacOS/clion': '/Applications/CLion.app/Contents/MacOS/clion',\n  '/Applications/IntelliJ IDEA.app/Contents/MacOS/idea': '/Applications/IntelliJ IDEA.app/Contents/MacOS/idea',\n  '/Applications/PhpStorm.app/Contents/MacOS/phpstorm': '/Applications/PhpStorm.app/Contents/MacOS/phpstorm',\n  '/Applications/PyCharm.app/Contents/MacOS/pycharm': '/Applications/PyCharm.app/Contents/MacOS/pycharm',\n  '/Applications/PyCharm CE.app/Contents/MacOS/pycharm': '/Applications/PyCharm CE.app/Contents/MacOS/pycharm',\n  '/Applications/RubyMine.app/Contents/MacOS/rubymine': '/Applications/RubyMine.app/Contents/MacOS/rubymine',\n  '/Applications/WebStorm.app/Contents/MacOS/webstorm': '/Applications/WebStorm.app/Contents/MacOS/webstorm',\n  '/Applications/MacVim.app/Contents/MacOS/MacVim': 'mvim',\n  '/Applications/GoLand.app/Contents/MacOS/goland': '/Applications/GoLand.app/Contents/MacOS/goland',\n  '/Applications/Rider.app/Contents/MacOS/rider': '/Applications/Rider.app/Contents/MacOS/rider'\n};\nconst COMMON_EDITORS_LINUX = {\n  atom: 'atom',\n  Brackets: 'brackets',\n  code: 'code',\n  'code-insiders': 'code-insiders',\n  vscodium: 'vscodium',\n  emacs: 'emacs',\n  gvim: 'gvim',\n  'idea.sh': 'idea',\n  'phpstorm.sh': 'phpstorm',\n  'pycharm.sh': 'pycharm',\n  'rubymine.sh': 'rubymine',\n  sublime_text: 'sublime_text',\n  vim: 'vim',\n  'webstorm.sh': 'webstorm',\n  'goland.sh': 'goland',\n  'rider.sh': 'rider'\n};\nconst COMMON_EDITORS_WIN = ['Brackets.exe', 'Code.exe', 'Code - Insiders.exe', 'VSCodium.exe', 'atom.exe', 'sublime_text.exe', 'notepad++.exe', 'clion.exe', 'clion64.exe', 'idea.exe', 'idea64.exe', 'phpstorm.exe', 'phpstorm64.exe', 'pycharm.exe', 'pycharm64.exe', 'rubymine.exe', 'rubymine64.exe', 'webstorm.exe', 'webstorm64.exe', 'goland.exe', 'goland64.exe', 'rider.exe', 'rider64.exe']; // Transpiled version of: /^([A-Za-z]:[/\\\\])?[\\p{L}0-9/.\\-_\\\\]+$/u\n// Non-transpiled version requires support for Unicode property regex. Allows\n// alphanumeric characters, periods, dashes, slashes, and underscores.\n\nconst WINDOWS_FILE_NAME_WHITELIST = /^([A-Za-z]:[/\\\\])?(?:[\\x2D-9A-Z\\\\_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7B9\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFF1]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])+$/;\n\nfunction addWorkspaceToArgumentsIfExists(args, workspace) {\n  if (workspace) {\n    args.unshift(workspace);\n  }\n\n  return args;\n}\n\nfunction getArgumentsForLineNumber(editor, fileName, lineNumber, colNumber, workspace) {\n  const editorBasename = path.basename(editor).replace(/\\.(exe|cmd|bat)$/i, '');\n\n  switch (editorBasename) {\n    case 'atom':\n    case 'Atom':\n    case 'Atom Beta':\n    case 'subl':\n    case 'sublime':\n    case 'sublime_text':\n      return [fileName + ':' + lineNumber + ':' + colNumber];\n\n    case 'wstorm':\n    case 'charm':\n      return [fileName + ':' + lineNumber];\n\n    case 'notepad++':\n      return ['-n' + lineNumber, '-c' + colNumber, fileName];\n\n    case 'vim':\n    case 'mvim':\n    case 'joe':\n    case 'gvim':\n      return ['+' + lineNumber, fileName];\n\n    case 'emacs':\n    case 'emacsclient':\n      return ['+' + lineNumber + ':' + colNumber, fileName];\n\n    case 'rmate':\n    case 'mate':\n    case 'mine':\n      return ['--line', lineNumber, fileName];\n\n    case 'code':\n    case 'Code':\n    case 'code-insiders':\n    case 'Code - Insiders':\n    case 'vscodium':\n    case 'VSCodium':\n      return addWorkspaceToArgumentsIfExists(['-g', fileName + ':' + lineNumber + ':' + colNumber], workspace);\n\n    case 'appcode':\n    case 'clion':\n    case 'clion64':\n    case 'idea':\n    case 'idea64':\n    case 'phpstorm':\n    case 'phpstorm64':\n    case 'pycharm':\n    case 'pycharm64':\n    case 'rubymine':\n    case 'rubymine64':\n    case 'webstorm':\n    case 'webstorm64':\n    case 'goland':\n    case 'goland64':\n    case 'rider':\n    case 'rider64':\n      return addWorkspaceToArgumentsIfExists(['--line', lineNumber, fileName], workspace);\n  } // For all others, drop the lineNumber until we have\n  // a mapping above, since providing the lineNumber incorrectly\n  // can result in errors or confusing behavior.\n\n\n  return [fileName];\n}\n\nfunction guessEditor() {\n  // Explicit config always wins\n  if (process.env.REACT_EDITOR) {\n    return shellQuote.parse(process.env.REACT_EDITOR);\n  } // We can find out which editor is currently running by:\n  // `ps x` on macOS and Linux\n  // `Get-Process` on Windows\n\n\n  try {\n    if (process.platform === 'darwin') {\n      const output = child_process.execSync('ps x').toString();\n      const processNames = Object.keys(COMMON_EDITORS_OSX);\n\n      for (let i = 0; i < processNames.length; i++) {\n        const processName = processNames[i];\n\n        if (output.indexOf(processName) !== -1) {\n          return [COMMON_EDITORS_OSX[processName]];\n        }\n      }\n    } else if (process.platform === 'win32') {\n      // Some processes need elevated rights to get its executable path.\n      // Just filter them out upfront. This also saves 10-20ms on the command.\n      const output = child_process.execSync('wmic process where \"executablepath is not null\" get executablepath').toString();\n      const runningProcesses = output.split('\\r\\n');\n\n      for (let i = 0; i < runningProcesses.length; i++) {\n        const processPath = runningProcesses[i].trim();\n        const processName = path.basename(processPath);\n\n        if (COMMON_EDITORS_WIN.indexOf(processName) !== -1) {\n          return [processPath];\n        }\n      }\n    } else if (process.platform === 'linux') {\n      // --no-heading No header line\n      // x List all processes owned by you\n      // -o comm Need only names column\n      const output = child_process.execSync('ps x --no-heading -o comm --sort=comm').toString();\n      const processNames = Object.keys(COMMON_EDITORS_LINUX);\n\n      for (let i = 0; i < processNames.length; i++) {\n        const processName = processNames[i];\n\n        if (output.indexOf(processName) !== -1) {\n          return [COMMON_EDITORS_LINUX[processName]];\n        }\n      }\n    }\n  } catch (error) {} // Ignore...\n  // Last resort, use old skool env vars\n\n\n  if (process.env.VISUAL) {\n    return [process.env.VISUAL];\n  } else if (process.env.EDITOR) {\n    return [process.env.EDITOR];\n  }\n\n  return [null];\n}\n\nfunction printInstructions(fileName, errorMessage) {\n  console.log();\n  console.log(chalk.red('Could not open ' + path.basename(fileName) + ' in the editor.'));\n\n  if (errorMessage) {\n    if (errorMessage[errorMessage.length - 1] !== '.') {\n      errorMessage += '.';\n    }\n\n    console.log(chalk.red('The editor process exited with an error: ' + errorMessage));\n  }\n\n  console.log();\n  console.log('To set up the editor integration, add something like ' + chalk.cyan('REACT_EDITOR=atom') + ' to the ' + chalk.green('.env.local') + ' file in your project folder ' + 'and restart the development server. Learn more: ' + chalk.green('https://goo.gl/MMTaZt'));\n  console.log();\n}\n\nlet _childProcess = null;\n\nfunction launchEditor(fileName, lineNumber, colNumber) {\n  if (!fs.existsSync(fileName)) {\n    return;\n  } // Sanitize lineNumber to prevent malicious use on win32\n  // via: https://github.com/nodejs/node/blob/c3bb4b1aa5e907d489619fb43d233c3336bfc03d/lib/child_process.js#L333\n  // and it should be a positive integer\n\n\n  if (!(Number.isInteger(lineNumber) && lineNumber > 0)) {\n    return;\n  } // colNumber is optional, but should be a positive integer too\n  // default is 1\n\n\n  if (!(Number.isInteger(colNumber) && colNumber > 0)) {\n    colNumber = 1;\n  }\n\n  let [editor, ...args] = guessEditor();\n\n  if (!editor) {\n    printInstructions(fileName, null);\n    return;\n  }\n\n  if (editor.toLowerCase() === 'none') {\n    return;\n  }\n\n  if (process.platform === 'linux' && fileName.startsWith('/mnt/') && /Microsoft/i.test(os.release())) {\n    // Assume WSL / \"Bash on Ubuntu on Windows\" is being used, and\n    // that the file exists on the Windows file system.\n    // `os.release()` is \"4.4.0-43-Microsoft\" in the current release\n    // build of WSL, see: https://github.com/Microsoft/BashOnWindows/issues/423#issuecomment-221627364\n    // When a Windows editor is specified, interop functionality can\n    // handle the path translation, but only if a relative path is used.\n    fileName = path.relative('', fileName);\n  } // cmd.exe on Windows is vulnerable to RCE attacks given a file name of the\n  // form \"C:\\Users\\myusername\\Downloads\\& curl 172.21.93.52\". Use a whitelist\n  // to validate user-provided file names. This doesn't cover the entire range\n  // of valid file names but should cover almost all of them in practice.\n\n\n  if (process.platform === 'win32' && !WINDOWS_FILE_NAME_WHITELIST.test(fileName.trim())) {\n    console.log();\n    console.log(chalk.red('Could not open ' + path.basename(fileName) + ' in the editor.'));\n    console.log();\n    console.log('When running on Windows, file names are checked against a whitelist ' + 'to protect against remote code execution attacks. File names may ' + 'consist only of alphanumeric characters (all languages), periods, ' + 'dashes, slashes, and underscores.');\n    console.log();\n    return;\n  }\n\n  let workspace = null;\n\n  if (lineNumber) {\n    args = args.concat(getArgumentsForLineNumber(editor, fileName, lineNumber, colNumber, workspace));\n  } else {\n    args.push(fileName);\n  }\n\n  if (_childProcess && isTerminalEditor(editor)) {\n    // There's an existing editor process already and it's attached\n    // to the terminal, so go kill it. Otherwise two separate editor\n    // instances attach to the stdin/stdout which gets confusing.\n    _childProcess.kill('SIGKILL');\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows, launch the editor in a shell because spawn can only\n    // launch .exe files.\n    _childProcess = child_process.spawn('cmd.exe', ['/C', editor].concat(args), {\n      stdio: 'inherit'\n    });\n  } else {\n    _childProcess = child_process.spawn(editor, args, {\n      stdio: 'inherit'\n    });\n  }\n\n  _childProcess.on('exit', function (errorCode) {\n    _childProcess = null;\n\n    if (errorCode) {\n      printInstructions(fileName, '(code ' + errorCode + ')');\n    }\n  });\n\n  _childProcess.on('error', function (error) {\n    printInstructions(fileName, error.message);\n  });\n}\n\nmodule.exports = launchEditor;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/react-dev-utils/launchEditor.js"],"names":["fs","require","path","child_process","os","chalk","shellQuote","isTerminalEditor","editor","COMMON_EDITORS_OSX","COMMON_EDITORS_LINUX","atom","Brackets","code","vscodium","emacs","gvim","sublime_text","vim","COMMON_EDITORS_WIN","WINDOWS_FILE_NAME_WHITELIST","addWorkspaceToArgumentsIfExists","args","workspace","unshift","getArgumentsForLineNumber","fileName","lineNumber","colNumber","editorBasename","basename","replace","guessEditor","process","env","REACT_EDITOR","parse","platform","output","execSync","toString","processNames","Object","keys","i","length","processName","indexOf","runningProcesses","split","processPath","trim","error","VISUAL","EDITOR","printInstructions","errorMessage","console","log","red","cyan","green","_childProcess","launchEditor","existsSync","Number","isInteger","toLowerCase","startsWith","test","release","relative","concat","push","kill","spawn","stdio","on","errorCode","message","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst child_process = require('child_process');\nconst os = require('os');\nconst chalk = require('chalk');\nconst shellQuote = require('shell-quote');\n\nfunction isTerminalEditor(editor) {\n  switch (editor) {\n    case 'vim':\n    case 'emacs':\n    case 'nano':\n      return true;\n  }\n  return false;\n}\n\n// Map from full process name to binary that starts the process\n// We can't just re-use full process name, because it will spawn a new instance\n// of the app every time\nconst COMMON_EDITORS_OSX = {\n  '/Applications/Atom.app/Contents/MacOS/Atom': 'atom',\n  '/Applications/Atom Beta.app/Contents/MacOS/Atom Beta':\n    '/Applications/Atom Beta.app/Contents/MacOS/Atom Beta',\n  '/Applications/Brackets.app/Contents/MacOS/Brackets': 'brackets',\n  '/Applications/Sublime Text.app/Contents/MacOS/Sublime Text':\n    '/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Sublime Text Dev.app/Contents/MacOS/Sublime Text':\n    '/Applications/Sublime Text Dev.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Sublime Text 2.app/Contents/MacOS/Sublime Text 2':\n    '/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Visual Studio Code.app/Contents/MacOS/Electron': 'code',\n  '/Applications/Visual Studio Code - Insiders.app/Contents/MacOS/Electron':\n    'code-insiders',\n  '/Applications/VSCodium.app/Contents/MacOS/Electron': 'vscodium',\n  '/Applications/AppCode.app/Contents/MacOS/appcode':\n    '/Applications/AppCode.app/Contents/MacOS/appcode',\n  '/Applications/CLion.app/Contents/MacOS/clion':\n    '/Applications/CLion.app/Contents/MacOS/clion',\n  '/Applications/IntelliJ IDEA.app/Contents/MacOS/idea':\n    '/Applications/IntelliJ IDEA.app/Contents/MacOS/idea',\n  '/Applications/PhpStorm.app/Contents/MacOS/phpstorm':\n    '/Applications/PhpStorm.app/Contents/MacOS/phpstorm',\n  '/Applications/PyCharm.app/Contents/MacOS/pycharm':\n    '/Applications/PyCharm.app/Contents/MacOS/pycharm',\n  '/Applications/PyCharm CE.app/Contents/MacOS/pycharm':\n    '/Applications/PyCharm CE.app/Contents/MacOS/pycharm',\n  '/Applications/RubyMine.app/Contents/MacOS/rubymine':\n    '/Applications/RubyMine.app/Contents/MacOS/rubymine',\n  '/Applications/WebStorm.app/Contents/MacOS/webstorm':\n    '/Applications/WebStorm.app/Contents/MacOS/webstorm',\n  '/Applications/MacVim.app/Contents/MacOS/MacVim': 'mvim',\n  '/Applications/GoLand.app/Contents/MacOS/goland':\n    '/Applications/GoLand.app/Contents/MacOS/goland',\n  '/Applications/Rider.app/Contents/MacOS/rider':\n    '/Applications/Rider.app/Contents/MacOS/rider',\n};\n\nconst COMMON_EDITORS_LINUX = {\n  atom: 'atom',\n  Brackets: 'brackets',\n  code: 'code',\n  'code-insiders': 'code-insiders',\n  vscodium: 'vscodium',\n  emacs: 'emacs',\n  gvim: 'gvim',\n  'idea.sh': 'idea',\n  'phpstorm.sh': 'phpstorm',\n  'pycharm.sh': 'pycharm',\n  'rubymine.sh': 'rubymine',\n  sublime_text: 'sublime_text',\n  vim: 'vim',\n  'webstorm.sh': 'webstorm',\n  'goland.sh': 'goland',\n  'rider.sh': 'rider',\n};\n\nconst COMMON_EDITORS_WIN = [\n  'Brackets.exe',\n  'Code.exe',\n  'Code - Insiders.exe',\n  'VSCodium.exe',\n  'atom.exe',\n  'sublime_text.exe',\n  'notepad++.exe',\n  'clion.exe',\n  'clion64.exe',\n  'idea.exe',\n  'idea64.exe',\n  'phpstorm.exe',\n  'phpstorm64.exe',\n  'pycharm.exe',\n  'pycharm64.exe',\n  'rubymine.exe',\n  'rubymine64.exe',\n  'webstorm.exe',\n  'webstorm64.exe',\n  'goland.exe',\n  'goland64.exe',\n  'rider.exe',\n  'rider64.exe',\n];\n\n// Transpiled version of: /^([A-Za-z]:[/\\\\])?[\\p{L}0-9/.\\-_\\\\]+$/u\n// Non-transpiled version requires support for Unicode property regex. Allows\n// alphanumeric characters, periods, dashes, slashes, and underscores.\nconst WINDOWS_FILE_NAME_WHITELIST = /^([A-Za-z]:[/\\\\])?(?:[\\x2D-9A-Z\\\\_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7B9\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFF1]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])+$/;\n\nfunction addWorkspaceToArgumentsIfExists(args, workspace) {\n  if (workspace) {\n    args.unshift(workspace);\n  }\n  return args;\n}\n\nfunction getArgumentsForLineNumber(\n  editor,\n  fileName,\n  lineNumber,\n  colNumber,\n  workspace\n) {\n  const editorBasename = path.basename(editor).replace(/\\.(exe|cmd|bat)$/i, '');\n  switch (editorBasename) {\n    case 'atom':\n    case 'Atom':\n    case 'Atom Beta':\n    case 'subl':\n    case 'sublime':\n    case 'sublime_text':\n      return [fileName + ':' + lineNumber + ':' + colNumber];\n    case 'wstorm':\n    case 'charm':\n      return [fileName + ':' + lineNumber];\n    case 'notepad++':\n      return ['-n' + lineNumber, '-c' + colNumber, fileName];\n    case 'vim':\n    case 'mvim':\n    case 'joe':\n    case 'gvim':\n      return ['+' + lineNumber, fileName];\n    case 'emacs':\n    case 'emacsclient':\n      return ['+' + lineNumber + ':' + colNumber, fileName];\n    case 'rmate':\n    case 'mate':\n    case 'mine':\n      return ['--line', lineNumber, fileName];\n    case 'code':\n    case 'Code':\n    case 'code-insiders':\n    case 'Code - Insiders':\n    case 'vscodium':\n    case 'VSCodium':\n      return addWorkspaceToArgumentsIfExists(\n        ['-g', fileName + ':' + lineNumber + ':' + colNumber],\n        workspace\n      );\n    case 'appcode':\n    case 'clion':\n    case 'clion64':\n    case 'idea':\n    case 'idea64':\n    case 'phpstorm':\n    case 'phpstorm64':\n    case 'pycharm':\n    case 'pycharm64':\n    case 'rubymine':\n    case 'rubymine64':\n    case 'webstorm':\n    case 'webstorm64':\n    case 'goland':\n    case 'goland64':\n    case 'rider':\n    case 'rider64':\n      return addWorkspaceToArgumentsIfExists(\n        ['--line', lineNumber, fileName],\n        workspace\n      );\n  }\n\n  // For all others, drop the lineNumber until we have\n  // a mapping above, since providing the lineNumber incorrectly\n  // can result in errors or confusing behavior.\n  return [fileName];\n}\n\nfunction guessEditor() {\n  // Explicit config always wins\n  if (process.env.REACT_EDITOR) {\n    return shellQuote.parse(process.env.REACT_EDITOR);\n  }\n\n  // We can find out which editor is currently running by:\n  // `ps x` on macOS and Linux\n  // `Get-Process` on Windows\n  try {\n    if (process.platform === 'darwin') {\n      const output = child_process.execSync('ps x').toString();\n      const processNames = Object.keys(COMMON_EDITORS_OSX);\n      for (let i = 0; i < processNames.length; i++) {\n        const processName = processNames[i];\n        if (output.indexOf(processName) !== -1) {\n          return [COMMON_EDITORS_OSX[processName]];\n        }\n      }\n    } else if (process.platform === 'win32') {\n      // Some processes need elevated rights to get its executable path.\n      // Just filter them out upfront. This also saves 10-20ms on the command.\n      const output = child_process\n        .execSync(\n          'wmic process where \"executablepath is not null\" get executablepath'\n        )\n        .toString();\n      const runningProcesses = output.split('\\r\\n');\n      for (let i = 0; i < runningProcesses.length; i++) {\n        const processPath = runningProcesses[i].trim();\n        const processName = path.basename(processPath);\n        if (COMMON_EDITORS_WIN.indexOf(processName) !== -1) {\n          return [processPath];\n        }\n      }\n    } else if (process.platform === 'linux') {\n      // --no-heading No header line\n      // x List all processes owned by you\n      // -o comm Need only names column\n      const output = child_process\n        .execSync('ps x --no-heading -o comm --sort=comm')\n        .toString();\n      const processNames = Object.keys(COMMON_EDITORS_LINUX);\n      for (let i = 0; i < processNames.length; i++) {\n        const processName = processNames[i];\n        if (output.indexOf(processName) !== -1) {\n          return [COMMON_EDITORS_LINUX[processName]];\n        }\n      }\n    }\n  } catch (error) {\n    // Ignore...\n  }\n\n  // Last resort, use old skool env vars\n  if (process.env.VISUAL) {\n    return [process.env.VISUAL];\n  } else if (process.env.EDITOR) {\n    return [process.env.EDITOR];\n  }\n\n  return [null];\n}\n\nfunction printInstructions(fileName, errorMessage) {\n  console.log();\n  console.log(\n    chalk.red('Could not open ' + path.basename(fileName) + ' in the editor.')\n  );\n  if (errorMessage) {\n    if (errorMessage[errorMessage.length - 1] !== '.') {\n      errorMessage += '.';\n    }\n    console.log(\n      chalk.red('The editor process exited with an error: ' + errorMessage)\n    );\n  }\n  console.log();\n  console.log(\n    'To set up the editor integration, add something like ' +\n      chalk.cyan('REACT_EDITOR=atom') +\n      ' to the ' +\n      chalk.green('.env.local') +\n      ' file in your project folder ' +\n      'and restart the development server. Learn more: ' +\n      chalk.green('https://goo.gl/MMTaZt')\n  );\n  console.log();\n}\n\nlet _childProcess = null;\nfunction launchEditor(fileName, lineNumber, colNumber) {\n  if (!fs.existsSync(fileName)) {\n    return;\n  }\n\n  // Sanitize lineNumber to prevent malicious use on win32\n  // via: https://github.com/nodejs/node/blob/c3bb4b1aa5e907d489619fb43d233c3336bfc03d/lib/child_process.js#L333\n  // and it should be a positive integer\n  if (!(Number.isInteger(lineNumber) && lineNumber > 0)) {\n    return;\n  }\n\n  // colNumber is optional, but should be a positive integer too\n  // default is 1\n  if (!(Number.isInteger(colNumber) && colNumber > 0)) {\n    colNumber = 1;\n  }\n\n  let [editor, ...args] = guessEditor();\n\n  if (!editor) {\n    printInstructions(fileName, null);\n    return;\n  }\n\n  if (editor.toLowerCase() === 'none') {\n    return;\n  }\n\n  if (\n    process.platform === 'linux' &&\n    fileName.startsWith('/mnt/') &&\n    /Microsoft/i.test(os.release())\n  ) {\n    // Assume WSL / \"Bash on Ubuntu on Windows\" is being used, and\n    // that the file exists on the Windows file system.\n    // `os.release()` is \"4.4.0-43-Microsoft\" in the current release\n    // build of WSL, see: https://github.com/Microsoft/BashOnWindows/issues/423#issuecomment-221627364\n    // When a Windows editor is specified, interop functionality can\n    // handle the path translation, but only if a relative path is used.\n    fileName = path.relative('', fileName);\n  }\n\n  // cmd.exe on Windows is vulnerable to RCE attacks given a file name of the\n  // form \"C:\\Users\\myusername\\Downloads\\& curl 172.21.93.52\". Use a whitelist\n  // to validate user-provided file names. This doesn't cover the entire range\n  // of valid file names but should cover almost all of them in practice.\n  if (\n    process.platform === 'win32' &&\n    !WINDOWS_FILE_NAME_WHITELIST.test(fileName.trim())\n  ) {\n    console.log();\n    console.log(\n      chalk.red('Could not open ' + path.basename(fileName) + ' in the editor.')\n    );\n    console.log();\n    console.log(\n      'When running on Windows, file names are checked against a whitelist ' +\n        'to protect against remote code execution attacks. File names may ' +\n        'consist only of alphanumeric characters (all languages), periods, ' +\n        'dashes, slashes, and underscores.'\n    );\n    console.log();\n    return;\n  }\n\n  let workspace = null;\n  if (lineNumber) {\n    args = args.concat(\n      getArgumentsForLineNumber(\n        editor,\n        fileName,\n        lineNumber,\n        colNumber,\n        workspace\n      )\n    );\n  } else {\n    args.push(fileName);\n  }\n\n  if (_childProcess && isTerminalEditor(editor)) {\n    // There's an existing editor process already and it's attached\n    // to the terminal, so go kill it. Otherwise two separate editor\n    // instances attach to the stdin/stdout which gets confusing.\n    _childProcess.kill('SIGKILL');\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows, launch the editor in a shell because spawn can only\n    // launch .exe files.\n    _childProcess = child_process.spawn(\n      'cmd.exe',\n      ['/C', editor].concat(args),\n      { stdio: 'inherit' }\n    );\n  } else {\n    _childProcess = child_process.spawn(editor, args, { stdio: 'inherit' });\n  }\n  _childProcess.on('exit', function(errorCode) {\n    _childProcess = null;\n\n    if (errorCode) {\n      printInstructions(fileName, '(code ' + errorCode + ')');\n    }\n  });\n\n  _childProcess.on('error', function(error) {\n    printInstructions(fileName, error.message);\n  });\n}\n\nmodule.exports = launchEditor;\n"]},"metadata":{},"sourceType":"script"}