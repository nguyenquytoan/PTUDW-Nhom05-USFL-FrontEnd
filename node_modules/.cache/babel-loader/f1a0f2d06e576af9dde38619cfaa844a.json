{"ast":null,"code":"/**\n * @fileoverview enforce default parameters to be last\n * @author Chiawen Chen\n */\n\"use strict\";\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"enforce default parameters to be last\",\n      category: \"Best Practices\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/default-param-last\"\n    },\n    schema: [],\n    messages: {\n      shouldBeLast: \"Default parameters should be last.\"\n    }\n  },\n\n  create(context) {\n    // eslint-disable-next-line jsdoc/require-description\n\n    /**\n     * @param {ASTNode} node function node\n     * @returns {void}\n     */\n    function handleFunction(node) {\n      let hasSeenPlainParam = false;\n\n      for (let i = node.params.length - 1; i >= 0; i -= 1) {\n        const param = node.params[i];\n\n        if (param.type !== \"AssignmentPattern\" && param.type !== \"RestElement\") {\n          hasSeenPlainParam = true;\n          continue;\n        }\n\n        if (hasSeenPlainParam && param.type === \"AssignmentPattern\") {\n          context.report({\n            node: param,\n            messageId: \"shouldBeLast\"\n          });\n        }\n      }\n    }\n\n    return {\n      FunctionDeclaration: handleFunction,\n      FunctionExpression: handleFunction,\n      ArrowFunctionExpression: handleFunction\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/lib/rules/default-param-last.js"],"names":["module","exports","meta","type","docs","description","category","recommended","url","schema","messages","shouldBeLast","create","context","handleFunction","node","hasSeenPlainParam","i","params","length","param","report","messageId","FunctionDeclaration","FunctionExpression","ArrowFunctionExpression"],"mappings":"AAAA;;;;AAKA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,uCADX;AAEFC,MAAAA,QAAQ,EAAE,gBAFR;AAGFC,MAAAA,WAAW,EAAE,KAHX;AAIFC,MAAAA,GAAG,EAAE;AAJH,KAHJ;AAUFC,IAAAA,MAAM,EAAE,EAVN;AAYFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,YAAY,EAAE;AADR;AAZR,GADO;;AAkBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ;;AACA;;;;AAIA,aAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,UAAIC,iBAAiB,GAAG,KAAxB;;AAEA,WAAK,IAAIC,CAAC,GAAGF,IAAI,CAACG,MAAL,CAAYC,MAAZ,GAAqB,CAAlC,EAAqCF,CAAC,IAAI,CAA1C,EAA6CA,CAAC,IAAI,CAAlD,EAAqD;AACjD,cAAMG,KAAK,GAAGL,IAAI,CAACG,MAAL,CAAYD,CAAZ,CAAd;;AAEA,YACIG,KAAK,CAACjB,IAAN,KAAe,mBAAf,IACAiB,KAAK,CAACjB,IAAN,KAAe,aAFnB,EAGE;AACEa,UAAAA,iBAAiB,GAAG,IAApB;AACA;AACH;;AAED,YAAIA,iBAAiB,IAAII,KAAK,CAACjB,IAAN,KAAe,mBAAxC,EAA6D;AACzDU,UAAAA,OAAO,CAACQ,MAAR,CAAe;AACXN,YAAAA,IAAI,EAAEK,KADK;AAEXE,YAAAA,SAAS,EAAE;AAFA,WAAf;AAIH;AACJ;AACJ;;AAED,WAAO;AACHC,MAAAA,mBAAmB,EAAET,cADlB;AAEHU,MAAAA,kBAAkB,EAAEV,cAFjB;AAGHW,MAAAA,uBAAuB,EAAEX;AAHtB,KAAP;AAKH;;AArDY,CAAjB","sourcesContent":["/**\n * @fileoverview enforce default parameters to be last\n * @author Chiawen Chen\n */\n\n\"use strict\";\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"enforce default parameters to be last\",\n            category: \"Best Practices\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/default-param-last\"\n        },\n\n        schema: [],\n\n        messages: {\n            shouldBeLast: \"Default parameters should be last.\"\n        }\n    },\n\n    create(context) {\n\n        // eslint-disable-next-line jsdoc/require-description\n        /**\n         * @param {ASTNode} node function node\n         * @returns {void}\n         */\n        function handleFunction(node) {\n            let hasSeenPlainParam = false;\n\n            for (let i = node.params.length - 1; i >= 0; i -= 1) {\n                const param = node.params[i];\n\n                if (\n                    param.type !== \"AssignmentPattern\" &&\n                    param.type !== \"RestElement\"\n                ) {\n                    hasSeenPlainParam = true;\n                    continue;\n                }\n\n                if (hasSeenPlainParam && param.type === \"AssignmentPattern\") {\n                    context.report({\n                        node: param,\n                        messageId: \"shouldBeLast\"\n                    });\n                }\n            }\n        }\n\n        return {\n            FunctionDeclaration: handleFunction,\n            FunctionExpression: handleFunction,\n            ArrowFunctionExpression: handleFunction\n        };\n    }\n};\n"]},"metadata":{},"sourceType":"script"}