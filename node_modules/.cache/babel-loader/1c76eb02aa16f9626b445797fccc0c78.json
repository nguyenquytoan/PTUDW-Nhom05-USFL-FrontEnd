{"ast":null,"code":"'use strict';\n\nvar flags = require('../');\n\nvar test = require('tape');\n\nvar has = require('has');\n\nvar getRegexLiteral = function (stringRegex) {\n  try {\n    /* jshint evil: true */\n\n    /* eslint-disable no-new-func */\n    return Function('return ' + stringRegex + ';')();\n    /* eslint-enable no-new-func */\n\n    /* jshint evil: false */\n  } catch (e) {\n    /**/\n  }\n\n  return null;\n};\n\nflags.shim();\nvar descriptor = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\n\nvar testGenericFlags = function (object) {\n  return descriptor.get.call(object);\n};\n\ntest('works as a function', function (t) {\n  t.equal(flags(/a/g), 'g', 'flags(/a/g) !== \"g\"');\n  t.equal(flags(/a/gmi), 'gim', 'flags(/a/gmi) !== \"gim\"');\n  t.equal(flags(new RegExp('a', 'gmi')), 'gim', 'flags(new RegExp(\"a\", \"gmi\")) !== \"gim\"');\n  t.equal(flags(/a/), '', 'flags(/a/) !== \"\"');\n  t.equal(flags(new RegExp('a')), '', 'flags(new RegExp(\"a\")) !== \"\"');\n  t.test('sticky flag', {\n    skip: !has(RegExp.prototype, 'sticky')\n  }, function (st) {\n    st.equal(flags(getRegexLiteral('/a/y')), 'y', 'flags(/a/y) !== \"y\"');\n    st.equal(flags(new RegExp('a', 'y')), 'y', 'flags(new RegExp(\"a\", \"y\")) !== \"y\"');\n    st.end();\n  });\n  t.test('unicode flag', {\n    skip: !has(RegExp.prototype, 'unicode')\n  }, function (st) {\n    st.equal(flags(getRegexLiteral('/a/u')), 'u', 'flags(/a/u) !== \"u\"');\n    st.equal(flags(new RegExp('a', 'u')), 'u', 'flags(new RegExp(\"a\", \"u\")) !== \"u\"');\n    st.end();\n  });\n  t.test('dotAll flag', {\n    skip: !has(RegExp.prototype, 'dotAll')\n  }, function (st) {\n    st.equal(flags(getRegexLiteral('/a/s')), 's', 'flags(/a/s) !== \"s\"');\n    st.equal(flags(new RegExp('a', 's')), 's', 'flags(new RegExp(\"a\", \"s\")) !== \"s\"');\n    st.end();\n  });\n  t.test('sorting', function (st) {\n    st.equal(flags(/a/gim), 'gim', 'flags(/a/gim) !== \"gim\"');\n    st.equal(flags(/a/mig), 'gim', 'flags(/a/mig) !== \"gim\"');\n    st.equal(flags(/a/mgi), 'gim', 'flags(/a/mgi) !== \"gim\"');\n\n    if (has(RegExp.prototype, 'sticky')) {\n      st.equal(flags(getRegexLiteral('/a/gyim')), 'gimy', 'flags(/a/gyim) !== \"gimy\"');\n    }\n\n    if (has(RegExp.prototype, 'unicode')) {\n      st.equal(flags(getRegexLiteral('/a/ugmi')), 'gimu', 'flags(/a/ugmi) !== \"gimu\"');\n    }\n\n    if (has(RegExp.prototype, 'dotAll')) {\n      st.equal(flags(getRegexLiteral('/a/sgmi')), 'gims', 'flags(/a/sgmi) !== \"gims\"');\n    }\n\n    st.end();\n  });\n  t.test('throws properly', function (st) {\n    var nonObjects = ['', false, true, 42, NaN, null, undefined];\n    st.plan(nonObjects.length);\n\n    var throwsOnNonObject = function (nonObject) {\n      st['throws'](Function.call.bind(nonObject), TypeError);\n    };\n\n    nonObjects.forEach(throwsOnNonObject);\n  });\n  t.end();\n});\ntest('shims properly', function (t) {\n  t.test('basic examples', function (st) {\n    st.equal(/a/g.flags, 'g', '(/a/g).flags !== \"g\"');\n    st.equal(/a/gmi.flags, 'gim', '(/a/gmi).flags !== \"gim\"');\n    st.equal(new RegExp('a', 'gmi').flags, 'gim', 'new RegExp(\"a\", \"gmi\").flags !== \"gim\"');\n    st.equal(/a/.flags, '', '(/a/).flags !== \"\"');\n    st.equal(new RegExp('a').flags, '', 'new RegExp(\"a\").flags !== \"\"');\n    st.end();\n  });\n  t.test('sticky flag', {\n    skip: !has(RegExp.prototype, 'sticky')\n  }, function (st) {\n    st.equal(getRegexLiteral('/a/y').flags, 'y', '(/a/y).flags !== \"y\"');\n    st.equal(new RegExp('a', 'y').flags, 'y', 'new RegExp(\"a\", \"y\").flags !== \"y\"');\n    st.end();\n  });\n  t.test('unicode flag', {\n    skip: !has(RegExp.prototype, 'unicode')\n  }, function (st) {\n    st.equal(getRegexLiteral('/a/u').flags, 'u', '(/a/u).flags !== \"u\"');\n    st.equal(new RegExp('a', 'u').flags, 'u', 'new RegExp(\"a\", \"u\").flags !== \"u\"');\n    st.end();\n  });\n  t.test('dotAll flag', {\n    skip: !has(RegExp.prototype, 'dotAll')\n  }, function (st) {\n    st.equal(getRegexLiteral('/a/s').flags, 's', '(/a/s).flags !== \"s\"');\n    st.equal(new RegExp('a', 's').flags, 's', 'new RegExp(\"a\", \"s\").flags !== \"s\"');\n    st.end();\n  });\n  t.test('sorting', function (st) {\n    st.equal(/a/gim.flags, 'gim', '(/a/gim).flags !== \"gim\"');\n    st.equal(/a/mig.flags, 'gim', '(/a/mig).flags !== \"gim\"');\n    st.equal(/a/mgi.flags, 'gim', '(/a/mgi).flags !== \"gim\"');\n\n    if (has(RegExp.prototype, 'sticky')) {\n      st.equal(getRegexLiteral('/a/gyim').flags, 'gimy', '(/a/gyim).flags !== \"gimy\"');\n    }\n\n    if (has(RegExp.prototype, 'unicode')) {\n      st.equal(getRegexLiteral('/a/ugmi').flags, 'gimu', '(/a/ugmi).flags !== \"gimu\"');\n    }\n\n    if (has(RegExp.prototype, 'dotAll')) {\n      st.equal(getRegexLiteral('/a/sgmi').flags, 'gims', '(/a/sgmi).flags !== \"gims\"');\n    }\n\n    st.end();\n  });\n  t.test('has the correct descriptor', function (st) {\n    st.equal(descriptor.configurable, true);\n    st.equal(descriptor.enumerable, false);\n    st.equal(typeof descriptor.get, 'function');\n    st.equal(descriptor.set, undefined);\n    st.end();\n  });\n  t.test('throws properly', function (st) {\n    var nonObjects = ['', false, true, 42, NaN, null, undefined];\n    st.plan(nonObjects.length);\n\n    var throwsOnNonObject = function (nonObject) {\n      st['throws'](testGenericFlags.bind(null, nonObject), TypeError);\n    };\n\n    nonObjects.forEach(throwsOnNonObject);\n  });\n  t.test('generic flags', function (st) {\n    st.equal(testGenericFlags({}), '');\n    st.equal(testGenericFlags({\n      ignoreCase: true\n    }), 'i');\n    st.equal(testGenericFlags({\n      dotAll: 1,\n      global: 0,\n      sticky: 1,\n      unicode: 1\n    }), 'suy');\n    st.equal(testGenericFlags({\n      __proto__: {\n        multiline: true\n      }\n    }), 'm');\n    st.end();\n  });\n  t.end();\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/regexp.prototype.flags/test/index.js"],"names":["flags","require","test","has","getRegexLiteral","stringRegex","Function","e","shim","descriptor","Object","getOwnPropertyDescriptor","RegExp","prototype","testGenericFlags","object","get","call","t","equal","skip","st","end","nonObjects","NaN","undefined","plan","length","throwsOnNonObject","nonObject","bind","TypeError","forEach","configurable","enumerable","set","ignoreCase","dotAll","global","sticky","unicode","__proto__","multiline"],"mappings":"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","sourcesContent":["'use strict';\n\nvar flags = require('../');\nvar test = require('tape');\nvar has = require('has');\n\nvar getRegexLiteral = function (stringRegex) {\n\ttry {\n\t\t/* jshint evil: true */\n\t\t/* eslint-disable no-new-func */\n\t\treturn Function('return ' + stringRegex + ';')();\n\t\t/* eslint-enable no-new-func */\n\t\t/* jshint evil: false */\n\t} catch (e) { /**/ }\n\treturn null;\n};\n\nflags.shim();\nvar descriptor = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\nvar testGenericFlags = function (object) {\n\treturn descriptor.get.call(object);\n};\n\ntest('works as a function', function (t) {\n\tt.equal(flags(/a/g), 'g', 'flags(/a/g) !== \"g\"');\n\tt.equal(flags(/a/gmi), 'gim', 'flags(/a/gmi) !== \"gim\"');\n\tt.equal(flags(new RegExp('a', 'gmi')), 'gim', 'flags(new RegExp(\"a\", \"gmi\")) !== \"gim\"');\n\tt.equal(flags(/a/), '', 'flags(/a/) !== \"\"');\n\tt.equal(flags(new RegExp('a')), '', 'flags(new RegExp(\"a\")) !== \"\"');\n\n\tt.test('sticky flag', { skip: !has(RegExp.prototype, 'sticky') }, function (st) {\n\t\tst.equal(flags(getRegexLiteral('/a/y')), 'y', 'flags(/a/y) !== \"y\"');\n\t\tst.equal(flags(new RegExp('a', 'y')), 'y', 'flags(new RegExp(\"a\", \"y\")) !== \"y\"');\n\t\tst.end();\n\t});\n\n\tt.test('unicode flag', { skip: !has(RegExp.prototype, 'unicode') }, function (st) {\n\t\tst.equal(flags(getRegexLiteral('/a/u')), 'u', 'flags(/a/u) !== \"u\"');\n\t\tst.equal(flags(new RegExp('a', 'u')), 'u', 'flags(new RegExp(\"a\", \"u\")) !== \"u\"');\n\t\tst.end();\n\t});\n\n\tt.test('dotAll flag', { skip: !has(RegExp.prototype, 'dotAll') }, function (st) {\n\t\tst.equal(flags(getRegexLiteral('/a/s')), 's', 'flags(/a/s) !== \"s\"');\n\t\tst.equal(flags(new RegExp('a', 's')), 's', 'flags(new RegExp(\"a\", \"s\")) !== \"s\"');\n\t\tst.end();\n\t});\n\n\tt.test('sorting', function (st) {\n\t\tst.equal(flags(/a/gim), 'gim', 'flags(/a/gim) !== \"gim\"');\n\t\tst.equal(flags(/a/mig), 'gim', 'flags(/a/mig) !== \"gim\"');\n\t\tst.equal(flags(/a/mgi), 'gim', 'flags(/a/mgi) !== \"gim\"');\n\t\tif (has(RegExp.prototype, 'sticky')) {\n\t\t\tst.equal(flags(getRegexLiteral('/a/gyim')), 'gimy', 'flags(/a/gyim) !== \"gimy\"');\n\t\t}\n\t\tif (has(RegExp.prototype, 'unicode')) {\n\t\t\tst.equal(flags(getRegexLiteral('/a/ugmi')), 'gimu', 'flags(/a/ugmi) !== \"gimu\"');\n\t\t}\n\t\tif (has(RegExp.prototype, 'dotAll')) {\n\t\t\tst.equal(flags(getRegexLiteral('/a/sgmi')), 'gims', 'flags(/a/sgmi) !== \"gims\"');\n\t\t}\n\t\tst.end();\n\t});\n\n\tt.test('throws properly', function (st) {\n\t\tvar nonObjects = ['', false, true, 42, NaN, null, undefined];\n\t\tst.plan(nonObjects.length);\n\t\tvar throwsOnNonObject = function (nonObject) {\n\t\t\tst['throws'](Function.call.bind(nonObject), TypeError);\n\t\t};\n\t\tnonObjects.forEach(throwsOnNonObject);\n\t});\n\tt.end();\n});\n\ntest('shims properly', function (t) {\n\tt.test('basic examples', function (st) {\n\t\tst.equal((/a/g).flags, 'g', '(/a/g).flags !== \"g\"');\n\t\tst.equal((/a/gmi).flags, 'gim', '(/a/gmi).flags !== \"gim\"');\n\t\tst.equal(new RegExp('a', 'gmi').flags, 'gim', 'new RegExp(\"a\", \"gmi\").flags !== \"gim\"');\n\t\tst.equal((/a/).flags, '', '(/a/).flags !== \"\"');\n\t\tst.equal(new RegExp('a').flags, '', 'new RegExp(\"a\").flags !== \"\"');\n\t\tst.end();\n\t});\n\n\tt.test('sticky flag', { skip: !has(RegExp.prototype, 'sticky') }, function (st) {\n\t\tst.equal(getRegexLiteral('/a/y').flags, 'y', '(/a/y).flags !== \"y\"');\n\t\tst.equal(new RegExp('a', 'y').flags, 'y', 'new RegExp(\"a\", \"y\").flags !== \"y\"');\n\t\tst.end();\n\t});\n\n\tt.test('unicode flag', { skip: !has(RegExp.prototype, 'unicode') }, function (st) {\n\t\tst.equal(getRegexLiteral('/a/u').flags, 'u', '(/a/u).flags !== \"u\"');\n\t\tst.equal(new RegExp('a', 'u').flags, 'u', 'new RegExp(\"a\", \"u\").flags !== \"u\"');\n\t\tst.end();\n\t});\n\n\tt.test('dotAll flag', { skip: !has(RegExp.prototype, 'dotAll') }, function (st) {\n\t\tst.equal(getRegexLiteral('/a/s').flags, 's', '(/a/s).flags !== \"s\"');\n\t\tst.equal(new RegExp('a', 's').flags, 's', 'new RegExp(\"a\", \"s\").flags !== \"s\"');\n\t\tst.end();\n\t});\n\n\tt.test('sorting', function (st) {\n\t\tst.equal((/a/gim).flags, 'gim', '(/a/gim).flags !== \"gim\"');\n\t\tst.equal((/a/mig).flags, 'gim', '(/a/mig).flags !== \"gim\"');\n\t\tst.equal((/a/mgi).flags, 'gim', '(/a/mgi).flags !== \"gim\"');\n\t\tif (has(RegExp.prototype, 'sticky')) {\n\t\t\tst.equal(getRegexLiteral('/a/gyim').flags, 'gimy', '(/a/gyim).flags !== \"gimy\"');\n\t\t}\n\t\tif (has(RegExp.prototype, 'unicode')) {\n\t\t\tst.equal(getRegexLiteral('/a/ugmi').flags, 'gimu', '(/a/ugmi).flags !== \"gimu\"');\n\t\t}\n\t\tif (has(RegExp.prototype, 'dotAll')) {\n\t\t\tst.equal(getRegexLiteral('/a/sgmi').flags, 'gims', '(/a/sgmi).flags !== \"gims\"');\n\t\t}\n\t\tst.end();\n\t});\n\n\tt.test('has the correct descriptor', function (st) {\n\t\tst.equal(descriptor.configurable, true);\n\t\tst.equal(descriptor.enumerable, false);\n\t\tst.equal(typeof descriptor.get, 'function');\n\t\tst.equal(descriptor.set, undefined);\n\t\tst.end();\n\t});\n\n\tt.test('throws properly', function (st) {\n\t\tvar nonObjects = ['', false, true, 42, NaN, null, undefined];\n\t\tst.plan(nonObjects.length);\n\t\tvar throwsOnNonObject = function (nonObject) {\n\t\t\tst['throws'](testGenericFlags.bind(null, nonObject), TypeError);\n\t\t};\n\t\tnonObjects.forEach(throwsOnNonObject);\n\t});\n\n\tt.test('generic flags', function (st) {\n\t\tst.equal(testGenericFlags({}), '');\n\t\tst.equal(testGenericFlags({ ignoreCase: true }), 'i');\n\t\tst.equal(testGenericFlags({ dotAll: 1, global: 0, sticky: 1, unicode: 1 }), 'suy');\n\t\tst.equal(testGenericFlags({ __proto__: { multiline: true } }), 'm');\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n"]},"metadata":{},"sourceType":"script"}