{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observable_1 = require(\"../Observable\");\n\nvar AsyncSubject_1 = require(\"../AsyncSubject\");\n\nvar map_1 = require(\"../operators/map\");\n\nvar canReportError_1 = require(\"../util/canReportError\");\n\nvar isScheduler_1 = require(\"../util/isScheduler\");\n\nvar isArray_1 = require(\"../util/isArray\");\n\nfunction bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if (isScheduler_1.isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map_1.map(function (args) {\n          return isArray_1.isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n        }));\n      };\n    }\n  }\n\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var params = {\n      subject: undefined,\n      args: args,\n      callbackFunc: callbackFunc,\n      scheduler: scheduler,\n      context: this\n    };\n    return new Observable_1.Observable(function (subscriber) {\n      var context = params.context;\n      var subject = params.subject;\n\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject_1.AsyncSubject();\n\n          var handler = function () {\n            var innerArgs = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              innerArgs[_i] = arguments[_i];\n            }\n\n            var err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, args.concat([handler]));\n          } catch (err) {\n            if (canReportError_1.canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule(dispatch, 0, {\n          params: params,\n          subscriber: subscriber,\n          context: context\n        });\n      }\n    });\n  };\n}\n\nexports.bindNodeCallback = bindNodeCallback;\n\nfunction dispatch(state) {\n  var _this = this;\n\n  var params = state.params,\n      subscriber = state.subscriber,\n      context = state.context;\n  var callbackFunc = params.callbackFunc,\n      args = params.args,\n      scheduler = params.scheduler;\n  var subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject_1.AsyncSubject();\n\n    var handler = function () {\n      var innerArgs = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        innerArgs[_i] = arguments[_i];\n      }\n\n      var err = innerArgs.shift();\n\n      if (err) {\n        _this.add(scheduler.schedule(dispatchError, 0, {\n          err: err,\n          subject: subject\n        }));\n      } else {\n        var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n\n        _this.add(scheduler.schedule(dispatchNext, 0, {\n          value: value,\n          subject: subject\n        }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, args.concat([handler]));\n    } catch (err) {\n      this.add(scheduler.schedule(dispatchError, 0, {\n        err: err,\n        subject: subject\n      }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\nfunction dispatchNext(arg) {\n  var value = arg.value,\n      subject = arg.subject;\n  subject.next(value);\n  subject.complete();\n}\n\nfunction dispatchError(arg) {\n  var err = arg.err,\n      subject = arg.subject;\n  subject.error(err);\n}","map":{"version":3,"sources":["../../src/internal/observable/bindNodeCallback.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar AsyncSubject_1 = require(\"../AsyncSubject\");\nvar map_1 = require(\"../operators/map\");\nvar canReportError_1 = require(\"../util/canReportError\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\nvar isArray_1 = require(\"../util/isArray\");\nfunction bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler_1.isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map_1.map(function (args) { return isArray_1.isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var params = {\n            subject: undefined,\n            args: args,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n            context: this,\n        };\n        return new Observable_1.Observable(function (subscriber) {\n            var context = params.context;\n            var subject = params.subject;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject_1.AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        var err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        if (canReportError_1.canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params: params, subscriber: subscriber, context: context });\n            }\n        });\n    };\n}\nexports.bindNodeCallback = bindNodeCallback;\nfunction dispatch(state) {\n    var _this = this;\n    var params = state.params, subscriber = state.subscriber, context = state.context;\n    var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var err = innerArgs.shift();\n            if (err) {\n                _this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n            }\n            else {\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindNodeCallback.js.map"]},"metadata":{},"sourceType":"script"}