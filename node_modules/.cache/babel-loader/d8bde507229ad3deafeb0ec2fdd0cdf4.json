{"ast":null,"code":"/* eslint-env mocha */\nimport assert from 'assert';\nimport includes from 'array-includes';\nimport eventHandlers, { eventHandlersByType } from '../../src/eventHandlers';\ndescribe('eventHandlers', () => {\n  it('should contain a list of common JSX event handlers', () => {\n    assert(['onCopy', 'onCut', 'onPaste', 'onCompositionEnd', 'onCompositionStart', 'onCompositionUpdate', 'onKeyDown', 'onKeyPress', 'onKeyUp', 'onFocus', 'onBlur', 'onChange', 'onInput', 'onSubmit', 'onClick', 'onContextMenu', 'onDblClick', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', 'onSelect', 'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart', 'onScroll', 'onWheel', 'onAbort', 'onCanPlay', 'onCanPlayThrough', 'onDurationChange', 'onEmptied', 'onEncrypted', 'onEnded', 'onError', 'onLoadedData', 'onLoadedMetadata', 'onLoadStart', 'onPause', 'onPlay', 'onPlaying', 'onProgress', 'onRateChange', 'onSeeked', 'onSeeking', 'onStalled', 'onSuspend', 'onTimeUpdate', 'onVolumeChange', 'onWaiting', 'onLoad', 'onError', 'onAnimationStart', 'onAnimationEnd', 'onAnimationIteration', 'onTransitionEnd'].every(handlerName => includes(eventHandlers, handlerName)));\n  });\n});\ndescribe('eventHandlersByType', () => {\n  it('should be keyed by type', () => {\n    assert(['clipboard', 'composition', 'keyboard', 'focus', 'form', 'mouse', 'selection', 'touch', 'ui', 'wheel', 'media', 'image', 'animation', 'transition'].every(type => !!eventHandlersByType[type]));\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jsx-ast-utils/__tests__/src/eventHandlers-test.js"],"names":["assert","includes","eventHandlers","eventHandlersByType","describe","it","every","handlerName","type"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,aAAP,IAAwBC,mBAAxB,QAAmD,yBAAnD;AAEAC,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC9BC,EAAAA,EAAE,CAAC,oDAAD,EAAuD,MAAM;AAC7DL,IAAAA,MAAM,CAAC,CACL,QADK,EAEL,OAFK,EAGL,SAHK,EAIL,kBAJK,EAKL,oBALK,EAML,qBANK,EAOL,WAPK,EAQL,YARK,EASL,SATK,EAUL,SAVK,EAWL,QAXK,EAYL,UAZK,EAaL,SAbK,EAcL,UAdK,EAeL,SAfK,EAgBL,eAhBK,EAiBL,YAjBK,EAkBL,eAlBK,EAmBL,QAnBK,EAoBL,WApBK,EAqBL,aArBK,EAsBL,YAtBK,EAuBL,aAvBK,EAwBL,YAxBK,EAyBL,aAzBK,EA0BL,QA1BK,EA2BL,aA3BK,EA4BL,cA5BK,EA6BL,cA7BK,EA8BL,aA9BK,EA+BL,YA/BK,EAgCL,aAhCK,EAiCL,WAjCK,EAkCL,UAlCK,EAmCL,eAnCK,EAoCL,YApCK,EAqCL,aArCK,EAsCL,cAtCK,EAuCL,UAvCK,EAwCL,SAxCK,EAyCL,SAzCK,EA0CL,WA1CK,EA2CL,kBA3CK,EA4CL,kBA5CK,EA6CL,WA7CK,EA8CL,aA9CK,EA+CL,SA/CK,EAgDL,SAhDK,EAiDL,cAjDK,EAkDL,kBAlDK,EAmDL,aAnDK,EAoDL,SApDK,EAqDL,QArDK,EAsDL,WAtDK,EAuDL,YAvDK,EAwDL,cAxDK,EAyDL,UAzDK,EA0DL,WA1DK,EA2DL,WA3DK,EA4DL,WA5DK,EA6DL,cA7DK,EA8DL,gBA9DK,EA+DL,WA/DK,EAgEL,QAhEK,EAiEL,SAjEK,EAkEL,kBAlEK,EAmEL,gBAnEK,EAoEL,sBApEK,EAqEL,iBArEK,EAsELM,KAtEK,CAsEEC,WAAD,IAAiBN,QAAQ,CAACC,aAAD,EAAgBK,WAAhB,CAtE1B,CAAD,CAAN;AAuED,GAxEC,CAAF;AAyED,CA1EO,CAAR;AA4EAH,QAAQ,CAAC,qBAAD,EAAwB,MAAM;AACpCC,EAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAClCL,IAAAA,MAAM,CAAC,CACL,WADK,EAEL,aAFK,EAGL,UAHK,EAIL,OAJK,EAKL,MALK,EAML,OANK,EAOL,WAPK,EAQL,OARK,EASL,IATK,EAUL,OAVK,EAWL,OAXK,EAYL,OAZK,EAaL,WAbK,EAcL,YAdK,EAeLM,KAfK,CAeEE,IAAD,IAAU,CAAC,CAACL,mBAAmB,CAACK,IAAD,CAfhC,CAAD,CAAN;AAgBD,GAjBC,CAAF;AAkBD,CAnBO,CAAR","sourcesContent":["/* eslint-env mocha */\nimport assert from 'assert';\nimport includes from 'array-includes';\nimport eventHandlers, { eventHandlersByType } from '../../src/eventHandlers';\n\ndescribe('eventHandlers', () => {\n  it('should contain a list of common JSX event handlers', () => {\n    assert([\n      'onCopy',\n      'onCut',\n      'onPaste',\n      'onCompositionEnd',\n      'onCompositionStart',\n      'onCompositionUpdate',\n      'onKeyDown',\n      'onKeyPress',\n      'onKeyUp',\n      'onFocus',\n      'onBlur',\n      'onChange',\n      'onInput',\n      'onSubmit',\n      'onClick',\n      'onContextMenu',\n      'onDblClick',\n      'onDoubleClick',\n      'onDrag',\n      'onDragEnd',\n      'onDragEnter',\n      'onDragExit',\n      'onDragLeave',\n      'onDragOver',\n      'onDragStart',\n      'onDrop',\n      'onMouseDown',\n      'onMouseEnter',\n      'onMouseLeave',\n      'onMouseMove',\n      'onMouseOut',\n      'onMouseOver',\n      'onMouseUp',\n      'onSelect',\n      'onTouchCancel',\n      'onTouchEnd',\n      'onTouchMove',\n      'onTouchStart',\n      'onScroll',\n      'onWheel',\n      'onAbort',\n      'onCanPlay',\n      'onCanPlayThrough',\n      'onDurationChange',\n      'onEmptied',\n      'onEncrypted',\n      'onEnded',\n      'onError',\n      'onLoadedData',\n      'onLoadedMetadata',\n      'onLoadStart',\n      'onPause',\n      'onPlay',\n      'onPlaying',\n      'onProgress',\n      'onRateChange',\n      'onSeeked',\n      'onSeeking',\n      'onStalled',\n      'onSuspend',\n      'onTimeUpdate',\n      'onVolumeChange',\n      'onWaiting',\n      'onLoad',\n      'onError',\n      'onAnimationStart',\n      'onAnimationEnd',\n      'onAnimationIteration',\n      'onTransitionEnd',\n    ].every((handlerName) => includes(eventHandlers, handlerName)));\n  });\n});\n\ndescribe('eventHandlersByType', () => {\n  it('should be keyed by type', () => {\n    assert([\n      'clipboard',\n      'composition',\n      'keyboard',\n      'focus',\n      'form',\n      'mouse',\n      'selection',\n      'touch',\n      'ui',\n      'wheel',\n      'media',\n      'image',\n      'animation',\n      'transition',\n    ].every((type) => !!eventHandlersByType[type]));\n  });\n});\n"]},"metadata":{},"sourceType":"module"}