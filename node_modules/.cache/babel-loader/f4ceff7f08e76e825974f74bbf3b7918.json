{"ast":null,"code":"\"use strict\";\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nconst stringify = require('json-stable-stringify');\n/**\n * The variable name that workbox-sw expects manifest entries to be assigned.\n * @type {String}\n * @private\n */\n\n\nconst PRECACHE_MANIFEST_VAR = '__precacheManifest';\n/**\n * Generates a template string from an array of manifest entries that can be\n * written to a manifest file.\n *\n * @function generateManifestWithWebpack\n * @param {Array<module:workbox-build.ManifestEntry>} manifestEntries\n * @return {string} service worker manifest file string\n *\n * @private\n */\n\nmodule.exports = manifestEntries => {\n  const sortedEntries = manifestEntries.sort((a, b) => a.url === b.url ? 0 : a.url > b.url ? 1 : -1); // json-stable-stringify ensures that we get a consistent output, with all\n  // the properties of each object sorted.\n  // There's a hash created of the serialized JSON data, and we want the hash to\n  // be the same if the data is the same, without any sort-order variation.\n\n  const entriesJson = stringify(sortedEntries, {\n    space: 2\n  });\n  return `self.${PRECACHE_MANIFEST_VAR} = (self.${PRECACHE_MANIFEST_VAR} || ` + `[]).concat(${entriesJson});`;\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-webpack-plugin/build/lib/stringify-manifest.js"],"names":["stringify","require","PRECACHE_MANIFEST_VAR","module","exports","manifestEntries","sortedEntries","sort","a","b","url","entriesJson","space"],"mappings":"AAAA;AAEA;;;;;;;;AAOA,MAAMA,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAzB;AACA;;;;;;;AAOA,MAAMC,qBAAqB,GAAG,oBAA9B;AACA;;;;;;;;;;;AAWAC,MAAM,CAACC,OAAP,GAAiBC,eAAe,IAAI;AAClC,QAAMC,aAAa,GAAGD,eAAe,CAACE,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,GAAF,KAAUD,CAAC,CAACC,GAAZ,GAAkB,CAAlB,GAAsBF,CAAC,CAACE,GAAF,GAAQD,CAAC,CAACC,GAAV,GAAgB,CAAhB,GAAoB,CAAC,CAA1E,CAAtB,CADkC,CACkE;AACpG;AACA;AACA;;AAEA,QAAMC,WAAW,GAAGX,SAAS,CAACM,aAAD,EAAgB;AAC3CM,IAAAA,KAAK,EAAE;AADoC,GAAhB,CAA7B;AAGA,SAAQ,QAAOV,qBAAsB,YAAWA,qBAAsB,MAA/D,GAAwE,cAAaS,WAAY,IAAxG;AACD,CAVD","sourcesContent":["\"use strict\";\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nconst stringify = require('json-stable-stringify');\n/**\n * The variable name that workbox-sw expects manifest entries to be assigned.\n * @type {String}\n * @private\n */\n\n\nconst PRECACHE_MANIFEST_VAR = '__precacheManifest';\n/**\n * Generates a template string from an array of manifest entries that can be\n * written to a manifest file.\n *\n * @function generateManifestWithWebpack\n * @param {Array<module:workbox-build.ManifestEntry>} manifestEntries\n * @return {string} service worker manifest file string\n *\n * @private\n */\n\nmodule.exports = manifestEntries => {\n  const sortedEntries = manifestEntries.sort((a, b) => a.url === b.url ? 0 : a.url > b.url ? 1 : -1); // json-stable-stringify ensures that we get a consistent output, with all\n  // the properties of each object sorted.\n  // There's a hash created of the serialized JSON data, and we want the hash to\n  // be the same if the data is the same, without any sort-order variation.\n\n  const entriesJson = stringify(sortedEntries, {\n    space: 2\n  });\n  return `self.${PRECACHE_MANIFEST_VAR} = (self.${PRECACHE_MANIFEST_VAR} || ` + `[]).concat(${entriesJson});`;\n};"]},"metadata":{},"sourceType":"script"}