{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _has = require('has');\n\nvar _has2 = _interopRequireDefault(_has);\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nvar _cssnanoUtilGetMatch = require('cssnano-util-get-match');\n\nvar _cssnanoUtilGetMatch2 = _interopRequireDefault(_cssnanoUtilGetMatch);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getValues(list, {\n  value\n}, index) {\n  if (index % 2 === 0) {\n    return [...list, parseFloat(value)];\n  }\n\n  return list;\n}\n\nfunction matrix3d(node, values) {\n  // matrix3d(a, b, 0, 0, c, d, 0, 0, 0, 0, 1, 0, tx, ty, 0, 1) => matrix(a, b, c, d, tx, ty)\n  if (values[15] && values[2] === 0 && values[3] === 0 && values[6] === 0 && values[7] === 0 && values[8] === 0 && values[9] === 0 && values[10] === 1 && values[11] === 0 && values[14] === 0 && values[15] === 1) {\n    const {\n      nodes\n    } = node;\n    node.value = 'matrix';\n    node.nodes = [nodes[0], // a\n    nodes[1], // ,\n    nodes[2], // b\n    nodes[3], // ,\n    nodes[8], // c\n    nodes[9], // ,\n    nodes[10], // d\n    nodes[11], // ,\n    nodes[24], // tx\n    nodes[25], // ,\n    nodes[26]];\n  }\n}\n\nconst rotate3dMappings = [['rotateX', [1, 0, 0]], // rotate3d(1, 0, 0, a) => rotateX(a)\n['rotateY', [0, 1, 0]], // rotate3d(0, 1, 0, a) => rotateY(a)\n['rotate', [0, 0, 1]]];\nconst rotate3dMatch = (0, _cssnanoUtilGetMatch2.default)(rotate3dMappings);\n\nfunction rotate3d(node, values) {\n  const {\n    nodes\n  } = node;\n  const match = rotate3dMatch(values.slice(0, 3));\n\n  if (match.length) {\n    node.value = match;\n    node.nodes = [nodes[6]];\n  }\n}\n\nfunction rotateZ(node) {\n  // rotateZ(rz) => rotate(rz)\n  node.value = 'rotate';\n}\n\nfunction scale(node, values) {\n  const {\n    nodes\n  } = node;\n\n  if (!nodes[2]) {\n    return;\n  }\n\n  const [first, second] = values; // scale(sx, sy) => scale(sx)\n\n  if (first === second) {\n    node.nodes = [nodes[0]];\n    return;\n  } // scale(sx, 1) => scaleX(sx)\n\n\n  if (second === 1) {\n    node.value = 'scaleX';\n    node.nodes = [nodes[0]];\n    return;\n  } // scale(1, sy) => scaleY(sy)\n\n\n  if (first === 1) {\n    node.value = 'scaleY';\n    node.nodes = [nodes[2]];\n    return;\n  }\n}\n\nfunction scale3d(node, values) {\n  const {\n    nodes\n  } = node;\n  const [first, second, third] = values; // scale3d(sx, 1, 1) => scaleX(sx)\n\n  if (second === 1 && third === 1) {\n    node.value = 'scaleX';\n    node.nodes = [nodes[0]];\n    return;\n  } // scale3d(1, sy, 1) => scaleY(sy)\n\n\n  if (first === 1 && third === 1) {\n    node.value = 'scaleY';\n    node.nodes = [nodes[2]];\n    return;\n  } // scale3d(1, 1, sz) => scaleZ(sz)\n\n\n  if (first === 1 && second === 1) {\n    node.value = 'scaleZ';\n    node.nodes = [nodes[4]];\n    return;\n  }\n}\n\nfunction translate(node, values) {\n  const {\n    nodes\n  } = node;\n\n  if (!nodes[2]) {\n    return;\n  } // translate(tx, 0) => translate(tx)\n\n\n  if (values[1] === 0) {\n    node.nodes = [nodes[0]];\n    return;\n  } // translate(0, ty) => translateY(ty)\n\n\n  if (values[0] === 0) {\n    node.value = 'translateY';\n    node.nodes = [nodes[2]];\n    return;\n  }\n}\n\nfunction translate3d(node, values) {\n  const {\n    nodes\n  } = node; // translate3d(0, 0, tz) => translateZ(tz)\n\n  if (values[0] === 0 && values[1] === 0) {\n    node.value = 'translateZ';\n    node.nodes = [nodes[4]];\n  }\n}\n\nconst reducers = {\n  matrix3d,\n  rotate3d,\n  rotateZ,\n  scale,\n  scale3d,\n  translate,\n  translate3d\n};\n\nfunction normalizeReducerName(name) {\n  const lowerCasedName = name.toLowerCase();\n\n  if (lowerCasedName === 'rotatez') {\n    return 'rotateZ';\n  }\n\n  return lowerCasedName;\n}\n\nfunction reduce(node) {\n  const {\n    nodes,\n    type,\n    value\n  } = node;\n  const normalizedReducerName = normalizeReducerName(value);\n\n  if (type === 'function' && (0, _has2.default)(reducers, normalizedReducerName)) {\n    reducers[normalizedReducerName](node, nodes.reduce(getValues, []));\n  }\n\n  return false;\n}\n\nexports.default = _postcss2.default.plugin('postcss-reduce-transforms', () => {\n  return css => {\n    const cache = {};\n    css.walkDecls(/transform$/i, decl => {\n      const value = decl.value;\n\n      if (cache[value]) {\n        decl.value = cache[value];\n        return;\n      }\n\n      const result = (0, _postcssValueParser2.default)(value).walk(reduce).toString();\n      decl.value = result;\n      cache[value] = result;\n    });\n  };\n});\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-reduce-transforms/dist/index.js"],"names":["Object","defineProperty","exports","value","_has","require","_has2","_interopRequireDefault","_postcss","_postcss2","_postcssValueParser","_postcssValueParser2","_cssnanoUtilGetMatch","_cssnanoUtilGetMatch2","obj","__esModule","default","getValues","list","index","parseFloat","matrix3d","node","values","nodes","rotate3dMappings","rotate3dMatch","rotate3d","match","slice","length","rotateZ","scale","first","second","scale3d","third","translate","translate3d","reducers","normalizeReducerName","name","lowerCasedName","toLowerCase","reduce","type","normalizedReducerName","plugin","css","cache","walkDecls","decl","result","walk","toString","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _has = require('has');\n\nvar _has2 = _interopRequireDefault(_has);\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nvar _cssnanoUtilGetMatch = require('cssnano-util-get-match');\n\nvar _cssnanoUtilGetMatch2 = _interopRequireDefault(_cssnanoUtilGetMatch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getValues(list, { value }, index) {\n    if (index % 2 === 0) {\n        return [...list, parseFloat(value)];\n    }\n\n    return list;\n}\n\nfunction matrix3d(node, values) {\n    // matrix3d(a, b, 0, 0, c, d, 0, 0, 0, 0, 1, 0, tx, ty, 0, 1) => matrix(a, b, c, d, tx, ty)\n    if (values[15] && values[2] === 0 && values[3] === 0 && values[6] === 0 && values[7] === 0 && values[8] === 0 && values[9] === 0 && values[10] === 1 && values[11] === 0 && values[14] === 0 && values[15] === 1) {\n        const { nodes } = node;\n\n        node.value = 'matrix';\n        node.nodes = [nodes[0], // a\n        nodes[1], // ,\n        nodes[2], // b\n        nodes[3], // ,\n        nodes[8], // c\n        nodes[9], // ,\n        nodes[10], // d\n        nodes[11], // ,\n        nodes[24], // tx\n        nodes[25], // ,\n        nodes[26]];\n    }\n}\n\nconst rotate3dMappings = [['rotateX', [1, 0, 0]], // rotate3d(1, 0, 0, a) => rotateX(a)\n['rotateY', [0, 1, 0]], // rotate3d(0, 1, 0, a) => rotateY(a)\n['rotate', [0, 0, 1]]];\n\nconst rotate3dMatch = (0, _cssnanoUtilGetMatch2.default)(rotate3dMappings);\n\nfunction rotate3d(node, values) {\n    const { nodes } = node;\n    const match = rotate3dMatch(values.slice(0, 3));\n\n    if (match.length) {\n        node.value = match;\n        node.nodes = [nodes[6]];\n    }\n}\n\nfunction rotateZ(node) {\n    // rotateZ(rz) => rotate(rz)\n    node.value = 'rotate';\n}\n\nfunction scale(node, values) {\n    const { nodes } = node;\n\n    if (!nodes[2]) {\n        return;\n    }\n\n    const [first, second] = values;\n\n    // scale(sx, sy) => scale(sx)\n    if (first === second) {\n        node.nodes = [nodes[0]];\n\n        return;\n    }\n\n    // scale(sx, 1) => scaleX(sx)\n    if (second === 1) {\n        node.value = 'scaleX';\n        node.nodes = [nodes[0]];\n\n        return;\n    }\n\n    // scale(1, sy) => scaleY(sy)\n    if (first === 1) {\n        node.value = 'scaleY';\n        node.nodes = [nodes[2]];\n\n        return;\n    }\n}\n\nfunction scale3d(node, values) {\n    const { nodes } = node;\n    const [first, second, third] = values;\n\n    // scale3d(sx, 1, 1) => scaleX(sx)\n    if (second === 1 && third === 1) {\n        node.value = 'scaleX';\n        node.nodes = [nodes[0]];\n\n        return;\n    }\n\n    // scale3d(1, sy, 1) => scaleY(sy)\n    if (first === 1 && third === 1) {\n        node.value = 'scaleY';\n        node.nodes = [nodes[2]];\n\n        return;\n    }\n\n    // scale3d(1, 1, sz) => scaleZ(sz)\n    if (first === 1 && second === 1) {\n        node.value = 'scaleZ';\n        node.nodes = [nodes[4]];\n\n        return;\n    }\n}\n\nfunction translate(node, values) {\n    const { nodes } = node;\n\n    if (!nodes[2]) {\n        return;\n    }\n\n    // translate(tx, 0) => translate(tx)\n    if (values[1] === 0) {\n        node.nodes = [nodes[0]];\n\n        return;\n    }\n\n    // translate(0, ty) => translateY(ty)\n    if (values[0] === 0) {\n        node.value = 'translateY';\n        node.nodes = [nodes[2]];\n\n        return;\n    }\n}\n\nfunction translate3d(node, values) {\n    const { nodes } = node;\n\n    // translate3d(0, 0, tz) => translateZ(tz)\n    if (values[0] === 0 && values[1] === 0) {\n        node.value = 'translateZ';\n        node.nodes = [nodes[4]];\n    }\n}\n\nconst reducers = {\n    matrix3d,\n    rotate3d,\n    rotateZ,\n    scale,\n    scale3d,\n    translate,\n    translate3d\n};\n\nfunction normalizeReducerName(name) {\n    const lowerCasedName = name.toLowerCase();\n\n    if (lowerCasedName === 'rotatez') {\n        return 'rotateZ';\n    }\n\n    return lowerCasedName;\n}\n\nfunction reduce(node) {\n    const { nodes, type, value } = node;\n    const normalizedReducerName = normalizeReducerName(value);\n\n    if (type === 'function' && (0, _has2.default)(reducers, normalizedReducerName)) {\n        reducers[normalizedReducerName](node, nodes.reduce(getValues, []));\n    }\n\n    return false;\n}\n\nexports.default = _postcss2.default.plugin('postcss-reduce-transforms', () => {\n    return css => {\n        const cache = {};\n\n        css.walkDecls(/transform$/i, decl => {\n            const value = decl.value;\n\n            if (cache[value]) {\n                decl.value = cache[value];\n\n                return;\n            }\n\n            const result = (0, _postcssValueParser2.default)(value).walk(reduce).toString();\n\n            decl.value = result;\n            cache[value] = result;\n        });\n    };\n});\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}