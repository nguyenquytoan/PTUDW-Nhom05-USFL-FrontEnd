{"ast":null,"code":"var zero = '0'.charCodeAt(0);\nvar plus = '+'.charCodeAt(0);\nvar minus = '-'.charCodeAt(0);\n\nfunction isWhitespace(code) {\n  return code <= 32;\n}\n\nfunction isDigit(code) {\n  return 48 <= code && code <= 57;\n}\n\nfunction isSign(code) {\n  return code === minus || code === plus;\n}\n\nmodule.exports = function (opts, a, b) {\n  var checkSign = opts.sign;\n  var ia = 0;\n  var ib = 0;\n  var ma = a.length;\n  var mb = b.length;\n  var ca, cb; // character code\n\n  var za, zb; // leading zero count\n\n  var na, nb; // number length\n\n  var sa, sb; // number sign\n\n  var ta, tb; // temporary\n\n  var bias;\n\n  while (ia < ma && ib < mb) {\n    ca = a.charCodeAt(ia);\n    cb = b.charCodeAt(ib);\n    za = zb = 0;\n    na = nb = 0;\n    sa = sb = true;\n    bias = 0; // skip over leading spaces\n\n    while (isWhitespace(ca)) {\n      ia += 1;\n      ca = a.charCodeAt(ia);\n    }\n\n    while (isWhitespace(cb)) {\n      ib += 1;\n      cb = b.charCodeAt(ib);\n    } // skip and save sign\n\n\n    if (checkSign) {\n      ta = a.charCodeAt(ia + 1);\n\n      if (isSign(ca) && isDigit(ta)) {\n        if (ca === minus) {\n          sa = false;\n        }\n\n        ia += 1;\n        ca = ta;\n      }\n\n      tb = b.charCodeAt(ib + 1);\n\n      if (isSign(cb) && isDigit(tb)) {\n        if (cb === minus) {\n          sb = false;\n        }\n\n        ib += 1;\n        cb = tb;\n      }\n    } // compare digits with other symbols\n\n\n    if (isDigit(ca) && !isDigit(cb)) {\n      return -1;\n    }\n\n    if (!isDigit(ca) && isDigit(cb)) {\n      return 1;\n    } // compare negative and positive\n\n\n    if (!sa && sb) {\n      return -1;\n    }\n\n    if (sa && !sb) {\n      return 1;\n    } // count leading zeros\n\n\n    while (ca === zero) {\n      za += 1;\n      ia += 1;\n      ca = a.charCodeAt(ia);\n    }\n\n    while (cb === zero) {\n      zb += 1;\n      ib += 1;\n      cb = b.charCodeAt(ib);\n    } // count numbers\n\n\n    while (isDigit(ca) || isDigit(cb)) {\n      if (isDigit(ca) && isDigit(cb) && bias === 0) {\n        if (sa) {\n          if (ca < cb) {\n            bias = -1;\n          } else if (ca > cb) {\n            bias = 1;\n          }\n        } else {\n          if (ca > cb) {\n            bias = -1;\n          } else if (ca < cb) {\n            bias = 1;\n          }\n        }\n      }\n\n      if (isDigit(ca)) {\n        ia += 1;\n        na += 1;\n        ca = a.charCodeAt(ia);\n      }\n\n      if (isDigit(cb)) {\n        ib += 1;\n        nb += 1;\n        cb = b.charCodeAt(ib);\n      }\n    } // compare number length\n\n\n    if (sa) {\n      if (na < nb) {\n        return -1;\n      }\n\n      if (na > nb) {\n        return 1;\n      }\n    } else {\n      if (na > nb) {\n        return -1;\n      }\n\n      if (na < nb) {\n        return 1;\n      }\n    } // compare numbers\n\n\n    if (bias) {\n      return bias;\n    } // compare leading zeros\n\n\n    if (sa) {\n      if (za > zb) {\n        return -1;\n      }\n\n      if (za < zb) {\n        return 1;\n      }\n    } else {\n      if (za < zb) {\n        return -1;\n      }\n\n      if (za > zb) {\n        return 1;\n      }\n    } // compare ascii codes\n\n\n    if (ca < cb) {\n      return -1;\n    }\n\n    if (ca > cb) {\n      return 1;\n    }\n\n    ia += 1;\n    ib += 1;\n  } // compare length\n\n\n  if (ma < mb) {\n    return -1;\n  }\n\n  if (ma > mb) {\n    return 1;\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/alphanum-sort/lib/compare.js"],"names":["zero","charCodeAt","plus","minus","isWhitespace","code","isDigit","isSign","module","exports","opts","a","b","checkSign","sign","ia","ib","ma","length","mb","ca","cb","za","zb","na","nb","sa","sb","ta","tb","bias"],"mappings":"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","sourcesContent":["var zero = '0'.charCodeAt(0);\r\nvar plus = '+'.charCodeAt(0);\r\nvar minus = '-'.charCodeAt(0);\r\n\r\nfunction isWhitespace(code) {\r\n\treturn code <= 32;\r\n}\r\n\r\nfunction isDigit(code) {\r\n\treturn 48 <= code && code <= 57;\r\n}\r\n\r\nfunction isSign(code) {\r\n\treturn code === minus || code === plus;\r\n}\r\n\r\nmodule.exports = function (opts, a, b) {\r\n\tvar checkSign = opts.sign;\r\n\tvar ia = 0;\r\n\tvar ib = 0;\r\n\tvar ma = a.length;\r\n\tvar mb = b.length;\r\n\tvar ca, cb; // character code\r\n\tvar za, zb; // leading zero count\r\n\tvar na, nb; // number length\r\n\tvar sa, sb; // number sign\r\n\tvar ta, tb; // temporary\r\n\tvar bias;\r\n\r\n\twhile (ia < ma && ib < mb) {\r\n\t\tca = a.charCodeAt(ia);\r\n\t\tcb = b.charCodeAt(ib);\r\n\t\tza = zb = 0;\r\n\t\tna = nb = 0;\r\n\t\tsa = sb = true;\r\n\t\tbias = 0;\r\n\r\n\t\t// skip over leading spaces\r\n\t\twhile (isWhitespace(ca)) {\r\n\t\t\tia += 1;\r\n\t\t\tca = a.charCodeAt(ia);\r\n\t\t}\r\n\t\twhile (isWhitespace(cb)) {\r\n\t\t\tib += 1;\r\n\t\t\tcb = b.charCodeAt(ib);\r\n\t\t}\r\n\r\n\t\t// skip and save sign\r\n\t\tif (checkSign) {\r\n\t\t\tta = a.charCodeAt(ia + 1);\r\n\t\t\tif (isSign(ca) && isDigit(ta)) {\r\n\t\t\t\tif (ca === minus) {\r\n\t\t\t\t\tsa = false;\r\n\t\t\t\t}\r\n\t\t\t\tia += 1;\r\n\t\t\t\tca = ta;\r\n\t\t\t}\r\n\t\t\ttb = b.charCodeAt(ib + 1);\r\n\t\t\tif (isSign(cb) && isDigit(tb)) {\r\n\t\t\t\tif (cb === minus) {\r\n\t\t\t\t\tsb = false;\r\n\t\t\t\t}\r\n\t\t\t\tib += 1;\r\n\t\t\t\tcb = tb;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// compare digits with other symbols\r\n\t\tif (isDigit(ca) && !isDigit(cb)) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (!isDigit(ca) && isDigit(cb)) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\t// compare negative and positive\r\n\t\tif (!sa && sb) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (sa && !sb) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\t// count leading zeros\r\n\t\twhile (ca === zero) {\r\n\t\t\tza += 1;\r\n\t\t\tia += 1;\r\n\t\t\tca = a.charCodeAt(ia);\r\n\t\t}\r\n\t\twhile (cb === zero) {\r\n\t\t\tzb += 1;\r\n\t\t\tib += 1;\r\n\t\t\tcb = b.charCodeAt(ib);\r\n\t\t}\r\n\r\n\t\t// count numbers\r\n\t\twhile (isDigit(ca) || isDigit(cb)) {\r\n\t\t\tif (isDigit(ca) && isDigit(cb) && bias === 0) {\r\n\t\t\t\tif (sa) {\r\n\t\t\t\t\tif (ca < cb) {\r\n\t\t\t\t\t\tbias = -1;\r\n\t\t\t\t\t} else if (ca > cb) {\r\n\t\t\t\t\t\tbias = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (ca > cb) {\r\n\t\t\t\t\t\tbias = -1;\r\n\t\t\t\t\t} else if (ca < cb) {\r\n\t\t\t\t\t\tbias = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (isDigit(ca)) {\r\n\t\t\t\tia += 1;\r\n\t\t\t\tna += 1;\r\n\t\t\t\tca = a.charCodeAt(ia);\r\n\t\t\t}\r\n\t\t\tif (isDigit(cb)) {\r\n\t\t\t\tib += 1;\r\n\t\t\t\tnb += 1;\r\n\t\t\t\tcb = b.charCodeAt(ib);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// compare number length\r\n\t\tif (sa) {\r\n\t\t\tif (na < nb) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif (na > nb) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (na > nb) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif (na < nb) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// compare numbers\r\n\t\tif (bias) {\r\n\t\t\treturn bias;\r\n\t\t}\r\n\r\n\t\t// compare leading zeros\r\n\t\tif (sa) {\r\n\t\t\tif (za > zb) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif (za < zb) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (za < zb) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif (za > zb) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// compare ascii codes\r\n\t\tif (ca < cb) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (ca > cb) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\tia += 1;\r\n\t\tib += 1;\r\n\t}\r\n\r\n\t// compare length\r\n\tif (ma < mb) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (ma > mb) {\r\n\t\treturn 1;\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"script"}