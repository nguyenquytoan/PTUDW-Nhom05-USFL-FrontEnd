{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\ntslib_1.__exportStar(require(\"../2.9/type\"), exports);\n\nconst ts = require(\"typescript\");\n\nconst type_1 = require(\"../2.9/type\");\n\nfunction isTupleType(type) {\n  return (type.flags & ts.TypeFlags.Object && type.objectFlags & ts.ObjectFlags.Tuple) !== 0;\n}\n\nexports.isTupleType = isTupleType;\n\nfunction isTupleTypeReference(type) {\n  return type_1.isTypeReference(type) && isTupleType(type.target);\n}\n\nexports.isTupleTypeReference = isTupleTypeReference;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/tsutils/typeguard/3.0/type.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","__exportStar","ts","type_1","isTupleType","type","flags","TypeFlags","objectFlags","ObjectFlags","Tuple","isTupleTypeReference","isTypeReference","target"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACAD,OAAO,CAACE,YAAR,CAAqBD,OAAO,CAAC,aAAD,CAA5B,EAA6CH,OAA7C;;AACA,MAAMK,EAAE,GAAGF,OAAO,CAAC,YAAD,CAAlB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,aAAD,CAAtB;;AACA,SAASI,WAAT,CAAqBC,IAArB,EAA2B;AACvB,SAAO,CAACA,IAAI,CAACC,KAAL,GAAaJ,EAAE,CAACK,SAAH,CAAaZ,MAA1B,IAAoCU,IAAI,CAACG,WAAL,GAAmBN,EAAE,CAACO,WAAH,CAAeC,KAAvE,MAAkF,CAAzF;AACH;;AACDb,OAAO,CAACO,WAAR,GAAsBA,WAAtB;;AACA,SAASO,oBAAT,CAA8BN,IAA9B,EAAoC;AAChC,SAAOF,MAAM,CAACS,eAAP,CAAuBP,IAAvB,KAAgCD,WAAW,CAACC,IAAI,CAACQ,MAAN,CAAlD;AACH;;AACDhB,OAAO,CAACc,oBAAR,GAA+BA,oBAA/B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"../2.9/type\"), exports);\nconst ts = require(\"typescript\");\nconst type_1 = require(\"../2.9/type\");\nfunction isTupleType(type) {\n    return (type.flags & ts.TypeFlags.Object && type.objectFlags & ts.ObjectFlags.Tuple) !== 0;\n}\nexports.isTupleType = isTupleType;\nfunction isTupleTypeReference(type) {\n    return type_1.isTypeReference(type) && isTupleType(type.target);\n}\nexports.isTupleTypeReference = isTupleTypeReference;\n"]},"metadata":{},"sourceType":"script"}