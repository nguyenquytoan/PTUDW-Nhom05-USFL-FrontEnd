{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar stream = require(\"stream\");\n\nvar fsStat = require(\"@nodelib/fs.stat\");\n\nvar fs_1 = require(\"./fs\");\n\nvar FileSystemStream =\n/** @class */\nfunction (_super) {\n  __extends(FileSystemStream, _super);\n\n  function FileSystemStream() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Use stream API to read entries for Task.\r\n   */\n\n\n  FileSystemStream.prototype.read = function (patterns, filter) {\n    var _this = this;\n\n    var filepaths = patterns.map(this.getFullEntryPath, this);\n    var transform = new stream.Transform({\n      objectMode: true\n    });\n\n    transform._transform = function (index, _enc, done) {\n      return _this.getEntry(filepaths[index], patterns[index]).then(function (entry) {\n        if (entry !== null && filter(entry)) {\n          transform.push(entry);\n        }\n\n        if (index === filepaths.length - 1) {\n          transform.end();\n        }\n\n        done();\n      });\n    };\n\n    for (var i = 0; i < filepaths.length; i++) {\n      transform.write(i);\n    }\n\n    return transform;\n  };\n  /**\r\n   * Return entry for the provided path.\r\n   */\n\n\n  FileSystemStream.prototype.getEntry = function (filepath, pattern) {\n    var _this = this;\n\n    return this.getStat(filepath).then(function (stat) {\n      return _this.makeEntry(stat, pattern);\n    }).catch(function () {\n      return null;\n    });\n  };\n  /**\r\n   * Return fs.Stats for the provided path.\r\n   */\n\n\n  FileSystemStream.prototype.getStat = function (filepath) {\n    return fsStat.stat(filepath, {\n      throwErrorOnBrokenSymlinks: false\n    });\n  };\n\n  return FileSystemStream;\n}(fs_1.default);\n\nexports.default = FileSystemStream;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/fast-glob/out/adapters/fs-stream.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","stream","require","fsStat","fs_1","FileSystemStream","_super","apply","arguments","read","patterns","filter","_this","filepaths","map","getFullEntryPath","transform","Transform","objectMode","_transform","index","_enc","done","getEntry","then","entry","push","length","end","i","write","filepath","pattern","getStat","stat","makeEntry","catch","throwErrorOnBrokenSymlinks","default"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar stream = require(\"stream\");\r\nvar fsStat = require(\"@nodelib/fs.stat\");\r\nvar fs_1 = require(\"./fs\");\r\nvar FileSystemStream = /** @class */ (function (_super) {\r\n    __extends(FileSystemStream, _super);\r\n    function FileSystemStream() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Use stream API to read entries for Task.\r\n     */\r\n    FileSystemStream.prototype.read = function (patterns, filter) {\r\n        var _this = this;\r\n        var filepaths = patterns.map(this.getFullEntryPath, this);\r\n        var transform = new stream.Transform({ objectMode: true });\r\n        transform._transform = function (index, _enc, done) {\r\n            return _this.getEntry(filepaths[index], patterns[index]).then(function (entry) {\r\n                if (entry !== null && filter(entry)) {\r\n                    transform.push(entry);\r\n                }\r\n                if (index === filepaths.length - 1) {\r\n                    transform.end();\r\n                }\r\n                done();\r\n            });\r\n        };\r\n        for (var i = 0; i < filepaths.length; i++) {\r\n            transform.write(i);\r\n        }\r\n        return transform;\r\n    };\r\n    /**\r\n     * Return entry for the provided path.\r\n     */\r\n    FileSystemStream.prototype.getEntry = function (filepath, pattern) {\r\n        var _this = this;\r\n        return this.getStat(filepath)\r\n            .then(function (stat) { return _this.makeEntry(stat, pattern); })\r\n            .catch(function () { return null; });\r\n    };\r\n    /**\r\n     * Return fs.Stats for the provided path.\r\n     */\r\n    FileSystemStream.prototype.getStat = function (filepath) {\r\n        return fsStat.stat(filepath, { throwErrorOnBrokenSymlinks: false });\r\n    };\r\n    return FileSystemStream;\r\n}(fs_1.default));\r\nexports.default = FileSystemStream;\r\n"]},"metadata":{},"sourceType":"script"}