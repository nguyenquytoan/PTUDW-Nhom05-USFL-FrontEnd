{"ast":null,"code":"'use strict';\n\nvar test = require('tape');\n\nvar qs = require('../');\n\nvar utils = require('../lib/utils');\n\nvar iconv = require('iconv-lite');\n\nvar SaferBuffer = require('safer-buffer').Buffer;\n\ntest('stringify()', function (t) {\n  t.test('stringifies a querystring object', function (st) {\n    st.equal(qs.stringify({\n      a: 'b'\n    }), 'a=b');\n    st.equal(qs.stringify({\n      a: 1\n    }), 'a=1');\n    st.equal(qs.stringify({\n      a: 1,\n      b: 2\n    }), 'a=1&b=2');\n    st.equal(qs.stringify({\n      a: 'A_Z'\n    }), 'a=A_Z');\n    st.equal(qs.stringify({\n      a: '€'\n    }), 'a=%E2%82%AC');\n    st.equal(qs.stringify({\n      a: ''\n    }), 'a=%EE%80%80');\n    st.equal(qs.stringify({\n      a: 'א'\n    }), 'a=%D7%90');\n    st.equal(qs.stringify({\n      a: '𐐷'\n    }), 'a=%F0%90%90%B7');\n    st.end();\n  });\n  t.test('adds query prefix', function (st) {\n    st.equal(qs.stringify({\n      a: 'b'\n    }, {\n      addQueryPrefix: true\n    }), '?a=b');\n    st.end();\n  });\n  t.test('with query prefix, outputs blank string given an empty object', function (st) {\n    st.equal(qs.stringify({}, {\n      addQueryPrefix: true\n    }), '');\n    st.end();\n  });\n  t.test('stringifies a nested object', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: 'c'\n      }\n    }), 'a%5Bb%5D=c');\n    st.equal(qs.stringify({\n      a: {\n        b: {\n          c: {\n            d: 'e'\n          }\n        }\n      }\n    }), 'a%5Bb%5D%5Bc%5D%5Bd%5D=e');\n    st.end();\n  });\n  t.test('stringifies a nested object with dots notation', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: 'c'\n      }\n    }, {\n      allowDots: true\n    }), 'a.b=c');\n    st.equal(qs.stringify({\n      a: {\n        b: {\n          c: {\n            d: 'e'\n          }\n        }\n      }\n    }, {\n      allowDots: true\n    }), 'a.b.c.d=e');\n    st.end();\n  });\n  t.test('stringifies an array value', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c', 'd']\n    }, {\n      arrayFormat: 'indices'\n    }), 'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d', 'indices => indices');\n    st.equal(qs.stringify({\n      a: ['b', 'c', 'd']\n    }, {\n      arrayFormat: 'brackets'\n    }), 'a%5B%5D=b&a%5B%5D=c&a%5B%5D=d', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: ['b', 'c', 'd']\n    }), 'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d', 'default => indices');\n    st.end();\n  });\n  t.test('omits nulls when asked', function (st) {\n    st.equal(qs.stringify({\n      a: 'b',\n      c: null\n    }, {\n      skipNulls: true\n    }), 'a=b');\n    st.end();\n  });\n  t.test('omits nested nulls when asked', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: 'c',\n        d: null\n      }\n    }, {\n      skipNulls: true\n    }), 'a%5Bb%5D=c');\n    st.end();\n  });\n  t.test('omits array indices when asked', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c', 'd']\n    }, {\n      indices: false\n    }), 'a=b&a=c&a=d');\n    st.end();\n  });\n  t.test('stringifies a nested array value', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      arrayFormat: 'indices'\n    }), 'a%5Bb%5D%5B0%5D=c&a%5Bb%5D%5B1%5D=d');\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      arrayFormat: 'brackets'\n    }), 'a%5Bb%5D%5B%5D=c&a%5Bb%5D%5B%5D=d');\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }), 'a%5Bb%5D%5B0%5D=c&a%5Bb%5D%5B1%5D=d');\n    st.end();\n  });\n  t.test('stringifies a nested array value with dots notation', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      allowDots: true,\n      encode: false,\n      arrayFormat: 'indices'\n    }), 'a.b[0]=c&a.b[1]=d', 'indices: stringifies with dots + indices');\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      allowDots: true,\n      encode: false,\n      arrayFormat: 'brackets'\n    }), 'a.b[]=c&a.b[]=d', 'brackets: stringifies with dots + brackets');\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      allowDots: true,\n      encode: false\n    }), 'a.b[0]=c&a.b[1]=d', 'default: stringifies with dots + indices');\n    st.end();\n  });\n  t.test('stringifies an object inside an array', function (st) {\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      arrayFormat: 'indices'\n    }), 'a%5B0%5D%5Bb%5D=c', 'indices => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      arrayFormat: 'brackets'\n    }), 'a%5B%5D%5Bb%5D=c', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }), 'a%5B0%5D%5Bb%5D=c', 'default => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }, {\n      arrayFormat: 'indices'\n    }), 'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1', 'indices => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }, {\n      arrayFormat: 'brackets'\n    }), 'a%5B%5D%5Bb%5D%5Bc%5D%5B%5D=1', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }), 'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1', 'default => indices');\n    st.end();\n  });\n  t.test('stringifies an array with mixed objects and primitives', function (st) {\n    st.equal(qs.stringify({\n      a: [{\n        b: 1\n      }, 2, 3]\n    }, {\n      encode: false,\n      arrayFormat: 'indices'\n    }), 'a[0][b]=1&a[1]=2&a[2]=3', 'indices => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: 1\n      }, 2, 3]\n    }, {\n      encode: false,\n      arrayFormat: 'brackets'\n    }), 'a[][b]=1&a[]=2&a[]=3', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: 1\n      }, 2, 3]\n    }, {\n      encode: false\n    }), 'a[0][b]=1&a[1]=2&a[2]=3', 'default => indices');\n    st.end();\n  });\n  t.test('stringifies an object inside an array with dots notation', function (st) {\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      allowDots: true,\n      encode: false,\n      arrayFormat: 'indices'\n    }), 'a[0].b=c', 'indices => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      allowDots: true,\n      encode: false,\n      arrayFormat: 'brackets'\n    }), 'a[].b=c', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      allowDots: true,\n      encode: false\n    }), 'a[0].b=c', 'default => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }, {\n      allowDots: true,\n      encode: false,\n      arrayFormat: 'indices'\n    }), 'a[0].b.c[0]=1', 'indices => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }, {\n      allowDots: true,\n      encode: false,\n      arrayFormat: 'brackets'\n    }), 'a[].b.c[]=1', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }, {\n      allowDots: true,\n      encode: false\n    }), 'a[0].b.c[0]=1', 'default => indices');\n    st.end();\n  });\n  t.test('does not omit object keys when indices = false', function (st) {\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      indices: false\n    }), 'a%5Bb%5D=c');\n    st.end();\n  });\n  t.test('uses indices notation for arrays when indices=true', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c']\n    }, {\n      indices: true\n    }), 'a%5B0%5D=b&a%5B1%5D=c');\n    st.end();\n  });\n  t.test('uses indices notation for arrays when no arrayFormat is specified', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c']\n    }), 'a%5B0%5D=b&a%5B1%5D=c');\n    st.end();\n  });\n  t.test('uses indices notation for arrays when no arrayFormat=indices', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c']\n    }, {\n      arrayFormat: 'indices'\n    }), 'a%5B0%5D=b&a%5B1%5D=c');\n    st.end();\n  });\n  t.test('uses repeat notation for arrays when no arrayFormat=repeat', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c']\n    }, {\n      arrayFormat: 'repeat'\n    }), 'a=b&a=c');\n    st.end();\n  });\n  t.test('uses brackets notation for arrays when no arrayFormat=brackets', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c']\n    }, {\n      arrayFormat: 'brackets'\n    }), 'a%5B%5D=b&a%5B%5D=c');\n    st.end();\n  });\n  t.test('stringifies a complicated object', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: 'c',\n        d: 'e'\n      }\n    }), 'a%5Bb%5D=c&a%5Bd%5D=e');\n    st.end();\n  });\n  t.test('stringifies an empty value', function (st) {\n    st.equal(qs.stringify({\n      a: ''\n    }), 'a=');\n    st.equal(qs.stringify({\n      a: null\n    }, {\n      strictNullHandling: true\n    }), 'a');\n    st.equal(qs.stringify({\n      a: '',\n      b: ''\n    }), 'a=&b=');\n    st.equal(qs.stringify({\n      a: null,\n      b: ''\n    }, {\n      strictNullHandling: true\n    }), 'a&b=');\n    st.equal(qs.stringify({\n      a: {\n        b: ''\n      }\n    }), 'a%5Bb%5D=');\n    st.equal(qs.stringify({\n      a: {\n        b: null\n      }\n    }, {\n      strictNullHandling: true\n    }), 'a%5Bb%5D');\n    st.equal(qs.stringify({\n      a: {\n        b: null\n      }\n    }, {\n      strictNullHandling: false\n    }), 'a%5Bb%5D=');\n    st.end();\n  });\n  t.test('stringifies a null object', {\n    skip: !Object.create\n  }, function (st) {\n    var obj = Object.create(null);\n    obj.a = 'b';\n    st.equal(qs.stringify(obj), 'a=b');\n    st.end();\n  });\n  t.test('returns an empty string for invalid input', function (st) {\n    st.equal(qs.stringify(undefined), '');\n    st.equal(qs.stringify(false), '');\n    st.equal(qs.stringify(null), '');\n    st.equal(qs.stringify(''), '');\n    st.end();\n  });\n  t.test('stringifies an object with a null object as a child', {\n    skip: !Object.create\n  }, function (st) {\n    var obj = {\n      a: Object.create(null)\n    };\n    obj.a.b = 'c';\n    st.equal(qs.stringify(obj), 'a%5Bb%5D=c');\n    st.end();\n  });\n  t.test('drops keys with a value of undefined', function (st) {\n    st.equal(qs.stringify({\n      a: undefined\n    }), '');\n    st.equal(qs.stringify({\n      a: {\n        b: undefined,\n        c: null\n      }\n    }, {\n      strictNullHandling: true\n    }), 'a%5Bc%5D');\n    st.equal(qs.stringify({\n      a: {\n        b: undefined,\n        c: null\n      }\n    }, {\n      strictNullHandling: false\n    }), 'a%5Bc%5D=');\n    st.equal(qs.stringify({\n      a: {\n        b: undefined,\n        c: ''\n      }\n    }), 'a%5Bc%5D=');\n    st.end();\n  });\n  t.test('url encodes values', function (st) {\n    st.equal(qs.stringify({\n      a: 'b c'\n    }), 'a=b%20c');\n    st.end();\n  });\n  t.test('stringifies a date', function (st) {\n    var now = new Date();\n    var str = 'a=' + encodeURIComponent(now.toISOString());\n    st.equal(qs.stringify({\n      a: now\n    }), str);\n    st.end();\n  });\n  t.test('stringifies the weird object from qs', function (st) {\n    st.equal(qs.stringify({\n      'my weird field': '~q1!2\"\\'w$5&7/z8)?'\n    }), 'my%20weird%20field=~q1%212%22%27w%245%267%2Fz8%29%3F');\n    st.end();\n  });\n  t.test('skips properties that are part of the object prototype', function (st) {\n    Object.prototype.crash = 'test';\n    st.equal(qs.stringify({\n      a: 'b'\n    }), 'a=b');\n    st.equal(qs.stringify({\n      a: {\n        b: 'c'\n      }\n    }), 'a%5Bb%5D=c');\n    delete Object.prototype.crash;\n    st.end();\n  });\n  t.test('stringifies boolean values', function (st) {\n    st.equal(qs.stringify({\n      a: true\n    }), 'a=true');\n    st.equal(qs.stringify({\n      a: {\n        b: true\n      }\n    }), 'a%5Bb%5D=true');\n    st.equal(qs.stringify({\n      b: false\n    }), 'b=false');\n    st.equal(qs.stringify({\n      b: {\n        c: false\n      }\n    }), 'b%5Bc%5D=false');\n    st.end();\n  });\n  t.test('stringifies buffer values', function (st) {\n    st.equal(qs.stringify({\n      a: SaferBuffer.from('test')\n    }), 'a=test');\n    st.equal(qs.stringify({\n      a: {\n        b: SaferBuffer.from('test')\n      }\n    }), 'a%5Bb%5D=test');\n    st.end();\n  });\n  t.test('stringifies an object using an alternative delimiter', function (st) {\n    st.equal(qs.stringify({\n      a: 'b',\n      c: 'd'\n    }, {\n      delimiter: ';'\n    }), 'a=b;c=d');\n    st.end();\n  });\n  t.test('doesn\\'t blow up when Buffer global is missing', function (st) {\n    var tempBuffer = global.Buffer;\n    delete global.Buffer;\n    var result = qs.stringify({\n      a: 'b',\n      c: 'd'\n    });\n    global.Buffer = tempBuffer;\n    st.equal(result, 'a=b&c=d');\n    st.end();\n  });\n  t.test('selects properties when filter=array', function (st) {\n    st.equal(qs.stringify({\n      a: 'b'\n    }, {\n      filter: ['a']\n    }), 'a=b');\n    st.equal(qs.stringify({\n      a: 1\n    }, {\n      filter: []\n    }), '');\n    st.equal(qs.stringify({\n      a: {\n        b: [1, 2, 3, 4],\n        c: 'd'\n      },\n      c: 'f'\n    }, {\n      filter: ['a', 'b', 0, 2],\n      arrayFormat: 'indices'\n    }), 'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3', 'indices => indices');\n    st.equal(qs.stringify({\n      a: {\n        b: [1, 2, 3, 4],\n        c: 'd'\n      },\n      c: 'f'\n    }, {\n      filter: ['a', 'b', 0, 2],\n      arrayFormat: 'brackets'\n    }), 'a%5Bb%5D%5B%5D=1&a%5Bb%5D%5B%5D=3', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: {\n        b: [1, 2, 3, 4],\n        c: 'd'\n      },\n      c: 'f'\n    }, {\n      filter: ['a', 'b', 0, 2]\n    }), 'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3', 'default => indices');\n    st.end();\n  });\n  t.test('supports custom representations when filter=function', function (st) {\n    var calls = 0;\n    var obj = {\n      a: 'b',\n      c: 'd',\n      e: {\n        f: new Date(1257894000000)\n      }\n    };\n\n    var filterFunc = function (prefix, value) {\n      calls += 1;\n\n      if (calls === 1) {\n        st.equal(prefix, '', 'prefix is empty');\n        st.equal(value, obj);\n      } else if (prefix === 'c') {\n        return void 0;\n      } else if (value instanceof Date) {\n        st.equal(prefix, 'e[f]');\n        return value.getTime();\n      }\n\n      return value;\n    };\n\n    st.equal(qs.stringify(obj, {\n      filter: filterFunc\n    }), 'a=b&e%5Bf%5D=1257894000000');\n    st.equal(calls, 5);\n    st.end();\n  });\n  t.test('can disable uri encoding', function (st) {\n    st.equal(qs.stringify({\n      a: 'b'\n    }, {\n      encode: false\n    }), 'a=b');\n    st.equal(qs.stringify({\n      a: {\n        b: 'c'\n      }\n    }, {\n      encode: false\n    }), 'a[b]=c');\n    st.equal(qs.stringify({\n      a: 'b',\n      c: null\n    }, {\n      strictNullHandling: true,\n      encode: false\n    }), 'a=b&c');\n    st.end();\n  });\n  t.test('can sort the keys', function (st) {\n    var sort = function (a, b) {\n      return a.localeCompare(b);\n    };\n\n    st.equal(qs.stringify({\n      a: 'c',\n      z: 'y',\n      b: 'f'\n    }, {\n      sort: sort\n    }), 'a=c&b=f&z=y');\n    st.equal(qs.stringify({\n      a: 'c',\n      z: {\n        j: 'a',\n        i: 'b'\n      },\n      b: 'f'\n    }, {\n      sort: sort\n    }), 'a=c&b=f&z%5Bi%5D=b&z%5Bj%5D=a');\n    st.end();\n  });\n  t.test('can sort the keys at depth 3 or more too', function (st) {\n    var sort = function (a, b) {\n      return a.localeCompare(b);\n    };\n\n    st.equal(qs.stringify({\n      a: 'a',\n      z: {\n        zj: {\n          zjb: 'zjb',\n          zja: 'zja'\n        },\n        zi: {\n          zib: 'zib',\n          zia: 'zia'\n        }\n      },\n      b: 'b'\n    }, {\n      sort: sort,\n      encode: false\n    }), 'a=a&b=b&z[zi][zia]=zia&z[zi][zib]=zib&z[zj][zja]=zja&z[zj][zjb]=zjb');\n    st.equal(qs.stringify({\n      a: 'a',\n      z: {\n        zj: {\n          zjb: 'zjb',\n          zja: 'zja'\n        },\n        zi: {\n          zib: 'zib',\n          zia: 'zia'\n        }\n      },\n      b: 'b'\n    }, {\n      sort: null,\n      encode: false\n    }), 'a=a&z[zj][zjb]=zjb&z[zj][zja]=zja&z[zi][zib]=zib&z[zi][zia]=zia&b=b');\n    st.end();\n  });\n  t.test('can stringify with custom encoding', function (st) {\n    st.equal(qs.stringify({\n      県: '大阪府',\n      '': ''\n    }, {\n      encoder: function (str) {\n        if (str.length === 0) {\n          return '';\n        }\n\n        var buf = iconv.encode(str, 'shiftjis');\n        var result = [];\n\n        for (var i = 0; i < buf.length; ++i) {\n          result.push(buf.readUInt8(i).toString(16));\n        }\n\n        return '%' + result.join('%');\n      }\n    }), '%8c%a7=%91%e5%8d%e3%95%7b&=');\n    st.end();\n  });\n  t.test('receives the default encoder as a second argument', function (st) {\n    st.plan(2);\n    qs.stringify({\n      a: 1\n    }, {\n      encoder: function (str, defaultEncoder) {\n        st.equal(defaultEncoder, utils.encode);\n      }\n    });\n    st.end();\n  });\n  t.test('throws error with wrong encoder', function (st) {\n    st['throws'](function () {\n      qs.stringify({}, {\n        encoder: 'string'\n      });\n    }, new TypeError('Encoder has to be a function.'));\n    st.end();\n  });\n  t.test('can use custom encoder for a buffer object', {\n    skip: typeof Buffer === 'undefined'\n  }, function (st) {\n    st.equal(qs.stringify({\n      a: SaferBuffer.from([1])\n    }, {\n      encoder: function (buffer) {\n        if (typeof buffer === 'string') {\n          return buffer;\n        }\n\n        return String.fromCharCode(buffer.readUInt8(0) + 97);\n      }\n    }), 'a=b');\n    st.end();\n  });\n  t.test('serializeDate option', function (st) {\n    var date = new Date();\n    st.equal(qs.stringify({\n      a: date\n    }), 'a=' + date.toISOString().replace(/:/g, '%3A'), 'default is toISOString');\n    var mutatedDate = new Date();\n\n    mutatedDate.toISOString = function () {\n      throw new SyntaxError();\n    };\n\n    st['throws'](function () {\n      mutatedDate.toISOString();\n    }, SyntaxError);\n    st.equal(qs.stringify({\n      a: mutatedDate\n    }), 'a=' + Date.prototype.toISOString.call(mutatedDate).replace(/:/g, '%3A'), 'toISOString works even when method is not locally present');\n    var specificDate = new Date(6);\n    st.equal(qs.stringify({\n      a: specificDate\n    }, {\n      serializeDate: function (d) {\n        return d.getTime() * 7;\n      }\n    }), 'a=42', 'custom serializeDate function called');\n    st.end();\n  });\n  t.test('RFC 1738 spaces serialization', function (st) {\n    st.equal(qs.stringify({\n      a: 'b c'\n    }, {\n      format: qs.formats.RFC1738\n    }), 'a=b+c');\n    st.equal(qs.stringify({\n      'a b': 'c d'\n    }, {\n      format: qs.formats.RFC1738\n    }), 'a+b=c+d');\n    st.end();\n  });\n  t.test('RFC 3986 spaces serialization', function (st) {\n    st.equal(qs.stringify({\n      a: 'b c'\n    }, {\n      format: qs.formats.RFC3986\n    }), 'a=b%20c');\n    st.equal(qs.stringify({\n      'a b': 'c d'\n    }, {\n      format: qs.formats.RFC3986\n    }), 'a%20b=c%20d');\n    st.end();\n  });\n  t.test('Backward compatibility to RFC 3986', function (st) {\n    st.equal(qs.stringify({\n      a: 'b c'\n    }), 'a=b%20c');\n    st.end();\n  });\n  t.test('Edge cases and unknown formats', function (st) {\n    ['UFO1234', false, 1234, null, {}, []].forEach(function (format) {\n      st['throws'](function () {\n        qs.stringify({\n          a: 'b c'\n        }, {\n          format: format\n        });\n      }, new TypeError('Unknown format option provided.'));\n    });\n    st.end();\n  });\n  t.test('encodeValuesOnly', function (st) {\n    st.equal(qs.stringify({\n      a: 'b',\n      c: ['d', 'e=f'],\n      f: [['g'], ['h']]\n    }, {\n      encodeValuesOnly: true\n    }), 'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h');\n    st.equal(qs.stringify({\n      a: 'b',\n      c: ['d', 'e'],\n      f: [['g'], ['h']]\n    }), 'a=b&c%5B0%5D=d&c%5B1%5D=e&f%5B0%5D%5B0%5D=g&f%5B1%5D%5B0%5D=h');\n    st.end();\n  });\n  t.test('encodeValuesOnly - strictNullHandling', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: null\n      }\n    }, {\n      encodeValuesOnly: true,\n      strictNullHandling: true\n    }), 'a[b]');\n    st.end();\n  });\n  t.test('does not mutate the options argument', function (st) {\n    var options = {};\n    qs.stringify({}, options);\n    st.deepEqual(options, {});\n    st.end();\n  });\n  t.end();\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/qs/test/stringify.js"],"names":["test","require","qs","utils","iconv","SaferBuffer","Buffer","t","st","equal","stringify","a","b","end","addQueryPrefix","c","d","allowDots","arrayFormat","skipNulls","indices","encode","strictNullHandling","skip","Object","create","obj","undefined","now","Date","str","encodeURIComponent","toISOString","prototype","crash","from","delimiter","tempBuffer","global","result","filter","calls","e","f","filterFunc","prefix","value","getTime","sort","localeCompare","z","j","i","zj","zjb","zja","zi","zib","zia","県","encoder","length","buf","push","readUInt8","toString","join","plan","defaultEncoder","TypeError","buffer","String","fromCharCode","date","replace","mutatedDate","SyntaxError","call","specificDate","serializeDate","format","formats","RFC1738","RFC3986","forEach","encodeValuesOnly","options","deepEqual"],"mappings":"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","sourcesContent":["'use strict';\n\nvar test = require('tape');\nvar qs = require('../');\nvar utils = require('../lib/utils');\nvar iconv = require('iconv-lite');\nvar SaferBuffer = require('safer-buffer').Buffer;\n\ntest('stringify()', function (t) {\n    t.test('stringifies a querystring object', function (st) {\n        st.equal(qs.stringify({ a: 'b' }), 'a=b');\n        st.equal(qs.stringify({ a: 1 }), 'a=1');\n        st.equal(qs.stringify({ a: 1, b: 2 }), 'a=1&b=2');\n        st.equal(qs.stringify({ a: 'A_Z' }), 'a=A_Z');\n        st.equal(qs.stringify({ a: '€' }), 'a=%E2%82%AC');\n        st.equal(qs.stringify({ a: '' }), 'a=%EE%80%80');\n        st.equal(qs.stringify({ a: 'א' }), 'a=%D7%90');\n        st.equal(qs.stringify({ a: '𐐷' }), 'a=%F0%90%90%B7');\n        st.end();\n    });\n\n    t.test('adds query prefix', function (st) {\n        st.equal(qs.stringify({ a: 'b' }, { addQueryPrefix: true }), '?a=b');\n        st.end();\n    });\n\n    t.test('with query prefix, outputs blank string given an empty object', function (st) {\n        st.equal(qs.stringify({}, { addQueryPrefix: true }), '');\n        st.end();\n    });\n\n    t.test('stringifies a nested object', function (st) {\n        st.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\n        st.equal(qs.stringify({ a: { b: { c: { d: 'e' } } } }), 'a%5Bb%5D%5Bc%5D%5Bd%5D=e');\n        st.end();\n    });\n\n    t.test('stringifies a nested object with dots notation', function (st) {\n        st.equal(qs.stringify({ a: { b: 'c' } }, { allowDots: true }), 'a.b=c');\n        st.equal(qs.stringify({ a: { b: { c: { d: 'e' } } } }, { allowDots: true }), 'a.b.c.d=e');\n        st.end();\n    });\n\n    t.test('stringifies an array value', function (st) {\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'indices' }),\n            'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'brackets' }),\n            'a%5B%5D=b&a%5B%5D=c&a%5B%5D=d',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }),\n            'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d',\n            'default => indices'\n        );\n        st.end();\n    });\n\n    t.test('omits nulls when asked', function (st) {\n        st.equal(qs.stringify({ a: 'b', c: null }, { skipNulls: true }), 'a=b');\n        st.end();\n    });\n\n    t.test('omits nested nulls when asked', function (st) {\n        st.equal(qs.stringify({ a: { b: 'c', d: null } }, { skipNulls: true }), 'a%5Bb%5D=c');\n        st.end();\n    });\n\n    t.test('omits array indices when asked', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false }), 'a=b&a=c&a=d');\n        st.end();\n    });\n\n    t.test('stringifies a nested array value', function (st) {\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { arrayFormat: 'indices' }), 'a%5Bb%5D%5B0%5D=c&a%5Bb%5D%5B1%5D=d');\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { arrayFormat: 'brackets' }), 'a%5Bb%5D%5B%5D=c&a%5Bb%5D%5B%5D=d');\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }), 'a%5Bb%5D%5B0%5D=c&a%5Bb%5D%5B1%5D=d');\n        st.end();\n    });\n\n    t.test('stringifies a nested array value with dots notation', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: { b: ['c', 'd'] } },\n                { allowDots: true, encode: false, arrayFormat: 'indices' }\n            ),\n            'a.b[0]=c&a.b[1]=d',\n            'indices: stringifies with dots + indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: ['c', 'd'] } },\n                { allowDots: true, encode: false, arrayFormat: 'brackets' }\n            ),\n            'a.b[]=c&a.b[]=d',\n            'brackets: stringifies with dots + brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: ['c', 'd'] } },\n                { allowDots: true, encode: false }\n            ),\n            'a.b[0]=c&a.b[1]=d',\n            'default: stringifies with dots + indices'\n        );\n        st.end();\n    });\n\n    t.test('stringifies an object inside an array', function (st) {\n        st.equal(\n            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'indices' }),\n            'a%5B0%5D%5Bb%5D=c',\n            'indices => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'brackets' }),\n            'a%5B%5D%5Bb%5D=c',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 'c' }] }),\n            'a%5B0%5D%5Bb%5D=c',\n            'default => indices'\n        );\n\n        st.equal(\n            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'indices' }),\n            'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1',\n            'indices => indices'\n        );\n\n        st.equal(\n            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'brackets' }),\n            'a%5B%5D%5Bb%5D%5Bc%5D%5B%5D=1',\n            'brackets => brackets'\n        );\n\n        st.equal(\n            qs.stringify({ a: [{ b: { c: [1] } }] }),\n            'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('stringifies an array with mixed objects and primitives', function (st) {\n        st.equal(\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encode: false, arrayFormat: 'indices' }),\n            'a[0][b]=1&a[1]=2&a[2]=3',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encode: false, arrayFormat: 'brackets' }),\n            'a[][b]=1&a[]=2&a[]=3',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encode: false }),\n            'a[0][b]=1&a[1]=2&a[2]=3',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('stringifies an object inside an array with dots notation', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: [{ b: 'c' }] },\n                { allowDots: true, encode: false, arrayFormat: 'indices' }\n            ),\n            'a[0].b=c',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: 'c' }] },\n                { allowDots: true, encode: false, arrayFormat: 'brackets' }\n            ),\n            'a[].b=c',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: 'c' }] },\n                { allowDots: true, encode: false }\n            ),\n            'a[0].b=c',\n            'default => indices'\n        );\n\n        st.equal(\n            qs.stringify(\n                { a: [{ b: { c: [1] } }] },\n                { allowDots: true, encode: false, arrayFormat: 'indices' }\n            ),\n            'a[0].b.c[0]=1',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: { c: [1] } }] },\n                { allowDots: true, encode: false, arrayFormat: 'brackets' }\n            ),\n            'a[].b.c[]=1',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: { c: [1] } }] },\n                { allowDots: true, encode: false }\n            ),\n            'a[0].b.c[0]=1',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('does not omit object keys when indices = false', function (st) {\n        st.equal(qs.stringify({ a: [{ b: 'c' }] }, { indices: false }), 'a%5Bb%5D=c');\n        st.end();\n    });\n\n    t.test('uses indices notation for arrays when indices=true', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { indices: true }), 'a%5B0%5D=b&a%5B1%5D=c');\n        st.end();\n    });\n\n    t.test('uses indices notation for arrays when no arrayFormat is specified', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }), 'a%5B0%5D=b&a%5B1%5D=c');\n        st.end();\n    });\n\n    t.test('uses indices notation for arrays when no arrayFormat=indices', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' }), 'a%5B0%5D=b&a%5B1%5D=c');\n        st.end();\n    });\n\n    t.test('uses repeat notation for arrays when no arrayFormat=repeat', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' }), 'a=b&a=c');\n        st.end();\n    });\n\n    t.test('uses brackets notation for arrays when no arrayFormat=brackets', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' }), 'a%5B%5D=b&a%5B%5D=c');\n        st.end();\n    });\n\n    t.test('stringifies a complicated object', function (st) {\n        st.equal(qs.stringify({ a: { b: 'c', d: 'e' } }), 'a%5Bb%5D=c&a%5Bd%5D=e');\n        st.end();\n    });\n\n    t.test('stringifies an empty value', function (st) {\n        st.equal(qs.stringify({ a: '' }), 'a=');\n        st.equal(qs.stringify({ a: null }, { strictNullHandling: true }), 'a');\n\n        st.equal(qs.stringify({ a: '', b: '' }), 'a=&b=');\n        st.equal(qs.stringify({ a: null, b: '' }, { strictNullHandling: true }), 'a&b=');\n\n        st.equal(qs.stringify({ a: { b: '' } }), 'a%5Bb%5D=');\n        st.equal(qs.stringify({ a: { b: null } }, { strictNullHandling: true }), 'a%5Bb%5D');\n        st.equal(qs.stringify({ a: { b: null } }, { strictNullHandling: false }), 'a%5Bb%5D=');\n\n        st.end();\n    });\n\n    t.test('stringifies a null object', { skip: !Object.create }, function (st) {\n        var obj = Object.create(null);\n        obj.a = 'b';\n        st.equal(qs.stringify(obj), 'a=b');\n        st.end();\n    });\n\n    t.test('returns an empty string for invalid input', function (st) {\n        st.equal(qs.stringify(undefined), '');\n        st.equal(qs.stringify(false), '');\n        st.equal(qs.stringify(null), '');\n        st.equal(qs.stringify(''), '');\n        st.end();\n    });\n\n    t.test('stringifies an object with a null object as a child', { skip: !Object.create }, function (st) {\n        var obj = { a: Object.create(null) };\n\n        obj.a.b = 'c';\n        st.equal(qs.stringify(obj), 'a%5Bb%5D=c');\n        st.end();\n    });\n\n    t.test('drops keys with a value of undefined', function (st) {\n        st.equal(qs.stringify({ a: undefined }), '');\n\n        st.equal(qs.stringify({ a: { b: undefined, c: null } }, { strictNullHandling: true }), 'a%5Bc%5D');\n        st.equal(qs.stringify({ a: { b: undefined, c: null } }, { strictNullHandling: false }), 'a%5Bc%5D=');\n        st.equal(qs.stringify({ a: { b: undefined, c: '' } }), 'a%5Bc%5D=');\n        st.end();\n    });\n\n    t.test('url encodes values', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\n        st.end();\n    });\n\n    t.test('stringifies a date', function (st) {\n        var now = new Date();\n        var str = 'a=' + encodeURIComponent(now.toISOString());\n        st.equal(qs.stringify({ a: now }), str);\n        st.end();\n    });\n\n    t.test('stringifies the weird object from qs', function (st) {\n        st.equal(qs.stringify({ 'my weird field': '~q1!2\"\\'w$5&7/z8)?' }), 'my%20weird%20field=~q1%212%22%27w%245%267%2Fz8%29%3F');\n        st.end();\n    });\n\n    t.test('skips properties that are part of the object prototype', function (st) {\n        Object.prototype.crash = 'test';\n        st.equal(qs.stringify({ a: 'b' }), 'a=b');\n        st.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\n        delete Object.prototype.crash;\n        st.end();\n    });\n\n    t.test('stringifies boolean values', function (st) {\n        st.equal(qs.stringify({ a: true }), 'a=true');\n        st.equal(qs.stringify({ a: { b: true } }), 'a%5Bb%5D=true');\n        st.equal(qs.stringify({ b: false }), 'b=false');\n        st.equal(qs.stringify({ b: { c: false } }), 'b%5Bc%5D=false');\n        st.end();\n    });\n\n    t.test('stringifies buffer values', function (st) {\n        st.equal(qs.stringify({ a: SaferBuffer.from('test') }), 'a=test');\n        st.equal(qs.stringify({ a: { b: SaferBuffer.from('test') } }), 'a%5Bb%5D=test');\n        st.end();\n    });\n\n    t.test('stringifies an object using an alternative delimiter', function (st) {\n        st.equal(qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' }), 'a=b;c=d');\n        st.end();\n    });\n\n    t.test('doesn\\'t blow up when Buffer global is missing', function (st) {\n        var tempBuffer = global.Buffer;\n        delete global.Buffer;\n        var result = qs.stringify({ a: 'b', c: 'd' });\n        global.Buffer = tempBuffer;\n        st.equal(result, 'a=b&c=d');\n        st.end();\n    });\n\n    t.test('selects properties when filter=array', function (st) {\n        st.equal(qs.stringify({ a: 'b' }, { filter: ['a'] }), 'a=b');\n        st.equal(qs.stringify({ a: 1 }, { filter: [] }), '');\n\n        st.equal(\n            qs.stringify(\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\n                { filter: ['a', 'b', 0, 2], arrayFormat: 'indices' }\n            ),\n            'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\n                { filter: ['a', 'b', 0, 2], arrayFormat: 'brackets' }\n            ),\n            'a%5Bb%5D%5B%5D=1&a%5Bb%5D%5B%5D=3',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\n                { filter: ['a', 'b', 0, 2] }\n            ),\n            'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('supports custom representations when filter=function', function (st) {\n        var calls = 0;\n        var obj = { a: 'b', c: 'd', e: { f: new Date(1257894000000) } };\n        var filterFunc = function (prefix, value) {\n            calls += 1;\n            if (calls === 1) {\n                st.equal(prefix, '', 'prefix is empty');\n                st.equal(value, obj);\n            } else if (prefix === 'c') {\n                return void 0;\n            } else if (value instanceof Date) {\n                st.equal(prefix, 'e[f]');\n                return value.getTime();\n            }\n            return value;\n        };\n\n        st.equal(qs.stringify(obj, { filter: filterFunc }), 'a=b&e%5Bf%5D=1257894000000');\n        st.equal(calls, 5);\n        st.end();\n    });\n\n    t.test('can disable uri encoding', function (st) {\n        st.equal(qs.stringify({ a: 'b' }, { encode: false }), 'a=b');\n        st.equal(qs.stringify({ a: { b: 'c' } }, { encode: false }), 'a[b]=c');\n        st.equal(qs.stringify({ a: 'b', c: null }, { strictNullHandling: true, encode: false }), 'a=b&c');\n        st.end();\n    });\n\n    t.test('can sort the keys', function (st) {\n        var sort = function (a, b) {\n            return a.localeCompare(b);\n        };\n        st.equal(qs.stringify({ a: 'c', z: 'y', b: 'f' }, { sort: sort }), 'a=c&b=f&z=y');\n        st.equal(qs.stringify({ a: 'c', z: { j: 'a', i: 'b' }, b: 'f' }, { sort: sort }), 'a=c&b=f&z%5Bi%5D=b&z%5Bj%5D=a');\n        st.end();\n    });\n\n    t.test('can sort the keys at depth 3 or more too', function (st) {\n        var sort = function (a, b) {\n            return a.localeCompare(b);\n        };\n        st.equal(\n            qs.stringify(\n                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib: 'zib', zia: 'zia' } }, b: 'b' },\n                { sort: sort, encode: false }\n            ),\n            'a=a&b=b&z[zi][zia]=zia&z[zi][zib]=zib&z[zj][zja]=zja&z[zj][zjb]=zjb'\n        );\n        st.equal(\n            qs.stringify(\n                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib: 'zib', zia: 'zia' } }, b: 'b' },\n                { sort: null, encode: false }\n            ),\n            'a=a&z[zj][zjb]=zjb&z[zj][zja]=zja&z[zi][zib]=zib&z[zi][zia]=zia&b=b'\n        );\n        st.end();\n    });\n\n    t.test('can stringify with custom encoding', function (st) {\n        st.equal(qs.stringify({ 県: '大阪府', '': '' }, {\n            encoder: function (str) {\n                if (str.length === 0) {\n                    return '';\n                }\n                var buf = iconv.encode(str, 'shiftjis');\n                var result = [];\n                for (var i = 0; i < buf.length; ++i) {\n                    result.push(buf.readUInt8(i).toString(16));\n                }\n                return '%' + result.join('%');\n            }\n        }), '%8c%a7=%91%e5%8d%e3%95%7b&=');\n        st.end();\n    });\n\n    t.test('receives the default encoder as a second argument', function (st) {\n        st.plan(2);\n        qs.stringify({ a: 1 }, {\n            encoder: function (str, defaultEncoder) {\n                st.equal(defaultEncoder, utils.encode);\n            }\n        });\n        st.end();\n    });\n\n    t.test('throws error with wrong encoder', function (st) {\n        st['throws'](function () {\n            qs.stringify({}, { encoder: 'string' });\n        }, new TypeError('Encoder has to be a function.'));\n        st.end();\n    });\n\n    t.test('can use custom encoder for a buffer object', { skip: typeof Buffer === 'undefined' }, function (st) {\n        st.equal(qs.stringify({ a: SaferBuffer.from([1]) }, {\n            encoder: function (buffer) {\n                if (typeof buffer === 'string') {\n                    return buffer;\n                }\n                return String.fromCharCode(buffer.readUInt8(0) + 97);\n            }\n        }), 'a=b');\n        st.end();\n    });\n\n    t.test('serializeDate option', function (st) {\n        var date = new Date();\n        st.equal(\n            qs.stringify({ a: date }),\n            'a=' + date.toISOString().replace(/:/g, '%3A'),\n            'default is toISOString'\n        );\n\n        var mutatedDate = new Date();\n        mutatedDate.toISOString = function () {\n            throw new SyntaxError();\n        };\n        st['throws'](function () {\n            mutatedDate.toISOString();\n        }, SyntaxError);\n        st.equal(\n            qs.stringify({ a: mutatedDate }),\n            'a=' + Date.prototype.toISOString.call(mutatedDate).replace(/:/g, '%3A'),\n            'toISOString works even when method is not locally present'\n        );\n\n        var specificDate = new Date(6);\n        st.equal(\n            qs.stringify(\n                { a: specificDate },\n                { serializeDate: function (d) { return d.getTime() * 7; } }\n            ),\n            'a=42',\n            'custom serializeDate function called'\n        );\n\n        st.end();\n    });\n\n    t.test('RFC 1738 spaces serialization', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC1738 }), 'a=b+c');\n        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats.RFC1738 }), 'a+b=c+d');\n        st.end();\n    });\n\n    t.test('RFC 3986 spaces serialization', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC3986 }), 'a=b%20c');\n        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats.RFC3986 }), 'a%20b=c%20d');\n        st.end();\n    });\n\n    t.test('Backward compatibility to RFC 3986', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\n        st.end();\n    });\n\n    t.test('Edge cases and unknown formats', function (st) {\n        ['UFO1234', false, 1234, null, {}, []].forEach(\n            function (format) {\n                st['throws'](\n                    function () {\n                        qs.stringify({ a: 'b c' }, { format: format });\n                    },\n                    new TypeError('Unknown format option provided.')\n                );\n            }\n        );\n        st.end();\n    });\n\n    t.test('encodeValuesOnly', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },\n                { encodeValuesOnly: true }\n            ),\n            'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h'\n        );\n        st.equal(\n            qs.stringify(\n                { a: 'b', c: ['d', 'e'], f: [['g'], ['h']] }\n            ),\n            'a=b&c%5B0%5D=d&c%5B1%5D=e&f%5B0%5D%5B0%5D=g&f%5B1%5D%5B0%5D=h'\n        );\n        st.end();\n    });\n\n    t.test('encodeValuesOnly - strictNullHandling', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: { b: null } },\n                { encodeValuesOnly: true, strictNullHandling: true }\n            ),\n            'a[b]'\n        );\n        st.end();\n    });\n\n    t.test('does not mutate the options argument', function (st) {\n        var options = {};\n        qs.stringify({}, options);\n        st.deepEqual(options, {});\n        st.end();\n    });\n\n    t.end();\n});\n"]},"metadata":{},"sourceType":"script"}