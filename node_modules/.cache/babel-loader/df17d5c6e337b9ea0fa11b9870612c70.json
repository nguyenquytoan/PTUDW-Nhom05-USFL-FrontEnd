{"ast":null,"code":"'use strict';\n\nfunction _jestSnapshot() {\n  const data = require('jest-snapshot');\n\n  _jestSnapshot = function _jestSnapshot() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * DependencyResolver is used to resolve the direct dependencies of a module or\n * to retrieve a list of all transitive inverse dependencies.\n */\n\n/* eslint-disable-next-line no-redeclare */\n\n\nclass DependencyResolver {\n  constructor(resolver, hasteFS, snapshotResolver) {\n    _defineProperty(this, '_hasteFS', void 0);\n\n    _defineProperty(this, '_resolver', void 0);\n\n    _defineProperty(this, '_snapshotResolver', void 0);\n\n    this._resolver = resolver;\n    this._hasteFS = hasteFS;\n    this._snapshotResolver = snapshotResolver;\n  }\n\n  resolve(file, options) {\n    const dependencies = this._hasteFS.getDependencies(file);\n\n    if (!dependencies) {\n      return [];\n    }\n\n    return dependencies.reduce((acc, dependency) => {\n      if (this._resolver.isCoreModule(dependency)) {\n        return acc;\n      }\n\n      let resolvedDependency;\n\n      try {\n        resolvedDependency = this._resolver.resolveModule(file, dependency, options);\n      } catch (e) {\n        resolvedDependency = this._resolver.getMockModule(file, dependency);\n      }\n\n      if (resolvedDependency) {\n        acc.push(resolvedDependency);\n      }\n\n      return acc;\n    }, []);\n  }\n\n  resolveInverseModuleMap(paths, filter, options) {\n    if (!paths.size) {\n      return [];\n    }\n\n    const collectModules = (related, moduleMap, changed) => {\n      const visitedModules = new Set();\n      const result = [];\n\n      while (changed.size) {\n        changed = new Set(moduleMap.reduce((acc, module) => {\n          if (visitedModules.has(module.file) || !module.dependencies.some(dep => changed.has(dep))) {\n            return acc;\n          }\n\n          const file = module.file;\n\n          if (filter(file)) {\n            result.push(module);\n            related.delete(file);\n          }\n\n          visitedModules.add(file);\n          acc.push(file);\n          return acc;\n        }, []));\n      }\n\n      return result.concat(Array.from(related).map(file => ({\n        dependencies: [],\n        file\n      })));\n    };\n\n    const relatedPaths = new Set();\n    const changed = new Set();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = paths[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        const path = _step.value;\n\n        if (this._hasteFS.exists(path)) {\n          const modulePath = (0, _jestSnapshot().isSnapshotPath)(path) ? this._snapshotResolver.resolveTestPath(path) : path;\n          changed.add(modulePath);\n\n          if (filter(modulePath)) {\n            relatedPaths.add(modulePath);\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    const modules = [];\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = this._hasteFS.getAbsoluteFileIterator()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        const file = _step2.value;\n        modules.push({\n          dependencies: this.resolve(file, options),\n          file\n        });\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return collectModules(relatedPaths, modules, changed);\n  }\n\n  resolveInverse(paths, filter, options) {\n    return this.resolveInverseModuleMap(paths, filter, options).map(module => module.file);\n  }\n\n}\n\nmodule.exports = DependencyResolver;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-resolve-dependencies/build/index.js"],"names":["_jestSnapshot","data","require","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","DependencyResolver","constructor","resolver","hasteFS","snapshotResolver","_resolver","_hasteFS","_snapshotResolver","resolve","file","options","dependencies","getDependencies","reduce","acc","dependency","isCoreModule","resolvedDependency","resolveModule","e","getMockModule","push","resolveInverseModuleMap","paths","filter","size","collectModules","related","moduleMap","changed","visitedModules","Set","result","module","has","some","dep","delete","add","concat","Array","from","map","relatedPaths","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","path","exists","modulePath","isSnapshotPath","resolveTestPath","err","return","modules","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","getAbsoluteFileIterator","_step2","resolveInverse","exports"],"mappings":"AAAA;;AAEA,SAASA,aAAT,GAAyB;AACvB,QAAMC,IAAI,GAAGC,OAAO,CAAC,eAAD,CAApB;;AAEAF,EAAAA,aAAa,GAAG,SAASA,aAAT,GAAyB;AACvC,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASE,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AACxC,MAAID,GAAG,IAAID,GAAX,EAAgB;AACdG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9BC,MAAAA,KAAK,EAAEA,KADuB;AAE9BG,MAAAA,UAAU,EAAE,IAFkB;AAG9BC,MAAAA,YAAY,EAAE,IAHgB;AAI9BC,MAAAA,QAAQ,EAAE;AAJoB,KAAhC;AAMD,GAPD,MAOO;AACLP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AACD;;AACD,SAAOF,GAAP;AACD;AAED;;;;;AAKA;;;AACA,MAAMQ,kBAAN,CAAyB;AACvBC,EAAAA,WAAW,CAACC,QAAD,EAAWC,OAAX,EAAoBC,gBAApB,EAAsC;AAC/Cb,IAAAA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,WAAP,EAAoB,KAAK,CAAzB,CAAf;;AAEAA,IAAAA,eAAe,CAAC,IAAD,EAAO,mBAAP,EAA4B,KAAK,CAAjC,CAAf;;AAEA,SAAKc,SAAL,GAAiBH,QAAjB;AACA,SAAKI,QAAL,GAAgBH,OAAhB;AACA,SAAKI,iBAAL,GAAyBH,gBAAzB;AACD;;AAEDI,EAAAA,OAAO,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACrB,UAAMC,YAAY,GAAG,KAAKL,QAAL,CAAcM,eAAd,CAA8BH,IAA9B,CAArB;;AAEA,QAAI,CAACE,YAAL,EAAmB;AACjB,aAAO,EAAP;AACD;;AAED,WAAOA,YAAY,CAACE,MAAb,CAAoB,CAACC,GAAD,EAAMC,UAAN,KAAqB;AAC9C,UAAI,KAAKV,SAAL,CAAeW,YAAf,CAA4BD,UAA5B,CAAJ,EAA6C;AAC3C,eAAOD,GAAP;AACD;;AAED,UAAIG,kBAAJ;;AAEA,UAAI;AACFA,QAAAA,kBAAkB,GAAG,KAAKZ,SAAL,CAAea,aAAf,CACnBT,IADmB,EAEnBM,UAFmB,EAGnBL,OAHmB,CAArB;AAKD,OAND,CAME,OAAOS,CAAP,EAAU;AACVF,QAAAA,kBAAkB,GAAG,KAAKZ,SAAL,CAAee,aAAf,CAA6BX,IAA7B,EAAmCM,UAAnC,CAArB;AACD;;AAED,UAAIE,kBAAJ,EAAwB;AACtBH,QAAAA,GAAG,CAACO,IAAJ,CAASJ,kBAAT;AACD;;AAED,aAAOH,GAAP;AACD,KAtBM,EAsBJ,EAtBI,CAAP;AAuBD;;AAEDQ,EAAAA,uBAAuB,CAACC,KAAD,EAAQC,MAAR,EAAgBd,OAAhB,EAAyB;AAC9C,QAAI,CAACa,KAAK,CAACE,IAAX,EAAiB;AACf,aAAO,EAAP;AACD;;AAED,UAAMC,cAAc,GAAG,CAACC,OAAD,EAAUC,SAAV,EAAqBC,OAArB,KAAiC;AACtD,YAAMC,cAAc,GAAG,IAAIC,GAAJ,EAAvB;AACA,YAAMC,MAAM,GAAG,EAAf;;AAEA,aAAOH,OAAO,CAACJ,IAAf,EAAqB;AACnBI,QAAAA,OAAO,GAAG,IAAIE,GAAJ,CACRH,SAAS,CAACf,MAAV,CAAiB,CAACC,GAAD,EAAMmB,MAAN,KAAiB;AAChC,cACEH,cAAc,CAACI,GAAf,CAAmBD,MAAM,CAACxB,IAA1B,KACA,CAACwB,MAAM,CAACtB,YAAP,CAAoBwB,IAApB,CAAyBC,GAAG,IAAIP,OAAO,CAACK,GAAR,CAAYE,GAAZ,CAAhC,CAFH,EAGE;AACA,mBAAOtB,GAAP;AACD;;AAED,gBAAML,IAAI,GAAGwB,MAAM,CAACxB,IAApB;;AAEA,cAAIe,MAAM,CAACf,IAAD,CAAV,EAAkB;AAChBuB,YAAAA,MAAM,CAACX,IAAP,CAAYY,MAAZ;AACAN,YAAAA,OAAO,CAACU,MAAR,CAAe5B,IAAf;AACD;;AAEDqB,UAAAA,cAAc,CAACQ,GAAf,CAAmB7B,IAAnB;AACAK,UAAAA,GAAG,CAACO,IAAJ,CAASZ,IAAT;AACA,iBAAOK,GAAP;AACD,SAlBD,EAkBG,EAlBH,CADQ,CAAV;AAqBD;;AAED,aAAOkB,MAAM,CAACO,MAAP,CACLC,KAAK,CAACC,IAAN,CAAWd,OAAX,EAAoBe,GAApB,CAAwBjC,IAAI,KAAK;AAC/BE,QAAAA,YAAY,EAAE,EADiB;AAE/BF,QAAAA;AAF+B,OAAL,CAA5B,CADK,CAAP;AAMD,KAlCD;;AAoCA,UAAMkC,YAAY,GAAG,IAAIZ,GAAJ,EAArB;AACA,UAAMF,OAAO,GAAG,IAAIE,GAAJ,EAAhB;AACA,QAAIa,yBAAyB,GAAG,IAAhC;AACA,QAAIC,iBAAiB,GAAG,KAAxB;AACA,QAAIC,cAAc,GAAGC,SAArB;;AAEA,QAAI;AACF,WACE,IAAIC,SAAS,GAAGzB,KAAK,CAAC0B,MAAM,CAACC,QAAR,CAAL,EAAhB,EAA0CC,KAD5C,EAEE,EAAEP,yBAAyB,GAAG,CAACO,KAAK,GAAGH,SAAS,CAACI,IAAV,EAAT,EAA2BC,IAAzD,CAFF,EAGET,yBAAyB,GAAG,IAH9B,EAIE;AACA,cAAMU,IAAI,GAAGH,KAAK,CAACzD,KAAnB;;AAEA,YAAI,KAAKY,QAAL,CAAciD,MAAd,CAAqBD,IAArB,CAAJ,EAAgC;AAC9B,gBAAME,UAAU,GAAG,CAAC,GAAGpE,aAAa,GAAGqE,cAApB,EAAoCH,IAApC,IACf,KAAK/C,iBAAL,CAAuBmD,eAAvB,CAAuCJ,IAAvC,CADe,GAEfA,IAFJ;AAGAzB,UAAAA,OAAO,CAACS,GAAR,CAAYkB,UAAZ;;AAEA,cAAIhC,MAAM,CAACgC,UAAD,CAAV,EAAwB;AACtBb,YAAAA,YAAY,CAACL,GAAb,CAAiBkB,UAAjB;AACD;AACF;AACF;AACF,KAnBD,CAmBE,OAAOG,GAAP,EAAY;AACZd,MAAAA,iBAAiB,GAAG,IAApB;AACAC,MAAAA,cAAc,GAAGa,GAAjB;AACD,KAtBD,SAsBU;AACR,UAAI;AACF,YAAI,CAACf,yBAAD,IAA8BI,SAAS,CAACY,MAAV,IAAoB,IAAtD,EAA4D;AAC1DZ,UAAAA,SAAS,CAACY,MAAV;AACD;AACF,OAJD,SAIU;AACR,YAAIf,iBAAJ,EAAuB;AACrB,gBAAMC,cAAN;AACD;AACF;AACF;;AAED,UAAMe,OAAO,GAAG,EAAhB;AACA,QAAIC,0BAA0B,GAAG,IAAjC;AACA,QAAIC,kBAAkB,GAAG,KAAzB;AACA,QAAIC,eAAe,GAAGjB,SAAtB;;AAEA,QAAI;AACF,WACE,IAAIkB,UAAU,GAAG,KAAK3D,QAAL,CACZ4D,uBADY,GAEZjB,MAAM,CAACC,QAFK,GAAjB,EAGEiB,MAJJ,EAKE,EAAEL,0BAA0B,GAAG,CAACK,MAAM,GAAGF,UAAU,CAACb,IAAX,EAAV,EAA6BC,IAA5D,CALF,EAMES,0BAA0B,GAAG,IAN/B,EAOE;AACA,cAAMrD,IAAI,GAAG0D,MAAM,CAACzE,KAApB;AACAmE,QAAAA,OAAO,CAACxC,IAAR,CAAa;AACXV,UAAAA,YAAY,EAAE,KAAKH,OAAL,CAAaC,IAAb,EAAmBC,OAAnB,CADH;AAEXD,UAAAA;AAFW,SAAb;AAID;AACF,KAfD,CAeE,OAAOkD,GAAP,EAAY;AACZI,MAAAA,kBAAkB,GAAG,IAArB;AACAC,MAAAA,eAAe,GAAGL,GAAlB;AACD,KAlBD,SAkBU;AACR,UAAI;AACF,YAAI,CAACG,0BAAD,IAA+BG,UAAU,CAACL,MAAX,IAAqB,IAAxD,EAA8D;AAC5DK,UAAAA,UAAU,CAACL,MAAX;AACD;AACF,OAJD,SAIU;AACR,YAAIG,kBAAJ,EAAwB;AACtB,gBAAMC,eAAN;AACD;AACF;AACF;;AAED,WAAOtC,cAAc,CAACiB,YAAD,EAAekB,OAAf,EAAwBhC,OAAxB,CAArB;AACD;;AAEDuC,EAAAA,cAAc,CAAC7C,KAAD,EAAQC,MAAR,EAAgBd,OAAhB,EAAyB;AACrC,WAAO,KAAKY,uBAAL,CAA6BC,KAA7B,EAAoCC,MAApC,EAA4Cd,OAA5C,EAAqDgC,GAArD,CACLT,MAAM,IAAIA,MAAM,CAACxB,IADZ,CAAP;AAGD;;AAxKsB;;AA2KzBwB,MAAM,CAACoC,OAAP,GAAiBrE,kBAAjB","sourcesContent":["'use strict';\n\nfunction _jestSnapshot() {\n  const data = require('jest-snapshot');\n\n  _jestSnapshot = function _jestSnapshot() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * DependencyResolver is used to resolve the direct dependencies of a module or\n * to retrieve a list of all transitive inverse dependencies.\n */\n\n/* eslint-disable-next-line no-redeclare */\nclass DependencyResolver {\n  constructor(resolver, hasteFS, snapshotResolver) {\n    _defineProperty(this, '_hasteFS', void 0);\n\n    _defineProperty(this, '_resolver', void 0);\n\n    _defineProperty(this, '_snapshotResolver', void 0);\n\n    this._resolver = resolver;\n    this._hasteFS = hasteFS;\n    this._snapshotResolver = snapshotResolver;\n  }\n\n  resolve(file, options) {\n    const dependencies = this._hasteFS.getDependencies(file);\n\n    if (!dependencies) {\n      return [];\n    }\n\n    return dependencies.reduce((acc, dependency) => {\n      if (this._resolver.isCoreModule(dependency)) {\n        return acc;\n      }\n\n      let resolvedDependency;\n\n      try {\n        resolvedDependency = this._resolver.resolveModule(\n          file,\n          dependency,\n          options\n        );\n      } catch (e) {\n        resolvedDependency = this._resolver.getMockModule(file, dependency);\n      }\n\n      if (resolvedDependency) {\n        acc.push(resolvedDependency);\n      }\n\n      return acc;\n    }, []);\n  }\n\n  resolveInverseModuleMap(paths, filter, options) {\n    if (!paths.size) {\n      return [];\n    }\n\n    const collectModules = (related, moduleMap, changed) => {\n      const visitedModules = new Set();\n      const result = [];\n\n      while (changed.size) {\n        changed = new Set(\n          moduleMap.reduce((acc, module) => {\n            if (\n              visitedModules.has(module.file) ||\n              !module.dependencies.some(dep => changed.has(dep))\n            ) {\n              return acc;\n            }\n\n            const file = module.file;\n\n            if (filter(file)) {\n              result.push(module);\n              related.delete(file);\n            }\n\n            visitedModules.add(file);\n            acc.push(file);\n            return acc;\n          }, [])\n        );\n      }\n\n      return result.concat(\n        Array.from(related).map(file => ({\n          dependencies: [],\n          file\n        }))\n      );\n    };\n\n    const relatedPaths = new Set();\n    const changed = new Set();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (\n        var _iterator = paths[Symbol.iterator](), _step;\n        !(_iteratorNormalCompletion = (_step = _iterator.next()).done);\n        _iteratorNormalCompletion = true\n      ) {\n        const path = _step.value;\n\n        if (this._hasteFS.exists(path)) {\n          const modulePath = (0, _jestSnapshot().isSnapshotPath)(path)\n            ? this._snapshotResolver.resolveTestPath(path)\n            : path;\n          changed.add(modulePath);\n\n          if (filter(modulePath)) {\n            relatedPaths.add(modulePath);\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    const modules = [];\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (\n        var _iterator2 = this._hasteFS\n            .getAbsoluteFileIterator()\n            [Symbol.iterator](),\n          _step2;\n        !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done);\n        _iteratorNormalCompletion2 = true\n      ) {\n        const file = _step2.value;\n        modules.push({\n          dependencies: this.resolve(file, options),\n          file\n        });\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return collectModules(relatedPaths, modules, changed);\n  }\n\n  resolveInverse(paths, filter, options) {\n    return this.resolveInverseModuleMap(paths, filter, options).map(\n      module => module.file\n    );\n  }\n}\n\nmodule.exports = DependencyResolver;\n"]},"metadata":{},"sourceType":"script"}