{"ast":null,"code":"'use strict';\n\nvar expect = require('chai').expect,\n    objectPath = require('./index.js');\n\nfunction getTestObj() {\n  return {\n    a: 'b',\n    b: {\n      c: [],\n      d: ['a', 'b'],\n      e: [{}, {\n        f: 'g'\n      }],\n      f: 'i'\n    }\n  };\n}\n\ndescribe('get', function () {\n  it('should return the value using unicode key', function () {\n    var obj = {\n      '15\\u00f8C': {\n        '3\\u0111': 1\n      }\n    };\n    expect(objectPath.get(obj, '15\\u00f8C.3\\u0111')).to.be.equal(1);\n    expect(objectPath.get(obj, ['15\\u00f8C', '3\\u0111'])).to.be.equal(1);\n  });\n  it('should return the value using dot in key', function () {\n    var obj = {\n      'a.b': {\n        'looks.like': 1\n      }\n    };\n    expect(objectPath.get(obj, 'a.b.looks.like')).to.be.equal(void 0);\n    expect(objectPath.get(obj, ['a.b', 'looks.like'])).to.be.equal(1);\n  });\n  it('should return the value under shallow object', function () {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'a')).to.be.equal('b');\n    expect(objectPath.get(obj, ['a'])).to.be.equal('b');\n  });\n  it('should work with number path', function () {\n    var obj = getTestObj();\n    expect(objectPath.get(obj.b.d, 0)).to.be.equal('a');\n    expect(objectPath.get(obj.b, 0)).to.be.equal(void 0);\n  });\n  it('should return the value under deep object', function () {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'b.f')).to.be.equal('i');\n    expect(objectPath.get(obj, ['b', 'f'])).to.be.equal('i');\n  });\n  it('should return the value under array', function () {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'b.d.0')).to.be.equal('a');\n    expect(objectPath.get(obj, ['b', 'd', 0])).to.be.equal('a');\n  });\n  it('should return the value under array deep', function () {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'b.e.1.f')).to.be.equal('g');\n    expect(objectPath.get(obj, ['b', 'e', 1, 'f'])).to.be.equal('g');\n  });\n  it('should return undefined for missing values under object', function () {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'a.b')).to.not.exist;\n    expect(objectPath.get(obj, ['a', 'b'])).to.not.exist;\n  });\n  it('should return undefined for missing values under array', function () {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'b.d.5')).to.not.exist;\n    expect(objectPath.get(obj, ['b', 'd', '5'])).to.not.exist;\n  });\n  it('should return the value under integer-like key', function () {\n    var obj = {\n      '1a': 'foo'\n    };\n    expect(objectPath.get(obj, '1a')).to.be.equal('foo');\n    expect(objectPath.get(obj, ['1a'])).to.be.equal('foo');\n  });\n  it('should return the default value when the key doesnt exist', function () {\n    var obj = {\n      '1a': 'foo'\n    };\n    expect(objectPath.get(obj, '1b', null)).to.be.equal(null);\n    expect(objectPath.get(obj, ['1b'], null)).to.be.equal(null);\n  });\n  it('should return the default value when path is empty', function () {\n    var obj = {\n      '1a': 'foo'\n    };\n    expect(objectPath.get(obj, '', null)).to.be.deep.equal({\n      '1a': 'foo'\n    });\n    expect(objectPath.get(obj, [])).to.be.deep.equal({\n      '1a': 'foo'\n    });\n    expect(objectPath.get({}, ['1'])).to.be.equal(undefined);\n  });\n  it('should return the default value when object is null or undefined', function () {\n    expect(objectPath.get(null, 'test', 'a')).to.be.deep.equal('a');\n    expect(objectPath.get(undefined, 'test', 'a')).to.be.deep.equal('a');\n  });\n  it('should not fail on an object with a null prototype', function assertSuccessForObjWithNullProto() {\n    var foo = 'FOO';\n    var objWithNullProto = Object.create(null);\n    objWithNullProto.foo = foo;\n    expect(objectPath.get(objWithNullProto, 'foo')).to.equal(foo);\n  });\n  it('should skip non own properties', function () {\n    var Base = function (enabled) {};\n\n    Base.prototype = {\n      one: {\n        two: true\n      }\n    };\n\n    var Extended = function () {\n      Base.call(this, true);\n    };\n\n    Extended.prototype = Object.create(Base.prototype);\n    var extended = new Extended();\n    expect(objectPath.get(extended, ['one', 'two'])).to.be.equal(undefined);\n    extended.enabled = true;\n    expect(objectPath.get(extended, 'enabled')).to.be.equal(true);\n    expect(objectPath.get(extended, 'one')).to.be.equal(undefined);\n  });\n});\ndescribe('set', function () {\n  it('should set the value using unicode key', function () {\n    var obj = {\n      '15\\u00f8C': {\n        '3\\u0111': 1\n      }\n    };\n    objectPath.set(obj, '15\\u00f8C.3\\u0111', 2);\n    expect(objectPath.get(obj, '15\\u00f8C.3\\u0111')).to.be.equal(2);\n    objectPath.set(obj, '15\\u00f8C.3\\u0111', 3);\n    expect(objectPath.get(obj, ['15\\u00f8C', '3\\u0111'])).to.be.equal(3);\n  });\n  it('should set the value using dot in key', function () {\n    var obj = {\n      'a.b': {\n        'looks.like': 1\n      }\n    };\n    objectPath.set(obj, ['a.b', 'looks.like'], 2);\n    expect(objectPath.get(obj, ['a.b', 'looks.like'])).to.be.equal(2);\n  });\n  it('should set value under shallow object', function () {\n    var obj = getTestObj();\n    objectPath.set(obj, 'c', {\n      m: 'o'\n    });\n    expect(obj).to.have.deep.property('c.m', 'o');\n    obj = getTestObj();\n    objectPath.set(obj, ['c'], {\n      m: 'o'\n    });\n    expect(obj).to.have.deep.property('c.m', 'o');\n  });\n  it('should set value using number path', function () {\n    var obj = getTestObj();\n    objectPath.set(obj.b.d, 0, 'o');\n    expect(obj).to.have.deep.property('b.d.0', 'o');\n  });\n  it('should set value under deep object', function () {\n    var obj = getTestObj();\n    objectPath.set(obj, 'b.c', 'o');\n    expect(obj).to.have.deep.property('b.c', 'o');\n    obj = getTestObj();\n    objectPath.set(obj, ['b', 'c'], 'o');\n    expect(obj).to.have.deep.property('b.c', 'o');\n  });\n  it('should set value under array', function () {\n    var obj = getTestObj();\n    objectPath.set(obj, 'b.e.1.g', 'f');\n    expect(obj).to.have.deep.property('b.e.1.g', 'f');\n    obj = getTestObj();\n    objectPath.set(obj, ['b', 'e', 1, 'g'], 'f');\n    expect(obj).to.have.deep.property('b.e.1.g', 'f');\n    obj = {};\n    objectPath.set(obj, 'b.0', 'a');\n    objectPath.set(obj, 'b.1', 'b');\n    expect(obj.b).to.be.deep.equal(['a', 'b']);\n  });\n  it('should create intermediate objects', function () {\n    var obj = getTestObj();\n    objectPath.set(obj, 'c.d.e.f', 'l');\n    expect(obj).to.have.deep.property('c.d.e.f', 'l');\n    obj = getTestObj();\n    objectPath.set(obj, ['c', 'd', 'e', 'f'], 'l');\n    expect(obj).to.have.deep.property('c.d.e.f', 'l');\n  });\n  it('should create intermediate arrays', function () {\n    var obj = getTestObj();\n    objectPath.set(obj, 'c.0.1.m', 'l');\n    expect(obj.c).to.be.an('array');\n    expect(obj.c[0]).to.be.an('array');\n    expect(obj).to.have.deep.property('c.0.1.m', 'l');\n    obj = getTestObj();\n    objectPath.set(obj, ['c', '0', 1, 'm'], 'l');\n    expect(obj.c).to.be.an('object');\n    expect(obj.c[0]).to.be.an('array');\n    expect(obj).to.have.deep.property('c.0.1.m', 'l');\n  });\n  it('should set value under integer-like key', function () {\n    var obj = getTestObj();\n    objectPath.set(obj, '1a', 'foo');\n    expect(obj).to.have.deep.property('1a', 'foo');\n    obj = getTestObj();\n    objectPath.set(obj, ['1a'], 'foo');\n    expect(obj).to.have.deep.property('1a', 'foo');\n  });\n  it('should set value under empty array', function () {\n    var obj = [];\n    objectPath.set(obj, [0], 'foo');\n    expect(obj[0]).to.be.equal('foo');\n    obj = [];\n    objectPath.set(obj, '0', 'foo');\n    expect(obj[0]).to.be.equal('foo');\n  });\n});\ndescribe('push', function () {\n  it('should push value to existing array using unicode key', function () {\n    var obj = getTestObj();\n    objectPath.push(obj, 'b.\\u1290c', 'l');\n    expect(obj).to.have.deep.property('b.\\u1290c.0', 'l');\n    objectPath.push(obj, ['b', '\\u1290c'], 'l');\n    expect(obj).to.have.deep.property('b.\\u1290c.1', 'l');\n  });\n  it('should push value to existing array using dot key', function () {\n    var obj = getTestObj();\n    objectPath.push(obj, ['b', 'z.d'], 'l');\n    expect(objectPath.get(obj, ['b', 'z.d', 0])).to.be.equal('l');\n  });\n  it('should push value to existing array', function () {\n    var obj = getTestObj();\n    objectPath.push(obj, 'b.c', 'l');\n    expect(obj).to.have.deep.property('b.c.0', 'l');\n    obj = getTestObj();\n    objectPath.push(obj, ['b', 'c'], 'l');\n    expect(obj).to.have.deep.property('b.c.0', 'l');\n  });\n  it('should push value to new array', function () {\n    var obj = getTestObj();\n    objectPath.push(obj, 'b.h', 'l');\n    expect(obj).to.have.deep.property('b.h.0', 'l');\n    obj = getTestObj();\n    objectPath.push(obj, ['b', 'h'], 'l');\n    expect(obj).to.have.deep.property('b.h.0', 'l');\n  });\n  it('should push value to existing array using number path', function () {\n    var obj = getTestObj();\n    objectPath.push(obj.b.e, 0, 'l');\n    expect(obj).to.have.deep.property('b.e.0.0', 'l');\n  });\n});\ndescribe('ensureExists', function () {\n  it('should create the path if it does not exists', function () {\n    var obj = getTestObj();\n    var oldVal = objectPath.ensureExists(obj, 'b.g.1.l', 'test');\n    expect(oldVal).to.not.exist;\n    expect(obj).to.have.deep.property('b.g.1.l', 'test');\n    oldVal = objectPath.ensureExists(obj, 'b.g.1.l', 'test1');\n    expect(oldVal).to.be.equal('test');\n    expect(obj).to.have.deep.property('b.g.1.l', 'test');\n    oldVal = objectPath.ensureExists(obj, 'b.\\u8210', 'ok');\n    expect(oldVal).to.not.exist;\n    expect(obj).to.have.deep.property('b.\\u8210', 'ok');\n    oldVal = objectPath.ensureExists(obj, ['b', 'dot.dot'], 'ok');\n    expect(oldVal).to.not.exist;\n    expect(objectPath.get(obj, ['b', 'dot.dot'])).to.be.equal('ok');\n  });\n  it('should return the object if path is empty', function () {\n    var obj = getTestObj();\n    expect(objectPath.ensureExists(obj, [], 'test')).to.have.property('a', 'b');\n  });\n  it('Issue #26', function () {\n    var any = {};\n    objectPath.ensureExists(any, ['1', '1'], {});\n    expect(any).to.be.an('object');\n    expect(any[1]).to.be.an('object');\n    expect(any[1][1]).to.be.an('object');\n  });\n});\ndescribe('coalesce', function () {\n  it('should return the first non-undefined value', function () {\n    var obj = {\n      should: {\n        have: 'prop'\n      }\n    };\n    expect(objectPath.coalesce(obj, ['doesnt.exist', ['might', 'not', 'exist'], 'should.have'])).to.equal('prop');\n  });\n  it('should work with falsy values (null, 0, \\'\\', false)', function () {\n    var obj = {\n      is: {\n        false: false,\n        null: null,\n        empty: '',\n        zero: 0\n      }\n    };\n    expect(objectPath.coalesce(obj, ['doesnt.exist', 'is.zero'])).to.equal(0);\n    expect(objectPath.coalesce(obj, ['doesnt.exist', 'is.false'])).to.equal(false);\n    expect(objectPath.coalesce(obj, ['doesnt.exist', 'is.null'])).to.equal(null);\n    expect(objectPath.coalesce(obj, ['doesnt.exist', 'is.empty'])).to.equal('');\n  });\n  it('returns defaultValue if no paths found', function () {\n    var obj = {\n      doesnt: 'matter'\n    };\n    expect(objectPath.coalesce(obj, ['some.inexistant', 'path', ['on', 'object']], 'false')).to.equal('false');\n  });\n  it('works with unicode and dot keys', function () {\n    var obj = {\n      '\\u7591': true,\n      'dot.dot': false\n    };\n    expect(objectPath.coalesce(obj, ['1', '\\u7591', 'a.b'])).to.equal(true);\n    expect(objectPath.coalesce(obj, ['1', ['dot.dot'], '\\u7591'])).to.equal(false);\n  });\n});\ndescribe('empty', function () {\n  it('should ignore invalid arguments safely', function () {\n    var obj = {};\n    expect(objectPath.empty()).to.equal(void 0);\n    expect(objectPath.empty(obj, 'path')).to.equal(void 0);\n    expect(objectPath.empty(obj, '')).to.equal(void 0);\n    obj.path = true;\n    expect(objectPath.empty(obj, 'inexistant')).to.equal(void 0);\n    expect(objectPath.empty(null, 'path')).to.equal(void 0);\n    expect(objectPath.empty(void 0, 'path')).to.equal(void 0);\n  });\n  it('should empty each path according to their types', function () {\n    function Instance() {\n      this.notOwn = true;\n    }\n    /*istanbul ignore next: not part of code */\n\n\n    Instance.prototype.test = function () {};\n    /*istanbul ignore next: not part of code */\n\n\n    Instance.prototype.arr = [];\n    var obj = {\n      string: 'some string',\n      array: ['some', 'array', [1, 2, 3]],\n      number: 21,\n      boolean: true,\n      object: {\n        some: 'property',\n        sub: {\n          'property': true\n        },\n        nullProp: null,\n        undefinedProp: void 0\n      },\n      instance: new Instance()\n    };\n    /*istanbul ignore next: not part of code */\n\n    obj['function'] = function () {};\n\n    objectPath.empty(obj, ['array', '2']);\n    expect(obj.array[2]).to.deep.equal([]);\n    objectPath.empty(obj, 'object.sub');\n    expect(obj.object.sub).to.deep.equal({});\n    objectPath.empty(obj, 'object.nullProp');\n    expect(obj.object.nullProp).to.equal(null);\n    objectPath.empty(obj, 'object.undefinedProp');\n    expect(obj.object.undefinedProp).to.equal(void 0);\n    expect(obj.object).to.have.property('undefinedProp');\n    objectPath.empty(obj, 'object.notAProp');\n    expect(obj.object.notAProp).to.equal(void 0);\n    expect(obj.object).to.not.have.property('notAProp');\n    objectPath.empty(obj, 'instance.test'); //instance.test is not own property, so it shouldn't be emptied\n\n    expect(obj.instance.test).to.be.a('function');\n    expect(Instance.prototype.test).to.be.a('function');\n    objectPath.empty(obj, 'string');\n    objectPath.empty(obj, 'number');\n    objectPath.empty(obj, 'boolean');\n    objectPath.empty(obj, 'function');\n    objectPath.empty(obj, 'array');\n    objectPath.empty(obj, 'object');\n    objectPath.empty(obj, 'instance');\n    expect(obj.string).to.equal('');\n    expect(obj.array).to.deep.equal([]);\n    expect(obj.number).to.equal(0);\n    expect(obj.boolean).to.equal(false);\n    expect(obj.object).to.deep.equal({});\n    expect(obj.instance.notOwn).to.be.an('undefined');\n    expect(obj.instance.arr).to.be.an('array');\n    expect(obj['function']).to.equal(null);\n  });\n});\ndescribe('del', function () {\n  it('should work with number path', function () {\n    var obj = getTestObj();\n    objectPath.del(obj.b.d, 1);\n    expect(obj.b.d).to.deep.equal(['a']);\n  });\n  it('should remove null and undefined props (but not explode on nested)', function () {\n    var obj = {\n      nullProp: null,\n      undefinedProp: void 0\n    };\n    expect(obj).to.have.property('nullProp');\n    expect(obj).to.have.property('undefinedProp');\n    objectPath.del(obj, 'nullProp.foo');\n    objectPath.del(obj, 'undefinedProp.bar');\n    expect(obj).to.have.property('nullProp');\n    expect(obj).to.have.property('undefinedProp');\n    expect(obj).to.deep.equal({\n      nullProp: null,\n      undefinedProp: void 0\n    });\n    objectPath.del(obj, 'nullProp');\n    objectPath.del(obj, 'undefinedProp');\n    expect(obj).to.not.have.property('nullProp');\n    expect(obj).to.not.have.property('undefinedProp');\n    expect(obj).to.deep.equal({});\n  });\n  it('should delete deep paths', function () {\n    var obj = getTestObj();\n    expect(objectPath.del(obj)).to.be.equal(obj);\n    objectPath.set(obj, 'b.g.1.0', 'test');\n    objectPath.set(obj, 'b.g.1.1', 'test');\n    objectPath.set(obj, 'b.h.az', 'test');\n    objectPath.set(obj, 'b.\\ubeef', 'test');\n    objectPath.set(obj, ['b', 'dot.dot'], 'test');\n    expect(obj).to.have.deep.property('b.g.1.0', 'test');\n    expect(obj).to.have.deep.property('b.g.1.1', 'test');\n    expect(obj).to.have.deep.property('b.h.az', 'test');\n    expect(obj).to.have.deep.property('b.\\ubeef', 'test');\n    objectPath.del(obj, 'b.h.az');\n    expect(obj).to.not.have.deep.property('b.h.az');\n    expect(obj).to.have.deep.property('b.h');\n    objectPath.del(obj, 'b.g.1.1');\n    expect(obj).to.not.have.deep.property('b.g.1.1');\n    expect(obj).to.have.deep.property('b.g.1.0', 'test');\n    objectPath.del(obj, 'b.\\ubeef');\n    expect(obj).to.not.have.deep.property('b.\\ubeef');\n    objectPath.del(obj, ['b', 'dot.dot']);\n    expect(objectPath.get(obj, ['b', 'dot.dot'])).to.be.equal(void 0);\n    objectPath.del(obj, ['b', 'g', '1', '0']);\n    expect(obj).to.not.have.deep.property('b.g.1.0');\n    expect(obj).to.have.deep.property('b.g.1');\n    expect(objectPath.del(obj, ['b'])).to.not.have.deep.property('b.g');\n    expect(obj).to.be.deep.equal({\n      'a': 'b'\n    });\n  });\n  it('should remove items from existing array', function () {\n    var obj = getTestObj();\n    objectPath.del(obj, 'b.d.0');\n    expect(obj.b.d).to.have.length(1);\n    expect(obj.b.d).to.be.deep.equal(['b']);\n    objectPath.del(obj, 'b.d.0');\n    expect(obj.b.d).to.have.length(0);\n    expect(obj.b.d).to.be.deep.equal([]);\n  });\n});\ndescribe('insert', function () {\n  it('should insert value into existing array', function () {\n    var obj = getTestObj();\n    objectPath.insert(obj, 'b.c', 'asdf');\n    expect(obj).to.have.deep.property('b.c.0', 'asdf');\n    expect(obj).to.not.have.deep.property('b.c.1');\n  });\n  it('should create intermediary array', function () {\n    var obj = getTestObj();\n    objectPath.insert(obj, 'b.c.0', 'asdf');\n    expect(obj).to.have.deep.property('b.c.0.0', 'asdf');\n  });\n  it('should insert in another index', function () {\n    var obj = getTestObj();\n    objectPath.insert(obj, 'b.d', 'asdf', 1);\n    expect(obj).to.have.deep.property('b.d.1', 'asdf');\n    expect(obj).to.have.deep.property('b.d.0', 'a');\n    expect(obj).to.have.deep.property('b.d.2', 'b');\n  });\n  it('should handle sparse array', function () {\n    var obj = getTestObj();\n    obj.b.d = new Array(4);\n    obj.b.d[0] = 'a';\n    obj.b.d[1] = 'b';\n    objectPath.insert(obj, 'b.d', 'asdf', 3);\n    expect(obj.b.d).to.have.members(['a', 'b',,, 'asdf']);\n  });\n});\ndescribe('has', function () {\n  it('should return false for empty object', function () {\n    expect(objectPath.has({}, 'a')).to.be.equal(false);\n  });\n  it('should handle empty paths properly', function () {\n    var obj = getTestObj();\n    expect(objectPath.has(obj, '')).to.be.equal(false);\n    expect(objectPath.has(obj, [''])).to.be.equal(false);\n    obj[''] = 1;\n    expect(objectPath.has(obj, '')).to.be.equal(true);\n    expect(objectPath.has(obj, [''])).to.be.equal(true);\n    expect(objectPath.has(obj, [])).to.be.equal(true);\n    expect(objectPath.has(null, [])).to.be.equal(false);\n  });\n  it('should test under shallow object', function () {\n    var obj = getTestObj();\n    expect(objectPath.has(obj, 'a')).to.be.equal(true);\n    expect(objectPath.has(obj, ['a'])).to.be.equal(true);\n    expect(objectPath.has(obj, 'z')).to.be.equal(false);\n    expect(objectPath.has(obj, ['z'])).to.be.equal(false);\n  });\n  it('should work with number path', function () {\n    var obj = getTestObj();\n    expect(objectPath.has(obj.b.d, 0)).to.be.equal(true);\n    expect(objectPath.has(obj.b, 0)).to.be.equal(false);\n    expect(objectPath.has(obj.b.d, 10)).to.be.equal(false);\n    expect(objectPath.has(obj.b, 10)).to.be.equal(false);\n  });\n  it('should test under deep object', function () {\n    var obj = getTestObj();\n    expect(objectPath.has(obj, 'b.f')).to.be.equal(true);\n    expect(objectPath.has(obj, ['b', 'f'])).to.be.equal(true);\n    expect(objectPath.has(obj, 'b.g')).to.be.equal(false);\n    expect(objectPath.has(obj, ['b', 'g'])).to.be.equal(false);\n  });\n  it('should test value under array', function () {\n    var obj = {\n      b: ['a']\n    };\n    obj.b[3] = {\n      o: 'a'\n    };\n    expect(objectPath.has(obj, 'b.0')).to.be.equal(true);\n    expect(objectPath.has(obj, 'b.1')).to.be.equal(true);\n    expect(objectPath.has(obj, 'b.3.o')).to.be.equal(true);\n    expect(objectPath.has(obj, 'b.3.qwe')).to.be.equal(false);\n    expect(objectPath.has(obj, 'b.4')).to.be.equal(false);\n  });\n  it('should test the value under array deep', function () {\n    var obj = getTestObj();\n    expect(objectPath.has(obj, 'b.e.1.f')).to.be.equal(true);\n    expect(objectPath.has(obj, ['b', 'e', 1, 'f'])).to.be.equal(true);\n    expect(objectPath.has(obj, 'b.e.1.f.g.h.i')).to.be.equal(false);\n    expect(objectPath.has(obj, ['b', 'e', 1, 'f', 'g', 'h', 'i'])).to.be.equal(false);\n  });\n  it('should test the value under integer-like key', function () {\n    var obj = {\n      '1a': 'foo'\n    };\n    expect(objectPath.has(obj, '1a')).to.be.equal(true);\n    expect(objectPath.has(obj, ['1a'])).to.be.equal(true);\n  });\n  it('should distinct nonexistent key and key = undefined', function () {\n    var obj = {};\n    expect(objectPath.has(obj, 'key')).to.be.equal(false);\n    obj.key = undefined;\n    expect(objectPath.has(obj, 'key')).to.be.equal(true);\n  });\n  it('should work with deep undefined/null values', function () {\n    var obj = {};\n    expect(objectPath.has(obj, 'missing.test')).to.be.equal(false);\n    obj.missing = null;\n    expect(objectPath.has(obj, 'missing.test')).to.be.equal(false);\n    obj.sparseArray = [1, undefined, 3];\n    expect(objectPath.has(obj, 'sparseArray.1.test')).to.be.equal(false);\n  });\n});\ndescribe('bind object', function () {\n  // just get one scenario from each feature, so whole functionality is proxied well\n  it('should return the value under shallow object', function () {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n    expect(model.get('a')).to.be.equal('b');\n    expect(model.get(['a'])).to.be.equal('b');\n  });\n  it('should set value under shallow object', function () {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n    model.set('c', {\n      m: 'o'\n    });\n    expect(obj).to.have.deep.property('c.m', 'o');\n    obj = getTestObj();\n    model = objectPath(obj);\n    model.set(['c'], {\n      m: 'o'\n    });\n    expect(obj).to.have.deep.property('c.m', 'o');\n  });\n  it('should push value to existing array', function () {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n    model.push('b.c', 'l');\n    expect(obj).to.have.deep.property('b.c.0', 'l');\n    obj = getTestObj();\n    model = objectPath(obj);\n    model.push(['b', 'c'], 'l');\n    expect(obj).to.have.deep.property('b.c.0', 'l');\n  });\n  it('should create the path if it does not exists', function () {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n    var oldVal = model.ensureExists('b.g.1.l', 'test');\n    expect(oldVal).to.not.exist;\n    expect(obj).to.have.deep.property('b.g.1.l', 'test');\n    oldVal = model.ensureExists('b.g.1.l', 'test1');\n    expect(oldVal).to.be.equal('test');\n    expect(obj).to.have.deep.property('b.g.1.l', 'test');\n  });\n  it('should return the first non-undefined value', function () {\n    var obj = {\n      should: {\n        have: 'prop'\n      }\n    };\n    var model = objectPath(obj);\n    expect(model.coalesce(['doesnt.exist', ['might', 'not', 'exist'], 'should.have'])).to.equal('prop');\n  });\n  it('should empty each path according to their types', function () {\n    function Instance() {\n      this.notOwn = true;\n    }\n    /*istanbul ignore next: not part of code */\n\n\n    Instance.prototype.test = function () {};\n    /*istanbul ignore next: not part of code */\n\n\n    Instance.prototype.arr = [];\n    var obj = {\n      string: 'some string',\n      array: ['some', 'array', [1, 2, 3]],\n      number: 21,\n      boolean: true,\n      object: {\n        some: 'property',\n        sub: {\n          'property': true\n        }\n      },\n      instance: new Instance()\n    };\n    /*istanbul ignore next: not part of code */\n\n    obj['function'] = function () {};\n\n    var model = objectPath(obj);\n    model.empty(['array', '2']);\n    expect(obj.array[2]).to.deep.equal([]);\n    model.empty('object.sub');\n    expect(obj.object.sub).to.deep.equal({});\n    model.empty('instance.test'); //instance.test is not own property so it shouldn't be emptied\n\n    expect(obj.instance.test).to.be.a('function');\n    expect(Instance.prototype.test).to.be.a('function');\n    model.empty('string');\n    model.empty('number');\n    model.empty('boolean');\n    model.empty('function');\n    model.empty('array');\n    model.empty('object');\n    model.empty('instance');\n    expect(obj.string).to.equal('');\n    expect(obj.array).to.deep.equal([]);\n    expect(obj.number).to.equal(0);\n    expect(obj.boolean).to.equal(false);\n    expect(obj.object).to.deep.equal({});\n    expect(obj.instance.notOwn).to.be.an('undefined');\n    expect(obj.instance.arr).to.be.an('array');\n    expect(obj['function']).to.equal(null);\n  });\n  it('should delete deep paths', function () {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n    expect(model.del()).to.be.equal(obj);\n    model.set('b.g.1.0', 'test');\n    model.set('b.g.1.1', 'test');\n    model.set('b.h.az', 'test');\n    expect(obj).to.have.deep.property('b.g.1.0', 'test');\n    expect(obj).to.have.deep.property('b.g.1.1', 'test');\n    expect(obj).to.have.deep.property('b.h.az', 'test');\n    model.del('b.h.az');\n    expect(obj).to.not.have.deep.property('b.h.az');\n    expect(obj).to.have.deep.property('b.h');\n    model.del('b.g.1.1');\n    expect(obj).to.not.have.deep.property('b.g.1.1');\n    expect(obj).to.have.deep.property('b.g.1.0', 'test');\n    model.del(['b', 'g', '1', '0']);\n    expect(obj).to.not.have.deep.property('b.g.1.0');\n    expect(obj).to.have.deep.property('b.g.1');\n    expect(model.del(['b'])).to.not.have.deep.property('b.g');\n    expect(obj).to.be.deep.equal({\n      'a': 'b'\n    });\n  });\n  it('should insert value into existing array', function () {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n    model.insert('b.c', 'asdf');\n    expect(obj).to.have.deep.property('b.c.0', 'asdf');\n    expect(obj).to.not.have.deep.property('b.c.1');\n  });\n  it('should test under shallow object', function () {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n    expect(model.has('a')).to.be.equal(true);\n    expect(model.has(['a'])).to.be.equal(true);\n    expect(model.has('z')).to.be.equal(false);\n    expect(model.has(['z'])).to.be.equal(false);\n  });\n});\ndescribe('Don\\'t access not own properties [default]', function () {\n  it('should not get a not own property', function () {\n    var Obj = function () {};\n\n    Obj.prototype.notOwn = {\n      a: 'a'\n    };\n    var obj = new Obj();\n    expect(objectPath.get(obj, 'notOwn')).to.be.undefined;\n  });\n  it('should set a not own property on the instance (not the prototype)', function () {\n    var proto = {\n      notOwn: {}\n    };\n    var obj = Object.create(proto);\n    objectPath.set(obj, 'notOwn.test', 'a');\n    expect(obj.notOwn.test).to.be.equal('a');\n    expect(proto.notOwn).to.be.deep.equal({});\n  });\n  it('has should return false on a not own property', function () {\n    var proto = {\n      notOwn: {\n        a: 'a'\n      }\n    };\n    var obj = Object.create(proto);\n    expect(objectPath.has(obj, 'notOwn')).to.be.false;\n    expect(objectPath.has(obj, 'notOwn.a')).to.be.false;\n  });\n  it('empty should not empty on a not own property', function () {\n    var proto = {\n      notOwn: {\n        a: 'a'\n      }\n    };\n    var obj = Object.create(proto);\n    objectPath.empty(obj, 'notOwn');\n    expect(proto.notOwn).to.be.deep.equal({\n      a: 'a'\n    });\n    expect(obj.notOwn).to.be.deep.equal({\n      a: 'a'\n    });\n  });\n  it('del should not delete not own property', function () {\n    var proto = {\n      notOwn: {\n        a: 'a'\n      }\n    };\n    var obj = Object.create(proto);\n    objectPath.del(obj, 'notOwn.a');\n    expect(proto.notOwn).to.be.deep.equal({\n      a: 'a'\n    }); //expect(obj.notOwn).to.be.deep.equal({a: 'a'});\n    //objectPath.del(obj, 'notOwn');\n    //expect(proto).to.be.deep.equal({notOwn: {a: 'a'}});\n    //expect(obj).to.be.deep.equal({notOwn: {a: 'a'}});\n  });\n});\ndescribe('Access own properties [optional]', function () {\n  it('should get a not own property', function () {\n    var Obj = function () {};\n\n    Obj.prototype.notOwn = {\n      a: 'a'\n    };\n    var obj = new Obj();\n    expect(objectPath.withInheritedProps.get(obj, 'notOwn.a')).to.be.equal('a');\n  });\n  it('should set a deep not own property on the prototype (if exists)', function () {\n    var proto = {\n      notOwn: {}\n    };\n    var obj = Object.create(proto);\n    objectPath.withInheritedProps.set(obj, 'notOwn.test', 'a');\n    expect(obj.notOwn.test).to.be.equal('a');\n    expect(proto.notOwn).to.be.deep.equal({\n      test: 'a'\n    });\n  });\n  it('has should return true on a not own property', function () {\n    var proto = {\n      notOwn: {\n        a: 'a'\n      }\n    };\n    var obj = Object.create(proto);\n    expect(objectPath.withInheritedProps.has(obj, 'notOwn')).to.be.true;\n    expect(objectPath.withInheritedProps.has(obj, 'notOwn.a')).to.be.true;\n  });\n  it('empty should empty a not own property', function () {\n    var proto = {\n      notOwn: {\n        a: 'a'\n      }\n    };\n    var obj = Object.create(proto);\n    objectPath.withInheritedProps.empty(obj, 'notOwn');\n    expect(proto.notOwn).to.be.deep.equal({});\n    expect(obj.notOwn).to.be.deep.equal({});\n  });\n  it('del should delete a not own property', function () {\n    var proto = {\n      notOwn: {\n        a: 'a'\n      }\n    };\n    var obj = Object.create(proto);\n    objectPath.withInheritedProps.del(obj, 'notOwn.a');\n    expect(proto.notOwn).to.be.deep.equal({}); //expect(obj.notOwn).to.be.deep.equal({});\n\n    objectPath.withInheritedProps.del(obj, 'notOwn'); //expect(proto).to.be.deep.equal({notOwn: {}});\n    //expect(obj).to.be.deep.equal({notOwn: {}});\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/object-path/test.js"],"names":["expect","require","objectPath","getTestObj","a","b","c","d","e","f","describe","it","obj","get","to","be","equal","not","exist","deep","undefined","assertSuccessForObjWithNullProto","foo","objWithNullProto","Object","create","Base","enabled","prototype","one","two","Extended","call","extended","set","m","have","property","an","push","oldVal","ensureExists","any","should","coalesce","is","false","null","empty","zero","doesnt","path","Instance","notOwn","test","arr","string","array","number","boolean","object","some","sub","nullProp","undefinedProp","instance","notAProp","del","length","insert","Array","members","has","o","key","missing","sparseArray","model","Obj","proto","withInheritedProps","true"],"mappings":"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","sourcesContent":["'use strict';\nvar expect = require('chai').expect,\n  objectPath = require('./index.js');\n\n\nfunction getTestObj() {\n  return {\n    a: 'b',\n    b: {\n      c: [],\n      d: ['a', 'b'],\n      e: [{},{f: 'g'}],\n      f: 'i'\n    }\n  };\n}\n\ndescribe('get', function() {\n  it('should return the value using unicode key', function() {\n    var obj = {\n      '15\\u00f8C': {\n        '3\\u0111': 1\n      }\n    };\n    expect(objectPath.get(obj, '15\\u00f8C.3\\u0111')).to.be.equal(1);\n    expect(objectPath.get(obj, ['15\\u00f8C','3\\u0111'])).to.be.equal(1);\n  });\n\n  it('should return the value using dot in key', function() {\n    var obj = {\n      'a.b': {\n        'looks.like': 1\n      }\n    };\n    expect(objectPath.get(obj, 'a.b.looks.like')).to.be.equal(void 0);\n    expect(objectPath.get(obj, ['a.b','looks.like'])).to.be.equal(1);\n  });\n\n  it('should return the value under shallow object', function() {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'a')).to.be.equal('b');\n    expect(objectPath.get(obj, ['a'])).to.be.equal('b');\n  });\n\n  it('should work with number path', function() {\n    var obj = getTestObj();\n    expect(objectPath.get(obj.b.d, 0)).to.be.equal('a');\n    expect(objectPath.get(obj.b, 0)).to.be.equal(void 0);\n  });\n\n  it('should return the value under deep object', function() {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'b.f')).to.be.equal('i');\n    expect(objectPath.get(obj, ['b','f'])).to.be.equal('i');\n  });\n\n  it('should return the value under array', function() {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'b.d.0')).to.be.equal('a');\n    expect(objectPath.get(obj, ['b','d',0])).to.be.equal('a');\n  });\n\n  it('should return the value under array deep', function() {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'b.e.1.f')).to.be.equal('g');\n    expect(objectPath.get(obj, ['b','e',1,'f'])).to.be.equal('g');\n  });\n\n  it('should return undefined for missing values under object', function() {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'a.b')).to.not.exist;\n    expect(objectPath.get(obj, ['a','b'])).to.not.exist;\n  });\n\n  it('should return undefined for missing values under array', function() {\n    var obj = getTestObj();\n    expect(objectPath.get(obj, 'b.d.5')).to.not.exist;\n    expect(objectPath.get(obj, ['b','d','5'])).to.not.exist;\n  });\n\n  it('should return the value under integer-like key', function() {\n    var obj = { '1a': 'foo' };\n    expect(objectPath.get(obj, '1a')).to.be.equal('foo');\n    expect(objectPath.get(obj, ['1a'])).to.be.equal('foo');\n  });\n\n  it('should return the default value when the key doesnt exist', function() {\n    var obj = { '1a': 'foo' };\n    expect(objectPath.get(obj, '1b', null)).to.be.equal(null);\n    expect(objectPath.get(obj, ['1b'], null)).to.be.equal(null);\n  });\n\n  it('should return the default value when path is empty', function() {\n    var obj = { '1a': 'foo' };\n    expect(objectPath.get(obj, '', null)).to.be.deep.equal({ '1a': 'foo' });\n    expect(objectPath.get(obj, [])).to.be.deep.equal({ '1a': 'foo' });\n    expect(objectPath.get({  }, ['1'])).to.be.equal(undefined);\n  });\n\n  it('should return the default value when object is null or undefined', function() {\n    expect(objectPath.get(null, 'test', 'a')).to.be.deep.equal('a');\n    expect(objectPath.get(undefined, 'test', 'a')).to.be.deep.equal('a');\n  });\n\n  it(\n    'should not fail on an object with a null prototype',\n    function assertSuccessForObjWithNullProto(){\n      var foo = 'FOO';\n      var objWithNullProto = Object.create(null);\n      objWithNullProto.foo = foo;\n      expect(objectPath.get(objWithNullProto, 'foo')).to.equal(foo);\n    }\n  );\n\n  it('should skip non own properties', function() {\n    var Base = function(enabled){ };\n    Base.prototype = {\n      one: {\n        two: true\n      }\n    };\n    var Extended = function(){\n      Base.call(this,  true);\n    };\n    Extended.prototype = Object.create(Base.prototype);\n\n    var extended = new Extended();\n\n    expect(objectPath.get(extended, ['one','two'])).to.be.equal(undefined);\n    extended.enabled = true;\n\n    expect(objectPath.get(extended, 'enabled')).to.be.equal(true);\n    expect(objectPath.get(extended, 'one')).to.be.equal(undefined);\n  });\n});\n\n\ndescribe('set', function() {\n  it('should set the value using unicode key', function() {\n    var obj = {\n      '15\\u00f8C': {\n        '3\\u0111': 1\n      }\n    };\n    objectPath.set(obj, '15\\u00f8C.3\\u0111', 2);\n    expect(objectPath.get(obj, '15\\u00f8C.3\\u0111')).to.be.equal(2);\n    objectPath.set(obj, '15\\u00f8C.3\\u0111', 3);\n    expect(objectPath.get(obj, ['15\\u00f8C','3\\u0111'])).to.be.equal(3);\n  });\n\n  it('should set the value using dot in key', function() {\n    var obj = {\n      'a.b': {\n        'looks.like': 1\n      }\n    };\n    objectPath.set(obj, ['a.b','looks.like'], 2);\n    expect(objectPath.get(obj, ['a.b','looks.like'])).to.be.equal(2);\n  });\n\n  it('should set value under shallow object', function() {\n    var obj = getTestObj();\n    objectPath.set(obj, 'c', {m: 'o'});\n    expect(obj).to.have.deep.property('c.m', 'o');\n    obj = getTestObj();\n    objectPath.set(obj, ['c'], {m: 'o'});\n    expect(obj).to.have.deep.property('c.m', 'o');\n  });\n\n  it('should set value using number path', function() {\n    var obj = getTestObj();\n    objectPath.set(obj.b.d, 0, 'o');\n    expect(obj).to.have.deep.property('b.d.0', 'o');\n  });\n\n  it('should set value under deep object', function() {\n    var obj = getTestObj();\n    objectPath.set(obj, 'b.c', 'o');\n    expect(obj).to.have.deep.property('b.c', 'o');\n    obj = getTestObj();\n    objectPath.set(obj, ['b','c'], 'o');\n    expect(obj).to.have.deep.property('b.c', 'o');\n  });\n\n  it('should set value under array', function() {\n    var obj = getTestObj();\n    objectPath.set(obj, 'b.e.1.g', 'f');\n    expect(obj).to.have.deep.property('b.e.1.g', 'f');\n    obj = getTestObj();\n    objectPath.set(obj, ['b','e',1,'g'], 'f');\n    expect(obj).to.have.deep.property('b.e.1.g', 'f');\n\n    obj = {}\n    objectPath.set(obj, 'b.0', 'a');\n    objectPath.set(obj, 'b.1', 'b');\n    expect(obj.b).to.be.deep.equal(['a', 'b']);\n  });\n\n  it('should create intermediate objects', function() {\n    var obj = getTestObj();\n    objectPath.set(obj, 'c.d.e.f', 'l');\n    expect(obj).to.have.deep.property('c.d.e.f', 'l');\n    obj = getTestObj();\n    objectPath.set(obj, ['c','d','e','f'], 'l');\n    expect(obj).to.have.deep.property('c.d.e.f', 'l');\n  });\n\n  it('should create intermediate arrays', function() {\n    var obj = getTestObj();\n    objectPath.set(obj, 'c.0.1.m', 'l');\n    expect(obj.c).to.be.an('array');\n    expect(obj.c[0]).to.be.an('array');\n    expect(obj).to.have.deep.property('c.0.1.m', 'l');\n    obj = getTestObj();\n    objectPath.set(obj, ['c','0', 1,'m'], 'l');\n    expect(obj.c).to.be.an('object');\n    expect(obj.c[0]).to.be.an('array');\n    expect(obj).to.have.deep.property('c.0.1.m', 'l');\n  });\n\n  it('should set value under integer-like key', function() {\n    var obj = getTestObj();\n    objectPath.set(obj, '1a', 'foo');\n    expect(obj).to.have.deep.property('1a', 'foo');\n    obj = getTestObj();\n    objectPath.set(obj, ['1a'], 'foo');\n    expect(obj).to.have.deep.property('1a', 'foo');\n  });\n\n  it('should set value under empty array', function() {\n    var obj = [];\n    objectPath.set(obj, [0], 'foo');\n    expect(obj[0]).to.be.equal('foo');\n    obj = [];\n    objectPath.set(obj, '0', 'foo');\n    expect(obj[0]).to.be.equal('foo');\n  });\n});\n\n\ndescribe('push', function() {\n  it('should push value to existing array using unicode key', function() {\n    var obj = getTestObj();\n    objectPath.push(obj, 'b.\\u1290c', 'l');\n    expect(obj).to.have.deep.property('b.\\u1290c.0', 'l');\n    objectPath.push(obj, ['b','\\u1290c'], 'l');\n    expect(obj).to.have.deep.property('b.\\u1290c.1', 'l');\n  });\n\n  it('should push value to existing array using dot key', function() {\n    var obj = getTestObj();\n    objectPath.push(obj, ['b','z.d'], 'l');\n    expect(objectPath.get(obj, ['b','z.d', 0])).to.be.equal('l');\n  });\n\n  it('should push value to existing array', function() {\n    var obj = getTestObj();\n    objectPath.push(obj, 'b.c', 'l');\n    expect(obj).to.have.deep.property('b.c.0', 'l');\n    obj = getTestObj();\n    objectPath.push(obj, ['b','c'], 'l');\n    expect(obj).to.have.deep.property('b.c.0', 'l');\n  });\n\n  it('should push value to new array', function() {\n    var obj = getTestObj();\n    objectPath.push(obj, 'b.h', 'l');\n    expect(obj).to.have.deep.property('b.h.0', 'l');\n    obj = getTestObj();\n    objectPath.push(obj, ['b','h'], 'l');\n    expect(obj).to.have.deep.property('b.h.0', 'l');\n  });\n\n  it('should push value to existing array using number path', function() {\n    var obj = getTestObj();\n    objectPath.push(obj.b.e, 0, 'l');\n    expect(obj).to.have.deep.property('b.e.0.0', 'l');\n  });\n\n});\n\n\ndescribe('ensureExists', function() {\n  it('should create the path if it does not exists', function() {\n    var obj = getTestObj();\n    var oldVal = objectPath.ensureExists(obj, 'b.g.1.l', 'test');\n    expect(oldVal).to.not.exist;\n    expect(obj).to.have.deep.property('b.g.1.l', 'test');\n    oldVal = objectPath.ensureExists(obj, 'b.g.1.l', 'test1');\n    expect(oldVal).to.be.equal('test');\n    expect(obj).to.have.deep.property('b.g.1.l', 'test');\n    oldVal = objectPath.ensureExists(obj, 'b.\\u8210', 'ok');\n    expect(oldVal).to.not.exist;\n    expect(obj).to.have.deep.property('b.\\u8210', 'ok');\n    oldVal = objectPath.ensureExists(obj, ['b','dot.dot'], 'ok');\n    expect(oldVal).to.not.exist;\n    expect(objectPath.get(obj, ['b','dot.dot'])).to.be.equal('ok');\n  });\n\n\n  it('should return the object if path is empty', function() {\n    var obj = getTestObj();\n    expect(objectPath.ensureExists(obj, [], 'test')).to.have.property('a', 'b');\n  });\n\n  it('Issue #26', function() {\n    var any = {};\n    objectPath.ensureExists(any, ['1','1'], {});\n    expect(any).to.be.an('object');\n    expect(any[1]).to.be.an('object');\n    expect(any[1][1]).to.be.an('object');\n  });\n});\n\ndescribe('coalesce', function(){\n  it('should return the first non-undefined value', function(){\n    var obj = {\n      should: {have: 'prop'}\n    };\n\n    expect(objectPath.coalesce(obj, [\n      'doesnt.exist',\n      ['might','not','exist'],\n      'should.have'\n    ])).to.equal('prop');\n  });\n\n  it('should work with falsy values (null, 0, \\'\\', false)', function(){\n    var obj = {\n      is: {\n        false: false,\n        null: null,\n        empty: '',\n        zero: 0\n      }\n    };\n\n    expect(objectPath.coalesce(obj, [\n      'doesnt.exist',\n      'is.zero'\n    ])).to.equal(0);\n\n    expect(objectPath.coalesce(obj, [\n      'doesnt.exist',\n      'is.false'\n    ])).to.equal(false);\n\n    expect(objectPath.coalesce(obj, [\n      'doesnt.exist',\n      'is.null'\n    ])).to.equal(null);\n\n    expect(objectPath.coalesce(obj, [\n      'doesnt.exist',\n      'is.empty'\n    ])).to.equal('');\n  });\n\n  it('returns defaultValue if no paths found', function(){\n    var obj = {\n      doesnt: 'matter'\n    };\n\n    expect(objectPath.coalesce(obj, ['some.inexistant','path',['on','object']], 'false')).to.equal('false');\n  });\n\n  it('works with unicode and dot keys', function(){\n    var obj = {\n      '\\u7591': true,\n      'dot.dot': false\n    };\n\n    expect(objectPath.coalesce(obj, ['1', '\\u7591', 'a.b'])).to.equal(true);\n    expect(objectPath.coalesce(obj, ['1', ['dot.dot'], '\\u7591'])).to.equal(false);\n  });\n});\n\ndescribe('empty', function(){\n  it('should ignore invalid arguments safely', function(){\n    var obj = {};\n    expect(objectPath.empty()).to.equal(void 0);\n    expect(objectPath.empty(obj, 'path')).to.equal(void 0);\n    expect(objectPath.empty(obj, '')).to.equal(void 0);\n\n    obj.path = true;\n\n    expect(objectPath.empty(obj, 'inexistant')).to.equal(void 0);\n\n    expect(objectPath.empty(null, 'path')).to.equal(void 0);\n    expect(objectPath.empty(void 0, 'path')).to.equal(void 0);\n  });\n\n  it('should empty each path according to their types', function(){\n    function Instance(){\n      this.notOwn = true;\n    }\n\n    /*istanbul ignore next: not part of code */\n    Instance.prototype.test = function(){};\n    /*istanbul ignore next: not part of code */\n    Instance.prototype.arr = [];\n\n    var\n      obj = {\n        string: 'some string',\n        array: ['some','array',[1,2,3]],\n        number: 21,\n        boolean: true,\n        object: {\n          some:'property',\n          sub: {\n            'property': true\n          },\n          nullProp: null,\n          undefinedProp: void 0\n        },\n        instance: new Instance()\n      };\n\n    /*istanbul ignore next: not part of code */\n    obj['function'] = function(){};\n\n    objectPath.empty(obj, ['array','2']);\n    expect(obj.array[2]).to.deep.equal([]);\n\n    objectPath.empty(obj, 'object.sub');\n    expect(obj.object.sub).to.deep.equal({});\n\n    objectPath.empty(obj, 'object.nullProp');\n    expect(obj.object.nullProp).to.equal(null);\n\n    objectPath.empty(obj, 'object.undefinedProp');\n    expect(obj.object.undefinedProp).to.equal(void 0);\n    expect(obj.object).to.have.property('undefinedProp');\n\n    objectPath.empty(obj, 'object.notAProp');\n    expect(obj.object.notAProp).to.equal(void 0);\n    expect(obj.object).to.not.have.property('notAProp');\n\n    objectPath.empty(obj, 'instance.test');\n    //instance.test is not own property, so it shouldn't be emptied\n    expect(obj.instance.test).to.be.a('function');\n    expect(Instance.prototype.test).to.be.a('function');\n\n    objectPath.empty(obj, 'string');\n    objectPath.empty(obj, 'number');\n    objectPath.empty(obj, 'boolean');\n    objectPath.empty(obj, 'function');\n    objectPath.empty(obj, 'array');\n    objectPath.empty(obj, 'object');\n    objectPath.empty(obj, 'instance');\n\n    expect(obj.string).to.equal('');\n    expect(obj.array).to.deep.equal([]);\n    expect(obj.number).to.equal(0);\n    expect(obj.boolean).to.equal(false);\n    expect(obj.object).to.deep.equal({});\n    expect(obj.instance.notOwn).to.be.an('undefined');\n    expect(obj.instance.arr).to.be.an('array');\n    expect(obj['function']).to.equal(null);\n  });\n});\n\ndescribe('del', function(){\n  it('should work with number path', function(){\n    var obj = getTestObj();\n    objectPath.del(obj.b.d, 1);\n    expect(obj.b.d).to.deep.equal(['a']);\n  });\n\n  it('should remove null and undefined props (but not explode on nested)', function(){\n    var obj = { nullProp: null, undefinedProp: void 0 };\n    expect(obj).to.have.property('nullProp');\n    expect(obj).to.have.property('undefinedProp');\n\n    objectPath.del(obj, 'nullProp.foo');\n    objectPath.del(obj, 'undefinedProp.bar');\n    expect(obj).to.have.property('nullProp');\n    expect(obj).to.have.property('undefinedProp');\n    expect(obj).to.deep.equal({ nullProp: null, undefinedProp: void 0 });\n\n    objectPath.del(obj, 'nullProp');\n    objectPath.del(obj, 'undefinedProp');\n    expect(obj).to.not.have.property('nullProp');\n    expect(obj).to.not.have.property('undefinedProp');\n    expect(obj).to.deep.equal({});\n  });\n\n  it('should delete deep paths', function(){\n    var obj = getTestObj();\n\n    expect(objectPath.del(obj)).to.be.equal(obj);\n\n    objectPath.set(obj, 'b.g.1.0', 'test');\n    objectPath.set(obj, 'b.g.1.1', 'test');\n    objectPath.set(obj, 'b.h.az', 'test');\n    objectPath.set(obj, 'b.\\ubeef', 'test');\n    objectPath.set(obj, ['b','dot.dot'], 'test');\n\n    expect(obj).to.have.deep.property('b.g.1.0','test');\n    expect(obj).to.have.deep.property('b.g.1.1','test');\n    expect(obj).to.have.deep.property('b.h.az','test');\n    expect(obj).to.have.deep.property('b.\\ubeef','test');\n\n    objectPath.del(obj, 'b.h.az');\n    expect(obj).to.not.have.deep.property('b.h.az');\n    expect(obj).to.have.deep.property('b.h');\n\n    objectPath.del(obj, 'b.g.1.1');\n    expect(obj).to.not.have.deep.property('b.g.1.1');\n    expect(obj).to.have.deep.property('b.g.1.0','test');\n\n    objectPath.del(obj, 'b.\\ubeef');\n    expect(obj).to.not.have.deep.property('b.\\ubeef');\n\n    objectPath.del(obj, ['b','dot.dot']);\n    expect(objectPath.get(obj, ['b','dot.dot'])).to.be.equal(void 0);\n\n    objectPath.del(obj, ['b','g','1','0']);\n    expect(obj).to.not.have.deep.property('b.g.1.0');\n    expect(obj).to.have.deep.property('b.g.1');\n\n    expect(objectPath.del(obj, ['b'])).to.not.have.deep.property('b.g');\n    expect(obj).to.be.deep.equal({'a':'b'});\n  });\n\n  it('should remove items from existing array', function(){\n    var obj = getTestObj();\n\n    objectPath.del(obj, 'b.d.0');\n    expect(obj.b.d).to.have.length(1);\n    expect(obj.b.d).to.be.deep.equal(['b']);\n\n    objectPath.del(obj, 'b.d.0');\n    expect(obj.b.d).to.have.length(0);\n    expect(obj.b.d).to.be.deep.equal([]);\n  });\n});\n\ndescribe('insert', function(){\n  it('should insert value into existing array', function(){\n    var obj = getTestObj();\n\n    objectPath.insert(obj, 'b.c', 'asdf');\n    expect(obj).to.have.deep.property('b.c.0', 'asdf');\n    expect(obj).to.not.have.deep.property('b.c.1');\n  });\n\n  it('should create intermediary array', function(){\n    var obj = getTestObj();\n\n    objectPath.insert(obj, 'b.c.0', 'asdf');\n    expect(obj).to.have.deep.property('b.c.0.0', 'asdf');\n  });\n\n  it('should insert in another index', function(){\n    var obj = getTestObj();\n\n    objectPath.insert(obj, 'b.d', 'asdf', 1);\n    expect(obj).to.have.deep.property('b.d.1', 'asdf');\n    expect(obj).to.have.deep.property('b.d.0', 'a');\n    expect(obj).to.have.deep.property('b.d.2', 'b');\n  });\n\n  it('should handle sparse array', function(){\n    var obj = getTestObj();\n    obj.b.d = new Array(4);\n    obj.b.d[0] = 'a';\n    obj.b.d[1] = 'b';\n\n    objectPath.insert(obj, 'b.d', 'asdf', 3);\n    expect(obj.b.d).to.have.members([\n      'a',\n      'b',\n      ,\n      ,\n      'asdf'\n    ]);\n  });\n});\n\ndescribe('has', function () {\n  it('should return false for empty object', function () {\n    expect(objectPath.has({}, 'a')).to.be.equal(false);\n  });\n\n  it('should handle empty paths properly', function () {\n    var obj = getTestObj();\n    expect(objectPath.has(obj, '')).to.be.equal(false);\n    expect(objectPath.has(obj, [''])).to.be.equal(false);\n    obj[''] = 1\n    expect(objectPath.has(obj, '')).to.be.equal(true);\n    expect(objectPath.has(obj, [''])).to.be.equal(true);\n\n    expect(objectPath.has(obj, [])).to.be.equal(true);\n    expect(objectPath.has(null, [])).to.be.equal(false);\n  });\n\n  it('should test under shallow object', function() {\n    var obj = getTestObj();\n    expect(objectPath.has(obj, 'a')).to.be.equal(true);\n    expect(objectPath.has(obj, ['a'])).to.be.equal(true);\n    expect(objectPath.has(obj, 'z')).to.be.equal(false);\n    expect(objectPath.has(obj, ['z'])).to.be.equal(false);\n  });\n\n  it('should work with number path', function() {\n    var obj = getTestObj();\n    expect(objectPath.has(obj.b.d, 0)).to.be.equal(true);\n    expect(objectPath.has(obj.b, 0)).to.be.equal(false);\n    expect(objectPath.has(obj.b.d, 10)).to.be.equal(false);\n    expect(objectPath.has(obj.b, 10)).to.be.equal(false);\n  });\n\n  it('should test under deep object', function() {\n    var obj = getTestObj();\n    expect(objectPath.has(obj, 'b.f')).to.be.equal(true);\n    expect(objectPath.has(obj, ['b','f'])).to.be.equal(true);\n    expect(objectPath.has(obj, 'b.g')).to.be.equal(false);\n    expect(objectPath.has(obj, ['b','g'])).to.be.equal(false);\n  });\n\n  it('should test value under array', function() {\n    var obj = {\n      b: ['a']\n    };\n    obj.b[3] = {o: 'a'}\n    expect(objectPath.has(obj, 'b.0')).to.be.equal(true);\n    expect(objectPath.has(obj, 'b.1')).to.be.equal(true);\n    expect(objectPath.has(obj, 'b.3.o')).to.be.equal(true);\n    expect(objectPath.has(obj, 'b.3.qwe')).to.be.equal(false);\n    expect(objectPath.has(obj, 'b.4')).to.be.equal(false);\n  });\n\n  it('should test the value under array deep', function() {\n    var obj = getTestObj();\n    expect(objectPath.has(obj, 'b.e.1.f')).to.be.equal(true);\n    expect(objectPath.has(obj, ['b','e',1,'f'])).to.be.equal(true);\n    expect(objectPath.has(obj, 'b.e.1.f.g.h.i')).to.be.equal(false);\n    expect(objectPath.has(obj, ['b','e',1,'f','g','h','i'])).to.be.equal(false);\n  });\n\n  it('should test the value under integer-like key', function() {\n    var obj = { '1a': 'foo' };\n    expect(objectPath.has(obj, '1a')).to.be.equal(true);\n    expect(objectPath.has(obj, ['1a'])).to.be.equal(true);\n  });\n\n  it('should distinct nonexistent key and key = undefined', function() {\n    var obj = {};\n    expect(objectPath.has(obj, 'key')).to.be.equal(false);\n\n    obj.key = undefined;\n    expect(objectPath.has(obj, 'key')).to.be.equal(true);\n  });\n\n  it('should work with deep undefined/null values', function() {\n    var obj = {};\n    expect(objectPath.has(obj, 'missing.test')).to.be.equal(false);\n\n    obj.missing = null;\n    expect(objectPath.has(obj, 'missing.test')).to.be.equal(false);\n\n    obj.sparseArray = [1, undefined, 3]\n    expect(objectPath.has(obj, 'sparseArray.1.test')).to.be.equal(false);\n  });\n});\n\n\n\ndescribe('bind object', function () {\n  // just get one scenario from each feature, so whole functionality is proxied well\n  it('should return the value under shallow object', function() {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n    expect(model.get('a')).to.be.equal('b');\n    expect(model.get(['a'])).to.be.equal('b');\n  });\n\n  it('should set value under shallow object', function() {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n    model.set('c', {m: 'o'});\n    expect(obj).to.have.deep.property('c.m', 'o');\n    obj = getTestObj();\n    model = objectPath(obj);\n    model.set(['c'], {m: 'o'});\n    expect(obj).to.have.deep.property('c.m', 'o');\n  });\n\n  it('should push value to existing array', function() {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n    model.push('b.c', 'l');\n    expect(obj).to.have.deep.property('b.c.0', 'l');\n    obj = getTestObj();\n    model = objectPath(obj);\n    model.push(['b','c'], 'l');\n    expect(obj).to.have.deep.property('b.c.0', 'l');\n  });\n\n  it('should create the path if it does not exists', function() {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n    var oldVal = model.ensureExists('b.g.1.l', 'test');\n    expect(oldVal).to.not.exist;\n    expect(obj).to.have.deep.property('b.g.1.l', 'test');\n    oldVal = model.ensureExists('b.g.1.l', 'test1');\n    expect(oldVal).to.be.equal('test');\n    expect(obj).to.have.deep.property('b.g.1.l', 'test');\n  });\n\n  it('should return the first non-undefined value', function(){\n    var obj = {\n      should: {have: 'prop'}\n    };\n    var model = objectPath(obj);\n\n    expect(model.coalesce([\n      'doesnt.exist',\n      ['might','not','exist'],\n      'should.have'\n    ])).to.equal('prop');\n  });\n\n  it('should empty each path according to their types', function(){\n    function Instance(){\n      this.notOwn = true;\n    }\n\n    /*istanbul ignore next: not part of code */\n    Instance.prototype.test = function(){};\n    /*istanbul ignore next: not part of code */\n    Instance.prototype.arr = [];\n\n    var\n      obj = {\n        string: 'some string',\n        array: ['some','array',[1,2,3]],\n        number: 21,\n        boolean: true,\n        object: {\n          some:'property',\n          sub: {\n            'property': true\n          }\n        },\n        instance: new Instance()\n      };\n\n    /*istanbul ignore next: not part of code */\n    obj['function'] = function(){};\n\n    var model = objectPath(obj);\n\n    model.empty(['array','2']);\n    expect(obj.array[2]).to.deep.equal([]);\n\n    model.empty('object.sub');\n    expect(obj.object.sub).to.deep.equal({});\n\n    model.empty('instance.test');\n    //instance.test is not own property so it shouldn't be emptied\n    expect(obj.instance.test).to.be.a('function');\n    expect(Instance.prototype.test).to.be.a('function');\n\n    model.empty('string');\n    model.empty('number');\n    model.empty('boolean');\n    model.empty('function');\n    model.empty('array');\n    model.empty('object');\n    model.empty('instance');\n\n    expect(obj.string).to.equal('');\n    expect(obj.array).to.deep.equal([]);\n    expect(obj.number).to.equal(0);\n    expect(obj.boolean).to.equal(false);\n    expect(obj.object).to.deep.equal({});\n    expect(obj.instance.notOwn).to.be.an('undefined');\n    expect(obj.instance.arr).to.be.an('array');\n    expect(obj['function']).to.equal(null);\n  });\n\n  it('should delete deep paths', function(){\n    var obj = getTestObj();\n    var model = objectPath(obj);\n\n    expect(model.del()).to.be.equal(obj);\n\n    model.set('b.g.1.0', 'test');\n    model.set('b.g.1.1', 'test');\n    model.set('b.h.az', 'test');\n\n    expect(obj).to.have.deep.property('b.g.1.0','test');\n    expect(obj).to.have.deep.property('b.g.1.1','test');\n    expect(obj).to.have.deep.property('b.h.az','test');\n\n    model.del('b.h.az');\n    expect(obj).to.not.have.deep.property('b.h.az');\n    expect(obj).to.have.deep.property('b.h');\n\n    model.del('b.g.1.1');\n    expect(obj).to.not.have.deep.property('b.g.1.1');\n    expect(obj).to.have.deep.property('b.g.1.0','test');\n\n    model.del(['b','g','1','0']);\n    expect(obj).to.not.have.deep.property('b.g.1.0');\n    expect(obj).to.have.deep.property('b.g.1');\n\n    expect(model.del(['b'])).to.not.have.deep.property('b.g');\n    expect(obj).to.be.deep.equal({'a':'b'});\n  });\n\n  it('should insert value into existing array', function(){\n    var obj = getTestObj();\n    var model = objectPath(obj);\n\n    model.insert('b.c', 'asdf');\n    expect(obj).to.have.deep.property('b.c.0', 'asdf');\n    expect(obj).to.not.have.deep.property('b.c.1');\n  });\n\n  it('should test under shallow object', function() {\n    var obj = getTestObj();\n    var model = objectPath(obj);\n\n    expect(model.has('a')).to.be.equal(true);\n    expect(model.has(['a'])).to.be.equal(true);\n    expect(model.has('z')).to.be.equal(false);\n    expect(model.has(['z'])).to.be.equal(false);\n  });\n});\n\ndescribe('Don\\'t access not own properties [default]', function () {\n  it('should not get a not own property', function() {\n    var Obj = function() {};\n    Obj.prototype.notOwn = {a: 'a'};\n    var obj = new Obj();\n\n    expect(objectPath.get(obj, 'notOwn')).to.be.undefined\n  });\n\n  it('should set a not own property on the instance (not the prototype)', function() {\n    var proto = {\n      notOwn: {}\n    }\n    var obj = Object.create(proto)\n\n    objectPath.set(obj, 'notOwn.test', 'a');\n    expect(obj.notOwn.test).to.be.equal('a');\n    expect(proto.notOwn).to.be.deep.equal({});\n  });\n\n  it('has should return false on a not own property', function() {\n    var proto = {\n      notOwn: {a: 'a'}\n    }\n    var obj = Object.create(proto)\n\n\n    expect(objectPath.has(obj, 'notOwn')).to.be.false;\n    expect(objectPath.has(obj, 'notOwn.a')).to.be.false;\n  });\n\n  it('empty should not empty on a not own property', function() {\n    var proto = {\n      notOwn: {a: 'a'}\n    }\n    var obj = Object.create(proto);\n\n    objectPath.empty(obj, 'notOwn');\n    expect(proto.notOwn).to.be.deep.equal({a: 'a'});\n    expect(obj.notOwn).to.be.deep.equal({a: 'a'});\n  });\n\n  it('del should not delete not own property', function() {\n    var proto = {\n      notOwn: {a: 'a'}\n    }\n    var obj = Object.create(proto);\n\n    objectPath.del(obj, 'notOwn.a');\n    expect(proto.notOwn).to.be.deep.equal({a: 'a'});\n    //expect(obj.notOwn).to.be.deep.equal({a: 'a'});\n    //objectPath.del(obj, 'notOwn');\n    //expect(proto).to.be.deep.equal({notOwn: {a: 'a'}});\n    //expect(obj).to.be.deep.equal({notOwn: {a: 'a'}});\n  });\n});\n\ndescribe('Access own properties [optional]', function () {\n  it('should get a not own property', function() {\n    var Obj = function() {};\n    Obj.prototype.notOwn = {a: 'a'};\n    var obj = new Obj();\n\n    expect(objectPath.withInheritedProps.get(obj, 'notOwn.a')).to.be.equal('a')\n  });\n\n  it('should set a deep not own property on the prototype (if exists)', function() {\n    var proto = {\n      notOwn: {}\n    }\n    var obj = Object.create(proto)\n\n    objectPath.withInheritedProps.set(obj, 'notOwn.test', 'a');\n    expect(obj.notOwn.test).to.be.equal('a');\n    expect(proto.notOwn).to.be.deep.equal({test: 'a'});\n  });\n\n\n  it('has should return true on a not own property', function() {\n    var proto = {\n      notOwn: {a: 'a'}\n    }\n    var obj = Object.create(proto)\n\n    expect(objectPath.withInheritedProps.has(obj, 'notOwn')).to.be.true;\n    expect(objectPath.withInheritedProps.has(obj, 'notOwn.a')).to.be.true;\n  });\n\n  it('empty should empty a not own property', function() {\n    var proto = {\n      notOwn: {a: 'a'}\n    }\n    var obj = Object.create(proto);\n\n    objectPath.withInheritedProps.empty(obj, 'notOwn');\n    expect(proto.notOwn).to.be.deep.equal({});\n    expect(obj.notOwn).to.be.deep.equal({});\n  });\n\n  it('del should delete a not own property', function() {\n    var proto = {\n      notOwn: {a: 'a'}\n    }\n    var obj = Object.create(proto);\n\n    objectPath.withInheritedProps.del(obj, 'notOwn.a');\n    expect(proto.notOwn).to.be.deep.equal({});\n    //expect(obj.notOwn).to.be.deep.equal({});\n    objectPath.withInheritedProps.del(obj, 'notOwn');\n    //expect(proto).to.be.deep.equal({notOwn: {}});\n    //expect(obj).to.be.deep.equal({notOwn: {}});\n  });\n});\n"]},"metadata":{},"sourceType":"script"}