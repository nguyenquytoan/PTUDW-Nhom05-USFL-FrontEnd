{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'converts basic shapes to more compact path form';\nexports.params = {\n  convertArcs: false\n};\nvar none = {\n  value: 0\n},\n    regNumber = /[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?/g;\n/**\n * Converts basic shape to more compact path.\n * It also allows further optimizations like\n * combining paths with similar attributes.\n *\n * @see http://www.w3.org/TR/SVG/shapes.html\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Lev Solntsev\n */\n\nexports.fn = function (item, params) {\n  var convertArcs = params && params.convertArcs;\n\n  if (item.isElem('rect') && item.hasAttr('width') && item.hasAttr('height') && !item.hasAttr('rx') && !item.hasAttr('ry')) {\n    var x = +(item.attr('x') || none).value,\n        y = +(item.attr('y') || none).value,\n        width = +item.attr('width').value,\n        height = +item.attr('height').value; // Values like '100%' compute to NaN, thus running after\n    // cleanupNumericValues when 'px' units has already been removed.\n    // TODO: Calculate sizes from % and non-px units if possible.\n\n    if (isNaN(x - y + width - height)) return;\n    var pathData = 'M' + x + ' ' + y + 'H' + (x + width) + 'V' + (y + height) + 'H' + x + 'z';\n    item.addAttr({\n      name: 'd',\n      value: pathData,\n      prefix: '',\n      local: 'd'\n    });\n    item.renameElem('path').removeAttr(['x', 'y', 'width', 'height']);\n  } else if (item.isElem('line')) {\n    var x1 = +(item.attr('x1') || none).value,\n        y1 = +(item.attr('y1') || none).value,\n        x2 = +(item.attr('x2') || none).value,\n        y2 = +(item.attr('y2') || none).value;\n    if (isNaN(x1 - y1 + x2 - y2)) return;\n    item.addAttr({\n      name: 'd',\n      value: 'M' + x1 + ' ' + y1 + 'L' + x2 + ' ' + y2,\n      prefix: '',\n      local: 'd'\n    });\n    item.renameElem('path').removeAttr(['x1', 'y1', 'x2', 'y2']);\n  } else if ((item.isElem('polyline') || item.isElem('polygon')) && item.hasAttr('points')) {\n    var coords = (item.attr('points').value.match(regNumber) || []).map(Number);\n    if (coords.length < 4) return false;\n    item.addAttr({\n      name: 'd',\n      value: 'M' + coords.slice(0, 2).join(' ') + 'L' + coords.slice(2).join(' ') + (item.isElem('polygon') ? 'z' : ''),\n      prefix: '',\n      local: 'd'\n    });\n    item.renameElem('path').removeAttr('points');\n  } else if (item.isElem('circle') && convertArcs) {\n    var cx = +(item.attr('cx') || none).value;\n    var cy = +(item.attr('cy') || none).value;\n    var r = +(item.attr('r') || none).value;\n\n    if (isNaN(cx - cy + r)) {\n      return;\n    }\n\n    var cPathData = 'M' + cx + ' ' + (cy - r) + 'A' + r + ' ' + r + ' 0 1 0 ' + cx + ' ' + (cy + r) + 'A' + r + ' ' + r + ' 0 1 0 ' + cx + ' ' + (cy - r) + 'Z';\n    item.addAttr({\n      name: 'd',\n      value: cPathData,\n      prefix: '',\n      local: 'd'\n    });\n    item.renameElem('path').removeAttr(['cx', 'cy', 'r']);\n  } else if (item.isElem('ellipse') && convertArcs) {\n    var ecx = +(item.attr('cx') || none).value;\n    var ecy = +(item.attr('cy') || none).value;\n    var rx = +(item.attr('rx') || none).value;\n    var ry = +(item.attr('ry') || none).value;\n\n    if (isNaN(ecx - ecy + rx - ry)) {\n      return;\n    }\n\n    var ePathData = 'M' + ecx + ' ' + (ecy - ry) + 'A' + rx + ' ' + ry + ' 0 1 0 ' + ecx + ' ' + (ecy + ry) + 'A' + rx + ' ' + ry + ' 0 1 0 ' + ecx + ' ' + (ecy - ry) + 'Z';\n    item.addAttr({\n      name: 'd',\n      value: ePathData,\n      prefix: '',\n      local: 'd'\n    });\n    item.renameElem('path').removeAttr(['cx', 'cy', 'rx', 'ry']);\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/svgo/plugins/convertShapeToPath.js"],"names":["exports","type","active","description","params","convertArcs","none","value","regNumber","fn","item","isElem","hasAttr","x","attr","y","width","height","isNaN","pathData","addAttr","name","prefix","local","renameElem","removeAttr","x1","y1","x2","y2","coords","match","map","Number","length","slice","join","cx","cy","r","cPathData","ecx","ecy","rx","ry","ePathData"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'converts basic shapes to more compact path form';\n\nexports.params = {\n    convertArcs: false\n};\n\nvar none = { value: 0 },\n    regNumber = /[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?/g;\n\n/**\n * Converts basic shape to more compact path.\n * It also allows further optimizations like\n * combining paths with similar attributes.\n *\n * @see http://www.w3.org/TR/SVG/shapes.html\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Lev Solntsev\n */\nexports.fn = function(item, params) {\n    var convertArcs = params && params.convertArcs;\n\n    if (\n        item.isElem('rect') &&\n        item.hasAttr('width') &&\n        item.hasAttr('height') &&\n        !item.hasAttr('rx') &&\n        !item.hasAttr('ry')\n    ) {\n\n        var x = +(item.attr('x') || none).value,\n            y = +(item.attr('y') || none).value,\n            width  = +item.attr('width').value,\n            height = +item.attr('height').value;\n\n            // Values like '100%' compute to NaN, thus running after\n            // cleanupNumericValues when 'px' units has already been removed.\n            // TODO: Calculate sizes from % and non-px units if possible.\n        if (isNaN(x - y + width - height)) return;\n\n        var pathData =\n            'M' + x + ' ' + y +\n            'H' + (x + width) +\n            'V' + (y + height) +\n            'H' + x +\n            'z';\n\n        item.addAttr({\n                name: 'd',\n                value: pathData,\n                prefix: '',\n                local: 'd'\n            });\n\n        item.renameElem('path')\n            .removeAttr(['x', 'y', 'width', 'height']);\n\n    } else if (item.isElem('line')) {\n\n        var x1 = +(item.attr('x1') || none).value,\n            y1 = +(item.attr('y1') || none).value,\n            x2 = +(item.attr('x2') || none).value,\n            y2 = +(item.attr('y2') || none).value;\n        if (isNaN(x1 - y1 + x2 - y2)) return;\n\n        item.addAttr({\n                name: 'd',\n                value: 'M' + x1 + ' ' + y1 + 'L' + x2 + ' ' + y2,\n                prefix: '',\n                local: 'd'\n            });\n\n        item.renameElem('path')\n            .removeAttr(['x1', 'y1', 'x2', 'y2']);\n\n    } else if ((\n            item.isElem('polyline') ||\n            item.isElem('polygon')\n        ) &&\n        item.hasAttr('points')\n    ) {\n\n        var coords = (item.attr('points').value.match(regNumber) || []).map(Number);\n        if (coords.length < 4) return false;\n\n        item.addAttr({\n                name: 'd',\n                value: 'M' + coords.slice(0,2).join(' ') +\n                       'L' + coords.slice(2).join(' ') +\n                       (item.isElem('polygon') ? 'z' : ''),\n                prefix: '',\n                local: 'd'\n            });\n\n        item.renameElem('path')\n            .removeAttr('points');\n    } else if (item.isElem('circle') && convertArcs) {\n\n        var cx = +(item.attr('cx') || none).value;\n        var cy = +(item.attr('cy') || none).value;\n        var r = +(item.attr('r') || none).value;\n        if (isNaN(cx - cy + r)) {\n            return;\n        }\n        var cPathData =\n            'M' + cx  + ' ' + (cy - r) +\n                'A' + r + ' ' + r + ' 0 1 0 ' + cx + ' ' + (cy + r) +\n                'A' + r + ' ' + r + ' 0 1 0 ' + cx + ' ' + (cy - r) +\n                'Z';\n        item.addAttr({\n                name: 'd',\n                value: cPathData,\n                prefix: '',\n                local: 'd',\n        });\n        item.renameElem('path').removeAttr(['cx', 'cy', 'r']);\n\n    } else if (item.isElem('ellipse') && convertArcs) {\n\n        var ecx = +(item.attr('cx') || none).value;\n        var ecy = +(item.attr('cy') || none).value;\n        var rx = +(item.attr('rx') || none).value;\n        var ry = +(item.attr('ry') || none).value;\n        if (isNaN(ecx - ecy + rx - ry)) {\n            return;\n        }\n        var ePathData =\n            'M' + ecx + ' ' + (ecy - ry) +\n                'A' + rx + ' ' + ry + ' 0 1 0 ' + ecx + ' ' + (ecy + ry) +\n                'A' + rx + ' ' + ry + ' 0 1 0 ' + ecx + ' ' + (ecy - ry) +\n                'Z';\n        item.addAttr({\n                name: 'd',\n                value: ePathData,\n                prefix: '',\n                local: 'd',\n        });\n        item.renameElem('path').removeAttr(['cx', 'cy', 'rx', 'ry']);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}