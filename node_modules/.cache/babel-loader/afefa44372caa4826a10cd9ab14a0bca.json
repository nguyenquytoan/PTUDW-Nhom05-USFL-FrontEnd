{"ast":null,"code":"\"use strict\";\n\nvar constants = require(\"./constants\");\n\nvar formatUrl = require(\"./format\");\n\nvar getOptions = require(\"./options\");\n\nvar objUtils = require(\"./util/object\");\n\nvar parseUrl = require(\"./parse\");\n\nvar relateUrl = require(\"./relate\");\n\nfunction RelateUrl(from, options) {\n  this.options = getOptions(options, {\n    defaultPorts: {\n      ftp: 21,\n      http: 80,\n      https: 443\n    },\n    directoryIndexes: [\"index.html\"],\n    ignore_www: false,\n    output: RelateUrl.SHORTEST,\n    rejectedSchemes: [\"data\", \"javascript\", \"mailto\"],\n    removeAuth: false,\n    removeDirectoryIndexes: true,\n    removeEmptyQueries: false,\n    removeRootTrailingSlash: true,\n    schemeRelative: true,\n    site: undefined,\n    slashesDenoteHost: true\n  });\n  this.from = parseUrl.from(from, this.options, null);\n}\n/*\n\tUsage: instance=new RelateUrl(); instance.relate();\n*/\n\n\nRelateUrl.prototype.relate = function (from, to, options) {\n  // relate(to,options)\n  if (objUtils.isPlainObject(to)) {\n    options = to;\n    to = from;\n    from = null;\n  } // relate(to)\n  else if (!to) {\n      to = from;\n      from = null;\n    }\n\n  options = getOptions(options, this.options);\n  from = from || options.site;\n  from = parseUrl.from(from, options, this.from);\n\n  if (!from || !from.href) {\n    throw new Error(\"from value not defined.\");\n  } else if (from.extra.hrefInfo.minimumPathOnly) {\n    throw new Error(\"from value supplied is not absolute: \" + from.href);\n  }\n\n  to = parseUrl.to(to, options);\n  if (to.valid === false) return to.href;\n  to = relateUrl(from, to, options);\n  to = formatUrl(to, options);\n  return to;\n};\n/*\n\tUsage: RelateUrl.relate();\n*/\n\n\nRelateUrl.relate = function (from, to, options) {\n  return new RelateUrl().relate(from, to, options);\n}; // Make constants accessible from API\n\n\nobjUtils.shallowMerge(RelateUrl, constants);\nmodule.exports = RelateUrl;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/relateurl/lib/index.js"],"names":["constants","require","formatUrl","getOptions","objUtils","parseUrl","relateUrl","RelateUrl","from","options","defaultPorts","ftp","http","https","directoryIndexes","ignore_www","output","SHORTEST","rejectedSchemes","removeAuth","removeDirectoryIndexes","removeEmptyQueries","removeRootTrailingSlash","schemeRelative","site","undefined","slashesDenoteHost","prototype","relate","to","isPlainObject","href","Error","extra","hrefInfo","minimumPathOnly","valid","shallowMerge","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar constants  = require(\"./constants\");\nvar formatUrl  = require(\"./format\");\nvar getOptions = require(\"./options\");\nvar objUtils   = require(\"./util/object\");\nvar parseUrl   = require(\"./parse\");\nvar relateUrl  = require(\"./relate\");\n\n\n\nfunction RelateUrl(from, options)\n{\n\tthis.options = getOptions(options,\n\t{\n\t\tdefaultPorts: {ftp:21, http:80, https:443},\n\t\tdirectoryIndexes: [\"index.html\"],\n\t\tignore_www: false,\n\t\toutput: RelateUrl.SHORTEST,\n\t\trejectedSchemes: [\"data\",\"javascript\",\"mailto\"],\n\t\tremoveAuth: false,\n\t\tremoveDirectoryIndexes: true,\n\t\tremoveEmptyQueries: false,\n\t\tremoveRootTrailingSlash: true,\n\t\tschemeRelative: true,\n\t\tsite: undefined,\n\t\tslashesDenoteHost: true\n\t});\n\t\n\tthis.from = parseUrl.from(from, this.options, null);\n}\n\n\n\n/*\n\tUsage: instance=new RelateUrl(); instance.relate();\n*/\nRelateUrl.prototype.relate = function(from, to, options)\n{\n\t// relate(to,options)\n\tif ( objUtils.isPlainObject(to) )\n\t{\n\t\toptions = to;\n\t\tto = from;\n\t\tfrom = null;\n\t}\n\t// relate(to)\n\telse if (!to)\n\t{\n\t\tto = from;\n\t\tfrom = null;\n\t}\n\t\n\toptions = getOptions(options, this.options);\n\tfrom = from || options.site;\n\tfrom = parseUrl.from(from, options, this.from);\n\t\n\tif (!from || !from.href)\n\t{\n\t\tthrow new Error(\"from value not defined.\");\n\t}\n\telse if (from.extra.hrefInfo.minimumPathOnly)\n\t{\n\t\tthrow new Error(\"from value supplied is not absolute: \"+from.href);\n\t}\n\t\n\tto = parseUrl.to(to, options);\n\t\n\tif (to.valid===false) return to.href;\n\t\n\tto = relateUrl(from, to, options);\n\tto = formatUrl(to, options);\n\t\n\treturn to;\n}\n\n\n\n/*\n\tUsage: RelateUrl.relate();\n*/\nRelateUrl.relate = function(from, to, options)\n{\n\treturn new RelateUrl().relate(from, to, options);\n}\n\n\n\n// Make constants accessible from API\nobjUtils.shallowMerge(RelateUrl, constants);\n\n\n\nmodule.exports = RelateUrl;\n"]},"metadata":{},"sourceType":"script"}