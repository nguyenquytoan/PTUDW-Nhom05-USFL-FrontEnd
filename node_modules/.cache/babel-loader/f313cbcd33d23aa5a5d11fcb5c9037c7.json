{"ast":null,"code":"/**\n * @fileoverview Warn when using template string syntax in regular strings\n * @author Jeroen Engels\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"disallow template literal placeholder syntax in regular strings\",\n      category: \"Possible Errors\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-template-curly-in-string\"\n    },\n    schema: []\n  },\n\n  create(context) {\n    const regex = /\\$\\{[^}]+\\}/u;\n    return {\n      Literal(node) {\n        if (typeof node.value === \"string\" && regex.test(node.value)) {\n          context.report({\n            node,\n            message: \"Unexpected template string expression.\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/lib/rules/no-template-curly-in-string.js"],"names":["module","exports","meta","type","docs","description","category","recommended","url","schema","create","context","regex","Literal","node","value","test","report","message"],"mappings":"AAAA;;;;AAIA,a,CAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,SADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,iEADX;AAEFC,MAAAA,QAAQ,EAAE,iBAFR;AAGFC,MAAAA,WAAW,EAAE,KAHX;AAIFC,MAAAA,GAAG,EAAE;AAJH,KAHJ;AAUFC,IAAAA,MAAM,EAAE;AAVN,GADO;;AAcbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AACZ,UAAMC,KAAK,GAAG,cAAd;AAEA,WAAO;AACHC,MAAAA,OAAO,CAACC,IAAD,EAAO;AACV,YAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAAtB,IAAkCH,KAAK,CAACI,IAAN,CAAWF,IAAI,CAACC,KAAhB,CAAtC,EAA8D;AAC1DJ,UAAAA,OAAO,CAACM,MAAR,CAAe;AACXH,YAAAA,IADW;AAEXI,YAAAA,OAAO,EAAE;AAFE,WAAf;AAIH;AACJ;;AARE,KAAP;AAWH;;AA5BY,CAAjB","sourcesContent":["/**\n * @fileoverview Warn when using template string syntax in regular strings\n * @author Jeroen Engels\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"problem\",\n\n        docs: {\n            description: \"disallow template literal placeholder syntax in regular strings\",\n            category: \"Possible Errors\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-template-curly-in-string\"\n        },\n\n        schema: []\n    },\n\n    create(context) {\n        const regex = /\\$\\{[^}]+\\}/u;\n\n        return {\n            Literal(node) {\n                if (typeof node.value === \"string\" && regex.test(node.value)) {\n                    context.report({\n                        node,\n                        message: \"Unexpected template string expression.\"\n                    });\n                }\n            }\n        };\n\n    }\n};\n"]},"metadata":{},"sourceType":"script"}