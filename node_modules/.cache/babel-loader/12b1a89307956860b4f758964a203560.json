{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _os() {\n  const data = _interopRequireDefault(require('os'));\n\n  _os = function _os() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _realpathNative() {\n  const data = require('realpath-native');\n\n  _realpathNative = function _realpathNative() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst getCacheDirectory = () => {\n  const _process = process,\n        getuid = _process.getuid;\n\n  const tmpdir = _path().default.join((0, _realpathNative().sync)(_os().default.tmpdir()), 'jest');\n\n  if (getuid == null) {\n    return tmpdir;\n  } else {\n    // On some platforms tmpdir() is `/tmp`, causing conflicts between different\n    // users and permission issues. Adding an additional subdivision by UID can\n    // help.\n    return `${tmpdir}_${getuid.call(process).toString(36)}`;\n  }\n};\n\nvar _default = getCacheDirectory;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-config/build/getCacheDirectory.js"],"names":["Object","defineProperty","exports","value","default","_path","data","_interopRequireDefault","require","_os","_realpathNative","obj","__esModule","getCacheDirectory","_process","process","getuid","tmpdir","join","sync","call","toString","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAnC;;AAEAH,EAAAA,KAAK,GAAG,SAASA,KAAT,GAAiB;AACvB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASG,GAAT,GAAe;AACb,QAAMH,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,IAAD,CAAR,CAAnC;;AAEAC,EAAAA,GAAG,GAAG,SAASA,GAAT,GAAe;AACnB,WAAOH,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASI,eAAT,GAA2B;AACzB,QAAMJ,IAAI,GAAGE,OAAO,CAAC,iBAAD,CAApB;;AAEAE,EAAAA,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC3C,WAAOJ,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASC,sBAAT,CAAgCI,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAACP,IAAAA,OAAO,EAAEO;AAAV,GAArC;AACD;AAED;;;;;;;;AAMA,MAAME,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,QAAQ,GAAGC,OAAjB;AAAA,QACEC,MAAM,GAAGF,QAAQ,CAACE,MADpB;;AAGA,QAAMC,MAAM,GAAGZ,KAAK,GAAGD,OAAR,CAAgBc,IAAhB,CACb,CAAC,GAAGR,eAAe,GAAGS,IAAtB,EAA4BV,GAAG,GAAGL,OAAN,CAAca,MAAd,EAA5B,CADa,EAEb,MAFa,CAAf;;AAKA,MAAID,MAAM,IAAI,IAAd,EAAoB;AAClB,WAAOC,MAAP;AACD,GAFD,MAEO;AACL;AACA;AACA;AACA,WAAQ,GAAEA,MAAO,IAAGD,MAAM,CAACI,IAAP,CAAYL,OAAZ,EAAqBM,QAArB,CAA8B,EAA9B,CAAkC,EAAtD;AACD;AACF,CAjBD;;AAmBA,IAAIC,QAAQ,GAAGT,iBAAf;AACAX,OAAO,CAACE,OAAR,GAAkBkB,QAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _os() {\n  const data = _interopRequireDefault(require('os'));\n\n  _os = function _os() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _realpathNative() {\n  const data = require('realpath-native');\n\n  _realpathNative = function _realpathNative() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst getCacheDirectory = () => {\n  const _process = process,\n    getuid = _process.getuid;\n\n  const tmpdir = _path().default.join(\n    (0, _realpathNative().sync)(_os().default.tmpdir()),\n    'jest'\n  );\n\n  if (getuid == null) {\n    return tmpdir;\n  } else {\n    // On some platforms tmpdir() is `/tmp`, causing conflicts between different\n    // users and permission issues. Adding an additional subdivision by UID can\n    // help.\n    return `${tmpdir}_${getuid.call(process).toString(36)}`;\n  }\n};\n\nvar _default = getCacheDirectory;\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}