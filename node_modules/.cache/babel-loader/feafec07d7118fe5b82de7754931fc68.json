{"ast":null,"code":"'use strict';\n\nconst util = require('util');\n\nconst figgyPudding = require('figgy-pudding');\n\nconst fs = require('fs');\n\nconst index = require('./lib/entry-index');\n\nconst memo = require('./lib/memoization');\n\nconst read = require('./lib/content/read');\n\nconst Minipass = require('minipass');\n\nconst Collect = require('minipass-collect');\n\nconst Pipeline = require('minipass-pipeline');\n\nconst writeFile = util.promisify(fs.writeFile);\nconst GetOpts = figgyPudding({\n  integrity: {},\n  memoize: {},\n  size: {}\n});\n\nmodule.exports = function get(cache, key, opts) {\n  return getData(false, cache, key, opts);\n};\n\nmodule.exports.byDigest = function getByDigest(cache, digest, opts) {\n  return getData(true, cache, digest, opts);\n};\n\nfunction getData(byDigest, cache, key, opts) {\n  opts = GetOpts(opts);\n  const memoized = byDigest ? memo.get.byDigest(cache, key, opts) : memo.get(cache, key, opts);\n\n  if (memoized && opts.memoize !== false) {\n    return Promise.resolve(byDigest ? memoized : {\n      metadata: memoized.entry.metadata,\n      data: memoized.data,\n      integrity: memoized.entry.integrity,\n      size: memoized.entry.size\n    });\n  }\n\n  return (byDigest ? Promise.resolve(null) : index.find(cache, key, opts)).then(entry => {\n    if (!entry && !byDigest) {\n      throw new index.NotFoundError(cache, key);\n    }\n\n    return read(cache, byDigest ? key : entry.integrity, {\n      integrity: opts.integrity,\n      size: opts.size\n    }).then(data => byDigest ? data : {\n      metadata: entry.metadata,\n      data: data,\n      size: entry.size,\n      integrity: entry.integrity\n    }).then(res => {\n      if (opts.memoize && byDigest) {\n        memo.put.byDigest(cache, key, res, opts);\n      } else if (opts.memoize) {\n        memo.put(cache, entry, res.data, opts);\n      }\n\n      return res;\n    });\n  });\n}\n\nmodule.exports.sync = function get(cache, key, opts) {\n  return getDataSync(false, cache, key, opts);\n};\n\nmodule.exports.sync.byDigest = function getByDigest(cache, digest, opts) {\n  return getDataSync(true, cache, digest, opts);\n};\n\nfunction getDataSync(byDigest, cache, key, opts) {\n  opts = GetOpts(opts);\n  const memoized = byDigest ? memo.get.byDigest(cache, key, opts) : memo.get(cache, key, opts);\n\n  if (memoized && opts.memoize !== false) {\n    return byDigest ? memoized : {\n      metadata: memoized.entry.metadata,\n      data: memoized.data,\n      integrity: memoized.entry.integrity,\n      size: memoized.entry.size\n    };\n  }\n\n  const entry = !byDigest && index.find.sync(cache, key, opts);\n\n  if (!entry && !byDigest) {\n    throw new index.NotFoundError(cache, key);\n  }\n\n  const data = read.sync(cache, byDigest ? key : entry.integrity, {\n    integrity: opts.integrity,\n    size: opts.size\n  });\n  const res = byDigest ? data : {\n    metadata: entry.metadata,\n    data: data,\n    size: entry.size,\n    integrity: entry.integrity\n  };\n\n  if (opts.memoize && byDigest) {\n    memo.put.byDigest(cache, key, res, opts);\n  } else if (opts.memoize) {\n    memo.put(cache, entry, res.data, opts);\n  }\n\n  return res;\n}\n\nmodule.exports.stream = getStream;\n\nconst getMemoizedStream = memoized => {\n  const stream = new Minipass();\n  stream.on('newListener', function (ev, cb) {\n    ev === 'metadata' && cb(memoized.entry.metadata);\n    ev === 'integrity' && cb(memoized.entry.integrity);\n    ev === 'size' && cb(memoized.entry.size);\n  });\n  stream.end(memoized.data);\n  return stream;\n};\n\nfunction getStream(cache, key, opts) {\n  opts = GetOpts(opts);\n  const memoized = memo.get(cache, key, opts);\n\n  if (memoized && opts.memoize !== false) {\n    return getMemoizedStream(memoized);\n  }\n\n  const stream = new Pipeline();\n  index.find(cache, key).then(entry => {\n    if (!entry) {\n      throw new index.NotFoundError(cache, key);\n    }\n\n    stream.emit('metadata', entry.metadata);\n    stream.emit('integrity', entry.integrity);\n    stream.emit('size', entry.size);\n    stream.on('newListener', function (ev, cb) {\n      ev === 'metadata' && cb(entry.metadata);\n      ev === 'integrity' && cb(entry.integrity);\n      ev === 'size' && cb(entry.size);\n    });\n    const src = read.readStream(cache, entry.integrity, opts.concat({\n      size: opts.size == null ? entry.size : opts.size\n    }));\n\n    if (opts.memoize) {\n      const memoStream = new Collect.PassThrough();\n      memoStream.on('collect', data => memo.put(cache, entry, data, opts));\n      stream.unshift(memoStream);\n    }\n\n    stream.unshift(src);\n  }).catch(err => stream.emit('error', err));\n  return stream;\n}\n\nmodule.exports.stream.byDigest = getStreamDigest;\n\nfunction getStreamDigest(cache, integrity, opts) {\n  opts = GetOpts(opts);\n  const memoized = memo.get.byDigest(cache, integrity, opts);\n\n  if (memoized && opts.memoize !== false) {\n    const stream = new Minipass();\n    stream.end(memoized);\n    return stream;\n  } else {\n    const stream = read.readStream(cache, integrity, opts);\n\n    if (!opts.memoize) {\n      return stream;\n    }\n\n    const memoStream = new Collect.PassThrough();\n    memoStream.on('collect', data => memo.put.byDigest(cache, integrity, data, opts));\n    return new Pipeline(stream, memoStream);\n  }\n}\n\nmodule.exports.info = info;\n\nfunction info(cache, key, opts) {\n  opts = GetOpts(opts);\n  const memoized = memo.get(cache, key, opts);\n\n  if (memoized && opts.memoize !== false) {\n    return Promise.resolve(memoized.entry);\n  } else {\n    return index.find(cache, key);\n  }\n}\n\nmodule.exports.hasContent = read.hasContent;\n\nfunction cp(cache, key, dest, opts) {\n  return copy(false, cache, key, dest, opts);\n}\n\nmodule.exports.copy = cp;\n\nfunction cpDigest(cache, digest, dest, opts) {\n  return copy(true, cache, digest, dest, opts);\n}\n\nmodule.exports.copy.byDigest = cpDigest;\n\nfunction copy(byDigest, cache, key, dest, opts) {\n  opts = GetOpts(opts);\n\n  if (read.copy) {\n    return (byDigest ? Promise.resolve(null) : index.find(cache, key, opts)).then(entry => {\n      if (!entry && !byDigest) {\n        throw new index.NotFoundError(cache, key);\n      }\n\n      return read.copy(cache, byDigest ? key : entry.integrity, dest, opts).then(() => {\n        return byDigest ? key : {\n          metadata: entry.metadata,\n          size: entry.size,\n          integrity: entry.integrity\n        };\n      });\n    });\n  }\n\n  return getData(byDigest, cache, key, opts).then(res => {\n    return writeFile(dest, byDigest ? res : res.data).then(() => {\n      return byDigest ? key : {\n        metadata: res.metadata,\n        size: res.size,\n        integrity: res.integrity\n      };\n    });\n  });\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/cacache/get.js"],"names":["util","require","figgyPudding","fs","index","memo","read","Minipass","Collect","Pipeline","writeFile","promisify","GetOpts","integrity","memoize","size","module","exports","get","cache","key","opts","getData","byDigest","getByDigest","digest","memoized","Promise","resolve","metadata","entry","data","find","then","NotFoundError","res","put","sync","getDataSync","stream","getStream","getMemoizedStream","on","ev","cb","end","emit","src","readStream","concat","memoStream","PassThrough","unshift","catch","err","getStreamDigest","info","hasContent","cp","dest","copy","cpDigest"],"mappings":"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","sourcesContent":["'use strict'\n\nconst util = require('util')\n\nconst figgyPudding = require('figgy-pudding')\nconst fs = require('fs')\nconst index = require('./lib/entry-index')\nconst memo = require('./lib/memoization')\nconst read = require('./lib/content/read')\n\nconst Minipass = require('minipass')\nconst Collect = require('minipass-collect')\nconst Pipeline = require('minipass-pipeline')\n\nconst writeFile = util.promisify(fs.writeFile)\n\nconst GetOpts = figgyPudding({\n  integrity: {},\n  memoize: {},\n  size: {}\n})\n\nmodule.exports = function get (cache, key, opts) {\n  return getData(false, cache, key, opts)\n}\nmodule.exports.byDigest = function getByDigest (cache, digest, opts) {\n  return getData(true, cache, digest, opts)\n}\n\nfunction getData (byDigest, cache, key, opts) {\n  opts = GetOpts(opts)\n  const memoized = byDigest\n    ? memo.get.byDigest(cache, key, opts)\n    : memo.get(cache, key, opts)\n  if (memoized && opts.memoize !== false) {\n    return Promise.resolve(\n      byDigest\n        ? memoized\n        : {\n          metadata: memoized.entry.metadata,\n          data: memoized.data,\n          integrity: memoized.entry.integrity,\n          size: memoized.entry.size\n        }\n    )\n  }\n  return (byDigest ? Promise.resolve(null) : index.find(cache, key, opts)).then(\n    (entry) => {\n      if (!entry && !byDigest) {\n        throw new index.NotFoundError(cache, key)\n      }\n      return read(cache, byDigest ? key : entry.integrity, {\n        integrity: opts.integrity,\n        size: opts.size\n      })\n        .then((data) =>\n          byDigest\n            ? data\n            : {\n              metadata: entry.metadata,\n              data: data,\n              size: entry.size,\n              integrity: entry.integrity\n            }\n        )\n        .then((res) => {\n          if (opts.memoize && byDigest) {\n            memo.put.byDigest(cache, key, res, opts)\n          } else if (opts.memoize) {\n            memo.put(cache, entry, res.data, opts)\n          }\n          return res\n        })\n    }\n  )\n}\n\nmodule.exports.sync = function get (cache, key, opts) {\n  return getDataSync(false, cache, key, opts)\n}\nmodule.exports.sync.byDigest = function getByDigest (cache, digest, opts) {\n  return getDataSync(true, cache, digest, opts)\n}\n\nfunction getDataSync (byDigest, cache, key, opts) {\n  opts = GetOpts(opts)\n  const memoized = byDigest\n    ? memo.get.byDigest(cache, key, opts)\n    : memo.get(cache, key, opts)\n  if (memoized && opts.memoize !== false) {\n    return byDigest\n      ? memoized\n      : {\n        metadata: memoized.entry.metadata,\n        data: memoized.data,\n        integrity: memoized.entry.integrity,\n        size: memoized.entry.size\n      }\n  }\n  const entry = !byDigest && index.find.sync(cache, key, opts)\n  if (!entry && !byDigest) {\n    throw new index.NotFoundError(cache, key)\n  }\n  const data = read.sync(cache, byDigest ? key : entry.integrity, {\n    integrity: opts.integrity,\n    size: opts.size\n  })\n  const res = byDigest\n    ? data\n    : {\n      metadata: entry.metadata,\n      data: data,\n      size: entry.size,\n      integrity: entry.integrity\n    }\n  if (opts.memoize && byDigest) {\n    memo.put.byDigest(cache, key, res, opts)\n  } else if (opts.memoize) {\n    memo.put(cache, entry, res.data, opts)\n  }\n  return res\n}\n\nmodule.exports.stream = getStream\n\nconst getMemoizedStream = (memoized) => {\n  const stream = new Minipass()\n  stream.on('newListener', function (ev, cb) {\n    ev === 'metadata' && cb(memoized.entry.metadata)\n    ev === 'integrity' && cb(memoized.entry.integrity)\n    ev === 'size' && cb(memoized.entry.size)\n  })\n  stream.end(memoized.data)\n  return stream\n}\n\nfunction getStream (cache, key, opts) {\n  opts = GetOpts(opts)\n  const memoized = memo.get(cache, key, opts)\n  if (memoized && opts.memoize !== false) {\n    return getMemoizedStream(memoized)\n  }\n\n  const stream = new Pipeline()\n  index\n    .find(cache, key)\n    .then((entry) => {\n      if (!entry) {\n        throw new index.NotFoundError(cache, key)\n      }\n      stream.emit('metadata', entry.metadata)\n      stream.emit('integrity', entry.integrity)\n      stream.emit('size', entry.size)\n      stream.on('newListener', function (ev, cb) {\n        ev === 'metadata' && cb(entry.metadata)\n        ev === 'integrity' && cb(entry.integrity)\n        ev === 'size' && cb(entry.size)\n      })\n\n      const src = read.readStream(\n        cache,\n        entry.integrity,\n        opts.concat({\n          size: opts.size == null ? entry.size : opts.size\n        })\n      )\n\n      if (opts.memoize) {\n        const memoStream = new Collect.PassThrough()\n        memoStream.on('collect', data => memo.put(cache, entry, data, opts))\n        stream.unshift(memoStream)\n      }\n      stream.unshift(src)\n    })\n    .catch((err) => stream.emit('error', err))\n\n  return stream\n}\n\nmodule.exports.stream.byDigest = getStreamDigest\n\nfunction getStreamDigest (cache, integrity, opts) {\n  opts = GetOpts(opts)\n  const memoized = memo.get.byDigest(cache, integrity, opts)\n  if (memoized && opts.memoize !== false) {\n    const stream = new Minipass()\n    stream.end(memoized)\n    return stream\n  } else {\n    const stream = read.readStream(cache, integrity, opts)\n    if (!opts.memoize) {\n      return stream\n    }\n    const memoStream = new Collect.PassThrough()\n    memoStream.on('collect', data => memo.put.byDigest(\n      cache,\n      integrity,\n      data,\n      opts\n    ))\n    return new Pipeline(stream, memoStream)\n  }\n}\n\nmodule.exports.info = info\n\nfunction info (cache, key, opts) {\n  opts = GetOpts(opts)\n  const memoized = memo.get(cache, key, opts)\n  if (memoized && opts.memoize !== false) {\n    return Promise.resolve(memoized.entry)\n  } else {\n    return index.find(cache, key)\n  }\n}\n\nmodule.exports.hasContent = read.hasContent\n\nfunction cp (cache, key, dest, opts) {\n  return copy(false, cache, key, dest, opts)\n}\n\nmodule.exports.copy = cp\n\nfunction cpDigest (cache, digest, dest, opts) {\n  return copy(true, cache, digest, dest, opts)\n}\n\nmodule.exports.copy.byDigest = cpDigest\n\nfunction copy (byDigest, cache, key, dest, opts) {\n  opts = GetOpts(opts)\n  if (read.copy) {\n    return (byDigest\n      ? Promise.resolve(null)\n      : index.find(cache, key, opts)\n    ).then((entry) => {\n      if (!entry && !byDigest) {\n        throw new index.NotFoundError(cache, key)\n      }\n      return read\n        .copy(cache, byDigest ? key : entry.integrity, dest, opts)\n        .then(() => {\n          return byDigest\n            ? key\n            : {\n              metadata: entry.metadata,\n              size: entry.size,\n              integrity: entry.integrity\n            }\n        })\n    })\n  }\n\n  return getData(byDigest, cache, key, opts).then((res) => {\n    return writeFile(dest, byDigest ? res : res.data).then(() => {\n      return byDigest\n        ? key\n        : {\n          metadata: res.metadata,\n          size: res.size,\n          integrity: res.integrity\n        }\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"script"}