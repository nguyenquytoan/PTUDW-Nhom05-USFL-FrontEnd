{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observable_1 = require(\"../Observable\");\n\nvar AsyncSubject_1 = require(\"../AsyncSubject\");\n\nvar map_1 = require(\"../operators/map\");\n\nvar canReportError_1 = require(\"../util/canReportError\");\n\nvar isArray_1 = require(\"../util/isArray\");\n\nvar isScheduler_1 = require(\"../util/isScheduler\");\n\nfunction bindCallback(callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if (isScheduler_1.isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map_1.map(function (args) {\n          return isArray_1.isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n        }));\n      };\n    }\n  }\n\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var context = this;\n    var subject;\n    var params = {\n      context: context,\n      subject: subject,\n      callbackFunc: callbackFunc,\n      scheduler: scheduler\n    };\n    return new Observable_1.Observable(function (subscriber) {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject_1.AsyncSubject();\n\n          var handler = function () {\n            var innerArgs = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              innerArgs[_i] = arguments[_i];\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, args.concat([handler]));\n          } catch (err) {\n            if (canReportError_1.canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n\n        return subject.subscribe(subscriber);\n      } else {\n        var state = {\n          args: args,\n          subscriber: subscriber,\n          params: params\n        };\n        return scheduler.schedule(dispatch, 0, state);\n      }\n    });\n  };\n}\n\nexports.bindCallback = bindCallback;\n\nfunction dispatch(state) {\n  var _this = this;\n\n  var self = this;\n  var args = state.args,\n      subscriber = state.subscriber,\n      params = state.params;\n  var callbackFunc = params.callbackFunc,\n      context = params.context,\n      scheduler = params.scheduler;\n  var subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject_1.AsyncSubject();\n\n    var handler = function () {\n      var innerArgs = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        innerArgs[_i] = arguments[_i];\n      }\n\n      var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n\n      _this.add(scheduler.schedule(dispatchNext, 0, {\n        value: value,\n        subject: subject\n      }));\n    };\n\n    try {\n      callbackFunc.apply(context, args.concat([handler]));\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\nfunction dispatchNext(state) {\n  var value = state.value,\n      subject = state.subject;\n  subject.next(value);\n  subject.complete();\n}\n\nfunction dispatchError(state) {\n  var err = state.err,\n      subject = state.subject;\n  subject.error(err);\n}","map":{"version":3,"sources":["../../src/internal/observable/bindCallback.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar AsyncSubject_1 = require(\"../AsyncSubject\");\nvar map_1 = require(\"../operators/map\");\nvar canReportError_1 = require(\"../util/canReportError\");\nvar isArray_1 = require(\"../util/isArray\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\nfunction bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler_1.isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map_1.map(function (args) { return isArray_1.isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var context = this;\n        var subject;\n        var params = {\n            context: context,\n            subject: subject,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n        };\n        return new Observable_1.Observable(function (subscriber) {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject_1.AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        if (canReportError_1.canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                var state = {\n                    args: args, subscriber: subscriber, params: params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nexports.bindCallback = bindCallback;\nfunction dispatch(state) {\n    var _this = this;\n    var self = this;\n    var args = state.args, subscriber = state.subscriber, params = state.params;\n    var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    var value = state.value, subject = state.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    var err = state.err, subject = state.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map"]},"metadata":{},"sourceType":"script"}