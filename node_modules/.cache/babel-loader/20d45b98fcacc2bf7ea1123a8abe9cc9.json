{"ast":null,"code":"'use strict';\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMock() {\n  const data = _interopRequireDefault(require('jest-mock'));\n\n  _jestMock = function _jestMock() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fakeTimers() {\n  const data = require('@jest/fake-timers');\n\n  _fakeTimers = function _fakeTimers() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jsdom() {\n  const data = require('jsdom');\n\n  _jsdom = function _jsdom() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass JSDOMEnvironment {\n  constructor(config, options = {}) {\n    _defineProperty(this, 'dom', void 0);\n\n    _defineProperty(this, 'fakeTimers', void 0);\n\n    _defineProperty(this, 'global', void 0);\n\n    _defineProperty(this, 'errorEventListener', void 0);\n\n    _defineProperty(this, 'moduleMocker', void 0);\n\n    this.dom = new (_jsdom().JSDOM)('<!DOCTYPE html>', _objectSpread({\n      pretendToBeVisual: true,\n      runScripts: 'dangerously',\n      url: config.testURL,\n      virtualConsole: new (_jsdom().VirtualConsole)().sendTo(options.console || console)\n    }, config.testEnvironmentOptions));\n    const global = this.global = this.dom.window.document.defaultView;\n\n    if (!global) {\n      throw new Error('JSDOM did not return a Window object');\n    } // Node's error-message stack size is limited at 10, but it's pretty useful\n    // to see more than that when a test fails.\n\n\n    this.global.Error.stackTraceLimit = 100;\n    (0, _jestUtil().installCommonGlobals)(global, config.globals); // Report uncaught errors.\n\n    this.errorEventListener = event => {\n      if (userErrorListenerCount === 0 && event.error) {\n        process.emit('uncaughtException', event.error);\n      }\n    };\n\n    global.addEventListener('error', this.errorEventListener); // However, don't report them as uncaught if the user listens to 'error' event.\n    // In that case, we assume the might have custom error handling logic.\n\n    const originalAddListener = global.addEventListener;\n    const originalRemoveListener = global.removeEventListener;\n    let userErrorListenerCount = 0;\n\n    global.addEventListener = function (...args) {\n      if (args[0] === 'error') {\n        userErrorListenerCount++;\n      }\n\n      return originalAddListener.apply(this, args);\n    };\n\n    global.removeEventListener = function (...args) {\n      if (args[0] === 'error') {\n        userErrorListenerCount--;\n      }\n\n      return originalRemoveListener.apply(this, args);\n    };\n\n    this.moduleMocker = new (_jestMock().default.ModuleMocker)(global);\n    const timerConfig = {\n      idToRef: id => id,\n      refToId: ref => ref\n    };\n    this.fakeTimers = new (_fakeTimers().JestFakeTimers)({\n      config,\n      global: global,\n      moduleMocker: this.moduleMocker,\n      timerConfig\n    });\n  }\n\n  setup() {\n    return Promise.resolve();\n  }\n\n  teardown() {\n    if (this.fakeTimers) {\n      this.fakeTimers.dispose();\n    }\n\n    if (this.global) {\n      if (this.errorEventListener) {\n        this.global.removeEventListener('error', this.errorEventListener);\n      } // Dispose \"document\" to prevent \"load\" event from triggering.\n\n\n      Object.defineProperty(this.global, 'document', {\n        value: null\n      });\n      this.global.close();\n    }\n\n    this.errorEventListener = null; // @ts-ignore\n\n    this.global = null;\n    this.dom = null;\n    this.fakeTimers = null;\n    return Promise.resolve();\n  }\n\n  runScript(script) {\n    if (this.dom) {\n      return this.dom.runVMScript(script);\n    }\n\n    return null;\n  }\n\n}\n\nmodule.exports = JSDOMEnvironment;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-environment-jsdom/build/index.js"],"names":["_jestUtil","data","require","_jestMock","_interopRequireDefault","_fakeTimers","_jsdom","obj","__esModule","default","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","JSDOMEnvironment","constructor","config","options","dom","JSDOM","pretendToBeVisual","runScripts","url","testURL","virtualConsole","VirtualConsole","sendTo","console","testEnvironmentOptions","global","window","document","defaultView","Error","stackTraceLimit","installCommonGlobals","globals","errorEventListener","event","userErrorListenerCount","error","process","emit","addEventListener","originalAddListener","originalRemoveListener","removeEventListener","args","apply","moduleMocker","ModuleMocker","timerConfig","idToRef","id","refToId","ref","fakeTimers","JestFakeTimers","setup","Promise","resolve","teardown","dispose","close","runScript","script","runVMScript","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMock() {\n  const data = _interopRequireDefault(require('jest-mock'));\n\n  _jestMock = function _jestMock() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fakeTimers() {\n  const data = require('@jest/fake-timers');\n\n  _fakeTimers = function _fakeTimers() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jsdom() {\n  const data = require('jsdom');\n\n  _jsdom = function _jsdom() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(\n        Object.getOwnPropertySymbols(source).filter(function(sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        })\n      );\n    }\n    ownKeys.forEach(function(key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass JSDOMEnvironment {\n  constructor(config, options = {}) {\n    _defineProperty(this, 'dom', void 0);\n\n    _defineProperty(this, 'fakeTimers', void 0);\n\n    _defineProperty(this, 'global', void 0);\n\n    _defineProperty(this, 'errorEventListener', void 0);\n\n    _defineProperty(this, 'moduleMocker', void 0);\n\n    this.dom = new (_jsdom()).JSDOM(\n      '<!DOCTYPE html>',\n      _objectSpread(\n        {\n          pretendToBeVisual: true,\n          runScripts: 'dangerously',\n          url: config.testURL,\n          virtualConsole: new (_jsdom()).VirtualConsole().sendTo(\n            options.console || console\n          )\n        },\n        config.testEnvironmentOptions\n      )\n    );\n    const global = (this.global = this.dom.window.document.defaultView);\n\n    if (!global) {\n      throw new Error('JSDOM did not return a Window object');\n    } // Node's error-message stack size is limited at 10, but it's pretty useful\n    // to see more than that when a test fails.\n\n    this.global.Error.stackTraceLimit = 100;\n    (0, _jestUtil().installCommonGlobals)(global, config.globals); // Report uncaught errors.\n\n    this.errorEventListener = event => {\n      if (userErrorListenerCount === 0 && event.error) {\n        process.emit('uncaughtException', event.error);\n      }\n    };\n\n    global.addEventListener('error', this.errorEventListener); // However, don't report them as uncaught if the user listens to 'error' event.\n    // In that case, we assume the might have custom error handling logic.\n\n    const originalAddListener = global.addEventListener;\n    const originalRemoveListener = global.removeEventListener;\n    let userErrorListenerCount = 0;\n\n    global.addEventListener = function(...args) {\n      if (args[0] === 'error') {\n        userErrorListenerCount++;\n      }\n\n      return originalAddListener.apply(this, args);\n    };\n\n    global.removeEventListener = function(...args) {\n      if (args[0] === 'error') {\n        userErrorListenerCount--;\n      }\n\n      return originalRemoveListener.apply(this, args);\n    };\n\n    this.moduleMocker = new (_jestMock()).default.ModuleMocker(global);\n    const timerConfig = {\n      idToRef: id => id,\n      refToId: ref => ref\n    };\n    this.fakeTimers = new (_fakeTimers()).JestFakeTimers({\n      config,\n      global: global,\n      moduleMocker: this.moduleMocker,\n      timerConfig\n    });\n  }\n\n  setup() {\n    return Promise.resolve();\n  }\n\n  teardown() {\n    if (this.fakeTimers) {\n      this.fakeTimers.dispose();\n    }\n\n    if (this.global) {\n      if (this.errorEventListener) {\n        this.global.removeEventListener('error', this.errorEventListener);\n      } // Dispose \"document\" to prevent \"load\" event from triggering.\n\n      Object.defineProperty(this.global, 'document', {\n        value: null\n      });\n      this.global.close();\n    }\n\n    this.errorEventListener = null; // @ts-ignore\n\n    this.global = null;\n    this.dom = null;\n    this.fakeTimers = null;\n    return Promise.resolve();\n  }\n\n  runScript(script) {\n    if (this.dom) {\n      return this.dom.runVMScript(script);\n    }\n\n    return null;\n  }\n}\n\nmodule.exports = JSDOMEnvironment;\n"]},"metadata":{},"sourceType":"script"}