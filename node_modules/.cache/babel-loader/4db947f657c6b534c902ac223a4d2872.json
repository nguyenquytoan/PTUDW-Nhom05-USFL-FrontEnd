{"ast":null,"code":"// HSL to RGB converter. Both methods adapted from:\n// http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\nfunction hslToRgb(h, s, l) {\n  var r, g, b; // normalize hue orientation b/w 0 and 360 degrees\n\n  h = h % 360;\n  if (h < 0) h += 360;\n  h = ~~h / 360;\n  if (s < 0) s = 0;else if (s > 100) s = 100;\n  s = ~~s / 100;\n  if (l < 0) l = 0;else if (l > 100) l = 100;\n  l = ~~l / 100;\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hueToRgb(p, q, h + 1 / 3);\n    g = hueToRgb(p, q, h);\n    b = hueToRgb(p, q, h - 1 / 3);\n  }\n\n  return [~~(r * 255), ~~(g * 255), ~~(b * 255)];\n}\n\nfunction hueToRgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction shortenHsl(hue, saturation, lightness) {\n  var asRgb = hslToRgb(hue, saturation, lightness);\n  var redAsHex = asRgb[0].toString(16);\n  var greenAsHex = asRgb[1].toString(16);\n  var blueAsHex = asRgb[2].toString(16);\n  return '#' + ((redAsHex.length == 1 ? '0' : '') + redAsHex) + ((greenAsHex.length == 1 ? '0' : '') + greenAsHex) + ((blueAsHex.length == 1 ? '0' : '') + blueAsHex);\n}\n\nmodule.exports = shortenHsl;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/optimizer/level-1/shorten-hsl.js"],"names":["hslToRgb","h","s","l","r","g","b","q","p","hueToRgb","t","shortenHsl","hue","saturation","lightness","asRgb","redAsHex","toString","greenAsHex","blueAsHex","length","module","exports"],"mappings":"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","sourcesContent":["// HSL to RGB converter. Both methods adapted from:\n// http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n\n  // normalize hue orientation b/w 0 and 360 degrees\n  h = h % 360;\n  if (h < 0)\n    h += 360;\n  h = ~~h / 360;\n\n  if (s < 0)\n    s = 0;\n  else if (s > 100)\n    s = 100;\n  s = ~~s / 100;\n\n  if (l < 0)\n    l = 0;\n  else if (l > 100)\n    l = 100;\n  l = ~~l / 100;\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5 ?\n      l * (1 + s) :\n      l + s - l * s;\n    var p = 2 * l - q;\n    r = hueToRgb(p, q, h + 1/3);\n    g = hueToRgb(p, q, h);\n    b = hueToRgb(p, q, h - 1/3);\n  }\n\n  return [~~(r * 255), ~~(g * 255), ~~(b * 255)];\n}\n\nfunction hueToRgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1/6) return p + (q - p) * 6 * t;\n  if (t < 1/2) return q;\n  if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n  return p;\n}\n\nfunction shortenHsl(hue, saturation, lightness) {\n  var asRgb = hslToRgb(hue, saturation, lightness);\n  var redAsHex = asRgb[0].toString(16);\n  var greenAsHex = asRgb[1].toString(16);\n  var blueAsHex = asRgb[2].toString(16);\n\n  return '#' +\n    ((redAsHex.length == 1 ? '0' : '') + redAsHex) +\n    ((greenAsHex.length == 1 ? '0' : '') + greenAsHex) +\n    ((blueAsHex.length == 1 ? '0' : '') + blueAsHex);\n}\n\nmodule.exports = shortenHsl;\n"]},"metadata":{},"sourceType":"script"}