{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.mjs';\nimport './_version.mjs';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof workbox.cacheableResponse\n */\n\nclass Plugin {\n  /**\n   * To construct a new cacheable response Plugin instance you must provide at\n   * least one of the `config` properties.\n   *\n   * If both `statuses` and `headers` are specified, then both conditions must\n   * be met for the `Response` to be considered cacheable.\n   *\n   * @param {Object} config\n   * @param {Array<number>} [config.statuses] One or more status codes that a\n   * `Response` can have and be considered cacheable.\n   * @param {Object<string,string>} [config.headers] A mapping of header names\n   * and expected values that a `Response` can have and be considered cacheable.\n   * If multiple headers are provided, only one needs to be present.\n   */\n  constructor(config) {\n    this._cacheableResponse = new CacheableResponse(config);\n  }\n  /**\n   * @param {Object} options\n   * @param {Response} options.response\n   * @return {boolean}\n   * @private\n   */\n\n\n  cacheWillUpdate({\n    response\n  }) {\n    if (this._cacheableResponse.isResponseCacheable(response)) {\n      return response;\n    }\n\n    return null;\n  }\n\n}\n\nexport { Plugin };","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-cacheable-response/Plugin.mjs"],"names":["CacheableResponse","Plugin","constructor","config","_cacheableResponse","cacheWillUpdate","response","isResponseCacheable"],"mappings":"AAAA;;;;;;;AAQA,SAAQA,iBAAR,QAAgC,yBAAhC;AACA,OAAO,gBAAP;AAEA;;;;;;;;AAOA,MAAMC,MAAN,CAAa;AACX;;;;;;;;;;;;;;AAcAC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKC,kBAAL,GAA0B,IAAIJ,iBAAJ,CAAsBG,MAAtB,CAA1B;AACD;AAED;;;;;;;;AAMAE,EAAAA,eAAe,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAa;AAC1B,QAAI,KAAKF,kBAAL,CAAwBG,mBAAxB,CAA4CD,QAA5C,CAAJ,EAA2D;AACzD,aAAOA,QAAP;AACD;;AACD,WAAO,IAAP;AACD;;AA9BU;;AAiCb,SAAQL,MAAR","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport {CacheableResponse} from './CacheableResponse.mjs';\nimport './_version.mjs';\n\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof workbox.cacheableResponse\n */\nclass Plugin {\n  /**\n   * To construct a new cacheable response Plugin instance you must provide at\n   * least one of the `config` properties.\n   *\n   * If both `statuses` and `headers` are specified, then both conditions must\n   * be met for the `Response` to be considered cacheable.\n   *\n   * @param {Object} config\n   * @param {Array<number>} [config.statuses] One or more status codes that a\n   * `Response` can have and be considered cacheable.\n   * @param {Object<string,string>} [config.headers] A mapping of header names\n   * and expected values that a `Response` can have and be considered cacheable.\n   * If multiple headers are provided, only one needs to be present.\n   */\n  constructor(config) {\n    this._cacheableResponse = new CacheableResponse(config);\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Response} options.response\n   * @return {boolean}\n   * @private\n   */\n  cacheWillUpdate({response}) {\n    if (this._cacheableResponse.isResponseCacheable(response)) {\n      return response;\n    }\n    return null;\n  }\n}\n\nexport {Plugin};\n"]},"metadata":{},"sourceType":"module"}