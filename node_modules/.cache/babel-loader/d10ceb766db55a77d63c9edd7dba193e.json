{"ast":null,"code":"let pnp;\n\ntry {\n  pnp = require(`pnpapi`);\n} catch (error) {// not in PnP; not a problem\n}\n\nlet defaultResolver;\n\nfunction requireDefaultResolver() {\n  if (!defaultResolver) {\n    try {\n      defaultResolver = require(`jest-resolve/build/defaultResolver`).default;\n    } catch (error) {\n      defaultResolver = require(`jest-resolve/build/default_resolver`).default;\n    }\n  }\n\n  return defaultResolver;\n}\n\nmodule.exports = (request, options) => {\n  const {\n    basedir,\n    defaultResolver,\n    extensions\n  } = options;\n\n  if (pnp) {\n    const resolution = pnp.resolveRequest(request, `${basedir}/`, {\n      extensions\n    }); // When the request is a native module, Jest expects to get the string back unmodified, but pnp returns null instead.\n\n    if (resolution === null) return request;\n    return resolution;\n  } else {\n    if (!defaultResolver) defaultResolver = requireDefaultResolver();\n    return defaultResolver(request, options);\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-pnp-resolver/index.js"],"names":["pnp","require","error","defaultResolver","requireDefaultResolver","default","module","exports","request","options","basedir","extensions","resolution","resolveRequest"],"mappings":"AACA,IAAIA,GAAJ;;AAEA,IAAI;AACFA,EAAAA,GAAG,GAAGC,OAAO,CAAE,QAAF,CAAb;AACD,CAFD,CAEE,OAAOC,KAAP,EAAc,CACd;AACD;;AAED,IAAIC,eAAJ;;AAEA,SAASC,sBAAT,GAAkC;AAChC,MAAI,CAACD,eAAL,EAAsB;AACpB,QAAI;AACFA,MAAAA,eAAe,GAAGF,OAAO,CAAE,oCAAF,CAAP,CAA8CI,OAAhE;AACD,KAFD,CAEE,OAAOH,KAAP,EAAc;AACdC,MAAAA,eAAe,GAAGF,OAAO,CAAE,qCAAF,CAAP,CAA+CI,OAAjE;AACD;AACF;;AAED,SAAOF,eAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACrC,QAAM;AAACC,IAAAA,OAAD;AAAUP,IAAAA,eAAV;AAA2BQ,IAAAA;AAA3B,MAAyCF,OAA/C;;AAEA,MAAIT,GAAJ,EAAS;AACP,UAAMY,UAAU,GAAGZ,GAAG,CAACa,cAAJ,CAAmBL,OAAnB,EAA6B,GAAEE,OAAQ,GAAvC,EAA2C;AAACC,MAAAA;AAAD,KAA3C,CAAnB,CADO,CAGP;;AACA,QAAIC,UAAU,KAAK,IAAnB,EACE,OAAOJ,OAAP;AAEF,WAAOI,UAAP;AACD,GARD,MAQO;AACL,QAAI,CAACT,eAAL,EACEA,eAAe,GAAGC,sBAAsB,EAAxC;AAEF,WAAOD,eAAe,CAACK,OAAD,EAAUC,OAAV,CAAtB;AACD;AACF,CAjBD","sourcesContent":["\nlet pnp;\n\ntry {\n  pnp = require(`pnpapi`);\n} catch (error) {\n  // not in PnP; not a problem\n}\n\nlet defaultResolver;\n\nfunction requireDefaultResolver() {\n  if (!defaultResolver) {\n    try {\n      defaultResolver = require(`jest-resolve/build/defaultResolver`).default;\n    } catch (error) {\n      defaultResolver = require(`jest-resolve/build/default_resolver`).default;\n    }\n  }\n\n  return defaultResolver;\n}\n\nmodule.exports = (request, options) => {\n  const {basedir, defaultResolver, extensions} = options;\n\n  if (pnp) {\n    const resolution = pnp.resolveRequest(request, `${basedir}/`, {extensions});\n\n    // When the request is a native module, Jest expects to get the string back unmodified, but pnp returns null instead.\n    if (resolution === null)\n      return request;\n\n    return resolution;\n  } else {\n    if (!defaultResolver)\n      defaultResolver = requireDefaultResolver();\n\n    return defaultResolver(request, options);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}