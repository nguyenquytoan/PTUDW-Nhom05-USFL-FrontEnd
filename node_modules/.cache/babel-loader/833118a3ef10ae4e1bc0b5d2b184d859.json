{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _postcssValueParser = _interopRequireDefault(require(\"postcss-value-parser\"));\n\nvar _loaderUtils = require(\"loader-utils\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst pluginName = 'postcss-import-parser';\n\nfunction getParsedValue(node) {\n  if (node.type === 'function' && node.value.toLowerCase() === 'url') {\n    const {\n      nodes\n    } = node;\n    const isStringValue = nodes.length !== 0 && nodes[0].type === 'string';\n    const url = isStringValue ? nodes[0].value : _postcssValueParser.default.stringify(nodes);\n    return {\n      url,\n      isStringValue\n    };\n  }\n\n  if (node.type === 'string') {\n    const url = node.value;\n    return {\n      url,\n      isStringValue: true\n    };\n  }\n\n  return null;\n}\n\nfunction parseImport(params) {\n  const {\n    nodes\n  } = (0, _postcssValueParser.default)(params);\n\n  if (nodes.length === 0) {\n    return null;\n  }\n\n  const value = getParsedValue(nodes[0]);\n\n  if (!value) {\n    return null;\n  }\n\n  let {\n    url\n  } = value;\n\n  if (url.trim().length === 0) {\n    return null;\n  }\n\n  if ((0, _loaderUtils.isUrlRequest)(url)) {\n    const {\n      isStringValue\n    } = value;\n    url = (0, _utils.normalizeUrl)(url, isStringValue);\n  }\n\n  return {\n    url,\n    media: _postcssValueParser.default.stringify(nodes.slice(1)).trim().toLowerCase()\n  };\n}\n\nfunction walkAtRules(css, result, filter) {\n  const items = [];\n  css.walkAtRules(/^import$/i, atRule => {\n    // Convert only top-level @import\n    if (atRule.parent.type !== 'root') {\n      return;\n    }\n\n    if (atRule.nodes) {\n      result.warn(\"It looks like you didn't end your @import statement correctly. \" + 'Child nodes are attached to it.', {\n        node: atRule\n      });\n      return;\n    }\n\n    const parsed = parseImport(atRule.params);\n\n    if (!parsed) {\n      // eslint-disable-next-line consistent-return\n      return result.warn(`Unable to find uri in '${atRule.toString()}'`, {\n        node: atRule\n      });\n    }\n\n    if (filter && !filter(parsed)) {\n      return;\n    }\n\n    atRule.remove();\n    items.push(parsed);\n  });\n  return items;\n}\n\nvar _default = _postcss.default.plugin(pluginName, options => function process(css, result) {\n  const items = walkAtRules(css, result, options.filter);\n  items.forEach(item => {\n    const {\n      url,\n      media\n    } = item;\n    result.messages.push({\n      pluginName,\n      type: 'import',\n      value: {\n        type: '@import',\n        url,\n        media\n      }\n    });\n  });\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/css-loader/dist/plugins/postcss-import-parser.js"],"names":["Object","defineProperty","exports","value","default","_postcss","_interopRequireDefault","require","_postcssValueParser","_loaderUtils","_utils","obj","__esModule","pluginName","getParsedValue","node","type","toLowerCase","nodes","isStringValue","length","url","stringify","parseImport","params","trim","isUrlRequest","normalizeUrl","media","slice","walkAtRules","css","result","filter","items","atRule","parent","warn","parsed","toString","remove","push","_default","plugin","options","process","forEach","item","messages"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _postcssValueParser = _interopRequireDefault(require(\"postcss-value-parser\"));\n\nvar _loaderUtils = require(\"loader-utils\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst pluginName = 'postcss-import-parser';\n\nfunction getParsedValue(node) {\n  if (node.type === 'function' && node.value.toLowerCase() === 'url') {\n    const {\n      nodes\n    } = node;\n    const isStringValue = nodes.length !== 0 && nodes[0].type === 'string';\n    const url = isStringValue ? nodes[0].value : _postcssValueParser.default.stringify(nodes);\n    return {\n      url,\n      isStringValue\n    };\n  }\n\n  if (node.type === 'string') {\n    const url = node.value;\n    return {\n      url,\n      isStringValue: true\n    };\n  }\n\n  return null;\n}\n\nfunction parseImport(params) {\n  const {\n    nodes\n  } = (0, _postcssValueParser.default)(params);\n\n  if (nodes.length === 0) {\n    return null;\n  }\n\n  const value = getParsedValue(nodes[0]);\n\n  if (!value) {\n    return null;\n  }\n\n  let {\n    url\n  } = value;\n\n  if (url.trim().length === 0) {\n    return null;\n  }\n\n  if ((0, _loaderUtils.isUrlRequest)(url)) {\n    const {\n      isStringValue\n    } = value;\n    url = (0, _utils.normalizeUrl)(url, isStringValue);\n  }\n\n  return {\n    url,\n    media: _postcssValueParser.default.stringify(nodes.slice(1)).trim().toLowerCase()\n  };\n}\n\nfunction walkAtRules(css, result, filter) {\n  const items = [];\n  css.walkAtRules(/^import$/i, atRule => {\n    // Convert only top-level @import\n    if (atRule.parent.type !== 'root') {\n      return;\n    }\n\n    if (atRule.nodes) {\n      result.warn(\"It looks like you didn't end your @import statement correctly. \" + 'Child nodes are attached to it.', {\n        node: atRule\n      });\n      return;\n    }\n\n    const parsed = parseImport(atRule.params);\n\n    if (!parsed) {\n      // eslint-disable-next-line consistent-return\n      return result.warn(`Unable to find uri in '${atRule.toString()}'`, {\n        node: atRule\n      });\n    }\n\n    if (filter && !filter(parsed)) {\n      return;\n    }\n\n    atRule.remove();\n    items.push(parsed);\n  });\n  return items;\n}\n\nvar _default = _postcss.default.plugin(pluginName, options => function process(css, result) {\n  const items = walkAtRules(css, result, options.filter);\n  items.forEach(item => {\n    const {\n      url,\n      media\n    } = item;\n    result.messages.push({\n      pluginName,\n      type: 'import',\n      value: {\n        type: '@import',\n        url,\n        media\n      }\n    });\n  });\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}