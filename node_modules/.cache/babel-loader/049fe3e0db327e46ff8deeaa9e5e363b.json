{"ast":null,"code":"/* This loader renders the template with underscore if no other loader was found */\n// @ts-nocheck\n'use strict';\n\nconst _ = require('lodash');\n\nconst loaderUtils = require('loader-utils');\n\nmodule.exports = function (source) {\n  // Get templating options\n  const options = this.query !== '' ? loaderUtils.getOptions(this) : {};\n  const force = options.force || false;\n  const allLoadersButThisOne = this.loaders.filter(function (loader) {\n    return loader.normal !== module.exports;\n  }); // This loader shouldn't kick in if there is any other loader (unless it's explicitly enforced)\n\n  if (allLoadersButThisOne.length > 0 && !force) {\n    return source;\n  } // Skip .js files (unless it's explicitly enforced)\n\n\n  if (/\\.js$/.test(this.resourcePath) && !force) {\n    return source;\n  } // The following part renders the template with lodash as a minimalistic loader\n  //\n\n\n  const template = _.template(source, _.defaults(options, {\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    variable: 'data'\n  })); // Use __non_webpack_require__ to enforce using the native nodejs require\n  // during template execution\n\n\n  return 'var _ = __non_webpack_require__(' + JSON.stringify(require.resolve('lodash')) + ');' + 'module.exports = function (templateParams) { with(templateParams) {' + // Execute the lodash template\n  'return (' + template.source + ')();' + '}}';\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/html-webpack-plugin/lib/loader.js"],"names":["_","require","loaderUtils","module","exports","source","options","query","getOptions","force","allLoadersButThisOne","loaders","filter","loader","normal","length","test","resourcePath","template","defaults","interpolate","variable","JSON","stringify","resolve"],"mappings":"AAAA;AACA;AACA;;AACA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAA3B;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkB;AACjC;AACA,QAAMC,OAAO,GAAG,KAAKC,KAAL,KAAe,EAAf,GAAoBL,WAAW,CAACM,UAAZ,CAAuB,IAAvB,CAApB,GAAmD,EAAnE;AACA,QAAMC,KAAK,GAAGH,OAAO,CAACG,KAAR,IAAiB,KAA/B;AAEA,QAAMC,oBAAoB,GAAG,KAAKC,OAAL,CAAaC,MAAb,CAAoB,UAAUC,MAAV,EAAkB;AACjE,WAAOA,MAAM,CAACC,MAAP,KAAkBX,MAAM,CAACC,OAAhC;AACD,GAF4B,CAA7B,CALiC,CAQjC;;AACA,MAAIM,oBAAoB,CAACK,MAArB,GAA8B,CAA9B,IAAmC,CAACN,KAAxC,EAA+C;AAC7C,WAAOJ,MAAP;AACD,GAXgC,CAYjC;;;AACA,MAAI,QAAQW,IAAR,CAAa,KAAKC,YAAlB,KAAmC,CAACR,KAAxC,EAA+C;AAC7C,WAAOJ,MAAP;AACD,GAfgC,CAiBjC;AACA;;;AACA,QAAMa,QAAQ,GAAGlB,CAAC,CAACkB,QAAF,CAAWb,MAAX,EAAmBL,CAAC,CAACmB,QAAF,CAAWb,OAAX,EAAoB;AAAEc,IAAAA,WAAW,EAAE,kBAAf;AAAmCC,IAAAA,QAAQ,EAAE;AAA7C,GAApB,CAAnB,CAAjB,CAnBiC,CAoBjC;AACA;;;AACA,SAAO,qCAAqCC,IAAI,CAACC,SAAL,CAAetB,OAAO,CAACuB,OAAR,CAAgB,QAAhB,CAAf,CAArC,GAAiF,IAAjF,GACL,qEADK,GAEH;AACA,YAHG,GAGUN,QAAQ,CAACb,MAHnB,GAG4B,MAH5B,GAIL,IAJF;AAKD,CA3BD","sourcesContent":["/* This loader renders the template with underscore if no other loader was found */\n// @ts-nocheck\n'use strict';\nconst _ = require('lodash');\nconst loaderUtils = require('loader-utils');\n\nmodule.exports = function (source) {\n  // Get templating options\n  const options = this.query !== '' ? loaderUtils.getOptions(this) : {};\n  const force = options.force || false;\n\n  const allLoadersButThisOne = this.loaders.filter(function (loader) {\n    return loader.normal !== module.exports;\n  });\n  // This loader shouldn't kick in if there is any other loader (unless it's explicitly enforced)\n  if (allLoadersButThisOne.length > 0 && !force) {\n    return source;\n  }\n  // Skip .js files (unless it's explicitly enforced)\n  if (/\\.js$/.test(this.resourcePath) && !force) {\n    return source;\n  }\n\n  // The following part renders the template with lodash as a minimalistic loader\n  //\n  const template = _.template(source, _.defaults(options, { interpolate: /<%=([\\s\\S]+?)%>/g, variable: 'data' }));\n  // Use __non_webpack_require__ to enforce using the native nodejs require\n  // during template execution\n  return 'var _ = __non_webpack_require__(' + JSON.stringify(require.resolve('lodash')) + ');' +\n    'module.exports = function (templateParams) { with(templateParams) {' +\n      // Execute the lodash template\n      'return (' + template.source + ')();' +\n    '}}';\n};\n"]},"metadata":{},"sourceType":"script"}