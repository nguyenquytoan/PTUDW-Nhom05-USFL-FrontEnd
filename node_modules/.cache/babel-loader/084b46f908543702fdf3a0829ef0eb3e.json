{"ast":null,"code":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nlet currentTypes = null;\nexport function wrapWithTypes(types, fn) {\n  return function (...args) {\n    const oldTypes = currentTypes;\n    currentTypes = types;\n\n    try {\n      return fn.apply(this, args);\n    } finally {\n      currentTypes = oldTypes;\n    }\n  };\n}\nexport function getTypes() {\n  return currentTypes;\n}\nexport function runtimeProperty(name) {\n  const t = getTypes();\n  return t.memberExpression(t.identifier(\"regeneratorRuntime\"), t.identifier(name), false);\n}\nexport function isReference(path) {\n  return path.isReferenced() || path.parentPath.isAssignmentExpression({\n    left: path.node\n  });\n}\nexport function replaceWithOrRemove(path, replacement) {\n  if (replacement) {\n    path.replaceWith(replacement);\n  } else {\n    path.remove();\n  }\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/regenerator-transform/src/util.js"],"names":["currentTypes","wrapWithTypes","types","fn","args","oldTypes","apply","getTypes","runtimeProperty","name","t","memberExpression","identifier","isReference","path","isReferenced","parentPath","isAssignmentExpression","left","node","replaceWithOrRemove","replacement","replaceWith","remove"],"mappings":"AAAA;;;;;;AAOA,IAAIA,YAAY,GAAG,IAAnB;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,EAA9B,EAAkC;AACvC,SAAO,UAAU,GAAGC,IAAb,EAAmB;AACxB,UAAMC,QAAQ,GAAGL,YAAjB;AACAA,IAAAA,YAAY,GAAGE,KAAf;;AACA,QAAI;AACF,aAAOC,EAAE,CAACG,KAAH,CAAS,IAAT,EAAeF,IAAf,CAAP;AACD,KAFD,SAEU;AACRJ,MAAAA,YAAY,GAAGK,QAAf;AACD;AACF,GARD;AASD;AAED,OAAO,SAASE,QAAT,GAAoB;AACzB,SAAOP,YAAP;AACD;AAED,OAAO,SAASQ,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,QAAMC,CAAC,GAAGH,QAAQ,EAAlB;AACA,SAAOG,CAAC,CAACC,gBAAF,CACLD,CAAC,CAACE,UAAF,CAAa,oBAAb,CADK,EAELF,CAAC,CAACE,UAAF,CAAaH,IAAb,CAFK,EAGL,KAHK,CAAP;AAKD;AAED,OAAO,SAASI,WAAT,CAAqBC,IAArB,EAA2B;AAChC,SAAOA,IAAI,CAACC,YAAL,MAAuBD,IAAI,CAACE,UAAL,CAAgBC,sBAAhB,CAAuC;AAAEC,IAAAA,IAAI,EAAEJ,IAAI,CAACK;AAAb,GAAvC,CAA9B;AACD;AAED,OAAO,SAASC,mBAAT,CAA6BN,IAA7B,EAAmCO,WAAnC,EAAgD;AACrD,MAAIA,WAAJ,EAAiB;AACfP,IAAAA,IAAI,CAACQ,WAAL,CAAiBD,WAAjB;AACD,GAFD,MAEO;AACLP,IAAAA,IAAI,CAACS,MAAL;AACD;AACF","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet currentTypes = null;\n\nexport function wrapWithTypes(types, fn) {\n  return function (...args) {\n    const oldTypes = currentTypes;\n    currentTypes = types;\n    try {\n      return fn.apply(this, args);\n    } finally {\n      currentTypes = oldTypes;\n    }\n  };\n}\n\nexport function getTypes() {\n  return currentTypes;\n}\n\nexport function runtimeProperty(name) {\n  const t = getTypes();\n  return t.memberExpression(\n    t.identifier(\"regeneratorRuntime\"),\n    t.identifier(name),\n    false\n  );\n}\n\nexport function isReference(path) {\n  return path.isReferenced() || path.parentPath.isAssignmentExpression({ left: path.node });\n}\n\nexport function replaceWithOrRemove(path, replacement) {\n  if (replacement) {\n    path.replaceWith(replacement)\n  } else {\n    path.remove();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}