{"ast":null,"code":"'use strict';\n/**\n * https://github.com/TrySound/postcss-value-parser/blob/fc679a7e17877841ff9fe455722280b65abd4f28/lib/unit.js\n * parse node -> number and unit\n */\n\nconst minus = '-'.charCodeAt(0);\nconst plus = '+'.charCodeAt(0);\nconst dot = '.'.charCodeAt(0);\n\nmodule.exports = function unit(value) {\n  let pos = 0;\n  const length = value.length;\n  let dotted = false;\n  let containsNumber = false;\n  let code;\n  let number = '';\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code >= 48 && code <= 57) {\n      number += value[pos];\n      containsNumber = true;\n    } else if (code === dot) {\n      if (dotted) {\n        break;\n      }\n\n      dotted = true;\n      number += value[pos];\n    } else if (code === plus || code === minus) {\n      if (pos !== 0) {\n        break;\n      }\n\n      number += value[pos];\n    } else {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  return containsNumber ? {\n    number,\n    unit: value.slice(pos)\n  } : false;\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/is-color-stop/util/unit.js"],"names":["minus","charCodeAt","plus","dot","module","exports","unit","value","pos","length","dotted","containsNumber","code","number","slice"],"mappings":"AAAA;AAEA;;;;;AAKA,MAAMA,KAAK,GAAG,IAAIC,UAAJ,CAAe,CAAf,CAAd;AACA,MAAMC,IAAI,GAAG,IAAID,UAAJ,CAAe,CAAf,CAAb;AACA,MAAME,GAAG,GAAG,IAAIF,UAAJ,CAAe,CAAf,CAAZ;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACpC,MAAIC,GAAG,GAAG,CAAV;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;AACA,MAAIC,MAAM,GAAG,KAAb;AACA,MAAIC,cAAc,GAAG,KAArB;AACA,MAAIC,IAAJ;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,SAAOL,GAAG,GAAGC,MAAb,EAAqB;AACnBG,IAAAA,IAAI,GAAGL,KAAK,CAACN,UAAN,CAAiBO,GAAjB,CAAP;;AAEA,QAAII,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAI,EAA1B,EAA8B;AAC5BC,MAAAA,MAAM,IAAIN,KAAK,CAACC,GAAD,CAAf;AACAG,MAAAA,cAAc,GAAG,IAAjB;AACD,KAHD,MAGO,IAAIC,IAAI,KAAKT,GAAb,EAAkB;AACvB,UAAIO,MAAJ,EAAY;AACV;AACD;;AACDA,MAAAA,MAAM,GAAG,IAAT;AACAG,MAAAA,MAAM,IAAIN,KAAK,CAACC,GAAD,CAAf;AACD,KANM,MAMA,IAAII,IAAI,KAAKV,IAAT,IAAiBU,IAAI,KAAKZ,KAA9B,EAAqC;AAC1C,UAAIQ,GAAG,KAAK,CAAZ,EAAe;AACb;AACD;;AACDK,MAAAA,MAAM,IAAIN,KAAK,CAACC,GAAD,CAAf;AACD,KALM,MAKA;AACL;AACD;;AAEDA,IAAAA,GAAG,IAAI,CAAP;AACD;;AAED,SAAOG,cAAc,GAAG;AACtBE,IAAAA,MADsB;AAEtBP,IAAAA,IAAI,EAAEC,KAAK,CAACO,KAAN,CAAYN,GAAZ;AAFgB,GAAH,GAGjB,KAHJ;AAID,CApCD","sourcesContent":["'use strict';\n\n/**\n * https://github.com/TrySound/postcss-value-parser/blob/fc679a7e17877841ff9fe455722280b65abd4f28/lib/unit.js\n * parse node -> number and unit\n */\n\nconst minus = '-'.charCodeAt(0);\nconst plus = '+'.charCodeAt(0);\nconst dot = '.'.charCodeAt(0);\n\nmodule.exports = function unit(value) {\n  let pos = 0;\n  const length = value.length;\n  let dotted = false;\n  let containsNumber = false;\n  let code;\n  let number = '';\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code >= 48 && code <= 57) {\n      number += value[pos];\n      containsNumber = true;\n    } else if (code === dot) {\n      if (dotted) {\n        break;\n      }\n      dotted = true;\n      number += value[pos];\n    } else if (code === plus || code === minus) {\n      if (pos !== 0) {\n        break;\n      }\n      number += value[pos];\n    } else {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  return containsNumber ? {\n    number,\n    unit: value.slice(pos),\n  } : false;\n};\n"]},"metadata":{},"sourceType":"script"}