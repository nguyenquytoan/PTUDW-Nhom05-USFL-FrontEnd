{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _postcssSelectorParser = _interopRequireDefault(require(\"postcss-selector-parser\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction nodeIsInsensitiveAttribute(node) {\n  return node.type === 'attribute' && node.insensitive;\n}\n\nfunction selectorHasInsensitiveAttribute(selector) {\n  return selector.some(nodeIsInsensitiveAttribute);\n}\n\nfunction transformString(strings, charPos, string) {\n  var char = string.charAt(charPos);\n\n  if (char === '') {\n    return strings;\n  }\n\n  var newStrings = strings.map(function (x) {\n    return x + char;\n  });\n  var upperChar = char.toLocaleUpperCase();\n\n  if (upperChar !== char) {\n    newStrings = newStrings.concat(strings.map(function (x) {\n      return x + upperChar;\n    }));\n  }\n\n  return transformString(newStrings, charPos + 1, string);\n}\n\nfunction createSensitiveAtributes(attribute) {\n  var attributes = transformString([''], 0, attribute.value);\n  return attributes.map(function (x) {\n    var newAttribute = attribute.clone({\n      spaces: {\n        after: attribute.spaces.after,\n        before: attribute.spaces.before\n      },\n      insensitive: false\n    });\n    newAttribute.setValue(x);\n    return newAttribute;\n  });\n}\n\nfunction createNewSelectors(selector) {\n  var newSelectors = [_postcssSelectorParser.default.selector()];\n  selector.walk(function (node) {\n    if (!nodeIsInsensitiveAttribute(node)) {\n      newSelectors.forEach(function (newSelector) {\n        newSelector.append(node.clone());\n      });\n      return;\n    }\n\n    var sensitiveAttributes = createSensitiveAtributes(node);\n    var newSelectorsWithSensitiveAttributes = [];\n    sensitiveAttributes.forEach(function (newNode) {\n      newSelectors.forEach(function (newSelector) {\n        var newSelectorWithNewNode = newSelector.clone();\n        newSelectorWithNewNode.append(newNode);\n        newSelectorsWithSensitiveAttributes.push(newSelectorWithNewNode);\n      });\n    });\n    newSelectors = newSelectorsWithSensitiveAttributes;\n  });\n  return newSelectors;\n}\n\nfunction transform(selectors) {\n  var newSelectors = [];\n  selectors.each(function (selector) {\n    if (selectorHasInsensitiveAttribute(selector)) {\n      newSelectors = newSelectors.concat(createNewSelectors(selector));\n      selector.remove();\n    }\n  });\n\n  if (newSelectors.length) {\n    newSelectors.forEach(function (newSelector) {\n      return selectors.append(newSelector);\n    });\n  }\n}\n\nvar caseInsensitiveRegExp = /i(\\s*\\/\\*[\\W\\w]*?\\*\\/)*\\s*\\]/;\n\nvar _default = _postcss.default.plugin('postcss-attribute-case-insensitive', function () {\n  return function (css) {\n    css.walkRules(caseInsensitiveRegExp, function (rule) {\n      rule.selector = (0, _postcssSelectorParser.default)(transform).processSync(rule.selector);\n    });\n  };\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-attribute-case-insensitive/dist/index.js"],"names":["Object","defineProperty","exports","value","default","_postcss","_interopRequireDefault","require","_postcssSelectorParser","obj","__esModule","nodeIsInsensitiveAttribute","node","type","insensitive","selectorHasInsensitiveAttribute","selector","some","transformString","strings","charPos","string","char","charAt","newStrings","map","x","upperChar","toLocaleUpperCase","concat","createSensitiveAtributes","attribute","attributes","newAttribute","clone","spaces","after","before","setValue","createNewSelectors","newSelectors","walk","forEach","newSelector","append","sensitiveAttributes","newSelectorsWithSensitiveAttributes","newNode","newSelectorWithNewNode","push","transform","selectors","each","remove","length","caseInsensitiveRegExp","_default","plugin","css","walkRules","rule","processSync"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,QAAQ,GAAGC,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAArC;;AAEA,IAAIC,sBAAsB,GAAGF,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAnD;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,SAASE,0BAAT,CAAoCC,IAApC,EAA0C;AACxC,SAAOA,IAAI,CAACC,IAAL,KAAc,WAAd,IAA6BD,IAAI,CAACE,WAAzC;AACD;;AAED,SAASC,+BAAT,CAAyCC,QAAzC,EAAmD;AACjD,SAAOA,QAAQ,CAACC,IAAT,CAAcN,0BAAd,CAAP;AACD;;AAED,SAASO,eAAT,CAAyBC,OAAzB,EAAkCC,OAAlC,EAA2CC,MAA3C,EAAmD;AACjD,MAAIC,IAAI,GAAGD,MAAM,CAACE,MAAP,CAAcH,OAAd,CAAX;;AAEA,MAAIE,IAAI,KAAK,EAAb,EAAiB;AACf,WAAOH,OAAP;AACD;;AAED,MAAIK,UAAU,GAAGL,OAAO,CAACM,GAAR,CAAY,UAAUC,CAAV,EAAa;AACxC,WAAOA,CAAC,GAAGJ,IAAX;AACD,GAFgB,CAAjB;AAGA,MAAIK,SAAS,GAAGL,IAAI,CAACM,iBAAL,EAAhB;;AAEA,MAAID,SAAS,KAAKL,IAAlB,EAAwB;AACtBE,IAAAA,UAAU,GAAGA,UAAU,CAACK,MAAX,CAAkBV,OAAO,CAACM,GAAR,CAAY,UAAUC,CAAV,EAAa;AACtD,aAAOA,CAAC,GAAGC,SAAX;AACD,KAF8B,CAAlB,CAAb;AAGD;;AAED,SAAOT,eAAe,CAACM,UAAD,EAAaJ,OAAO,GAAG,CAAvB,EAA0BC,MAA1B,CAAtB;AACD;;AAED,SAASS,wBAAT,CAAkCC,SAAlC,EAA6C;AAC3C,MAAIC,UAAU,GAAGd,eAAe,CAAC,CAAC,EAAD,CAAD,EAAO,CAAP,EAAUa,SAAS,CAAC5B,KAApB,CAAhC;AACA,SAAO6B,UAAU,CAACP,GAAX,CAAe,UAAUC,CAAV,EAAa;AACjC,QAAIO,YAAY,GAAGF,SAAS,CAACG,KAAV,CAAgB;AACjCC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAEL,SAAS,CAACI,MAAV,CAAiBC,KADlB;AAENC,QAAAA,MAAM,EAAEN,SAAS,CAACI,MAAV,CAAiBE;AAFnB,OADyB;AAKjCvB,MAAAA,WAAW,EAAE;AALoB,KAAhB,CAAnB;AAOAmB,IAAAA,YAAY,CAACK,QAAb,CAAsBZ,CAAtB;AACA,WAAOO,YAAP;AACD,GAVM,CAAP;AAWD;;AAED,SAASM,kBAAT,CAA4BvB,QAA5B,EAAsC;AACpC,MAAIwB,YAAY,GAAG,CAAChC,sBAAsB,CAACJ,OAAvB,CAA+BY,QAA/B,EAAD,CAAnB;AACAA,EAAAA,QAAQ,CAACyB,IAAT,CAAc,UAAU7B,IAAV,EAAgB;AAC5B,QAAI,CAACD,0BAA0B,CAACC,IAAD,CAA/B,EAAuC;AACrC4B,MAAAA,YAAY,CAACE,OAAb,CAAqB,UAAUC,WAAV,EAAuB;AAC1CA,QAAAA,WAAW,CAACC,MAAZ,CAAmBhC,IAAI,CAACsB,KAAL,EAAnB;AACD,OAFD;AAGA;AACD;;AAED,QAAIW,mBAAmB,GAAGf,wBAAwB,CAAClB,IAAD,CAAlD;AACA,QAAIkC,mCAAmC,GAAG,EAA1C;AACAD,IAAAA,mBAAmB,CAACH,OAApB,CAA4B,UAAUK,OAAV,EAAmB;AAC7CP,MAAAA,YAAY,CAACE,OAAb,CAAqB,UAAUC,WAAV,EAAuB;AAC1C,YAAIK,sBAAsB,GAAGL,WAAW,CAACT,KAAZ,EAA7B;AACAc,QAAAA,sBAAsB,CAACJ,MAAvB,CAA8BG,OAA9B;AACAD,QAAAA,mCAAmC,CAACG,IAApC,CAAyCD,sBAAzC;AACD,OAJD;AAKD,KAND;AAOAR,IAAAA,YAAY,GAAGM,mCAAf;AACD,GAlBD;AAmBA,SAAON,YAAP;AACD;;AAED,SAASU,SAAT,CAAmBC,SAAnB,EAA8B;AAC5B,MAAIX,YAAY,GAAG,EAAnB;AACAW,EAAAA,SAAS,CAACC,IAAV,CAAe,UAAUpC,QAAV,EAAoB;AACjC,QAAID,+BAA+B,CAACC,QAAD,CAAnC,EAA+C;AAC7CwB,MAAAA,YAAY,GAAGA,YAAY,CAACX,MAAb,CAAoBU,kBAAkB,CAACvB,QAAD,CAAtC,CAAf;AACAA,MAAAA,QAAQ,CAACqC,MAAT;AACD;AACF,GALD;;AAOA,MAAIb,YAAY,CAACc,MAAjB,EAAyB;AACvBd,IAAAA,YAAY,CAACE,OAAb,CAAqB,UAAUC,WAAV,EAAuB;AAC1C,aAAOQ,SAAS,CAACP,MAAV,CAAiBD,WAAjB,CAAP;AACD,KAFD;AAGD;AACF;;AAED,IAAIY,qBAAqB,GAAG,8BAA5B;;AAEA,IAAIC,QAAQ,GAAGnD,QAAQ,CAACD,OAAT,CAAiBqD,MAAjB,CAAwB,oCAAxB,EAA8D,YAAY;AACvF,SAAO,UAAUC,GAAV,EAAe;AACpBA,IAAAA,GAAG,CAACC,SAAJ,CAAcJ,qBAAd,EAAqC,UAAUK,IAAV,EAAgB;AACnDA,MAAAA,IAAI,CAAC5C,QAAL,GAAgB,CAAC,GAAGR,sBAAsB,CAACJ,OAA3B,EAAoC8C,SAApC,EAA+CW,WAA/C,CAA2DD,IAAI,CAAC5C,QAAhE,CAAhB;AACD,KAFD;AAGD,GAJD;AAKD,CANc,CAAf;;AAQAd,OAAO,CAACE,OAAR,GAAkBoD,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _postcssSelectorParser = _interopRequireDefault(require(\"postcss-selector-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction nodeIsInsensitiveAttribute(node) {\n  return node.type === 'attribute' && node.insensitive;\n}\n\nfunction selectorHasInsensitiveAttribute(selector) {\n  return selector.some(nodeIsInsensitiveAttribute);\n}\n\nfunction transformString(strings, charPos, string) {\n  var char = string.charAt(charPos);\n\n  if (char === '') {\n    return strings;\n  }\n\n  var newStrings = strings.map(function (x) {\n    return x + char;\n  });\n  var upperChar = char.toLocaleUpperCase();\n\n  if (upperChar !== char) {\n    newStrings = newStrings.concat(strings.map(function (x) {\n      return x + upperChar;\n    }));\n  }\n\n  return transformString(newStrings, charPos + 1, string);\n}\n\nfunction createSensitiveAtributes(attribute) {\n  var attributes = transformString([''], 0, attribute.value);\n  return attributes.map(function (x) {\n    var newAttribute = attribute.clone({\n      spaces: {\n        after: attribute.spaces.after,\n        before: attribute.spaces.before\n      },\n      insensitive: false\n    });\n    newAttribute.setValue(x);\n    return newAttribute;\n  });\n}\n\nfunction createNewSelectors(selector) {\n  var newSelectors = [_postcssSelectorParser.default.selector()];\n  selector.walk(function (node) {\n    if (!nodeIsInsensitiveAttribute(node)) {\n      newSelectors.forEach(function (newSelector) {\n        newSelector.append(node.clone());\n      });\n      return;\n    }\n\n    var sensitiveAttributes = createSensitiveAtributes(node);\n    var newSelectorsWithSensitiveAttributes = [];\n    sensitiveAttributes.forEach(function (newNode) {\n      newSelectors.forEach(function (newSelector) {\n        var newSelectorWithNewNode = newSelector.clone();\n        newSelectorWithNewNode.append(newNode);\n        newSelectorsWithSensitiveAttributes.push(newSelectorWithNewNode);\n      });\n    });\n    newSelectors = newSelectorsWithSensitiveAttributes;\n  });\n  return newSelectors;\n}\n\nfunction transform(selectors) {\n  var newSelectors = [];\n  selectors.each(function (selector) {\n    if (selectorHasInsensitiveAttribute(selector)) {\n      newSelectors = newSelectors.concat(createNewSelectors(selector));\n      selector.remove();\n    }\n  });\n\n  if (newSelectors.length) {\n    newSelectors.forEach(function (newSelector) {\n      return selectors.append(newSelector);\n    });\n  }\n}\n\nvar caseInsensitiveRegExp = /i(\\s*\\/\\*[\\W\\w]*?\\*\\/)*\\s*\\]/;\n\nvar _default = _postcss.default.plugin('postcss-attribute-case-insensitive', function () {\n  return function (css) {\n    css.walkRules(caseInsensitiveRegExp, function (rule) {\n      rule.selector = (0, _postcssSelectorParser.default)(transform).processSync(rule.selector);\n    });\n  };\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}