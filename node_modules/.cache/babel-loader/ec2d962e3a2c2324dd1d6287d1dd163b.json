{"ast":null,"code":"/*\n ** © 2014 by Philipp Dunkel <pip@pipobscure.com>\n ** Licensed under MIT License.\n */\n\n/* jshint node:true */\n'use strict';\n\nif (process.platform !== 'darwin') throw new Error('Module \\'fsevents\\' is not compatible with platform \\'' + process.platform + '\\'');\n\nvar Native = require(\"bindings\")(\"fse\");\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar fs = require('fs');\n\nvar inherits = require('util').inherits;\n\nfunction FSEvents(path, handler) {\n  EventEmitter.call(this);\n  Object.defineProperty(this, '_impl', {\n    value: new Native.FSEvents(String(path || ''), handler),\n    enumerable: false,\n    writable: false\n  });\n}\n\ninherits(FSEvents, EventEmitter);\nproxies(FSEvents, Native.FSEvents);\nmodule.exports = watch;\nmodule.exports.getInfo = getInfo;\nmodule.exports.FSEvents = Native.FSEvents;\nmodule.exports.Constants = Native.Constants;\nvar defer = global.setImmediate || process.nextTick;\n\nfunction watch(path) {\n  var fse = new FSEvents(String(path || ''), handler);\n  EventEmitter.call(fse);\n  return fse;\n\n  function handler(path, flags, id) {\n    defer(function () {\n      fse.emit('fsevent', path, flags, id);\n      var info = getInfo(path, flags);\n      info.id = id;\n\n      if (info.event === 'moved') {\n        fs.stat(info.path, function (err, stat) {\n          info.event = err || !stat ? 'moved-out' : 'moved-in';\n          fse.emit('change', path, info);\n          fse.emit(info.event, path, info);\n        });\n      } else {\n        fse.emit('change', path, info);\n        fse.emit(info.event, path, info);\n      }\n    });\n  }\n}\n\nfunction proxies(ctor, target) {\n  Object.keys(target.prototype).filter(function (key) {\n    return typeof target.prototype[key] === 'function';\n  }).forEach(function (key) {\n    ctor.prototype[key] = function () {\n      this._impl[key].apply(this._impl, arguments);\n\n      return this;\n    };\n  });\n}\n\nfunction getFileType(flags) {\n  if (Native.Constants.kFSEventStreamEventFlagItemIsFile & flags) return 'file';\n  if (Native.Constants.kFSEventStreamEventFlagItemIsDir & flags) return 'directory';\n  if (Native.Constants.kFSEventStreamEventFlagItemIsSymlink & flags) return 'symlink';\n}\n\nfunction getEventType(flags) {\n  if (Native.Constants.kFSEventStreamEventFlagItemRemoved & flags) return 'deleted';\n  if (Native.Constants.kFSEventStreamEventFlagItemRenamed & flags) return 'moved';\n  if (Native.Constants.kFSEventStreamEventFlagItemCreated & flags) return 'created';\n  if (Native.Constants.kFSEventStreamEventFlagItemModified & flags) return 'modified';\n  if (Native.Constants.kFSEventStreamEventFlagRootChanged & flags) return 'root-changed';\n  return 'unknown';\n}\n\nfunction getFileChanges(flags) {\n  return {\n    inode: !!(Native.Constants.kFSEventStreamEventFlagItemInodeMetaMod & flags),\n    finder: !!(Native.Constants.kFSEventStreamEventFlagItemFinderInfoMod & flags),\n    access: !!(Native.Constants.kFSEventStreamEventFlagItemChangeOwner & flags),\n    xattrs: !!(Native.Constants.kFSEventStreamEventFlagItemXattrMod & flags)\n  };\n}\n\nfunction getInfo(path, flags) {\n  return {\n    path: path,\n    event: getEventType(flags),\n    type: getFileType(flags),\n    changes: getFileChanges(flags),\n    flags: flags\n  };\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/webpack-dev-server/node_modules/fsevents/fsevents.js"],"names":["process","platform","Error","Native","require","EventEmitter","fs","inherits","FSEvents","path","handler","call","Object","defineProperty","value","String","enumerable","writable","proxies","module","exports","watch","getInfo","Constants","defer","global","setImmediate","nextTick","fse","flags","id","emit","info","event","stat","err","ctor","target","keys","prototype","filter","key","forEach","_impl","apply","arguments","getFileType","kFSEventStreamEventFlagItemIsFile","kFSEventStreamEventFlagItemIsDir","kFSEventStreamEventFlagItemIsSymlink","getEventType","kFSEventStreamEventFlagItemRemoved","kFSEventStreamEventFlagItemRenamed","kFSEventStreamEventFlagItemCreated","kFSEventStreamEventFlagItemModified","kFSEventStreamEventFlagRootChanged","getFileChanges","inode","kFSEventStreamEventFlagItemInodeMetaMod","finder","kFSEventStreamEventFlagItemFinderInfoMod","access","kFSEventStreamEventFlagItemChangeOwner","xattrs","kFSEventStreamEventFlagItemXattrMod","type","changes"],"mappings":"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","sourcesContent":["/*\n ** © 2014 by Philipp Dunkel <pip@pipobscure.com>\n ** Licensed under MIT License.\n */\n\n/* jshint node:true */\n'use strict';\n\nif (process.platform !== 'darwin')\n  throw new Error('Module \\'fsevents\\' is not compatible with platform \\'' + process.platform + '\\'');\n\nvar Native = require(\"bindings\")(\"fse\");\n\nvar EventEmitter = require('events').EventEmitter;\nvar fs = require('fs');\nvar inherits = require('util').inherits;\n\nfunction FSEvents(path, handler) {\n  EventEmitter.call(this);\n\n  Object.defineProperty(this, '_impl', {\n    value: new Native.FSEvents(String(path || ''), handler),\n    enumerable: false,\n    writable: false\n  });\n}\n\ninherits(FSEvents, EventEmitter);\nproxies(FSEvents, Native.FSEvents);\n\nmodule.exports = watch;\nmodule.exports.getInfo = getInfo;\nmodule.exports.FSEvents = Native.FSEvents;\nmodule.exports.Constants = Native.Constants;\n\nvar defer = global.setImmediate || process.nextTick;\n\nfunction watch(path) {\n  var fse = new FSEvents(String(path || ''), handler);\n  EventEmitter.call(fse);\n  return fse;\n\n  function handler(path, flags, id) {\n    defer(function() {\n      fse.emit('fsevent', path, flags, id);\n      var info = getInfo(path, flags);\n      info.id = id;\n      if (info.event === 'moved') {\n        fs.stat(info.path, function(err, stat) {\n          info.event = (err || !stat) ? 'moved-out' : 'moved-in';\n          fse.emit('change', path, info);\n          fse.emit(info.event, path, info);\n        });\n      } else {\n        fse.emit('change', path, info);\n        fse.emit(info.event, path, info);\n      }\n    });\n  }\n}\n\nfunction proxies(ctor, target) {\n  Object.keys(target.prototype).filter(function(key) {\n    return typeof target.prototype[key] === 'function';\n  }).forEach(function(key) {\n    ctor.prototype[key] = function() {\n      this._impl[key].apply(this._impl, arguments);\n      return this;\n    }\n  });\n}\n\nfunction getFileType(flags) {\n  if (Native.Constants.kFSEventStreamEventFlagItemIsFile & flags) return 'file';\n  if (Native.Constants.kFSEventStreamEventFlagItemIsDir & flags) return 'directory';\n  if (Native.Constants.kFSEventStreamEventFlagItemIsSymlink & flags) return 'symlink';\n}\n\nfunction getEventType(flags) {\n  if (Native.Constants.kFSEventStreamEventFlagItemRemoved & flags) return 'deleted';\n  if (Native.Constants.kFSEventStreamEventFlagItemRenamed & flags) return 'moved';\n  if (Native.Constants.kFSEventStreamEventFlagItemCreated & flags) return 'created';\n  if (Native.Constants.kFSEventStreamEventFlagItemModified & flags) return 'modified';\n  if (Native.Constants.kFSEventStreamEventFlagRootChanged & flags) return 'root-changed';\n\n  return 'unknown';\n}\n\nfunction getFileChanges(flags) {\n  return {\n    inode: !! (Native.Constants.kFSEventStreamEventFlagItemInodeMetaMod & flags),\n    finder: !! (Native.Constants.kFSEventStreamEventFlagItemFinderInfoMod & flags),\n    access: !! (Native.Constants.kFSEventStreamEventFlagItemChangeOwner & flags),\n    xattrs: !! (Native.Constants.kFSEventStreamEventFlagItemXattrMod & flags)\n  };\n}\n\nfunction getInfo(path, flags) {\n  return {\n    path: path,\n    event: getEventType(flags),\n    type: getFileType(flags),\n    changes: getFileChanges(flags),\n    flags: flags\n  };\n}\n"]},"metadata":{},"sourceType":"script"}