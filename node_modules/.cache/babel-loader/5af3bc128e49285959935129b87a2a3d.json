{"ast":null,"code":"'use strict';\n\nvar path = require('path'),\n    fs = require('fs'),\n    objectPath = require('object-path');\n\nvar getContextDirectory = require('./get-context-directory');\n/**\n * Infer the compilation output directory from options.\n * Relative paths are resolved against the compilation context (or process.cwd() where not specified).\n * @this {{options: object}} A loader or compilation\n * @returns {undefined|string} The output path string, where defined\n */\n\n\nfunction getOutputDirectory() {\n  /* jshint validthis:true */\n  var base = objectPath.get(this, 'options.output.directory'),\n      absBase = !!base && path.resolve(getContextDirectory.call(this), base),\n      isValid = !!absBase && fs.existsSync(absBase) && fs.statSync(absBase).isDirectory();\n  return isValid ? absBase : undefined;\n}\n\nmodule.exports = getOutputDirectory;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/adjust-sourcemap-loader/codec/utility/get-output-directory.js"],"names":["path","require","fs","objectPath","getContextDirectory","getOutputDirectory","base","get","absBase","resolve","call","isValid","existsSync","statSync","isDirectory","undefined","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAASC,OAAO,CAAC,MAAD,CAAxB;AAAA,IACIC,EAAE,GAAWD,OAAO,CAAC,IAAD,CADxB;AAAA,IAEIE,UAAU,GAAGF,OAAO,CAAC,aAAD,CAFxB;;AAIA,IAAIG,mBAAmB,GAAGH,OAAO,CAAC,yBAAD,CAAjC;AAEA;;;;;;;;AAMA,SAASI,kBAAT,GAA8B;AAC5B;AACA,MAAIC,IAAI,GAAMH,UAAU,CAACI,GAAX,CAAe,IAAf,EAAqB,0BAArB,CAAd;AAAA,MACIC,OAAO,GAAG,CAAC,CAACF,IAAF,IAAUN,IAAI,CAACS,OAAL,CAAaL,mBAAmB,CAACM,IAApB,CAAyB,IAAzB,CAAb,EAA6CJ,IAA7C,CADxB;AAAA,MAEIK,OAAO,GAAG,CAAC,CAACH,OAAF,IAAaN,EAAE,CAACU,UAAH,CAAcJ,OAAd,CAAb,IAAuCN,EAAE,CAACW,QAAH,CAAYL,OAAZ,EAAqBM,WAArB,EAFrD;AAGA,SAAOH,OAAO,GAAGH,OAAH,GAAaO,SAA3B;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBZ,kBAAjB","sourcesContent":["'use strict';\n\nvar path       = require('path'),\n    fs         = require('fs'),\n    objectPath = require('object-path');\n\nvar getContextDirectory = require('./get-context-directory');\n\n/**\n * Infer the compilation output directory from options.\n * Relative paths are resolved against the compilation context (or process.cwd() where not specified).\n * @this {{options: object}} A loader or compilation\n * @returns {undefined|string} The output path string, where defined\n */\nfunction getOutputDirectory() {\n  /* jshint validthis:true */\n  var base    = objectPath.get(this, 'options.output.directory'),\n      absBase = !!base && path.resolve(getContextDirectory.call(this), base),\n      isValid = !!absBase && fs.existsSync(absBase) && fs.statSync(absBase).isDirectory();\n  return isValid ? absBase : undefined;\n}\n\nmodule.exports = getOutputDirectory;"]},"metadata":{},"sourceType":"script"}