{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar subscribeToArray_1 = require(\"./subscribeToArray\");\n\nvar subscribeToPromise_1 = require(\"./subscribeToPromise\");\n\nvar subscribeToIterable_1 = require(\"./subscribeToIterable\");\n\nvar subscribeToObservable_1 = require(\"./subscribeToObservable\");\n\nvar isArrayLike_1 = require(\"./isArrayLike\");\n\nvar isPromise_1 = require(\"./isPromise\");\n\nvar isObject_1 = require(\"./isObject\");\n\nvar iterator_1 = require(\"../symbol/iterator\");\n\nvar observable_1 = require(\"../symbol/observable\");\n\nexports.subscribeTo = function (result) {\n  if (!!result && typeof result[observable_1.observable] === 'function') {\n    return subscribeToObservable_1.subscribeToObservable(result);\n  } else if (isArrayLike_1.isArrayLike(result)) {\n    return subscribeToArray_1.subscribeToArray(result);\n  } else if (isPromise_1.isPromise(result)) {\n    return subscribeToPromise_1.subscribeToPromise(result);\n  } else if (!!result && typeof result[iterator_1.iterator] === 'function') {\n    return subscribeToIterable_1.subscribeToIterable(result);\n  } else {\n    var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n    var msg = \"You provided \" + value + \" where a stream was expected.\" + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};","map":{"version":3,"sources":["../../src/internal/util/subscribeTo.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAIa,OAAA,CAAA,WAAA,GAAc,UAAI,MAAJ,EAA8B;AACvD,MAAI,CAAC,CAAC,MAAF,IAAY,OAAO,MAAM,CAAC,YAAA,CAAA,UAAD,CAAb,KAAqC,UAArD,EAAiE;AAC/D,WAAO,uBAAA,CAAA,qBAAA,CAAsB,MAAtB,CAAP;AACD,GAFD,MAEO,IAAI,aAAA,CAAA,WAAA,CAAY,MAAZ,CAAJ,EAAyB;AAC9B,WAAO,kBAAA,CAAA,gBAAA,CAAiB,MAAjB,CAAP;AACD,GAFM,MAEA,IAAI,WAAA,CAAA,SAAA,CAAU,MAAV,CAAJ,EAAuB;AAC5B,WAAO,oBAAA,CAAA,kBAAA,CAAmB,MAAnB,CAAP;AACD,GAFM,MAEA,IAAI,CAAC,CAAC,MAAF,IAAY,OAAO,MAAM,CAAC,UAAA,CAAA,QAAD,CAAb,KAAmC,UAAnD,EAA+D;AACpE,WAAO,qBAAA,CAAA,mBAAA,CAAoB,MAApB,CAAP;AACD,GAFM,MAEA;AACL,QAAM,KAAK,GAAG,UAAA,CAAA,QAAA,CAAS,MAAT,IAAmB,mBAAnB,GAAyC,MAAI,MAAJ,GAAU,GAAjE;AACA,QAAM,GAAG,GAAG,kBAAgB,KAAhB,GAAqB,+BAArB,GACR,8DADJ;AAEA,UAAM,IAAI,SAAJ,CAAc,GAAd,CAAN;AACD;AACF,CAfY","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar subscribeToArray_1 = require(\"./subscribeToArray\");\nvar subscribeToPromise_1 = require(\"./subscribeToPromise\");\nvar subscribeToIterable_1 = require(\"./subscribeToIterable\");\nvar subscribeToObservable_1 = require(\"./subscribeToObservable\");\nvar isArrayLike_1 = require(\"./isArrayLike\");\nvar isPromise_1 = require(\"./isPromise\");\nvar isObject_1 = require(\"./isObject\");\nvar iterator_1 = require(\"../symbol/iterator\");\nvar observable_1 = require(\"../symbol/observable\");\nexports.subscribeTo = function (result) {\n    if (!!result && typeof result[observable_1.observable] === 'function') {\n        return subscribeToObservable_1.subscribeToObservable(result);\n    }\n    else if (isArrayLike_1.isArrayLike(result)) {\n        return subscribeToArray_1.subscribeToArray(result);\n    }\n    else if (isPromise_1.isPromise(result)) {\n        return subscribeToPromise_1.subscribeToPromise(result);\n    }\n    else if (!!result && typeof result[iterator_1.iterator] === 'function') {\n        return subscribeToIterable_1.subscribeToIterable(result);\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map"]},"metadata":{},"sourceType":"script"}