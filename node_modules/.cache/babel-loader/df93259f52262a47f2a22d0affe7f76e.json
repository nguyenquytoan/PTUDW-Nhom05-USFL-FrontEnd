{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loader;\nexports.raw = void 0;\n\nvar _loaderUtils = require(\"loader-utils\");\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _mime = _interopRequireDefault(require(\"mime\"));\n\nvar _normalizeFallback = _interopRequireDefault(require(\"./utils/normalizeFallback\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable\n  global-require,\n  no-param-reassign,\n  prefer-destructuring,\n  import/no-dynamic-require,\n*/\n\n\nfunction shouldTransform(limit, size) {\n  if (typeof limit === 'boolean') {\n    return limit;\n  }\n\n  if (typeof limit === 'string') {\n    return size <= parseInt(limit, 10);\n  }\n\n  if (typeof limit === 'number') {\n    return size <= limit;\n  }\n\n  return true;\n}\n\nfunction loader(src) {\n  // Loader Options\n  const options = (0, _loaderUtils.getOptions)(this) || {};\n  (0, _schemaUtils.default)(_options.default, options, {\n    name: 'URL Loader',\n    baseDataPath: 'options'\n  }); // No limit or within the specified limit\n\n  if (shouldTransform(options.limit, src.length)) {\n    const file = this.resourcePath; // Get MIME type\n\n    const mimetype = options.mimetype || _mime.default.getType(file);\n\n    if (typeof src === 'string') {\n      src = Buffer.from(src);\n    }\n\n    return `${options.esModules ? 'export default' : 'module.exports ='} ${JSON.stringify(`data:${mimetype || ''};base64,${src.toString('base64')}`)}`;\n  } // Normalize the fallback.\n\n\n  const {\n    loader: fallbackLoader,\n    options: fallbackOptions\n  } = (0, _normalizeFallback.default)(options.fallback, options); // Require the fallback.\n\n  const fallback = require(fallbackLoader); // Call the fallback, passing a copy of the loader context. The copy has the query replaced. This way, the fallback\n  // loader receives the query which was intended for it instead of the query which was intended for url-loader.\n\n\n  const fallbackLoaderContext = Object.assign({}, this, {\n    query: fallbackOptions\n  });\n  return fallback.call(fallbackLoaderContext, src);\n} // Loader Mode\n\n\nconst raw = true;\nexports.raw = raw;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/url-loader/dist/index.js"],"names":["Object","defineProperty","exports","value","default","loader","raw","_loaderUtils","require","_schemaUtils","_interopRequireDefault","_mime","_normalizeFallback","_options","obj","__esModule","shouldTransform","limit","size","parseInt","src","options","getOptions","name","baseDataPath","length","file","resourcePath","mimetype","getType","Buffer","from","esModules","JSON","stringify","toString","fallbackLoader","fallbackOptions","fallback","fallbackLoaderContext","assign","query","call"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loader;\nexports.raw = void 0;\n\nvar _loaderUtils = require(\"loader-utils\");\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _mime = _interopRequireDefault(require(\"mime\"));\n\nvar _normalizeFallback = _interopRequireDefault(require(\"./utils/normalizeFallback\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable\n  global-require,\n  no-param-reassign,\n  prefer-destructuring,\n  import/no-dynamic-require,\n*/\nfunction shouldTransform(limit, size) {\n  if (typeof limit === 'boolean') {\n    return limit;\n  }\n\n  if (typeof limit === 'string') {\n    return size <= parseInt(limit, 10);\n  }\n\n  if (typeof limit === 'number') {\n    return size <= limit;\n  }\n\n  return true;\n}\n\nfunction loader(src) {\n  // Loader Options\n  const options = (0, _loaderUtils.getOptions)(this) || {};\n  (0, _schemaUtils.default)(_options.default, options, {\n    name: 'URL Loader',\n    baseDataPath: 'options'\n  }); // No limit or within the specified limit\n\n  if (shouldTransform(options.limit, src.length)) {\n    const file = this.resourcePath; // Get MIME type\n\n    const mimetype = options.mimetype || _mime.default.getType(file);\n\n    if (typeof src === 'string') {\n      src = Buffer.from(src);\n    }\n\n    return `${options.esModules ? 'export default' : 'module.exports ='} ${JSON.stringify(`data:${mimetype || ''};base64,${src.toString('base64')}`)}`;\n  } // Normalize the fallback.\n\n\n  const {\n    loader: fallbackLoader,\n    options: fallbackOptions\n  } = (0, _normalizeFallback.default)(options.fallback, options); // Require the fallback.\n\n  const fallback = require(fallbackLoader); // Call the fallback, passing a copy of the loader context. The copy has the query replaced. This way, the fallback\n  // loader receives the query which was intended for it instead of the query which was intended for url-loader.\n\n\n  const fallbackLoaderContext = Object.assign({}, this, {\n    query: fallbackOptions\n  });\n  return fallback.call(fallbackLoaderContext, src);\n} // Loader Mode\n\n\nconst raw = true;\nexports.raw = raw;"]},"metadata":{},"sourceType":"script"}