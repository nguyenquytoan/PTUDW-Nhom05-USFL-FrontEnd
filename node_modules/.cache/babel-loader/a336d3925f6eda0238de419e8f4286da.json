{"ast":null,"code":"'use strict';\n\nvar _path = _interopRequireDefault(require('path'));\n\nvar _jestUtil = require('jest-util');\n\nvar _each = _interopRequireDefault(require('./each'));\n\nvar _errorOnPrivate = require('./errorOnPrivate');\n\nvar _reporter = _interopRequireDefault(require('./reporter'));\n\nvar _jasmineAsyncInstall = _interopRequireDefault(require('./jasmineAsyncInstall'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nconst JASMINE = require.resolve('./jasmine/jasmineLight');\n\nfunction jasmine2(_x, _x2, _x3, _x4, _x5) {\n  return _jasmine.apply(this, arguments);\n}\n\nfunction _jasmine() {\n  _jasmine = _asyncToGenerator(function* (globalConfig, config, environment, runtime, testPath) {\n    const reporter = new _reporter.default(globalConfig, config, testPath);\n    const jasmineFactory = runtime.requireInternalModule(JASMINE);\n    const jasmine = jasmineFactory.create({\n      process,\n      testPath,\n      testTimeout: globalConfig.testTimeout\n    });\n    const env = jasmine.getEnv();\n    const jasmineInterface = jasmineFactory.interface(jasmine, env);\n    Object.assign(environment.global, jasmineInterface);\n    env.addReporter(jasmineInterface.jsApiReporter); // TODO: Remove config option if V8 exposes some way of getting location of caller\n    // in a future version\n\n    if (config.testLocationInResults === true) {\n      const originalIt = environment.global.it;\n\n      environment.global.it = (...args) => {\n        const stack = (0, _jestUtil.getCallsite)(1, runtime.getSourceMaps());\n        const it = originalIt(...args); // @ts-ignore\n\n        it.result.__callsite = stack;\n        return it;\n      };\n\n      const originalXit = environment.global.xit;\n\n      environment.global.xit = (...args) => {\n        const stack = (0, _jestUtil.getCallsite)(1, runtime.getSourceMaps());\n        const xit = originalXit(...args); // @ts-ignore\n\n        xit.result.__callsite = stack;\n        return xit;\n      };\n\n      const originalFit = environment.global.fit;\n\n      environment.global.fit = (...args) => {\n        const stack = (0, _jestUtil.getCallsite)(1, runtime.getSourceMaps());\n        const fit = originalFit(...args); // @ts-ignore\n\n        fit.result.__callsite = stack;\n        return fit;\n      };\n    }\n\n    (0, _jasmineAsyncInstall.default)(globalConfig, environment.global);\n    (0, _each.default)(environment);\n    environment.global.test = environment.global.it;\n    environment.global.it.only = environment.global.fit;\n    environment.global.it.todo = env.todo;\n    environment.global.it.skip = environment.global.xit;\n    environment.global.xtest = environment.global.xit;\n    environment.global.describe.skip = environment.global.xdescribe;\n    environment.global.describe.only = environment.global.fdescribe;\n\n    if (config.timers === 'fake') {\n      environment.fakeTimers.useFakeTimers();\n    }\n\n    env.beforeEach(() => {\n      if (config.resetModules) {\n        runtime.resetModules();\n      }\n\n      if (config.clearMocks) {\n        runtime.clearAllMocks();\n      }\n\n      if (config.resetMocks) {\n        runtime.resetAllMocks();\n\n        if (config.timers === 'fake') {\n          environment.fakeTimers.useFakeTimers();\n        }\n      }\n\n      if (config.restoreMocks) {\n        runtime.restoreAllMocks();\n      }\n    });\n    env.addReporter(reporter);\n    runtime.requireInternalModule(_path.default.resolve(__dirname, './jestExpect.js')).default({\n      expand: globalConfig.expand\n    });\n\n    if (globalConfig.errorOnDeprecated) {\n      (0, _errorOnPrivate.installErrorOnPrivate)(environment.global);\n    } else {\n      Object.defineProperty(jasmine, 'DEFAULT_TIMEOUT_INTERVAL', {\n        configurable: true,\n        enumerable: true,\n\n        get() {\n          return this._DEFAULT_TIMEOUT_INTERVAL;\n        },\n\n        set(value) {\n          this._DEFAULT_TIMEOUT_INTERVAL = value;\n        }\n\n      });\n    }\n\n    const snapshotState = runtime.requireInternalModule(_path.default.resolve(__dirname, './setup_jest_globals.js')).default({\n      config,\n      globalConfig,\n      localRequire: runtime.requireModule.bind(runtime),\n      testPath\n    });\n    config.setupFilesAfterEnv.forEach(path => runtime.requireModule(path));\n\n    if (globalConfig.enabledTestsMap) {\n      env.specFilter = spec => {\n        const suiteMap = globalConfig.enabledTestsMap && globalConfig.enabledTestsMap[spec.result.testPath];\n        return suiteMap && suiteMap[spec.result.fullName];\n      };\n    } else if (globalConfig.testNamePattern) {\n      const testNameRegex = new RegExp(globalConfig.testNamePattern, 'i');\n\n      env.specFilter = spec => testNameRegex.test(spec.getFullName());\n    }\n\n    runtime.requireModule(testPath);\n    yield env.execute();\n    const results = yield reporter.getResults();\n    return addSnapshotData(results, snapshotState);\n  });\n  return _jasmine.apply(this, arguments);\n}\n\nconst addSnapshotData = (results, snapshotState) => {\n  results.testResults.forEach(({\n    fullName,\n    status\n  }) => {\n    if (status === 'pending' || status === 'failed') {\n      // if test is skipped or failed, we don't want to mark\n      // its snapshots as obsolete.\n      snapshotState.markSnapshotsAsCheckedForTest(fullName);\n    }\n  });\n  const uncheckedCount = snapshotState.getUncheckedCount();\n  const uncheckedKeys = snapshotState.getUncheckedKeys();\n\n  if (uncheckedCount) {\n    snapshotState.removeUncheckedKeys();\n  }\n\n  const status = snapshotState.save();\n  results.snapshot.fileDeleted = status.deleted;\n  results.snapshot.added = snapshotState.added;\n  results.snapshot.matched = snapshotState.matched;\n  results.snapshot.unmatched = snapshotState.unmatched;\n  results.snapshot.updated = snapshotState.updated;\n  results.snapshot.unchecked = !status.deleted ? uncheckedCount : 0; // Copy the array to prevent memory leaks\n\n  results.snapshot.uncheckedKeys = Array.from(uncheckedKeys);\n  return results;\n}; // eslint-disable-next-line no-redeclare\n\n\nmodule.exports = jasmine2;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-jasmine2/build/index.js"],"names":["_path","_interopRequireDefault","require","_jestUtil","_each","_errorOnPrivate","_reporter","_jasmineAsyncInstall","obj","__esModule","default","Symbol","global","Promise","for","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","JASMINE","jasmine2","_x","_x2","_x3","_x4","_x5","_jasmine","globalConfig","config","environment","runtime","testPath","reporter","jasmineFactory","requireInternalModule","jasmine","create","process","testTimeout","env","getEnv","jasmineInterface","interface","Object","assign","addReporter","jsApiReporter","testLocationInResults","originalIt","it","stack","getCallsite","getSourceMaps","result","__callsite","originalXit","xit","originalFit","fit","test","only","todo","skip","xtest","describe","xdescribe","fdescribe","timers","fakeTimers","useFakeTimers","beforeEach","resetModules","clearMocks","clearAllMocks","resetMocks","resetAllMocks","restoreMocks","restoreAllMocks","__dirname","expand","errorOnDeprecated","installErrorOnPrivate","defineProperty","configurable","enumerable","get","_DEFAULT_TIMEOUT_INTERVAL","set","snapshotState","localRequire","requireModule","bind","setupFilesAfterEnv","forEach","path","enabledTestsMap","specFilter","spec","suiteMap","fullName","testNamePattern","testNameRegex","RegExp","getFullName","execute","results","getResults","addSnapshotData","testResults","status","markSnapshotsAsCheckedForTest","uncheckedCount","getUncheckedCount","uncheckedKeys","getUncheckedKeys","removeUncheckedKeys","save","snapshot","fileDeleted","deleted","added","matched","unmatched","updated","unchecked","Array","from","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _path = _interopRequireDefault(require('path'));\n\nvar _jestUtil = require('jest-util');\n\nvar _each = _interopRequireDefault(require('./each'));\n\nvar _errorOnPrivate = require('./errorOnPrivate');\n\nvar _reporter = _interopRequireDefault(require('./reporter'));\n\nvar _jasmineAsyncInstall = _interopRequireDefault(\n  require('./jasmineAsyncInstall')\n);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function() {\n    var self = this,\n      args = arguments;\n    return new Promise(function(resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);\n      }\n      _next(undefined);\n    });\n  };\n}\n\nconst JASMINE = require.resolve('./jasmine/jasmineLight');\n\nfunction jasmine2(_x, _x2, _x3, _x4, _x5) {\n  return _jasmine.apply(this, arguments);\n}\n\nfunction _jasmine() {\n  _jasmine = _asyncToGenerator(function*(\n    globalConfig,\n    config,\n    environment,\n    runtime,\n    testPath\n  ) {\n    const reporter = new _reporter.default(globalConfig, config, testPath);\n    const jasmineFactory = runtime.requireInternalModule(JASMINE);\n    const jasmine = jasmineFactory.create({\n      process,\n      testPath,\n      testTimeout: globalConfig.testTimeout\n    });\n    const env = jasmine.getEnv();\n    const jasmineInterface = jasmineFactory.interface(jasmine, env);\n    Object.assign(environment.global, jasmineInterface);\n    env.addReporter(jasmineInterface.jsApiReporter); // TODO: Remove config option if V8 exposes some way of getting location of caller\n    // in a future version\n\n    if (config.testLocationInResults === true) {\n      const originalIt = environment.global.it;\n\n      environment.global.it = (...args) => {\n        const stack = (0, _jestUtil.getCallsite)(1, runtime.getSourceMaps());\n        const it = originalIt(...args); // @ts-ignore\n\n        it.result.__callsite = stack;\n        return it;\n      };\n\n      const originalXit = environment.global.xit;\n\n      environment.global.xit = (...args) => {\n        const stack = (0, _jestUtil.getCallsite)(1, runtime.getSourceMaps());\n        const xit = originalXit(...args); // @ts-ignore\n\n        xit.result.__callsite = stack;\n        return xit;\n      };\n\n      const originalFit = environment.global.fit;\n\n      environment.global.fit = (...args) => {\n        const stack = (0, _jestUtil.getCallsite)(1, runtime.getSourceMaps());\n        const fit = originalFit(...args); // @ts-ignore\n\n        fit.result.__callsite = stack;\n        return fit;\n      };\n    }\n\n    (0, _jasmineAsyncInstall.default)(globalConfig, environment.global);\n    (0, _each.default)(environment);\n    environment.global.test = environment.global.it;\n    environment.global.it.only = environment.global.fit;\n    environment.global.it.todo = env.todo;\n    environment.global.it.skip = environment.global.xit;\n    environment.global.xtest = environment.global.xit;\n    environment.global.describe.skip = environment.global.xdescribe;\n    environment.global.describe.only = environment.global.fdescribe;\n\n    if (config.timers === 'fake') {\n      environment.fakeTimers.useFakeTimers();\n    }\n\n    env.beforeEach(() => {\n      if (config.resetModules) {\n        runtime.resetModules();\n      }\n\n      if (config.clearMocks) {\n        runtime.clearAllMocks();\n      }\n\n      if (config.resetMocks) {\n        runtime.resetAllMocks();\n\n        if (config.timers === 'fake') {\n          environment.fakeTimers.useFakeTimers();\n        }\n      }\n\n      if (config.restoreMocks) {\n        runtime.restoreAllMocks();\n      }\n    });\n    env.addReporter(reporter);\n    runtime\n      .requireInternalModule(\n        _path.default.resolve(__dirname, './jestExpect.js')\n      )\n      .default({\n        expand: globalConfig.expand\n      });\n\n    if (globalConfig.errorOnDeprecated) {\n      (0, _errorOnPrivate.installErrorOnPrivate)(environment.global);\n    } else {\n      Object.defineProperty(jasmine, 'DEFAULT_TIMEOUT_INTERVAL', {\n        configurable: true,\n        enumerable: true,\n\n        get() {\n          return this._DEFAULT_TIMEOUT_INTERVAL;\n        },\n\n        set(value) {\n          this._DEFAULT_TIMEOUT_INTERVAL = value;\n        }\n      });\n    }\n\n    const snapshotState = runtime\n      .requireInternalModule(\n        _path.default.resolve(__dirname, './setup_jest_globals.js')\n      )\n      .default({\n        config,\n        globalConfig,\n        localRequire: runtime.requireModule.bind(runtime),\n        testPath\n      });\n    config.setupFilesAfterEnv.forEach(path => runtime.requireModule(path));\n\n    if (globalConfig.enabledTestsMap) {\n      env.specFilter = spec => {\n        const suiteMap =\n          globalConfig.enabledTestsMap &&\n          globalConfig.enabledTestsMap[spec.result.testPath];\n        return suiteMap && suiteMap[spec.result.fullName];\n      };\n    } else if (globalConfig.testNamePattern) {\n      const testNameRegex = new RegExp(globalConfig.testNamePattern, 'i');\n\n      env.specFilter = spec => testNameRegex.test(spec.getFullName());\n    }\n\n    runtime.requireModule(testPath);\n    yield env.execute();\n    const results = yield reporter.getResults();\n    return addSnapshotData(results, snapshotState);\n  });\n  return _jasmine.apply(this, arguments);\n}\n\nconst addSnapshotData = (results, snapshotState) => {\n  results.testResults.forEach(({fullName, status}) => {\n    if (status === 'pending' || status === 'failed') {\n      // if test is skipped or failed, we don't want to mark\n      // its snapshots as obsolete.\n      snapshotState.markSnapshotsAsCheckedForTest(fullName);\n    }\n  });\n  const uncheckedCount = snapshotState.getUncheckedCount();\n  const uncheckedKeys = snapshotState.getUncheckedKeys();\n\n  if (uncheckedCount) {\n    snapshotState.removeUncheckedKeys();\n  }\n\n  const status = snapshotState.save();\n  results.snapshot.fileDeleted = status.deleted;\n  results.snapshot.added = snapshotState.added;\n  results.snapshot.matched = snapshotState.matched;\n  results.snapshot.unmatched = snapshotState.unmatched;\n  results.snapshot.updated = snapshotState.updated;\n  results.snapshot.unchecked = !status.deleted ? uncheckedCount : 0; // Copy the array to prevent memory leaks\n\n  results.snapshot.uncheckedKeys = Array.from(uncheckedKeys);\n  return results;\n}; // eslint-disable-next-line no-redeclare\n\nmodule.exports = jasmine2;\n"]},"metadata":{},"sourceType":"script"}