{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar path = require(\"path\");\n\nvar FileSystem =\n/** @class */\nfunction () {\n  function FileSystem(options) {\n    this.options = options;\n  }\n  /**\r\n   * Return full path to entry.\r\n   */\n\n\n  FileSystem.prototype.getFullEntryPath = function (filepath) {\n    return path.resolve(this.options.cwd, filepath);\n  };\n  /**\r\n   * Return an implementation of the Entry interface.\r\n   */\n\n\n  FileSystem.prototype.makeEntry = function (stat, pattern) {\n    stat.path = pattern;\n    stat.depth = pattern.split('/').length;\n    return stat;\n  };\n\n  return FileSystem;\n}();\n\nexports.default = FileSystem;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/fast-glob/out/adapters/fs.js"],"names":["Object","defineProperty","exports","value","path","require","FileSystem","options","prototype","getFullEntryPath","filepath","resolve","cwd","makeEntry","stat","pattern","depth","split","length","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,UAAU;AAAG;AAAe,YAAY;AACxC,WAASA,UAAT,CAAoBC,OAApB,EAA6B;AACzB,SAAKA,OAAL,GAAeA,OAAf;AACH;AACD;;;;;AAGAD,EAAAA,UAAU,CAACE,SAAX,CAAqBC,gBAArB,GAAwC,UAAUC,QAAV,EAAoB;AACxD,WAAON,IAAI,CAACO,OAAL,CAAa,KAAKJ,OAAL,CAAaK,GAA1B,EAA+BF,QAA/B,CAAP;AACH,GAFD;AAGA;;;;;AAGAJ,EAAAA,UAAU,CAACE,SAAX,CAAqBK,SAArB,GAAiC,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AACtDD,IAAAA,IAAI,CAACV,IAAL,GAAYW,OAAZ;AACAD,IAAAA,IAAI,CAACE,KAAL,GAAaD,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmBC,MAAhC;AACA,WAAOJ,IAAP;AACH,GAJD;;AAKA,SAAOR,UAAP;AACH,CAnB+B,EAAhC;;AAoBAJ,OAAO,CAACiB,OAAR,GAAkBb,UAAlB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path = require(\"path\");\r\nvar FileSystem = /** @class */ (function () {\r\n    function FileSystem(options) {\r\n        this.options = options;\r\n    }\r\n    /**\r\n     * Return full path to entry.\r\n     */\r\n    FileSystem.prototype.getFullEntryPath = function (filepath) {\r\n        return path.resolve(this.options.cwd, filepath);\r\n    };\r\n    /**\r\n     * Return an implementation of the Entry interface.\r\n     */\r\n    FileSystem.prototype.makeEntry = function (stat, pattern) {\r\n        stat.path = pattern;\r\n        stat.depth = pattern.split('/').length;\r\n        return stat;\r\n    };\r\n    return FileSystem;\r\n}());\r\nexports.default = FileSystem;\r\n"]},"metadata":{},"sourceType":"script"}