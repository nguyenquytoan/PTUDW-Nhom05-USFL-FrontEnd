{"ast":null,"code":"import { lowerCase, localeLowerCase } from \".\";\nvar TEST_CASES = [[\"\", \"\"], [\"test\", \"test\"], [\"TEST\", \"test\"], [\"test string\", \"test string\"], [\"TEST STRING\", \"test string\"]];\nvar LOCALE_TEST_CASES = [[\"STRING\", \"strıng\", \"tr\"]];\ndescribe(\"lower case\", function () {\n  var _loop_1 = function (input, result) {\n    it(input + \" -> \" + result, function () {\n      expect(lowerCase(input)).toEqual(result);\n    });\n  };\n\n  for (var _i = 0, TEST_CASES_1 = TEST_CASES; _i < TEST_CASES_1.length; _i++) {\n    var _a = TEST_CASES_1[_i],\n        input = _a[0],\n        result = _a[1];\n\n    _loop_1(input, result);\n  }\n});\ndescribe(\"locale lower case\", function () {\n  var _loop_2 = function (input, result, locale) {\n    it(locale + \": \" + input + \" -> \" + result, function () {\n      expect(localeLowerCase(input, locale)).toEqual(result);\n    });\n  };\n\n  for (var _i = 0, LOCALE_TEST_CASES_1 = LOCALE_TEST_CASES; _i < LOCALE_TEST_CASES_1.length; _i++) {\n    var _a = LOCALE_TEST_CASES_1[_i],\n        input = _a[0],\n        result = _a[1],\n        locale = _a[2];\n\n    _loop_2(input, result, locale);\n  }\n});","map":{"version":3,"sources":["../src/index.spec.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,EAAoB,eAApB,QAA2C,GAA3C;AAEA,IAAM,UAAU,GAAuB,CACrC,CAAC,EAAD,EAAK,EAAL,CADqC,EAErC,CAAC,MAAD,EAAS,MAAT,CAFqC,EAGrC,CAAC,MAAD,EAAS,MAAT,CAHqC,EAIrC,CAAC,aAAD,EAAgB,aAAhB,CAJqC,EAKrC,CAAC,aAAD,EAAgB,aAAhB,CALqC,CAAvC;AAQA,IAAM,iBAAiB,GAA+B,CACpD,CAAC,QAAD,EAAW,QAAX,EAAqB,IAArB,CADoD,CAAtD;AAIA,QAAQ,CAAC,YAAD,EAAe,YAAA;0BACT,K,EAAO,M,EAAM;AACvB,IAAA,EAAE,CAAI,KAAK,GAAA,MAAL,GAAY,MAAhB,EAA0B,YAAA;AAC1B,MAAA,MAAM,CAAC,SAAS,CAAC,KAAD,CAAV,CAAN,CAAyB,OAAzB,CAAiC,MAAjC;AACD,KAFC,CAAF;;;AADF,OAA8B,IAAA,EAAA,GAAA,CAAA,EAAA,YAAA,GAAA,UAA9B,EAA8B,EAAA,GAAA,YAAA,CAAA,MAA9B,EAA8B,EAAA,EAA9B,EAAwC;AAA7B,QAAA,EAAA,GAAA,YAAA,CAAA,EAAA,CAAA;AAAA,QAAC,KAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,QAAQ,MAAA,GAAA,EAAA,CAAA,CAAA,CAAR;;YAAC,K,EAAO,M;AAIlB;AACF,CANO,CAAR;AAQA,QAAQ,CAAC,mBAAD,EAAsB,YAAA;0BAChB,K,EAAO,M,EAAQ,M,EAAM;AAC/B,IAAA,EAAE,CAAI,MAAM,GAAA,IAAN,GAAW,KAAX,GAAgB,MAAhB,GAAuB,MAA3B,EAAqC,YAAA;AACrC,MAAA,MAAM,CAAC,eAAe,CAAC,KAAD,EAAQ,MAAR,CAAhB,CAAN,CAAuC,OAAvC,CAA+C,MAA/C;AACD,KAFC,CAAF;;;AADF,OAAsC,IAAA,EAAA,GAAA,CAAA,EAAA,mBAAA,GAAA,iBAAtC,EAAsC,EAAA,GAAA,mBAAA,CAAA,MAAtC,EAAsC,EAAA,EAAtC,EAAuD;AAA5C,QAAA,EAAA,GAAA,mBAAA,CAAA,EAAA,CAAA;AAAA,QAAC,KAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,QAAQ,MAAA,GAAA,EAAA,CAAA,CAAA,CAAR;AAAA,QAAgB,MAAA,GAAA,EAAA,CAAA,CAAA,CAAhB;;YAAC,K,EAAO,M,EAAQ,M;AAI1B;AACF,CANO,CAAR","sourcesContent":["import { lowerCase, localeLowerCase } from \".\";\n\nconst TEST_CASES: [string, string][] = [\n  [\"\", \"\"],\n  [\"test\", \"test\"],\n  [\"TEST\", \"test\"],\n  [\"test string\", \"test string\"],\n  [\"TEST STRING\", \"test string\"]\n];\n\nconst LOCALE_TEST_CASES: [string, string, string][] = [\n  [\"STRING\", \"strıng\", \"tr\"]\n];\n\ndescribe(\"lower case\", () => {\n  for (const [input, result] of TEST_CASES) {\n    it(`${input} -> ${result}`, () => {\n      expect(lowerCase(input)).toEqual(result);\n    });\n  }\n});\n\ndescribe(\"locale lower case\", () => {\n  for (const [input, result, locale] of LOCALE_TEST_CASES) {\n    it(`${locale}: ${input} -> ${result}`, () => {\n      expect(localeLowerCase(input, locale)).toEqual(result);\n    });\n  }\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}