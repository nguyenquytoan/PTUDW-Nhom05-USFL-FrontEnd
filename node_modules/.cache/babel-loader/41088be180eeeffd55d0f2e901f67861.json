{"ast":null,"code":"var inspect = require('../');\n\nvar test = require('tape');\n\ntest('values', function (t) {\n  t.plan(1);\n  var obj = [{}, [], {\n    'a-b': 5\n  }];\n  t.equal(inspect(obj), '[ {}, [], { \\'a-b\\': 5 } ]');\n});\ntest('arrays with properties', function (t) {\n  t.plan(1);\n  var arr = [3];\n  arr.foo = 'bar';\n  var obj = [1, 2, arr];\n  obj.baz = 'quux';\n  obj.index = -1;\n  t.equal(inspect(obj), '[ 1, 2, [ 3, foo: \\'bar\\' ], baz: \\'quux\\', index: -1 ]');\n});\ntest('has', function (t) {\n  t.plan(1);\n  var has = Object.prototype.hasOwnProperty;\n  delete Object.prototype.hasOwnProperty;\n  t.equal(inspect({\n    a: 1,\n    b: 2\n  }), '{ a: 1, b: 2 }');\n  Object.prototype.hasOwnProperty = has; // eslint-disable-line no-extend-native\n});\ntest('indexOf seen', function (t) {\n  t.plan(1);\n  var xs = [1, 2, 3, {}];\n  xs.push(xs);\n  var seen = [];\n  seen.indexOf = undefined;\n  t.equal(inspect(xs, {}, 0, seen), '[ 1, 2, 3, {}, [Circular] ]');\n});\ntest('seen seen', function (t) {\n  t.plan(1);\n  var xs = [1, 2, 3];\n  var seen = [xs];\n  seen.indexOf = undefined;\n  t.equal(inspect(xs, {}, 0, seen), '[Circular]');\n});\ntest('seen seen seen', function (t) {\n  t.plan(1);\n  var xs = [1, 2, 3];\n  var seen = [5, xs];\n  seen.indexOf = undefined;\n  t.equal(inspect(xs, {}, 0, seen), '[Circular]');\n});\ntest('symbols', {\n  skip: typeof Symbol !== 'function'\n}, function (t) {\n  var sym = Symbol('foo');\n  t.equal(inspect(sym), 'Symbol(foo)', 'Symbol(\"foo\") should be \"Symbol(foo)\"');\n  t.equal(inspect(Object(sym)), 'Object(Symbol(foo))', 'Object(Symbol(\"foo\")) should be \"Object(Symbol(foo))\"');\n  t.end();\n});\ntest('Map', {\n  skip: typeof Map !== 'function'\n}, function (t) {\n  var map = new Map();\n  map.set({\n    a: 1\n  }, ['b']);\n  map.set(3, NaN);\n  var expectedString = 'Map (2) {' + inspect({\n    a: 1\n  }) + ' => ' + inspect(['b']) + ', 3 => NaN}';\n  t.equal(inspect(map), expectedString, 'new Map([[{ a: 1 }, [\"b\"]], [3, NaN]]) should show size and contents');\n  t.equal(inspect(new Map()), 'Map (0) {}', 'empty Map should show as empty');\n  var nestedMap = new Map();\n  nestedMap.set(nestedMap, map);\n  t.equal(inspect(nestedMap), 'Map (1) {[Circular] => ' + expectedString + '}', 'Map containing a Map should work');\n  t.end();\n});\ntest('WeakMap', {\n  skip: typeof WeakMap !== 'function'\n}, function (t) {\n  var map = new WeakMap();\n  map.set({\n    a: 1\n  }, ['b']);\n  var expectedString = 'WeakMap { ? }';\n  t.equal(inspect(map), expectedString, 'new WeakMap([[{ a: 1 }, [\"b\"]]]) should not show size or contents');\n  t.equal(inspect(new WeakMap()), 'WeakMap { ? }', 'empty WeakMap should not show as empty');\n  t.end();\n});\ntest('Set', {\n  skip: typeof Set !== 'function'\n}, function (t) {\n  var set = new Set();\n  set.add({\n    a: 1\n  });\n  set.add(['b']);\n  var expectedString = 'Set (2) {' + inspect({\n    a: 1\n  }) + ', ' + inspect(['b']) + '}';\n  t.equal(inspect(set), expectedString, 'new Set([{ a: 1 }, [\"b\"]]) should show size and contents');\n  t.equal(inspect(new Set()), 'Set (0) {}', 'empty Set should show as empty');\n  var nestedSet = new Set();\n  nestedSet.add(set);\n  nestedSet.add(nestedSet);\n  t.equal(inspect(nestedSet), 'Set (2) {' + expectedString + ', [Circular]}', 'Set containing a Set should work');\n  t.end();\n});\ntest('WeakSet', {\n  skip: typeof WeakSet !== 'function'\n}, function (t) {\n  var map = new WeakSet();\n  map.add({\n    a: 1\n  });\n  var expectedString = 'WeakSet { ? }';\n  t.equal(inspect(map), expectedString, 'new WeakSet([{ a: 1 }]) should not show size or contents');\n  t.equal(inspect(new WeakSet()), 'WeakSet { ? }', 'empty WeakSet should not show as empty');\n  t.end();\n});\ntest('Strings', function (t) {\n  var str = 'abc';\n  t.equal(inspect(str), \"'\" + str + \"'\", 'primitive string shows as such');\n  t.equal(inspect(str, {\n    quoteStyle: 'single'\n  }), \"'\" + str + \"'\", 'primitive string shows as such, single quoted');\n  t.equal(inspect(str, {\n    quoteStyle: 'double'\n  }), '\"' + str + '\"', 'primitive string shows as such, double quoted');\n  t.equal(inspect(Object(str)), 'Object(' + inspect(str) + ')', 'String object shows as such');\n  t.equal(inspect(Object(str), {\n    quoteStyle: 'single'\n  }), 'Object(' + inspect(str, {\n    quoteStyle: 'single'\n  }) + ')', 'String object shows as such, single quoted');\n  t.equal(inspect(Object(str), {\n    quoteStyle: 'double'\n  }), 'Object(' + inspect(str, {\n    quoteStyle: 'double'\n  }) + ')', 'String object shows as such, double quoted');\n  t.end();\n});\ntest('Numbers', function (t) {\n  var num = 42;\n  t.equal(inspect(num), String(num), 'primitive number shows as such');\n  t.equal(inspect(Object(num)), 'Object(' + inspect(num) + ')', 'Number object shows as such');\n  t.end();\n});\ntest('Booleans', function (t) {\n  t.equal(inspect(true), String(true), 'primitive true shows as such');\n  t.equal(inspect(Object(true)), 'Object(' + inspect(true) + ')', 'Boolean object true shows as such');\n  t.equal(inspect(false), String(false), 'primitive false shows as such');\n  t.equal(inspect(Object(false)), 'Object(' + inspect(false) + ')', 'Boolean false object shows as such');\n  t.end();\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/object-inspect/test/values.js"],"names":["inspect","require","test","t","plan","obj","equal","arr","foo","baz","index","has","Object","prototype","hasOwnProperty","a","b","xs","push","seen","indexOf","undefined","skip","Symbol","sym","end","Map","map","set","NaN","expectedString","nestedMap","WeakMap","Set","add","nestedSet","WeakSet","str","quoteStyle","num","String"],"mappings":"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","sourcesContent":["var inspect = require('../');\nvar test = require('tape');\n\ntest('values', function (t) {\n    t.plan(1);\n    var obj = [{}, [], { 'a-b': 5 }];\n    t.equal(inspect(obj), '[ {}, [], { \\'a-b\\': 5 } ]');\n});\n\ntest('arrays with properties', function (t) {\n    t.plan(1);\n    var arr = [3];\n    arr.foo = 'bar';\n    var obj = [1, 2, arr];\n    obj.baz = 'quux';\n    obj.index = -1;\n    t.equal(inspect(obj), '[ 1, 2, [ 3, foo: \\'bar\\' ], baz: \\'quux\\', index: -1 ]');\n});\n\ntest('has', function (t) {\n    t.plan(1);\n    var has = Object.prototype.hasOwnProperty;\n    delete Object.prototype.hasOwnProperty;\n    t.equal(inspect({ a: 1, b: 2 }), '{ a: 1, b: 2 }');\n    Object.prototype.hasOwnProperty = has; // eslint-disable-line no-extend-native\n});\n\ntest('indexOf seen', function (t) {\n    t.plan(1);\n    var xs = [1, 2, 3, {}];\n    xs.push(xs);\n\n    var seen = [];\n    seen.indexOf = undefined;\n\n    t.equal(\n        inspect(xs, {}, 0, seen),\n        '[ 1, 2, 3, {}, [Circular] ]'\n    );\n});\n\ntest('seen seen', function (t) {\n    t.plan(1);\n    var xs = [1, 2, 3];\n\n    var seen = [xs];\n    seen.indexOf = undefined;\n\n    t.equal(\n        inspect(xs, {}, 0, seen),\n        '[Circular]'\n    );\n});\n\ntest('seen seen seen', function (t) {\n    t.plan(1);\n    var xs = [1, 2, 3];\n\n    var seen = [5, xs];\n    seen.indexOf = undefined;\n\n    t.equal(\n        inspect(xs, {}, 0, seen),\n        '[Circular]'\n    );\n});\n\ntest('symbols', { skip: typeof Symbol !== 'function' }, function (t) {\n    var sym = Symbol('foo');\n    t.equal(inspect(sym), 'Symbol(foo)', 'Symbol(\"foo\") should be \"Symbol(foo)\"');\n    t.equal(inspect(Object(sym)), 'Object(Symbol(foo))', 'Object(Symbol(\"foo\")) should be \"Object(Symbol(foo))\"');\n    t.end();\n});\n\ntest('Map', { skip: typeof Map !== 'function' }, function (t) {\n    var map = new Map();\n    map.set({ a: 1 }, ['b']);\n    map.set(3, NaN);\n    var expectedString = 'Map (2) {' + inspect({ a: 1 }) + ' => ' + inspect(['b']) + ', 3 => NaN}';\n    t.equal(inspect(map), expectedString, 'new Map([[{ a: 1 }, [\"b\"]], [3, NaN]]) should show size and contents');\n    t.equal(inspect(new Map()), 'Map (0) {}', 'empty Map should show as empty');\n\n    var nestedMap = new Map();\n    nestedMap.set(nestedMap, map);\n    t.equal(inspect(nestedMap), 'Map (1) {[Circular] => ' + expectedString + '}', 'Map containing a Map should work');\n\n    t.end();\n});\n\ntest('WeakMap', { skip: typeof WeakMap !== 'function' }, function (t) {\n    var map = new WeakMap();\n    map.set({ a: 1 }, ['b']);\n    var expectedString = 'WeakMap { ? }';\n    t.equal(inspect(map), expectedString, 'new WeakMap([[{ a: 1 }, [\"b\"]]]) should not show size or contents');\n    t.equal(inspect(new WeakMap()), 'WeakMap { ? }', 'empty WeakMap should not show as empty');\n\n    t.end();\n});\n\ntest('Set', { skip: typeof Set !== 'function' }, function (t) {\n    var set = new Set();\n    set.add({ a: 1 });\n    set.add(['b']);\n    var expectedString = 'Set (2) {' + inspect({ a: 1 }) + ', ' + inspect(['b']) + '}';\n    t.equal(inspect(set), expectedString, 'new Set([{ a: 1 }, [\"b\"]]) should show size and contents');\n    t.equal(inspect(new Set()), 'Set (0) {}', 'empty Set should show as empty');\n\n    var nestedSet = new Set();\n    nestedSet.add(set);\n    nestedSet.add(nestedSet);\n    t.equal(inspect(nestedSet), 'Set (2) {' + expectedString + ', [Circular]}', 'Set containing a Set should work');\n\n    t.end();\n});\n\ntest('WeakSet', { skip: typeof WeakSet !== 'function' }, function (t) {\n    var map = new WeakSet();\n    map.add({ a: 1 });\n    var expectedString = 'WeakSet { ? }';\n    t.equal(inspect(map), expectedString, 'new WeakSet([{ a: 1 }]) should not show size or contents');\n    t.equal(inspect(new WeakSet()), 'WeakSet { ? }', 'empty WeakSet should not show as empty');\n\n    t.end();\n});\n\ntest('Strings', function (t) {\n    var str = 'abc';\n\n    t.equal(inspect(str), \"'\" + str + \"'\", 'primitive string shows as such');\n    t.equal(inspect(str, { quoteStyle: 'single' }), \"'\" + str + \"'\", 'primitive string shows as such, single quoted');\n    t.equal(inspect(str, { quoteStyle: 'double' }), '\"' + str + '\"', 'primitive string shows as such, double quoted');\n    t.equal(inspect(Object(str)), 'Object(' + inspect(str) + ')', 'String object shows as such');\n    t.equal(inspect(Object(str), { quoteStyle: 'single' }), 'Object(' + inspect(str, { quoteStyle: 'single' }) + ')', 'String object shows as such, single quoted');\n    t.equal(inspect(Object(str), { quoteStyle: 'double' }), 'Object(' + inspect(str, { quoteStyle: 'double' }) + ')', 'String object shows as such, double quoted');\n\n    t.end();\n});\n\ntest('Numbers', function (t) {\n    var num = 42;\n\n    t.equal(inspect(num), String(num), 'primitive number shows as such');\n    t.equal(inspect(Object(num)), 'Object(' + inspect(num) + ')', 'Number object shows as such');\n\n    t.end();\n});\n\ntest('Booleans', function (t) {\n    t.equal(inspect(true), String(true), 'primitive true shows as such');\n    t.equal(inspect(Object(true)), 'Object(' + inspect(true) + ')', 'Boolean object true shows as such');\n\n    t.equal(inspect(false), String(false), 'primitive false shows as such');\n    t.equal(inspect(Object(false)), 'Object(' + inspect(false) + ')', 'Boolean false object shows as such');\n\n    t.end();\n});\n"]},"metadata":{},"sourceType":"script"}