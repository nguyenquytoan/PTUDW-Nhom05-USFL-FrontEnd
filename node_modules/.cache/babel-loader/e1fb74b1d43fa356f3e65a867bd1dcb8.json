{"ast":null,"code":"var MODIFIER_PATTERN = /\\-\\-.+$/;\n\nfunction rulesOverlap(rule1, rule2, bemMode) {\n  var scope1;\n  var scope2;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = rule1.length; i < l; i++) {\n    scope1 = rule1[i][1];\n\n    for (j = 0, m = rule2.length; j < m; j++) {\n      scope2 = rule2[j][1];\n\n      if (scope1 == scope2) {\n        return true;\n      }\n\n      if (bemMode && withoutModifiers(scope1) == withoutModifiers(scope2)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction withoutModifiers(scope) {\n  return scope.replace(MODIFIER_PATTERN, '');\n}\n\nmodule.exports = rulesOverlap;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/optimizer/level-2/rules-overlap.js"],"names":["MODIFIER_PATTERN","rulesOverlap","rule1","rule2","bemMode","scope1","scope2","i","l","j","m","length","withoutModifiers","scope","replace","module","exports"],"mappings":"AAAA,IAAIA,gBAAgB,GAAG,SAAvB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6C;AAC3C,MAAIC,MAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,CAAJ,EAAOC,CAAP;AACA,MAAIC,CAAJ,EAAOC,CAAP;;AAEA,OAAKH,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGN,KAAK,CAACS,MAAtB,EAA8BJ,CAAC,GAAGC,CAAlC,EAAqCD,CAAC,EAAtC,EAA0C;AACxCF,IAAAA,MAAM,GAAGH,KAAK,CAACK,CAAD,CAAL,CAAS,CAAT,CAAT;;AAEA,SAAKE,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGP,KAAK,CAACQ,MAAtB,EAA8BF,CAAC,GAAGC,CAAlC,EAAqCD,CAAC,EAAtC,EAA0C;AACxCH,MAAAA,MAAM,GAAGH,KAAK,CAACM,CAAD,CAAL,CAAS,CAAT,CAAT;;AAEA,UAAIJ,MAAM,IAAIC,MAAd,EAAsB;AACpB,eAAO,IAAP;AACD;;AAED,UAAIF,OAAO,IAAIQ,gBAAgB,CAACP,MAAD,CAAhB,IAA4BO,gBAAgB,CAACN,MAAD,CAA3D,EAAqE;AACnE,eAAO,IAAP;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD;;AAED,SAASM,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAOA,KAAK,CAACC,OAAN,CAAcd,gBAAd,EAAgC,EAAhC,CAAP;AACD;;AAEDe,MAAM,CAACC,OAAP,GAAiBf,YAAjB","sourcesContent":["var MODIFIER_PATTERN = /\\-\\-.+$/;\n\nfunction rulesOverlap(rule1, rule2, bemMode) {\n  var scope1;\n  var scope2;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = rule1.length; i < l; i++) {\n    scope1 = rule1[i][1];\n\n    for (j = 0, m = rule2.length; j < m; j++) {\n      scope2 = rule2[j][1];\n\n      if (scope1 == scope2) {\n        return true;\n      }\n\n      if (bemMode && withoutModifiers(scope1) == withoutModifiers(scope2)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction withoutModifiers(scope) {\n  return scope.replace(MODIFIER_PATTERN, '');\n}\n\nmodule.exports = rulesOverlap;\n"]},"metadata":{},"sourceType":"script"}