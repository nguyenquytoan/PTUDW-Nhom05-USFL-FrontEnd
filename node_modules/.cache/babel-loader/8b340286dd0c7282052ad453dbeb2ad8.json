{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\n\nvar rawMode = require('../node/Raw').mode;\n\nvar COMMA = TYPE.Comma; // var( <ident> , <value>? )\n\nmodule.exports = function () {\n  var children = this.createList();\n  this.scanner.skipSC(); // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\n\n  children.push(this.Identifier());\n  this.scanner.skipSC();\n\n  if (this.scanner.tokenType === COMMA) {\n    children.push(this.Operator());\n    children.push(this.parseCustomProperty ? this.Value(null) : this.Raw(this.scanner.tokenIndex, rawMode.exclamationMarkOrSemicolon, false));\n  }\n\n  return children;\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/css-tree/lib/syntax/function/var.js"],"names":["TYPE","require","rawMode","mode","COMMA","Comma","module","exports","children","createList","scanner","skipSC","push","Identifier","tokenType","Operator","parseCustomProperty","Value","Raw","tokenIndex","exclamationMarkOrSemicolon"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,IAAtC;;AACA,IAAIE,OAAO,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBE,IAArC;;AAEA,IAAIC,KAAK,GAAGJ,IAAI,CAACK,KAAjB,C,CAEA;;AACAC,MAAM,CAACC,OAAP,GAAiB,YAAW;AACxB,MAAIC,QAAQ,GAAG,KAAKC,UAAL,EAAf;AAEA,OAAKC,OAAL,CAAaC,MAAb,GAHwB,CAKxB;;AACAH,EAAAA,QAAQ,CAACI,IAAT,CAAc,KAAKC,UAAL,EAAd;AAEA,OAAKH,OAAL,CAAaC,MAAb;;AAEA,MAAI,KAAKD,OAAL,CAAaI,SAAb,KAA2BV,KAA/B,EAAsC;AAClCI,IAAAA,QAAQ,CAACI,IAAT,CAAc,KAAKG,QAAL,EAAd;AACAP,IAAAA,QAAQ,CAACI,IAAT,CAAc,KAAKI,mBAAL,GACR,KAAKC,KAAL,CAAW,IAAX,CADQ,GAER,KAAKC,GAAL,CAAS,KAAKR,OAAL,CAAaS,UAAtB,EAAkCjB,OAAO,CAACkB,0BAA1C,EAAsE,KAAtE,CAFN;AAIH;;AAED,SAAOZ,QAAP;AACH,CAnBD","sourcesContent":["var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('../node/Raw').mode;\n\nvar COMMA = TYPE.Comma;\n\n// var( <ident> , <value>? )\nmodule.exports = function() {\n    var children = this.createList();\n\n    this.scanner.skipSC();\n\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\n    children.push(this.Identifier());\n\n    this.scanner.skipSC();\n\n    if (this.scanner.tokenType === COMMA) {\n        children.push(this.Operator());\n        children.push(this.parseCustomProperty\n            ? this.Value(null)\n            : this.Raw(this.scanner.tokenIndex, rawMode.exclamationMarkOrSemicolon, false)\n        );\n    }\n\n    return children;\n};\n"]},"metadata":{},"sourceType":"script"}