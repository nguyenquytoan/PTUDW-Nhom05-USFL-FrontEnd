{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getSequencer = exports.isJSONString = exports.getRunner = exports.getWatchPlugin = exports.getTestEnvironment = exports.resolveWithPrefix = exports._replaceRootDirTags = exports.replaceRootDirInPath = exports.escapeGlobCharacters = exports.resolve = exports.DOCUMENTATION_NOTE = exports.BULLET = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestValidate() {\n  const data = require('jest-validate');\n\n  _jestValidate = function _jestValidate() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestResolve() {\n  const data = _interopRequireDefault(require('jest-resolve'));\n\n  _jestResolve = function _jestResolve() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst BULLET = _chalk().default.bold('\\u25cf ');\n\nexports.BULLET = BULLET;\nconst DOCUMENTATION_NOTE = `  ${_chalk().default.bold('Configuration Documentation:')}\n  https://jestjs.io/docs/configuration.html\n`;\nexports.DOCUMENTATION_NOTE = DOCUMENTATION_NOTE;\n\nconst createValidationError = message => new (_jestValidate().ValidationError)(`${BULLET}Validation Error`, message, DOCUMENTATION_NOTE);\n\nconst resolve = (resolver, {\n  key,\n  filePath,\n  rootDir,\n  optional\n}) => {\n  const module = _jestResolve().default.findNodeModule(replaceRootDirInPath(rootDir, filePath), {\n    basedir: rootDir,\n    resolver: resolver || undefined\n  });\n\n  if (!module && !optional) {\n    throw createValidationError(`  Module ${_chalk().default.bold(filePath)} in the ${_chalk().default.bold(key)} option was not found.\n         ${_chalk().default.bold('<rootDir>')} is: ${rootDir}`);\n  } /// can cast as string since nulls will be thrown\n\n\n  return module;\n};\n\nexports.resolve = resolve;\n\nconst escapeGlobCharacters = path => path.replace(/([()*{}\\[\\]!?\\\\])/g, '\\\\$1');\n\nexports.escapeGlobCharacters = escapeGlobCharacters;\n\nconst replaceRootDirInPath = (rootDir, filePath) => {\n  if (!/^<rootDir>/.test(filePath)) {\n    return filePath;\n  }\n\n  return _path().default.resolve(rootDir, _path().default.normalize('./' + filePath.substr('<rootDir>'.length)));\n};\n\nexports.replaceRootDirInPath = replaceRootDirInPath;\n\nconst _replaceRootDirInObject = (rootDir, config) => {\n  const newConfig = {};\n\n  for (const configKey in config) {\n    newConfig[configKey] = configKey === 'rootDir' ? config[configKey] : _replaceRootDirTags(rootDir, config[configKey]);\n  }\n\n  return newConfig;\n};\n\nconst _replaceRootDirTags = (rootDir, config) => {\n  if (config == null) {\n    return config;\n  }\n\n  switch (typeof config) {\n    case 'object':\n      if (Array.isArray(config)) {\n        /// can be string[] or {}[]\n        return config.map(item => _replaceRootDirTags(rootDir, item));\n      }\n\n      if (config instanceof RegExp) {\n        return config;\n      }\n\n      return _replaceRootDirInObject(rootDir, config);\n\n    case 'string':\n      return replaceRootDirInPath(rootDir, config);\n  }\n\n  return config;\n};\n\nexports._replaceRootDirTags = _replaceRootDirTags;\n\nconst resolveWithPrefix = (resolver, {\n  filePath,\n  humanOptionName,\n  optionName,\n  prefix,\n  rootDir\n}) => {\n  const fileName = replaceRootDirInPath(rootDir, filePath);\n\n  let module = _jestResolve().default.findNodeModule(`${prefix}${fileName}`, {\n    basedir: rootDir,\n    resolver: resolver || undefined\n  });\n\n  if (module) {\n    return module;\n  }\n\n  try {\n    return require.resolve(`${prefix}${fileName}`);\n  } catch (e) {}\n\n  module = _jestResolve().default.findNodeModule(fileName, {\n    basedir: rootDir,\n    resolver: resolver || undefined\n  });\n\n  if (module) {\n    return module;\n  }\n\n  try {\n    return require.resolve(fileName);\n  } catch (e) {}\n\n  throw createValidationError(`  ${humanOptionName} ${_chalk().default.bold(fileName)} cannot be found. Make sure the ${_chalk().default.bold(optionName)} configuration option points to an existing node module.`);\n};\n/**\n * Finds the test environment to use:\n *\n * 1. looks for jest-environment-<name> relative to project.\n * 1. looks for jest-environment-<name> relative to Jest.\n * 1. looks for <name> relative to project.\n * 1. looks for <name> relative to Jest.\n */\n\n\nexports.resolveWithPrefix = resolveWithPrefix;\n\nconst getTestEnvironment = ({\n  rootDir,\n  testEnvironment: filePath\n}) => resolveWithPrefix(undefined, {\n  filePath,\n  humanOptionName: 'Test environment',\n  optionName: 'testEnvironment',\n  prefix: 'jest-environment-',\n  rootDir\n});\n/**\n * Finds the watch plugins to use:\n *\n * 1. looks for jest-watch-<name> relative to project.\n * 1. looks for jest-watch-<name> relative to Jest.\n * 1. looks for <name> relative to project.\n * 1. looks for <name> relative to Jest.\n */\n\n\nexports.getTestEnvironment = getTestEnvironment;\n\nconst getWatchPlugin = (resolver, {\n  filePath,\n  rootDir\n}) => resolveWithPrefix(resolver, {\n  filePath,\n  humanOptionName: 'Watch plugin',\n  optionName: 'watchPlugins',\n  prefix: 'jest-watch-',\n  rootDir\n});\n/**\n * Finds the runner to use:\n *\n * 1. looks for jest-runner-<name> relative to project.\n * 1. looks for jest-runner-<name> relative to Jest.\n * 1. looks for <name> relative to project.\n * 1. looks for <name> relative to Jest.\n */\n\n\nexports.getWatchPlugin = getWatchPlugin;\n\nconst getRunner = (resolver, {\n  filePath,\n  rootDir\n}) => resolveWithPrefix(resolver, {\n  filePath,\n  humanOptionName: 'Jest Runner',\n  optionName: 'runner',\n  prefix: 'jest-runner-',\n  rootDir\n});\n\nexports.getRunner = getRunner; // newtype\n\nconst isJSONString = text => text != null && typeof text === 'string' && text.startsWith('{') && text.endsWith('}');\n\nexports.isJSONString = isJSONString;\n\nconst getSequencer = (resolver, {\n  filePath,\n  rootDir\n}) => resolveWithPrefix(resolver, {\n  filePath,\n  humanOptionName: 'Jest Sequencer',\n  optionName: 'testSequencer',\n  prefix: 'jest-sequencer-',\n  rootDir\n});\n\nexports.getSequencer = getSequencer;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-config/build/utils.js"],"names":["Object","defineProperty","exports","value","getSequencer","isJSONString","getRunner","getWatchPlugin","getTestEnvironment","resolveWithPrefix","_replaceRootDirTags","replaceRootDirInPath","escapeGlobCharacters","resolve","DOCUMENTATION_NOTE","BULLET","_path","data","_interopRequireDefault","require","_jestValidate","_jestResolve","_chalk","obj","__esModule","default","bold","createValidationError","message","ValidationError","resolver","key","filePath","rootDir","optional","module","findNodeModule","basedir","undefined","path","replace","test","normalize","substr","length","_replaceRootDirInObject","config","newConfig","configKey","Array","isArray","map","item","RegExp","humanOptionName","optionName","prefix","fileName","e","testEnvironment","text","startsWith","endsWith"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getSequencer = exports.isJSONString = exports.getRunner = exports.getWatchPlugin = exports.getTestEnvironment = exports.resolveWithPrefix = exports._replaceRootDirTags = exports.replaceRootDirInPath = exports.escapeGlobCharacters = exports.resolve = exports.DOCUMENTATION_NOTE = exports.BULLET = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestValidate() {\n  const data = require('jest-validate');\n\n  _jestValidate = function _jestValidate() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestResolve() {\n  const data = _interopRequireDefault(require('jest-resolve'));\n\n  _jestResolve = function _jestResolve() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst BULLET = _chalk().default.bold('\\u25cf ');\n\nexports.BULLET = BULLET;\nconst DOCUMENTATION_NOTE = `  ${_chalk().default.bold(\n  'Configuration Documentation:'\n)}\n  https://jestjs.io/docs/configuration.html\n`;\nexports.DOCUMENTATION_NOTE = DOCUMENTATION_NOTE;\n\nconst createValidationError = message =>\n  new (_jestValidate()).ValidationError(\n    `${BULLET}Validation Error`,\n    message,\n    DOCUMENTATION_NOTE\n  );\n\nconst resolve = (resolver, {key, filePath, rootDir, optional}) => {\n  const module = _jestResolve().default.findNodeModule(\n    replaceRootDirInPath(rootDir, filePath),\n    {\n      basedir: rootDir,\n      resolver: resolver || undefined\n    }\n  );\n\n  if (!module && !optional) {\n    throw createValidationError(`  Module ${_chalk().default.bold(\n      filePath\n    )} in the ${_chalk().default.bold(key)} option was not found.\n         ${_chalk().default.bold('<rootDir>')} is: ${rootDir}`);\n  } /// can cast as string since nulls will be thrown\n\n  return module;\n};\n\nexports.resolve = resolve;\n\nconst escapeGlobCharacters = path => path.replace(/([()*{}\\[\\]!?\\\\])/g, '\\\\$1');\n\nexports.escapeGlobCharacters = escapeGlobCharacters;\n\nconst replaceRootDirInPath = (rootDir, filePath) => {\n  if (!/^<rootDir>/.test(filePath)) {\n    return filePath;\n  }\n\n  return _path().default.resolve(\n    rootDir,\n    _path().default.normalize('./' + filePath.substr('<rootDir>'.length))\n  );\n};\n\nexports.replaceRootDirInPath = replaceRootDirInPath;\n\nconst _replaceRootDirInObject = (rootDir, config) => {\n  const newConfig = {};\n\n  for (const configKey in config) {\n    newConfig[configKey] =\n      configKey === 'rootDir'\n        ? config[configKey]\n        : _replaceRootDirTags(rootDir, config[configKey]);\n  }\n\n  return newConfig;\n};\n\nconst _replaceRootDirTags = (rootDir, config) => {\n  if (config == null) {\n    return config;\n  }\n\n  switch (typeof config) {\n    case 'object':\n      if (Array.isArray(config)) {\n        /// can be string[] or {}[]\n        return config.map(item => _replaceRootDirTags(rootDir, item));\n      }\n\n      if (config instanceof RegExp) {\n        return config;\n      }\n\n      return _replaceRootDirInObject(rootDir, config);\n\n    case 'string':\n      return replaceRootDirInPath(rootDir, config);\n  }\n\n  return config;\n};\n\nexports._replaceRootDirTags = _replaceRootDirTags;\n\nconst resolveWithPrefix = (\n  resolver,\n  {filePath, humanOptionName, optionName, prefix, rootDir}\n) => {\n  const fileName = replaceRootDirInPath(rootDir, filePath);\n\n  let module = _jestResolve().default.findNodeModule(`${prefix}${fileName}`, {\n    basedir: rootDir,\n    resolver: resolver || undefined\n  });\n\n  if (module) {\n    return module;\n  }\n\n  try {\n    return require.resolve(`${prefix}${fileName}`);\n  } catch (e) {}\n\n  module = _jestResolve().default.findNodeModule(fileName, {\n    basedir: rootDir,\n    resolver: resolver || undefined\n  });\n\n  if (module) {\n    return module;\n  }\n\n  try {\n    return require.resolve(fileName);\n  } catch (e) {}\n\n  throw createValidationError(\n    `  ${humanOptionName} ${_chalk().default.bold(\n      fileName\n    )} cannot be found. Make sure the ${_chalk().default.bold(\n      optionName\n    )} configuration option points to an existing node module.`\n  );\n};\n/**\n * Finds the test environment to use:\n *\n * 1. looks for jest-environment-<name> relative to project.\n * 1. looks for jest-environment-<name> relative to Jest.\n * 1. looks for <name> relative to project.\n * 1. looks for <name> relative to Jest.\n */\n\nexports.resolveWithPrefix = resolveWithPrefix;\n\nconst getTestEnvironment = ({rootDir, testEnvironment: filePath}) =>\n  resolveWithPrefix(undefined, {\n    filePath,\n    humanOptionName: 'Test environment',\n    optionName: 'testEnvironment',\n    prefix: 'jest-environment-',\n    rootDir\n  });\n/**\n * Finds the watch plugins to use:\n *\n * 1. looks for jest-watch-<name> relative to project.\n * 1. looks for jest-watch-<name> relative to Jest.\n * 1. looks for <name> relative to project.\n * 1. looks for <name> relative to Jest.\n */\n\nexports.getTestEnvironment = getTestEnvironment;\n\nconst getWatchPlugin = (resolver, {filePath, rootDir}) =>\n  resolveWithPrefix(resolver, {\n    filePath,\n    humanOptionName: 'Watch plugin',\n    optionName: 'watchPlugins',\n    prefix: 'jest-watch-',\n    rootDir\n  });\n/**\n * Finds the runner to use:\n *\n * 1. looks for jest-runner-<name> relative to project.\n * 1. looks for jest-runner-<name> relative to Jest.\n * 1. looks for <name> relative to project.\n * 1. looks for <name> relative to Jest.\n */\n\nexports.getWatchPlugin = getWatchPlugin;\n\nconst getRunner = (resolver, {filePath, rootDir}) =>\n  resolveWithPrefix(resolver, {\n    filePath,\n    humanOptionName: 'Jest Runner',\n    optionName: 'runner',\n    prefix: 'jest-runner-',\n    rootDir\n  });\n\nexports.getRunner = getRunner;\n\n// newtype\nconst isJSONString = text =>\n  text != null &&\n  typeof text === 'string' &&\n  text.startsWith('{') &&\n  text.endsWith('}');\n\nexports.isJSONString = isJSONString;\n\nconst getSequencer = (resolver, {filePath, rootDir}) =>\n  resolveWithPrefix(resolver, {\n    filePath,\n    humanOptionName: 'Jest Sequencer',\n    optionName: 'testSequencer',\n    prefix: 'jest-sequencer-',\n    rootDir\n  });\n\nexports.getSequencer = getSequencer;\n"]},"metadata":{},"sourceType":"script"}