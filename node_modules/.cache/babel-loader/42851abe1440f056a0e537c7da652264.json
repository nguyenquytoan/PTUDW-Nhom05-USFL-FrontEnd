{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = collectHandles;\nexports.formatHandleErrors = formatHandleErrors;\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function _jestMessageUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _stripAnsi() {\n  const data = _interopRequireDefault(require('strip-ansi'));\n\n  _stripAnsi = function _stripAnsi() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction stackIsFromUser(stack) {\n  // Either the test file, or something required by it\n  if (stack.includes('Runtime.requireModule')) {\n    return true;\n  } // jest-jasmine it or describe call\n\n\n  if (stack.includes('asyncJestTest') || stack.includes('asyncJestLifecycle')) {\n    return true;\n  } // An async function call from within circus\n\n\n  if (stack.includes('callAsyncCircusFn')) {\n    // jest-circus it or describe call\n    return stack.includes('_callCircusTest') || stack.includes('_callCircusHook');\n  }\n\n  return false;\n} // Inspired by https://github.com/mafintosh/why-is-node-running/blob/master/index.js\n// Extracted as we want to format the result ourselves\n\n\nfunction collectHandles() {\n  const activeHandles = new Map();\n  let hook;\n\n  try {\n    const asyncHooks = require('async_hooks');\n\n    hook = asyncHooks.createHook({\n      destroy(asyncId) {\n        activeHandles.delete(asyncId);\n      },\n\n      init: function initHook(asyncId, type) {\n        if (type === 'PROMISE' || type === 'TIMERWRAP') {\n          return;\n        }\n\n        const error = new (_jestUtil().ErrorWithStack)(type, initHook);\n\n        if (stackIsFromUser(error.stack || '')) {\n          activeHandles.set(asyncId, error);\n        }\n      }\n    });\n    hook.enable();\n  } catch (e) {\n    const nodeMajor = Number(process.versions.node.split('.')[0]);\n\n    if (e.code === 'MODULE_NOT_FOUND' && nodeMajor < 8) {\n      throw new Error('You can only use --detectOpenHandles on Node 8 and newer.');\n    } else {\n      throw e;\n    }\n  }\n\n  return () => {\n    hook.disable();\n    const result = Array.from(activeHandles.values());\n    activeHandles.clear();\n    return result;\n  };\n}\n\nfunction formatHandleErrors(errors, config) {\n  const stacks = new Set();\n  return errors.map(err => (0, _jestMessageUtil().formatExecError)(err, config, {\n    noStackTrace: false\n  }, undefined, true)) // E.g. timeouts might give multiple traces to the same line of code\n  // This hairy filtering tries to remove entries with duplicate stack traces\n  .filter(handle => {\n    const ansiFree = (0, _stripAnsi().default)(handle);\n    const match = ansiFree.match(/\\s+at(.*)/);\n\n    if (!match || match.length < 2) {\n      return true;\n    }\n\n    const stack = ansiFree.substr(ansiFree.indexOf(match[1])).trim();\n\n    if (stacks.has(stack)) {\n      return false;\n    }\n\n    stacks.add(stack);\n    return true;\n  });\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@jest/core/build/collectHandles.js"],"names":["Object","defineProperty","exports","value","default","collectHandles","formatHandleErrors","_jestMessageUtil","data","require","_jestUtil","_stripAnsi","_interopRequireDefault","obj","__esModule","stackIsFromUser","stack","includes","activeHandles","Map","hook","asyncHooks","createHook","destroy","asyncId","delete","init","initHook","type","error","ErrorWithStack","set","enable","e","nodeMajor","Number","process","versions","node","split","code","Error","disable","result","Array","from","values","clear","errors","config","stacks","Set","map","err","formatExecError","noStackTrace","undefined","filter","handle","ansiFree","match","length","substr","indexOf","trim","has","add"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = collectHandles;\nexports.formatHandleErrors = formatHandleErrors;\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function _jestMessageUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _stripAnsi() {\n  const data = _interopRequireDefault(require('strip-ansi'));\n\n  _stripAnsi = function _stripAnsi() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction stackIsFromUser(stack) {\n  // Either the test file, or something required by it\n  if (stack.includes('Runtime.requireModule')) {\n    return true;\n  } // jest-jasmine it or describe call\n\n  if (stack.includes('asyncJestTest') || stack.includes('asyncJestLifecycle')) {\n    return true;\n  } // An async function call from within circus\n\n  if (stack.includes('callAsyncCircusFn')) {\n    // jest-circus it or describe call\n    return (\n      stack.includes('_callCircusTest') || stack.includes('_callCircusHook')\n    );\n  }\n\n  return false;\n} // Inspired by https://github.com/mafintosh/why-is-node-running/blob/master/index.js\n// Extracted as we want to format the result ourselves\n\nfunction collectHandles() {\n  const activeHandles = new Map();\n  let hook;\n\n  try {\n    const asyncHooks = require('async_hooks');\n\n    hook = asyncHooks.createHook({\n      destroy(asyncId) {\n        activeHandles.delete(asyncId);\n      },\n\n      init: function initHook(asyncId, type) {\n        if (type === 'PROMISE' || type === 'TIMERWRAP') {\n          return;\n        }\n\n        const error = new (_jestUtil()).ErrorWithStack(type, initHook);\n\n        if (stackIsFromUser(error.stack || '')) {\n          activeHandles.set(asyncId, error);\n        }\n      }\n    });\n    hook.enable();\n  } catch (e) {\n    const nodeMajor = Number(process.versions.node.split('.')[0]);\n\n    if (e.code === 'MODULE_NOT_FOUND' && nodeMajor < 8) {\n      throw new Error(\n        'You can only use --detectOpenHandles on Node 8 and newer.'\n      );\n    } else {\n      throw e;\n    }\n  }\n\n  return () => {\n    hook.disable();\n    const result = Array.from(activeHandles.values());\n    activeHandles.clear();\n    return result;\n  };\n}\n\nfunction formatHandleErrors(errors, config) {\n  const stacks = new Set();\n  return (\n    errors\n      .map(err =>\n        (0, _jestMessageUtil().formatExecError)(\n          err,\n          config,\n          {\n            noStackTrace: false\n          },\n          undefined,\n          true\n        )\n      ) // E.g. timeouts might give multiple traces to the same line of code\n      // This hairy filtering tries to remove entries with duplicate stack traces\n      .filter(handle => {\n        const ansiFree = (0, _stripAnsi().default)(handle);\n        const match = ansiFree.match(/\\s+at(.*)/);\n\n        if (!match || match.length < 2) {\n          return true;\n        }\n\n        const stack = ansiFree.substr(ansiFree.indexOf(match[1])).trim();\n\n        if (stacks.has(stack)) {\n          return false;\n        }\n\n        stacks.add(stack);\n        return true;\n      })\n  );\n}\n"]},"metadata":{},"sourceType":"script"}