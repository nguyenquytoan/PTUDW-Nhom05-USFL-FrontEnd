{"ast":null,"code":"'use strict';\n\nmodule.exports = function (grunt) {\n  // Project configuration.\n  grunt.initConfig({\n    // Metadata.\n    pkg: grunt.file.readJSON('package.json'),\n    banner: '/*! <%= pkg.name %> - v<%= pkg.version %>' + ' - <%= pkg.homepage %>' + ' - (c) <%= grunt.template.today(\"yyyy\") %> <%= pkg.author.name %>' + ' - licensed <%= pkg.license %> */\\n',\n    // Task configuration.\n    concat: {\n      options: {\n        banner: '<%= banner %>',\n        stripBanners: true\n      },\n      dist: {\n        src: ['lib/<%= pkg.name %>.js'],\n        dest: 'dist/<%= pkg.name %>.js'\n      }\n    },\n    uglify: {\n      options: {\n        banner: '<%= banner %>'\n      },\n      dist: {\n        src: '<%= concat.dist.dest %>',\n        dest: 'dist/<%= pkg.name %>.min.js'\n      }\n    },\n    jasmine: {\n      requirejs: {\n        src: [],\n        options: {\n          specs: 'test/*-test.js',\n          vendor: 'test/vendor/*.js',\n          helpers: 'test/*-helper.js',\n          template: require('grunt-template-jasmine-requirejs')\n        }\n      },\n      global: {\n        src: 'lib/**/*.js',\n        options: {\n          specs: 'test/global-integration.js',\n          vendor: 'test/vendor/*.js'\n        }\n      },\n      context: {\n        src: 'test/test-context-using-apply.generated.js',\n        options: {\n          specs: 'test/global-integration-with-new-context.js',\n          vendor: 'test/vendor/*.js'\n        }\n      },\n      withCoverage: {\n        src: 'lib/**/*.js',\n        options: {\n          specs: 'test/*-test.js',\n          vendor: 'test/vendor/*.js',\n          helpers: 'test/*-helper.js',\n          template: require('grunt-template-jasmine-istanbul'),\n          templateOptions: {\n            coverage: 'coverage/coverage.json',\n            report: [{\n              type: 'html',\n              options: {\n                dir: 'coverage'\n              }\n            }, {\n              type: 'lcov',\n              options: {\n                dir: 'coverage'\n              }\n            }],\n            template: require('grunt-template-jasmine-requirejs'),\n            templateOptions: {\n              requireConfig: {\n                paths: {\n                  \"lib\": '.grunt/grunt-contrib-jasmine/lib/'\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"jasmine_node\": {\n      test: {\n        options: {\n          match: \"node-integration.\",\n          matchall: true,\n          projectRoot: \"./test\",\n          useHelpers: false\n        }\n      }\n    },\n    coveralls: {\n      src: 'coverage/lcov.info'\n    },\n    open: {\n      jasmine: {\n        path: 'http://127.0.0.1:8000/_SpecRunner.html'\n      }\n    },\n    connect: {\n      test: {\n        port: 8000,\n        keepalive: true\n      }\n    },\n    'saucelabs-jasmine': {\n      // Requires valid SAUCE_USERNAME and SAUCE_ACCESS_KEY in env to run.\n      all: {\n        options: {\n          urls: ['http://localhost:8000/_SpecRunner.html'],\n          browsers: [{\n            \"browserName\": \"firefox\",\n            \"platform\": \"Windows 2003\",\n            \"version\": \"3.6\"\n          }, {\n            \"browserName\": \"firefox\",\n            \"platform\": \"Windows 2003\",\n            \"version\": \"4\"\n          }, {\n            \"browserName\": \"firefox\",\n            \"platform\": \"Windows 2003\",\n            \"version\": \"25\"\n          }, {\n            \"browserName\": \"safari\",\n            \"platform\": \"Mac 10.6\",\n            \"version\": \"5\"\n          }, {\n            \"browserName\": \"safari\",\n            \"platform\": \"Mac 10.8\",\n            \"version\": \"6\"\n          }, {\n            \"browserName\": \"googlechrome\",\n            \"platform\": \"Windows 7\"\n          }, {\n            \"browserName\": \"opera\",\n            \"platform\": \"Windows 2003\",\n            \"version\": \"12\"\n          }, // Disabled because old IE breaks the Jasmine runner; these have to be manually tested\n          // {\"browserName\": \"iehta\", \"platform\": \"Windows XP\", \"version\": \"6\"},\n          // {\"browserName\": \"iehta\", \"platform\": \"Windows XP\", \"version\": \"7\"},\n          // {\"browserName\": \"iehta\", \"platform\": \"Windows XP\", \"version\": \"8\"},\n          {\n            \"browserName\": \"iehta\",\n            \"platform\": \"Windows 7\",\n            \"version\": \"9\"\n          }, {\n            \"browserName\": \"iehta\",\n            \"platform\": \"Windows 7\",\n            \"version\": \"10\"\n          }, {\n            \"browserName\": \"opera\",\n            \"platform\": \"Windows 7\",\n            \"version\": \"12\"\n          }, {\n            \"browserName\": \"android\",\n            \"platform\": \"Linux\",\n            \"version\": \"4.0\"\n          }, {\n            \"browserName\": \"iphone\",\n            \"platform\": \"OS X 10.8\",\n            \"version\": \"6\"\n          }],\n          concurrency: 3,\n          detailedError: true,\n          testTimeout: 10000,\n          testInterval: 1000,\n          testReadyTimeout: 2000,\n          testname: 'loglevel jasmine test',\n          tags: [process.env.TRAVIS_REPO_SLUG || \"local\", process.env.TRAVIS_COMMIT || \"manual\"]\n        }\n      }\n    },\n    jshint: {\n      options: {\n        jshintrc: '.jshintrc'\n      },\n      gruntfile: {\n        src: 'Gruntfile.js'\n      },\n      lib: {\n        options: {\n          jshintrc: 'lib/.jshintrc'\n        },\n        src: ['lib/**/*.js']\n      },\n      test: {\n        options: {\n          jshintrc: 'test/.jshintrc'\n        },\n        src: ['test/*.js', '!test/*.generated.js']\n      }\n    },\n    watch: {\n      gruntfile: {\n        files: '<%= jshint.gruntfile.src %>',\n        tasks: ['jshint:gruntfile']\n      },\n      lib: {\n        files: '<%= jshint.lib.src %>',\n        tasks: ['jshint:lib', 'test']\n      },\n      test: {\n        files: '<%= jshint.test.src %>',\n        tasks: ['jshint:test', 'test']\n      }\n    },\n    qunit: {\n      all: ['test/*-qunit.html']\n    },\n    preprocess: {\n      \"test-context-using-apply\": {\n        src: 'test/test-context-using-apply.js',\n        dest: 'test/test-context-using-apply.generated.js'\n      }\n    },\n    clean: {\n      test: ['test/test-context-using-apply.generated.js']\n    }\n  }); // These plugins provide necessary tasks.\n\n  grunt.loadNpmTasks('grunt-contrib-concat');\n  grunt.loadNpmTasks('grunt-contrib-uglify');\n  grunt.loadNpmTasks('grunt-contrib-jasmine');\n  grunt.loadNpmTasks('grunt-coveralls');\n  grunt.loadNpmTasks('grunt-jasmine-node');\n  grunt.loadNpmTasks('grunt-contrib-jshint');\n  grunt.loadNpmTasks('grunt-contrib-watch');\n  grunt.loadNpmTasks('grunt-contrib-qunit');\n  grunt.loadNpmTasks('grunt-contrib-connect');\n  grunt.loadNpmTasks('grunt-open');\n  grunt.loadNpmTasks('grunt-saucelabs');\n  grunt.loadNpmTasks('grunt-preprocess');\n  grunt.loadNpmTasks('grunt-contrib-clean'); // Build a distributable release\n\n  grunt.registerTask('dist', ['test', 'concat', 'uglify']); // Check everything is good\n\n  grunt.registerTask('test', ['jshint', 'jasmine:requirejs', 'jasmine:global', 'preprocess', 'jasmine:context', 'clean:test', 'jasmine_node', 'jasmine:withCoverage', 'qunit']); // Test with a live server and an actual browser\n\n  grunt.registerTask('integration-test', ['jasmine:requirejs:src:build', 'open:jasmine', 'connect:test:keepalive']); // Test with lots of browsers on saucelabs. Requires valid SAUCE_USERNAME and SAUCE_ACCESS_KEY in env to run.\n\n  grunt.registerTask('saucelabs', ['jasmine:requirejs:src:build', 'connect:test', 'saucelabs-jasmine']); // Default task.\n\n  grunt.registerTask('default', 'test');\n  grunt.registerTask('ci', ['test', 'coveralls']);\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/loglevel/Gruntfile.js"],"names":["module","exports","grunt","initConfig","pkg","file","readJSON","banner","concat","options","stripBanners","dist","src","dest","uglify","jasmine","requirejs","specs","vendor","helpers","template","require","global","context","withCoverage","templateOptions","coverage","report","type","dir","requireConfig","paths","test","match","matchall","projectRoot","useHelpers","coveralls","open","path","connect","port","keepalive","all","urls","browsers","concurrency","detailedError","testTimeout","testInterval","testReadyTimeout","testname","tags","process","env","TRAVIS_REPO_SLUG","TRAVIS_COMMIT","jshint","jshintrc","gruntfile","lib","watch","files","tasks","qunit","preprocess","clean","loadNpmTasks","registerTask"],"mappings":"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","sourcesContent":["'use strict';\n\nmodule.exports = function (grunt) {\n\n    // Project configuration.\n    grunt.initConfig({\n        // Metadata.\n        pkg: grunt.file.readJSON('package.json'),\n        banner: '/*! <%= pkg.name %> - v<%= pkg.version %>' +\n                ' - <%= pkg.homepage %>' +\n                ' - (c) <%= grunt.template.today(\"yyyy\") %> <%= pkg.author.name %>' +\n                ' - licensed <%= pkg.license %> */\\n',\n        // Task configuration.\n        concat: {\n            options: {\n                banner: '<%= banner %>',\n                stripBanners: true\n            },\n            dist: {\n                src: ['lib/<%= pkg.name %>.js'],\n                dest: 'dist/<%= pkg.name %>.js'\n            }\n        },\n        uglify: {\n            options: {\n                banner: '<%= banner %>'\n            },\n            dist: {\n                src: '<%= concat.dist.dest %>',\n                dest: 'dist/<%= pkg.name %>.min.js'\n            }\n        },\n        jasmine: {\n            requirejs: {\n                src: [],\n                options: {\n                    specs: 'test/*-test.js',\n                    vendor: 'test/vendor/*.js',\n                    helpers: 'test/*-helper.js',\n                    template: require('grunt-template-jasmine-requirejs')\n                }\n            },\n            global: {\n                src: 'lib/**/*.js',\n                options: {\n                    specs: 'test/global-integration.js',\n                    vendor: 'test/vendor/*.js'\n                }\n            },\n            context: {\n                src: 'test/test-context-using-apply.generated.js',\n                options: {\n                    specs: 'test/global-integration-with-new-context.js',\n                    vendor: 'test/vendor/*.js'\n                }\n            },\n            withCoverage: {\n                src: 'lib/**/*.js',\n                options: {\n                    specs: 'test/*-test.js',\n                    vendor: 'test/vendor/*.js',\n                    helpers: 'test/*-helper.js',\n                    template: require('grunt-template-jasmine-istanbul'),\n                    templateOptions: {\n                        coverage: 'coverage/coverage.json',\n                        report: [\n                            {\n                                type: 'html',\n                                options: {\n                                    dir: 'coverage'\n                                }\n                            },\n                            {\n                                type: 'lcov',\n                                options: {\n                                    dir: 'coverage'\n                                }\n                            }\n                        ],\n\n                        template: require('grunt-template-jasmine-requirejs'),\n                        templateOptions: {\n                            requireConfig: {\n                                paths: {\n                                    \"lib\": '.grunt/grunt-contrib-jasmine/lib/'\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"jasmine_node\": {\n            test: {\n                options: {\n                    match: \"node-integration.\",\n                    matchall: true,\n                    projectRoot: \"./test\",\n                    useHelpers: false\n                }\n            }\n        },\n        coveralls: {\n            src: 'coverage/lcov.info'\n        },\n        open: {\n            jasmine: {\n                path: 'http://127.0.0.1:8000/_SpecRunner.html'\n            }\n        },\n        connect: {\n            test: {\n                port: 8000,\n                keepalive: true\n            }\n        },\n        'saucelabs-jasmine': {\n            // Requires valid SAUCE_USERNAME and SAUCE_ACCESS_KEY in env to run.\n            all: {\n                options: {\n                    urls: ['http://localhost:8000/_SpecRunner.html'],\n                    browsers: [\n                        {\"browserName\": \"firefox\", \"platform\": \"Windows 2003\", \"version\": \"3.6\"},\n                        {\"browserName\": \"firefox\", \"platform\": \"Windows 2003\", \"version\": \"4\"},\n                        {\"browserName\": \"firefox\", \"platform\": \"Windows 2003\", \"version\": \"25\"},\n                        {\"browserName\": \"safari\", \"platform\": \"Mac 10.6\", \"version\": \"5\"},\n                        {\"browserName\": \"safari\", \"platform\": \"Mac 10.8\", \"version\": \"6\"},\n                        {\"browserName\": \"googlechrome\", \"platform\": \"Windows 7\"},\n                        {\"browserName\": \"opera\", \"platform\": \"Windows 2003\", \"version\": \"12\"},\n                        // Disabled because old IE breaks the Jasmine runner; these have to be manually tested\n                        // {\"browserName\": \"iehta\", \"platform\": \"Windows XP\", \"version\": \"6\"},\n                        // {\"browserName\": \"iehta\", \"platform\": \"Windows XP\", \"version\": \"7\"},\n                        // {\"browserName\": \"iehta\", \"platform\": \"Windows XP\", \"version\": \"8\"},\n                        {\"browserName\": \"iehta\", \"platform\": \"Windows 7\", \"version\": \"9\"},\n                        {\"browserName\": \"iehta\", \"platform\": \"Windows 7\", \"version\": \"10\"},\n                        {\"browserName\": \"opera\", \"platform\": \"Windows 7\", \"version\": \"12\"},\n                        {\"browserName\": \"android\", \"platform\": \"Linux\", \"version\": \"4.0\"},\n                        {\"browserName\": \"iphone\", \"platform\": \"OS X 10.8\", \"version\": \"6\"}\n                    ],\n                    concurrency: 3,\n                    detailedError: true,\n                    testTimeout:10000,\n                    testInterval:1000,\n                    testReadyTimeout:2000,\n                    testname: 'loglevel jasmine test',\n                    tags: [process.env.TRAVIS_REPO_SLUG || \"local\", process.env.TRAVIS_COMMIT || \"manual\"]\n                }\n            }\n        },\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc'\n            },\n            gruntfile: {\n                src: 'Gruntfile.js'\n            },\n            lib: {\n                options: {\n                    jshintrc: 'lib/.jshintrc'\n                },\n                src: ['lib/**/*.js']\n            },\n            test: {\n                options: {\n                    jshintrc: 'test/.jshintrc'\n                },\n                src: ['test/*.js', '!test/*.generated.js']\n            }\n        },\n        watch: {\n            gruntfile: {\n                files: '<%= jshint.gruntfile.src %>',\n                tasks: ['jshint:gruntfile']\n            },\n            lib: {\n                files: '<%= jshint.lib.src %>',\n                tasks: ['jshint:lib', 'test']\n            },\n            test: {\n                files: '<%= jshint.test.src %>',\n                tasks: ['jshint:test', 'test']\n            }\n        },\n        qunit: {\n            all: ['test/*-qunit.html']\n        },\n        preprocess: {\n            \"test-context-using-apply\": {\n                src: 'test/test-context-using-apply.js',\n                dest: 'test/test-context-using-apply.generated.js'\n            }\n        },\n        clean:{\n            test:['test/test-context-using-apply.generated.js']\n        }\n    });\n\n    // These plugins provide necessary tasks.\n    grunt.loadNpmTasks('grunt-contrib-concat');\n    grunt.loadNpmTasks('grunt-contrib-uglify');\n    grunt.loadNpmTasks('grunt-contrib-jasmine');\n    grunt.loadNpmTasks('grunt-coveralls');\n    grunt.loadNpmTasks('grunt-jasmine-node');\n    grunt.loadNpmTasks('grunt-contrib-jshint');\n    grunt.loadNpmTasks('grunt-contrib-watch');\n    grunt.loadNpmTasks('grunt-contrib-qunit');\n\n    grunt.loadNpmTasks('grunt-contrib-connect');\n    grunt.loadNpmTasks('grunt-open');\n    grunt.loadNpmTasks('grunt-saucelabs');\n    grunt.loadNpmTasks('grunt-preprocess');\n    grunt.loadNpmTasks('grunt-contrib-clean');\n\n    // Build a distributable release\n    grunt.registerTask('dist', ['test', 'concat', 'uglify']);\n\n    // Check everything is good\n    grunt.registerTask('test', ['jshint', 'jasmine:requirejs', 'jasmine:global', 'preprocess', 'jasmine:context', 'clean:test', 'jasmine_node', 'jasmine:withCoverage', 'qunit']);\n\n    // Test with a live server and an actual browser\n    grunt.registerTask('integration-test', ['jasmine:requirejs:src:build', 'open:jasmine', 'connect:test:keepalive']);\n\n    // Test with lots of browsers on saucelabs. Requires valid SAUCE_USERNAME and SAUCE_ACCESS_KEY in env to run.\n    grunt.registerTask('saucelabs', ['jasmine:requirejs:src:build', 'connect:test', 'saucelabs-jasmine']);\n\n    // Default task.\n    grunt.registerTask('default', 'test');\n    grunt.registerTask('ci', ['test', 'coveralls']);\n\n};\n"]},"metadata":{},"sourceType":"script"}