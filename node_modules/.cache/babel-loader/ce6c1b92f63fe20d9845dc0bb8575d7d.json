{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst crypto = require(\"crypto\");\n\nconst fs = require(\"fs\");\n\nconst os = require(\"os\");\n\nconst path = require(\"path\");\n\nconst FsHelper_1 = require(\"./FsHelper\");\n\nclass CancellationToken {\n  constructor(typescript, cancellationFileName, isCancelled) {\n    this.typescript = typescript;\n    this.isCancelled = !!isCancelled;\n    this.cancellationFileName = cancellationFileName || crypto.randomBytes(64).toString('hex');\n    this.lastCancellationCheckTime = 0;\n  }\n\n  static createFromJSON(typescript, json) {\n    return new CancellationToken(typescript, json.cancellationFileName, json.isCancelled);\n  }\n\n  toJSON() {\n    return {\n      cancellationFileName: this.cancellationFileName,\n      isCancelled: this.isCancelled\n    };\n  }\n\n  getCancellationFilePath() {\n    return path.join(os.tmpdir(), this.cancellationFileName);\n  }\n\n  isCancellationRequested() {\n    if (this.isCancelled) {\n      return true;\n    }\n\n    const time = Date.now();\n    const duration = Math.abs(time - this.lastCancellationCheckTime);\n\n    if (duration > 10) {\n      // check no more than once every 10ms\n      this.lastCancellationCheckTime = time;\n      this.isCancelled = FsHelper_1.fileExistsSync(this.getCancellationFilePath());\n    }\n\n    return this.isCancelled;\n  }\n\n  throwIfCancellationRequested() {\n    if (this.isCancellationRequested()) {\n      throw new this.typescript.OperationCanceledException();\n    }\n  }\n\n  requestCancellation() {\n    fs.writeFileSync(this.getCancellationFilePath(), '');\n    this.isCancelled = true;\n  }\n\n  cleanupCancellation() {\n    if (this.isCancelled && FsHelper_1.fileExistsSync(this.getCancellationFilePath())) {\n      fs.unlinkSync(this.getCancellationFilePath());\n      this.isCancelled = false;\n    }\n  }\n\n}\n\nexports.CancellationToken = CancellationToken;","map":{"version":3,"sources":["../src/CancellationToken.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,MAAA,EAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AACA,MAAA,EAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AACA,MAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AAIA,MAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAOA,MAAa,iBAAb,CAA8B;AAI5B,EAAA,WAAA,CACU,UADV,EAEE,oBAFF,EAGE,WAHF,EAGuB;AAFb,SAAA,UAAA,GAAA,UAAA;AAIR,SAAK,WAAL,GAAmB,CAAC,CAAC,WAArB;AACA,SAAK,oBAAL,GACE,oBAAoB,IAAI,MAAM,CAAC,WAAP,CAAmB,EAAnB,EAAuB,QAAvB,CAAgC,KAAhC,CAD1B;AAEA,SAAK,yBAAL,GAAiC,CAAjC;AACD;;AAEM,SAAO,cAAP,CACL,UADK,EAEL,IAFK,EAEsB;AAE3B,WAAO,IAAI,iBAAJ,CACL,UADK,EAEL,IAAI,CAAC,oBAFA,EAGL,IAAI,CAAC,WAHA,CAAP;AAKD;;AAEM,EAAA,MAAM,GAAA;AACX,WAAO;AACL,MAAA,oBAAoB,EAAE,KAAK,oBADtB;AAEL,MAAA,WAAW,EAAE,KAAK;AAFb,KAAP;AAID;;AAEM,EAAA,uBAAuB,GAAA;AAC5B,WAAO,IAAI,CAAC,IAAL,CAAU,EAAE,CAAC,MAAH,EAAV,EAAuB,KAAK,oBAA5B,CAAP;AACD;;AAEM,EAAA,uBAAuB,GAAA;AAC5B,QAAI,KAAK,WAAT,EAAsB;AACpB,aAAO,IAAP;AACD;;AAED,UAAM,IAAI,GAAG,IAAI,CAAC,GAAL,EAAb;AACA,UAAM,QAAQ,GAAG,IAAI,CAAC,GAAL,CAAS,IAAI,GAAG,KAAK,yBAArB,CAAjB;;AAEA,QAAI,QAAQ,GAAG,EAAf,EAAmB;AACjB;AACA,WAAK,yBAAL,GAAiC,IAAjC;AACA,WAAK,WAAL,GAAmB,UAAA,CAAA,cAAA,CAAe,KAAK,uBAAL,EAAf,CAAnB;AACD;;AAED,WAAO,KAAK,WAAZ;AACD;;AAEM,EAAA,4BAA4B,GAAA;AACjC,QAAI,KAAK,uBAAL,EAAJ,EAAoC;AAClC,YAAM,IAAI,KAAK,UAAL,CAAgB,0BAApB,EAAN;AACD;AACF;;AAEM,EAAA,mBAAmB,GAAA;AACxB,IAAA,EAAE,CAAC,aAAH,CAAiB,KAAK,uBAAL,EAAjB,EAAiD,EAAjD;AACA,SAAK,WAAL,GAAmB,IAAnB;AACD;;AAEM,EAAA,mBAAmB,GAAA;AACxB,QAAI,KAAK,WAAL,IAAoB,UAAA,CAAA,cAAA,CAAe,KAAK,uBAAL,EAAf,CAAxB,EAAwE;AACtE,MAAA,EAAE,CAAC,UAAH,CAAc,KAAK,uBAAL,EAAd;AACA,WAAK,WAAL,GAAmB,KAAnB;AACD;AACF;;AAtE2B;;AAA9B,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto = require(\"crypto\");\nconst fs = require(\"fs\");\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst FsHelper_1 = require(\"./FsHelper\");\nclass CancellationToken {\n    constructor(typescript, cancellationFileName, isCancelled) {\n        this.typescript = typescript;\n        this.isCancelled = !!isCancelled;\n        this.cancellationFileName =\n            cancellationFileName || crypto.randomBytes(64).toString('hex');\n        this.lastCancellationCheckTime = 0;\n    }\n    static createFromJSON(typescript, json) {\n        return new CancellationToken(typescript, json.cancellationFileName, json.isCancelled);\n    }\n    toJSON() {\n        return {\n            cancellationFileName: this.cancellationFileName,\n            isCancelled: this.isCancelled\n        };\n    }\n    getCancellationFilePath() {\n        return path.join(os.tmpdir(), this.cancellationFileName);\n    }\n    isCancellationRequested() {\n        if (this.isCancelled) {\n            return true;\n        }\n        const time = Date.now();\n        const duration = Math.abs(time - this.lastCancellationCheckTime);\n        if (duration > 10) {\n            // check no more than once every 10ms\n            this.lastCancellationCheckTime = time;\n            this.isCancelled = FsHelper_1.fileExistsSync(this.getCancellationFilePath());\n        }\n        return this.isCancelled;\n    }\n    throwIfCancellationRequested() {\n        if (this.isCancellationRequested()) {\n            throw new this.typescript.OperationCanceledException();\n        }\n    }\n    requestCancellation() {\n        fs.writeFileSync(this.getCancellationFilePath(), '');\n        this.isCancelled = true;\n    }\n    cleanupCancellation() {\n        if (this.isCancelled && FsHelper_1.fileExistsSync(this.getCancellationFilePath())) {\n            fs.unlinkSync(this.getCancellationFilePath());\n            this.isCancelled = false;\n        }\n    }\n}\nexports.CancellationToken = CancellationToken;\n//# sourceMappingURL=CancellationToken.js.map"]},"metadata":{},"sourceType":"script"}