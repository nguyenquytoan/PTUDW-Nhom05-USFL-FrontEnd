{"ast":null,"code":"var List = require('css-tree').List;\n\nvar walk = require('css-tree').walk;\n\nvar utils = require('./utils');\n\nfunction calcSelectorLength(list) {\n  var length = 0;\n  list.each(function (data) {\n    length += data.id.length + 1;\n  });\n  return length - 1;\n}\n\nfunction calcDeclarationsLength(tokens) {\n  var length = 0;\n\n  for (var i = 0; i < tokens.length; i++) {\n    length += tokens[i].length;\n  }\n\n  return length + // declarations\n  tokens.length - 1 // delimeters\n  ;\n}\n\nfunction processRule(node, item, list) {\n  var avoidRulesMerge = this.block !== null ? this.block.avoidRulesMerge : false;\n  var selectors = node.prelude.children;\n  var block = node.block;\n  var disallowDownMarkers = Object.create(null);\n  var allowMergeUp = true;\n  var allowMergeDown = true;\n  list.prevUntil(item.prev, function (prev, prevItem) {\n    var prevBlock = prev.block;\n    var prevType = prev.type;\n\n    if (prevType !== 'Rule') {\n      var unsafe = utils.unsafeToSkipNode.call(selectors, prev);\n\n      if (!unsafe && prevType === 'Atrule' && prevBlock) {\n        walk(prevBlock, {\n          visit: 'Rule',\n          enter: function (node) {\n            node.prelude.children.each(function (data) {\n              disallowDownMarkers[data.compareMarker] = true;\n            });\n          }\n        });\n      }\n\n      return unsafe;\n    }\n\n    var prevSelectors = prev.prelude.children;\n\n    if (node.pseudoSignature !== prev.pseudoSignature) {\n      return true;\n    }\n\n    allowMergeDown = !prevSelectors.some(function (selector) {\n      return selector.compareMarker in disallowDownMarkers;\n    }); // try prev ruleset if simpleselectors has no equal specifity and element selector\n\n    if (!allowMergeDown && !allowMergeUp) {\n      return true;\n    } // try to join by selectors\n\n\n    if (allowMergeUp && utils.isEqualSelectors(prevSelectors, selectors)) {\n      prevBlock.children.appendList(block.children);\n      list.remove(item);\n      return true;\n    } // try to join by properties\n\n\n    var diff = utils.compareDeclarations(block.children, prevBlock.children); // console.log(diff.eq, diff.ne1, diff.ne2);\n\n    if (diff.eq.length) {\n      if (!diff.ne1.length && !diff.ne2.length) {\n        // equal blocks\n        if (allowMergeDown) {\n          utils.addSelectors(selectors, prevSelectors);\n          list.remove(prevItem);\n        }\n\n        return true;\n      } else if (!avoidRulesMerge) {\n        /* probably we don't need to prevent those merges for @keyframes\n           TODO: need to be checked */\n        if (diff.ne1.length && !diff.ne2.length) {\n          // prevBlock is subset block\n          var selectorLength = calcSelectorLength(selectors);\n          var blockLength = calcDeclarationsLength(diff.eq); // declarations length\n\n          if (allowMergeUp && selectorLength < blockLength) {\n            utils.addSelectors(prevSelectors, selectors);\n            block.children = new List().fromArray(diff.ne1);\n          }\n        } else if (!diff.ne1.length && diff.ne2.length) {\n          // node is subset of prevBlock\n          var selectorLength = calcSelectorLength(prevSelectors);\n          var blockLength = calcDeclarationsLength(diff.eq); // declarations length\n\n          if (allowMergeDown && selectorLength < blockLength) {\n            utils.addSelectors(selectors, prevSelectors);\n            prevBlock.children = new List().fromArray(diff.ne2);\n          }\n        } else {\n          // diff.ne1.length && diff.ne2.length\n          // extract equal block\n          var newSelector = {\n            type: 'SelectorList',\n            loc: null,\n            children: utils.addSelectors(prevSelectors.copy(), selectors)\n          };\n          var newBlockLength = calcSelectorLength(newSelector.children) + 2; // selectors length + curly braces length\n\n          var blockLength = calcDeclarationsLength(diff.eq); // declarations length\n          // create new ruleset if declarations length greater than\n          // ruleset description overhead\n\n          if (blockLength >= newBlockLength) {\n            var newItem = list.createItem({\n              type: 'Rule',\n              loc: null,\n              prelude: newSelector,\n              block: {\n                type: 'Block',\n                loc: null,\n                children: new List().fromArray(diff.eq)\n              },\n              pseudoSignature: node.pseudoSignature\n            });\n            block.children = new List().fromArray(diff.ne1);\n            prevBlock.children = new List().fromArray(diff.ne2overrided);\n\n            if (allowMergeUp) {\n              list.insert(newItem, prevItem);\n            } else {\n              list.insert(newItem, item);\n            }\n\n            return true;\n          }\n        }\n      }\n    }\n\n    if (allowMergeUp) {\n      // TODO: disallow up merge only if any property interception only (i.e. diff.ne2overrided.length > 0);\n      // await property families to find property interception correctly\n      allowMergeUp = !prevSelectors.some(function (prevSelector) {\n        return selectors.some(function (selector) {\n          return selector.compareMarker === prevSelector.compareMarker;\n        });\n      });\n    }\n\n    prevSelectors.each(function (data) {\n      disallowDownMarkers[data.compareMarker] = true;\n    });\n  });\n}\n\nmodule.exports = function restructRule(ast) {\n  walk(ast, {\n    visit: 'Rule',\n    reverse: true,\n    enter: processRule\n  });\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/csso/lib/restructure/8-restructRuleset.js"],"names":["List","require","walk","utils","calcSelectorLength","list","length","each","data","id","calcDeclarationsLength","tokens","i","processRule","node","item","avoidRulesMerge","block","selectors","prelude","children","disallowDownMarkers","Object","create","allowMergeUp","allowMergeDown","prevUntil","prev","prevItem","prevBlock","prevType","type","unsafe","unsafeToSkipNode","call","visit","enter","compareMarker","prevSelectors","pseudoSignature","some","selector","isEqualSelectors","appendList","remove","diff","compareDeclarations","eq","ne1","ne2","addSelectors","selectorLength","blockLength","fromArray","newSelector","loc","copy","newBlockLength","newItem","createItem","ne2overrided","insert","prevSelector","module","exports","restructRule","ast","reverse"],"mappings":"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","sourcesContent":["var List = require('css-tree').List;\nvar walk = require('css-tree').walk;\nvar utils = require('./utils');\n\nfunction calcSelectorLength(list) {\n    var length = 0;\n\n    list.each(function(data) {\n        length += data.id.length + 1;\n    });\n\n    return length - 1;\n}\n\nfunction calcDeclarationsLength(tokens) {\n    var length = 0;\n\n    for (var i = 0; i < tokens.length; i++) {\n        length += tokens[i].length;\n    }\n\n    return (\n        length +          // declarations\n        tokens.length - 1 // delimeters\n    );\n}\n\nfunction processRule(node, item, list) {\n    var avoidRulesMerge = this.block !== null ? this.block.avoidRulesMerge : false;\n    var selectors = node.prelude.children;\n    var block = node.block;\n    var disallowDownMarkers = Object.create(null);\n    var allowMergeUp = true;\n    var allowMergeDown = true;\n\n    list.prevUntil(item.prev, function(prev, prevItem) {\n        var prevBlock = prev.block;\n        var prevType = prev.type;\n\n        if (prevType !== 'Rule') {\n            var unsafe = utils.unsafeToSkipNode.call(selectors, prev);\n\n            if (!unsafe && prevType === 'Atrule' && prevBlock) {\n                walk(prevBlock, {\n                    visit: 'Rule',\n                    enter: function(node) {\n                        node.prelude.children.each(function(data) {\n                            disallowDownMarkers[data.compareMarker] = true;\n                        });\n                    }\n                });\n            }\n\n            return unsafe;\n        }\n\n        var prevSelectors = prev.prelude.children;\n\n        if (node.pseudoSignature !== prev.pseudoSignature) {\n            return true;\n        }\n\n        allowMergeDown = !prevSelectors.some(function(selector) {\n            return selector.compareMarker in disallowDownMarkers;\n        });\n\n        // try prev ruleset if simpleselectors has no equal specifity and element selector\n        if (!allowMergeDown && !allowMergeUp) {\n            return true;\n        }\n\n        // try to join by selectors\n        if (allowMergeUp && utils.isEqualSelectors(prevSelectors, selectors)) {\n            prevBlock.children.appendList(block.children);\n            list.remove(item);\n            return true;\n        }\n\n        // try to join by properties\n        var diff = utils.compareDeclarations(block.children, prevBlock.children);\n\n        // console.log(diff.eq, diff.ne1, diff.ne2);\n\n        if (diff.eq.length) {\n            if (!diff.ne1.length && !diff.ne2.length) {\n                // equal blocks\n                if (allowMergeDown) {\n                    utils.addSelectors(selectors, prevSelectors);\n                    list.remove(prevItem);\n                }\n\n                return true;\n            } else if (!avoidRulesMerge) { /* probably we don't need to prevent those merges for @keyframes\n                                              TODO: need to be checked */\n\n                if (diff.ne1.length && !diff.ne2.length) {\n                    // prevBlock is subset block\n                    var selectorLength = calcSelectorLength(selectors);\n                    var blockLength = calcDeclarationsLength(diff.eq); // declarations length\n\n                    if (allowMergeUp && selectorLength < blockLength) {\n                        utils.addSelectors(prevSelectors, selectors);\n                        block.children = new List().fromArray(diff.ne1);\n                    }\n                } else if (!diff.ne1.length && diff.ne2.length) {\n                    // node is subset of prevBlock\n                    var selectorLength = calcSelectorLength(prevSelectors);\n                    var blockLength = calcDeclarationsLength(diff.eq); // declarations length\n\n                    if (allowMergeDown && selectorLength < blockLength) {\n                        utils.addSelectors(selectors, prevSelectors);\n                        prevBlock.children = new List().fromArray(diff.ne2);\n                    }\n                } else {\n                    // diff.ne1.length && diff.ne2.length\n                    // extract equal block\n                    var newSelector = {\n                        type: 'SelectorList',\n                        loc: null,\n                        children: utils.addSelectors(prevSelectors.copy(), selectors)\n                    };\n                    var newBlockLength = calcSelectorLength(newSelector.children) + 2; // selectors length + curly braces length\n                    var blockLength = calcDeclarationsLength(diff.eq); // declarations length\n\n                    // create new ruleset if declarations length greater than\n                    // ruleset description overhead\n                    if (blockLength >= newBlockLength) {\n                        var newItem = list.createItem({\n                            type: 'Rule',\n                            loc: null,\n                            prelude: newSelector,\n                            block: {\n                                type: 'Block',\n                                loc: null,\n                                children: new List().fromArray(diff.eq)\n                            },\n                            pseudoSignature: node.pseudoSignature\n                        });\n\n                        block.children = new List().fromArray(diff.ne1);\n                        prevBlock.children = new List().fromArray(diff.ne2overrided);\n\n                        if (allowMergeUp) {\n                            list.insert(newItem, prevItem);\n                        } else {\n                            list.insert(newItem, item);\n                        }\n\n                        return true;\n                    }\n                }\n            }\n        }\n\n        if (allowMergeUp) {\n            // TODO: disallow up merge only if any property interception only (i.e. diff.ne2overrided.length > 0);\n            // await property families to find property interception correctly\n            allowMergeUp = !prevSelectors.some(function(prevSelector) {\n                return selectors.some(function(selector) {\n                    return selector.compareMarker === prevSelector.compareMarker;\n                });\n            });\n        }\n\n        prevSelectors.each(function(data) {\n            disallowDownMarkers[data.compareMarker] = true;\n        });\n    });\n}\n\nmodule.exports = function restructRule(ast) {\n    walk(ast, {\n        visit: 'Rule',\n        reverse: true,\n        enter: processRule\n    });\n};\n"]},"metadata":{},"sourceType":"script"}