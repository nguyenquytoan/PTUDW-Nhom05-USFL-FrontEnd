{"ast":null,"code":"var test = require('tape'),\n    raf = require('./index.js');\n\ntest('continues to emit events', function (t) {\n  t.plan(11);\n  var start = new Date().getTime(),\n      times = 0;\n  raf(function tick(dt) {\n    t.ok(dt >= 0, 'time has passed: ' + dt);\n\n    if (++times == 10) {\n      var elapsed = new Date().getTime() - start;\n      t.ok(elapsed >= 150, 'should take at least 9 frames worth of wall time: ' + elapsed);\n      t.end();\n    } else {\n      raf(tick);\n    }\n  });\n});\ntest('cancel removes callbacks from queue', function (t) {\n  t.plan(6);\n\n  function cb1() {\n    cb1.called = true;\n  }\n\n  function cb2() {\n    cb2.called = true;\n  }\n\n  function cb3() {\n    cb3.called = true;\n  }\n\n  var handle1 = raf(cb1);\n  t.ok(handle1, 'returns a handle');\n  var handle2 = raf(cb2);\n  t.ok(handle2, 'returns a handle');\n  var handle3 = raf(cb3);\n  t.ok(handle3, 'returns a handle');\n  raf.cancel(handle2);\n  raf(function () {\n    t.ok(cb1.called, 'callback was invoked');\n    t.notOk(cb2.called, 'callback was cancelled');\n    t.ok(cb3.called, 'callback was invoked');\n    t.end();\n  });\n});\ntest('raf should throw on errors', function (t) {\n  t.plan(1);\n\n  var onError = function () {\n    t.pass('error bubbled up to event loop');\n  };\n\n  if (typeof window !== 'undefined') {\n    window.onerror = onError;\n  } else if (typeof process !== 'undefined') {\n    process.on('uncaughtException', onError);\n  }\n\n  raf(function () {\n    throw new Error('foo');\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/raf/test.js"],"names":["test","require","raf","t","plan","start","Date","getTime","times","tick","dt","ok","elapsed","end","cb1","called","cb2","cb3","handle1","handle2","handle3","cancel","notOk","onError","pass","window","onerror","process","on","Error"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAAA,IACIC,GAAG,GAAGD,OAAO,CAAC,YAAD,CADjB;;AAGAD,IAAI,CAAC,0BAAD,EAA6B,UAASG,CAAT,EAAY;AAC3CA,EAAAA,CAAC,CAACC,IAAF,CAAO,EAAP;AAEA,MAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AAAA,MACIC,KAAK,GAAG,CADZ;AAGAN,EAAAA,GAAG,CAAC,SAASO,IAAT,CAAcC,EAAd,EAAkB;AACpBP,IAAAA,CAAC,CAACQ,EAAF,CAAKD,EAAE,IAAI,CAAX,EAAc,sBAAsBA,EAApC;;AACA,QAAG,EAAEF,KAAF,IAAW,EAAd,EAAkB;AAChB,UAAII,OAAO,GAAI,IAAIN,IAAJ,GAAWC,OAAX,KAAuBF,KAAtC;AACAF,MAAAA,CAAC,CAACQ,EAAF,CAAKC,OAAO,IAAI,GAAhB,EAAqB,uDAAuDA,OAA5E;AACAT,MAAAA,CAAC,CAACU,GAAF;AACD,KAJD,MAIO;AACLX,MAAAA,GAAG,CAACO,IAAD,CAAH;AACD;AACF,GATE,CAAH;AAUD,CAhBG,CAAJ;AAkBAT,IAAI,CAAC,qCAAD,EAAwC,UAASG,CAAT,EAAY;AACtDA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP;;AAEA,WAASU,GAAT,GAAe;AAAEA,IAAAA,GAAG,CAACC,MAAJ,GAAa,IAAb;AAAmB;;AACpC,WAASC,GAAT,GAAe;AAAEA,IAAAA,GAAG,CAACD,MAAJ,GAAa,IAAb;AAAmB;;AACpC,WAASE,GAAT,GAAe;AAAEA,IAAAA,GAAG,CAACF,MAAJ,GAAa,IAAb;AAAmB;;AAEpC,MAAIG,OAAO,GAAGhB,GAAG,CAACY,GAAD,CAAjB;AACAX,EAAAA,CAAC,CAACQ,EAAF,CAAKO,OAAL,EAAc,kBAAd;AACA,MAAIC,OAAO,GAAGjB,GAAG,CAACc,GAAD,CAAjB;AACAb,EAAAA,CAAC,CAACQ,EAAF,CAAKQ,OAAL,EAAc,kBAAd;AACA,MAAIC,OAAO,GAAGlB,GAAG,CAACe,GAAD,CAAjB;AACAd,EAAAA,CAAC,CAACQ,EAAF,CAAKS,OAAL,EAAc,kBAAd;AAEAlB,EAAAA,GAAG,CAACmB,MAAJ,CAAWF,OAAX;AAEAjB,EAAAA,GAAG,CAAC,YAAW;AACbC,IAAAA,CAAC,CAACQ,EAAF,CAAKG,GAAG,CAACC,MAAT,EAAiB,sBAAjB;AACAZ,IAAAA,CAAC,CAACmB,KAAF,CAAQN,GAAG,CAACD,MAAZ,EAAoB,wBAApB;AACAZ,IAAAA,CAAC,CAACQ,EAAF,CAAKM,GAAG,CAACF,MAAT,EAAiB,sBAAjB;AACAZ,IAAAA,CAAC,CAACU,GAAF;AACD,GALE,CAAH;AAMD,CAtBG,CAAJ;AAwBAb,IAAI,CAAC,4BAAD,EAA+B,UAASG,CAAT,EAAY;AAC7CA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP;;AAEA,MAAImB,OAAO,GAAG,YAAW;AACvBpB,IAAAA,CAAC,CAACqB,IAAF,CAAO,gCAAP;AACD,GAFD;;AAIA,MAAG,OAAOC,MAAP,KAAkB,WAArB,EAAkC;AAChCA,IAAAA,MAAM,CAACC,OAAP,GAAiBH,OAAjB;AACD,GAFD,MAEO,IAAG,OAAOI,OAAP,KAAmB,WAAtB,EAAmC;AACxCA,IAAAA,OAAO,CAACC,EAAR,CAAW,mBAAX,EAAgCL,OAAhC;AACD;;AAEDrB,EAAAA,GAAG,CAAC,YAAW;AACb,UAAM,IAAI2B,KAAJ,CAAU,KAAV,CAAN;AACD,GAFE,CAAH;AAGD,CAhBG,CAAJ","sourcesContent":["var test = require('tape')\n  , raf = require('./index.js')\n\ntest('continues to emit events', function(t) {\n  t.plan(11)\n\n  var start = new Date().getTime()\n    , times = 0\n\n  raf(function tick(dt) {\n    t.ok(dt >= 0, 'time has passed: ' + dt)\n    if(++times == 10) {\n      var elapsed = (new Date().getTime() - start)\n      t.ok(elapsed >= 150, 'should take at least 9 frames worth of wall time: ' + elapsed)\n      t.end()\n    } else {\n      raf(tick)\n    }\n  })\n})\n\ntest('cancel removes callbacks from queue', function(t) {\n  t.plan(6)\n\n  function cb1() { cb1.called = true }\n  function cb2() { cb2.called = true }\n  function cb3() { cb3.called = true }\n\n  var handle1 = raf(cb1)\n  t.ok(handle1, 'returns a handle')\n  var handle2 = raf(cb2)\n  t.ok(handle2, 'returns a handle')\n  var handle3 = raf(cb3)\n  t.ok(handle3, 'returns a handle')\n\n  raf.cancel(handle2)\n\n  raf(function() {\n    t.ok(cb1.called, 'callback was invoked')\n    t.notOk(cb2.called, 'callback was cancelled')\n    t.ok(cb3.called, 'callback was invoked')\n    t.end()\n  })\n})\n\ntest('raf should throw on errors', function(t) {\n  t.plan(1)\n\n  var onError = function() {\n    t.pass('error bubbled up to event loop')\n  }\n\n  if(typeof window !== 'undefined') {\n    window.onerror = onError\n  } else if(typeof process !== 'undefined') {\n    process.on('uncaughtException', onError)\n  }\n\n  raf(function() {\n    throw new Error('foo')\n  })\n})\n"]},"metadata":{},"sourceType":"script"}