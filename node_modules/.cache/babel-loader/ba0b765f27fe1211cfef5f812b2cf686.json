{"ast":null,"code":"var Buffer = require('buffer').Buffer;\n\nvar fs = require('fs');\n\nvar test = require('tape');\n\nvar UAParser = require('ua-parser-js');\n\nvar http = require('../..');\n\nvar browser = new UAParser().setUA(navigator.userAgent).getBrowser();\nvar browserName = browser.name;\nvar browserVersion = browser.major; // Binary streaming doesn't work in IE10 or below\n\nvar skipStreamingCheck = browserName === 'IE' && browserVersion <= 10; // Binary data gets corrupted in IE8 or below\n\nvar skipVerification = browserName === 'IE' && browserVersion <= 8; // IE8 tends to throw up modal dialogs complaining about scripts running too long\n// Since streaming doesn't actually work there anyway, just use one copy\n\nvar COPIES = skipVerification ? 1 : 20;\nvar MIN_PIECES = 2;\nvar referenceOnce = fs.readFileSync(__dirname + '/../server/static/browserify.png');\nvar reference = new Buffer(referenceOnce.length * COPIES);\n\nfor (var i = 0; i < COPIES; i++) {\n  referenceOnce.copy(reference, referenceOnce.length * i);\n}\n\ntest('binary streaming', function (t) {\n  http.get({\n    path: '/browserify.png?copies=' + COPIES,\n    mode: 'allow-wrong-content-type'\n  }, function (res) {\n    var buffers = [];\n    res.on('end', function () {\n      if (skipVerification) t.skip('binary data not preserved on IE <= 8');else t.ok(reference.equals(Buffer.concat(buffers)), 'contents match');\n      if (skipStreamingCheck) t.skip('streaming not available on IE <= 8');else t.ok(buffers.length >= MIN_PIECES, 'received in multiple parts');\n      t.end();\n    });\n    res.on('data', function (data) {\n      buffers.push(data);\n    });\n  });\n});\ntest('large binary request without streaming', function (t) {\n  http.get({\n    path: '/browserify.png?copies=' + COPIES,\n    mode: 'default'\n  }, function (res) {\n    var buffers = [];\n    res.on('end', function () {\n      if (skipVerification) t.skip('binary data not preserved on IE <= 8');else t.ok(reference.equals(Buffer.concat(buffers)), 'contents match');\n      t.end();\n    });\n    res.on('data', function (data) {\n      buffers.push(data);\n    });\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/stream-http/test/browser/binary-streaming.js"],"names":["Buffer","require","fs","test","UAParser","http","browser","setUA","navigator","userAgent","getBrowser","browserName","name","browserVersion","major","skipStreamingCheck","skipVerification","COPIES","MIN_PIECES","referenceOnce","readFileSync","__dirname","reference","length","i","copy","t","get","path","mode","res","buffers","on","skip","ok","equals","concat","end","data","push"],"mappings":"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","sourcesContent":["var Buffer = require('buffer').Buffer\nvar fs = require('fs')\nvar test = require('tape')\nvar UAParser = require('ua-parser-js')\n\nvar http = require('../..')\n\nvar browser = (new UAParser()).setUA(navigator.userAgent).getBrowser()\nvar browserName = browser.name\nvar browserVersion = browser.major\n// Binary streaming doesn't work in IE10 or below\nvar skipStreamingCheck = (browserName === 'IE' && browserVersion <= 10)\n\n// Binary data gets corrupted in IE8 or below\nvar skipVerification = (browserName === 'IE' && browserVersion <= 8)\n\n// IE8 tends to throw up modal dialogs complaining about scripts running too long\n// Since streaming doesn't actually work there anyway, just use one copy\nvar COPIES = skipVerification ? 1 : 20\nvar MIN_PIECES = 2\n\nvar referenceOnce = fs.readFileSync(__dirname + '/../server/static/browserify.png')\nvar reference = new Buffer(referenceOnce.length * COPIES)\nfor(var i = 0; i < COPIES; i++) {\n\treferenceOnce.copy(reference, referenceOnce.length * i)\n}\n\ntest('binary streaming', function (t) {\n\thttp.get({\n\t\tpath: '/browserify.png?copies=' + COPIES,\n\t\tmode: 'allow-wrong-content-type'\n\t}, function (res) {\n\t\tvar buffers = []\n\t\tres.on('end', function () {\n\t\t\tif (skipVerification)\n\t\t\t\tt.skip('binary data not preserved on IE <= 8')\n\t\t\telse\n\t\t\t\tt.ok(reference.equals(Buffer.concat(buffers)), 'contents match')\n\n\t\t\tif (skipStreamingCheck)\n\t\t\t\tt.skip('streaming not available on IE <= 8')\n\t\t\telse\n\t\t\t\tt.ok(buffers.length >= MIN_PIECES, 'received in multiple parts')\n\t\t\tt.end()\n\t\t})\n\n\t\tres.on('data', function (data) {\n\t\t\tbuffers.push(data)\n\t\t})\n\t})\n})\n\ntest('large binary request without streaming', function (t) {\n\thttp.get({\n\t\tpath: '/browserify.png?copies=' + COPIES,\n\t\tmode: 'default',\n\t}, function (res) {\n\t\tvar buffers = []\n\t\tres.on('end', function () {\n\t\t\tif (skipVerification)\n\t\t\t\tt.skip('binary data not preserved on IE <= 8')\n\t\t\telse\n\t\t\t\tt.ok(reference.equals(Buffer.concat(buffers)), 'contents match')\n\t\t\tt.end()\n\t\t})\n\n\t\tres.on('data', function (data) {\n\t\t\tbuffers.push(data)\n\t\t})\n\t})\n})"]},"metadata":{},"sourceType":"script"}