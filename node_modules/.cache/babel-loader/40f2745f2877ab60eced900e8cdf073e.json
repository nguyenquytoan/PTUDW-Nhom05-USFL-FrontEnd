{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nconst pify = require('pify');\n\nfunction type(fn, fn2, fp) {\n  if (typeof fp !== 'string') {\n    return Promise.reject(new TypeError(`Expected a string, got ${typeof fp}`));\n  }\n\n  return pify(fs[fn])(fp).then(stats => stats[fn2]()).catch(err => {\n    if (err.code === 'ENOENT') {\n      return false;\n    }\n\n    throw err;\n  });\n}\n\nfunction typeSync(fn, fn2, fp) {\n  if (typeof fp !== 'string') {\n    throw new TypeError(`Expected a string, got ${typeof fp}`);\n  }\n\n  try {\n    return fs[fn](fp)[fn2]();\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      return false;\n    }\n\n    throw err;\n  }\n}\n\nexports.file = type.bind(null, 'stat', 'isFile');\nexports.dir = type.bind(null, 'stat', 'isDirectory');\nexports.symlink = type.bind(null, 'lstat', 'isSymbolicLink');\nexports.fileSync = typeSync.bind(null, 'statSync', 'isFile');\nexports.dirSync = typeSync.bind(null, 'statSync', 'isDirectory');\nexports.symlinkSync = typeSync.bind(null, 'lstatSync', 'isSymbolicLink');","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/path-type/index.js"],"names":["fs","require","pify","type","fn","fn2","fp","Promise","reject","TypeError","then","stats","catch","err","code","typeSync","exports","file","bind","dir","symlink","fileSync","dirSync","symlinkSync"],"mappings":"AAAA;;AACA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,SAASE,IAAT,CAAcC,EAAd,EAAkBC,GAAlB,EAAuBC,EAAvB,EAA2B;AAC1B,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC3B,WAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,SAAJ,CAAe,0BAAyB,OAAOH,EAAG,EAAlD,CAAf,CAAP;AACA;;AAED,SAAOJ,IAAI,CAACF,EAAE,CAACI,EAAD,CAAH,CAAJ,CAAaE,EAAb,EACLI,IADK,CACAC,KAAK,IAAIA,KAAK,CAACN,GAAD,CAAL,EADT,EAELO,KAFK,CAECC,GAAG,IAAI;AACb,QAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;AAC1B,aAAO,KAAP;AACA;;AAED,UAAMD,GAAN;AACA,GARK,CAAP;AASA;;AAED,SAASE,QAAT,CAAkBX,EAAlB,EAAsBC,GAAtB,EAA2BC,EAA3B,EAA+B;AAC9B,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC3B,UAAM,IAAIG,SAAJ,CAAe,0BAAyB,OAAOH,EAAG,EAAlD,CAAN;AACA;;AAED,MAAI;AACH,WAAON,EAAE,CAACI,EAAD,CAAF,CAAOE,EAAP,EAAWD,GAAX,GAAP;AACA,GAFD,CAEE,OAAOQ,GAAP,EAAY;AACb,QAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;AAC1B,aAAO,KAAP;AACA;;AAED,UAAMD,GAAN;AACA;AACD;;AAEDG,OAAO,CAACC,IAAR,GAAed,IAAI,CAACe,IAAL,CAAU,IAAV,EAAgB,MAAhB,EAAwB,QAAxB,CAAf;AACAF,OAAO,CAACG,GAAR,GAAchB,IAAI,CAACe,IAAL,CAAU,IAAV,EAAgB,MAAhB,EAAwB,aAAxB,CAAd;AACAF,OAAO,CAACI,OAAR,GAAkBjB,IAAI,CAACe,IAAL,CAAU,IAAV,EAAgB,OAAhB,EAAyB,gBAAzB,CAAlB;AACAF,OAAO,CAACK,QAAR,GAAmBN,QAAQ,CAACG,IAAT,CAAc,IAAd,EAAoB,UAApB,EAAgC,QAAhC,CAAnB;AACAF,OAAO,CAACM,OAAR,GAAkBP,QAAQ,CAACG,IAAT,CAAc,IAAd,EAAoB,UAApB,EAAgC,aAAhC,CAAlB;AACAF,OAAO,CAACO,WAAR,GAAsBR,QAAQ,CAACG,IAAT,CAAc,IAAd,EAAoB,WAApB,EAAiC,gBAAjC,CAAtB","sourcesContent":["'use strict';\nconst fs = require('fs');\nconst pify = require('pify');\n\nfunction type(fn, fn2, fp) {\n\tif (typeof fp !== 'string') {\n\t\treturn Promise.reject(new TypeError(`Expected a string, got ${typeof fp}`));\n\t}\n\n\treturn pify(fs[fn])(fp)\n\t\t.then(stats => stats[fn2]())\n\t\t.catch(err => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthrow err;\n\t\t});\n}\n\nfunction typeSync(fn, fn2, fp) {\n\tif (typeof fp !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof fp}`);\n\t}\n\n\ttry {\n\t\treturn fs[fn](fp)[fn2]();\n\t} catch (err) {\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow err;\n\t}\n}\n\nexports.file = type.bind(null, 'stat', 'isFile');\nexports.dir = type.bind(null, 'stat', 'isDirectory');\nexports.symlink = type.bind(null, 'lstat', 'isSymbolicLink');\nexports.fileSync = typeSync.bind(null, 'statSync', 'isFile');\nexports.dirSync = typeSync.bind(null, 'statSync', 'isDirectory');\nexports.symlinkSync = typeSync.bind(null, 'lstatSync', 'isSymbolicLink');\n"]},"metadata":{},"sourceType":"script"}