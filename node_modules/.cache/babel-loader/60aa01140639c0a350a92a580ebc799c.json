{"ast":null,"code":"\"use strict\";\n\nvar assert = require(\"chai\").assert,\n    isObject = require(\"../../object/is\");\n\ndescribe(\"object/is\", function () {\n  it(\"Should return true on object\", function () {\n    assert.equal(isObject({}), true);\n  });\n  it(\"Should return true on function\", function () {\n    assert.equal(isObject(function () {\n      return true;\n    }), true);\n  });\n  it(\"Should return true on array\", function () {\n    assert.equal(isObject([]), true);\n  });\n\n  if (typeof Object.create === \"function\") {\n    it(\"Should return true on object with no prototype\", function () {\n      assert.equal(isObject(Object.create(null)), true);\n    });\n  }\n\n  it(\"Should return false on string\", function () {\n    assert.equal(isObject(\"foo\"), false);\n  });\n  it(\"Should return false on empty string\", function () {\n    assert.equal(isObject(\"\"), false);\n  });\n  it(\"Should return false on number\", function () {\n    assert.equal(isObject(123), false);\n  });\n  it(\"Should return false on NaN\", function () {\n    assert.equal(isObject(NaN), false);\n  });\n  it(\"Should return false on boolean\", function () {\n    assert.equal(isObject(true), false);\n  });\n\n  if (typeof Symbol === \"function\") {\n    it(\"Should return false on symbol\", function () {\n      assert.equal(isObject(Symbol(\"foo\")), false);\n    });\n  }\n\n  it(\"Should return false on null\", function () {\n    assert.equal(isObject(null), false);\n  });\n  it(\"Should return false on undefined\", function () {\n    assert.equal(isObject(void 0), false);\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/type/test/object/is.js"],"names":["assert","require","isObject","describe","it","equal","Object","create","NaN","Symbol"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAKC,OAAO,CAAC,MAAD,CAAP,CAAgBD,MAA/B;AAAA,IACIE,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CADtB;;AAGAE,QAAQ,CAAC,WAAD,EAAc,YAAY;AACjCC,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAAC,EAAD,CAArB,EAA2B,IAA3B;AAAmC,GAAlF,CAAF;AACAE,EAAAA,EAAE,CAAC,gCAAD,EAAmC,YAAY;AAChDJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAAC,YAAY;AAAE,aAAO,IAAP;AAAc,KAA7B,CAArB,EAAqD,IAArD;AACA,GAFC,CAAF;AAGAE,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAAC,EAAD,CAArB,EAA2B,IAA3B;AAAmC,GAAjF,CAAF;;AACA,MAAI,OAAOI,MAAM,CAACC,MAAd,KAAyB,UAA7B,EAAyC;AACxCH,IAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAY;AAChEJ,MAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAACI,MAAM,CAACC,MAAP,CAAc,IAAd,CAAD,CAArB,EAA4C,IAA5C;AACA,KAFC,CAAF;AAGA;;AACDH,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAAC,KAAD,CAArB,EAA8B,KAA9B;AAAuC,GAAvF,CAAF;AACAE,EAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAAC,EAAD,CAArB,EAA2B,KAA3B;AAAoC,GAA1F,CAAF;AACAE,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAAC,GAAD,CAArB,EAA4B,KAA5B;AAAqC,GAArF,CAAF;AACAE,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAACM,GAAD,CAArB,EAA4B,KAA5B;AAAqC,GAAlF,CAAF;AACAJ,EAAAA,EAAE,CAAC,gCAAD,EAAmC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAAC,IAAD,CAArB,EAA6B,KAA7B;AAAsC,GAAvF,CAAF;;AACA,MAAI,OAAOO,MAAP,KAAkB,UAAtB,EAAkC;AACjCL,IAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAY;AAC/CJ,MAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAACO,MAAM,CAAC,KAAD,CAAP,CAArB,EAAsC,KAAtC;AACA,KAFC,CAAF;AAGA;;AAEDL,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAAC,IAAD,CAArB,EAA6B,KAA7B;AAAsC,GAApF,CAAF;AACAE,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,QAAQ,CAAC,KAAK,CAAN,CAArB,EAA+B,KAA/B;AAAwC,GAA3F,CAAF;AACA,CAxBO,CAAR","sourcesContent":["\"use strict\";\n\nvar assert   = require(\"chai\").assert\n  , isObject = require(\"../../object/is\");\n\ndescribe(\"object/is\", function () {\n\tit(\"Should return true on object\", function () { assert.equal(isObject({}), true); });\n\tit(\"Should return true on function\", function () {\n\t\tassert.equal(isObject(function () { return true; }), true);\n\t});\n\tit(\"Should return true on array\", function () { assert.equal(isObject([]), true); });\n\tif (typeof Object.create === \"function\") {\n\t\tit(\"Should return true on object with no prototype\", function () {\n\t\t\tassert.equal(isObject(Object.create(null)), true);\n\t\t});\n\t}\n\tit(\"Should return false on string\", function () { assert.equal(isObject(\"foo\"), false); });\n\tit(\"Should return false on empty string\", function () { assert.equal(isObject(\"\"), false); });\n\tit(\"Should return false on number\", function () { assert.equal(isObject(123), false); });\n\tit(\"Should return false on NaN\", function () { assert.equal(isObject(NaN), false); });\n\tit(\"Should return false on boolean\", function () { assert.equal(isObject(true), false); });\n\tif (typeof Symbol === \"function\") {\n\t\tit(\"Should return false on symbol\", function () {\n\t\t\tassert.equal(isObject(Symbol(\"foo\")), false);\n\t\t});\n\t}\n\n\tit(\"Should return false on null\", function () { assert.equal(isObject(null), false); });\n\tit(\"Should return false on undefined\", function () { assert.equal(isObject(void 0), false); });\n});\n"]},"metadata":{},"sourceType":"script"}