{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst OVERRIDABLE_RULES = ['keyframes', 'counter-style'];\nconst SCOPE_RULES = ['media', 'supports'];\n\nfunction isOverridable(name) {\n  return ~OVERRIDABLE_RULES.indexOf(_postcss2.default.vendor.unprefixed(name.toLowerCase()));\n}\n\nfunction isScope(name) {\n  return ~SCOPE_RULES.indexOf(_postcss2.default.vendor.unprefixed(name.toLowerCase()));\n}\n\nfunction getScope(node) {\n  let current = node.parent;\n  const chain = [node.name.toLowerCase(), node.params];\n\n  do {\n    if (current.type === 'atrule' && isScope(current.name)) {\n      chain.unshift(current.name + ' ' + current.params);\n    }\n\n    current = current.parent;\n  } while (current);\n\n  return chain.join('|');\n}\n\nexports.default = _postcss2.default.plugin('postcss-discard-overridden', () => {\n  return css => {\n    const cache = {};\n    const rules = [];\n    css.walkAtRules(node => {\n      if (isOverridable(node.name)) {\n        const scope = getScope(node);\n        cache[scope] = node;\n        rules.push({\n          node,\n          scope\n        });\n      }\n    });\n    rules.forEach(rule => {\n      if (cache[rule.scope] !== rule.node) {\n        rule.node.remove();\n      }\n    });\n  };\n});\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-discard-overridden/dist/index.js"],"names":["Object","defineProperty","exports","value","_postcss","require","_postcss2","_interopRequireDefault","obj","__esModule","default","OVERRIDABLE_RULES","SCOPE_RULES","isOverridable","name","indexOf","vendor","unprefixed","toLowerCase","isScope","getScope","node","current","parent","chain","params","type","unshift","join","plugin","css","cache","rules","walkAtRules","scope","push","forEach","rule","remove","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACH,QAAD,CAAtC;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,MAAMG,iBAAiB,GAAG,CAAC,WAAD,EAAc,eAAd,CAA1B;AACA,MAAMC,WAAW,GAAG,CAAC,OAAD,EAAU,UAAV,CAApB;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,SAAO,CAACH,iBAAiB,CAACI,OAAlB,CAA0BT,SAAS,CAACI,OAAV,CAAkBM,MAAlB,CAAyBC,UAAzB,CAAoCH,IAAI,CAACI,WAAL,EAApC,CAA1B,CAAR;AACH;;AAED,SAASC,OAAT,CAAiBL,IAAjB,EAAuB;AACnB,SAAO,CAACF,WAAW,CAACG,OAAZ,CAAoBT,SAAS,CAACI,OAAV,CAAkBM,MAAlB,CAAyBC,UAAzB,CAAoCH,IAAI,CAACI,WAAL,EAApC,CAApB,CAAR;AACH;;AAED,SAASE,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,MAAIC,OAAO,GAAGD,IAAI,CAACE,MAAnB;AACA,QAAMC,KAAK,GAAG,CAACH,IAAI,CAACP,IAAL,CAAUI,WAAV,EAAD,EAA0BG,IAAI,CAACI,MAA/B,CAAd;;AACA,KAAG;AACC,QAAIH,OAAO,CAACI,IAAR,KAAiB,QAAjB,IAA6BP,OAAO,CAACG,OAAO,CAACR,IAAT,CAAxC,EAAwD;AACpDU,MAAAA,KAAK,CAACG,OAAN,CAAcL,OAAO,CAACR,IAAR,GAAe,GAAf,GAAqBQ,OAAO,CAACG,MAA3C;AACH;;AACDH,IAAAA,OAAO,GAAGA,OAAO,CAACC,MAAlB;AACH,GALD,QAKSD,OALT;;AAMA,SAAOE,KAAK,CAACI,IAAN,CAAW,GAAX,CAAP;AACH;;AAED1B,OAAO,CAACQ,OAAR,GAAkBJ,SAAS,CAACI,OAAV,CAAkBmB,MAAlB,CAAyB,4BAAzB,EAAuD,MAAM;AAC3E,SAAOC,GAAG,IAAI;AACV,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,KAAK,GAAG,EAAd;AACAF,IAAAA,GAAG,CAACG,WAAJ,CAAgBZ,IAAI,IAAI;AACpB,UAAIR,aAAa,CAACQ,IAAI,CAACP,IAAN,CAAjB,EAA8B;AAC1B,cAAMoB,KAAK,GAAGd,QAAQ,CAACC,IAAD,CAAtB;AACAU,QAAAA,KAAK,CAACG,KAAD,CAAL,GAAeb,IAAf;AACAW,QAAAA,KAAK,CAACG,IAAN,CAAW;AACPd,UAAAA,IADO;AAEPa,UAAAA;AAFO,SAAX;AAIH;AACJ,KATD;AAUAF,IAAAA,KAAK,CAACI,OAAN,CAAcC,IAAI,IAAI;AAClB,UAAIN,KAAK,CAACM,IAAI,CAACH,KAAN,CAAL,KAAsBG,IAAI,CAAChB,IAA/B,EAAqC;AACjCgB,QAAAA,IAAI,CAAChB,IAAL,CAAUiB,MAAV;AACH;AACJ,KAJD;AAKH,GAlBD;AAmBH,CApBiB,CAAlB;AAqBAC,MAAM,CAACrC,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst OVERRIDABLE_RULES = ['keyframes', 'counter-style'];\nconst SCOPE_RULES = ['media', 'supports'];\n\nfunction isOverridable(name) {\n    return ~OVERRIDABLE_RULES.indexOf(_postcss2.default.vendor.unprefixed(name.toLowerCase()));\n}\n\nfunction isScope(name) {\n    return ~SCOPE_RULES.indexOf(_postcss2.default.vendor.unprefixed(name.toLowerCase()));\n}\n\nfunction getScope(node) {\n    let current = node.parent;\n    const chain = [node.name.toLowerCase(), node.params];\n    do {\n        if (current.type === 'atrule' && isScope(current.name)) {\n            chain.unshift(current.name + ' ' + current.params);\n        }\n        current = current.parent;\n    } while (current);\n    return chain.join('|');\n}\n\nexports.default = _postcss2.default.plugin('postcss-discard-overridden', () => {\n    return css => {\n        const cache = {};\n        const rules = [];\n        css.walkAtRules(node => {\n            if (isOverridable(node.name)) {\n                const scope = getScope(node);\n                cache[scope] = node;\n                rules.push({\n                    node,\n                    scope\n                });\n            }\n        });\n        rules.forEach(rule => {\n            if (cache[rule.scope] !== rule.node) {\n                rule.node.remove();\n            }\n        });\n    };\n});\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}