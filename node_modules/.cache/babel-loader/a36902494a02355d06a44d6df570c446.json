{"ast":null,"code":"// adapted from http://nedbatchelder.com/blog/200712.html#e20071211T054956\nvar NUMBER_PATTERN = /([0-9]+)/;\n\nfunction naturalCompare(value1, value2) {\n  var keys1 = ('' + value1).split(NUMBER_PATTERN).map(tryParseInt);\n  var keys2 = ('' + value2).split(NUMBER_PATTERN).map(tryParseInt);\n  var key1;\n  var key2;\n  var compareFirst = Math.min(keys1.length, keys2.length);\n  var i, l;\n\n  for (i = 0, l = compareFirst; i < l; i++) {\n    key1 = keys1[i];\n    key2 = keys2[i];\n\n    if (key1 != key2) {\n      return key1 > key2 ? 1 : -1;\n    }\n  }\n\n  return keys1.length > keys2.length ? 1 : keys1.length == keys2.length ? 0 : -1;\n}\n\nfunction tryParseInt(value) {\n  return '' + parseInt(value) == value ? parseInt(value) : value;\n}\n\nmodule.exports = naturalCompare;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/utils/natural-compare.js"],"names":["NUMBER_PATTERN","naturalCompare","value1","value2","keys1","split","map","tryParseInt","keys2","key1","key2","compareFirst","Math","min","length","i","l","value","parseInt","module","exports"],"mappings":"AAAA;AAEA,IAAIA,cAAc,GAAG,UAArB;;AAEA,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,MAAhC,EAAwC;AACtC,MAAIC,KAAK,GAAG,CAAC,KAAKF,MAAN,EAAcG,KAAd,CAAoBL,cAApB,EAAoCM,GAApC,CAAwCC,WAAxC,CAAZ;AACA,MAAIC,KAAK,GAAG,CAAC,KAAKL,MAAN,EAAcE,KAAd,CAAoBL,cAApB,EAAoCM,GAApC,CAAwCC,WAAxC,CAAZ;AACA,MAAIE,IAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAST,KAAK,CAACU,MAAf,EAAuBN,KAAK,CAACM,MAA7B,CAAnB;AACA,MAAIC,CAAJ,EAAOC,CAAP;;AAEA,OAAKD,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGL,YAAhB,EAA8BI,CAAC,GAAGC,CAAlC,EAAqCD,CAAC,EAAtC,EAA0C;AACxCN,IAAAA,IAAI,GAAGL,KAAK,CAACW,CAAD,CAAZ;AACAL,IAAAA,IAAI,GAAGF,KAAK,CAACO,CAAD,CAAZ;;AAEA,QAAIN,IAAI,IAAIC,IAAZ,EAAkB;AAChB,aAAOD,IAAI,GAAGC,IAAP,GAAc,CAAd,GAAkB,CAAC,CAA1B;AACD;AACF;;AAED,SAAON,KAAK,CAACU,MAAN,GAAeN,KAAK,CAACM,MAArB,GAA8B,CAA9B,GAAmCV,KAAK,CAACU,MAAN,IAAgBN,KAAK,CAACM,MAAtB,GAA+B,CAA/B,GAAmC,CAAC,CAA9E;AACD;;AAED,SAASP,WAAT,CAAqBU,KAArB,EAA4B;AAC1B,SAAQ,KAAKC,QAAQ,CAACD,KAAD,CAAd,IAA0BA,KAA1B,GACLC,QAAQ,CAACD,KAAD,CADH,GAELA,KAFF;AAGD;;AAEDE,MAAM,CAACC,OAAP,GAAiBnB,cAAjB","sourcesContent":["// adapted from http://nedbatchelder.com/blog/200712.html#e20071211T054956\n\nvar NUMBER_PATTERN = /([0-9]+)/;\n\nfunction naturalCompare(value1, value2) {\n  var keys1 = ('' + value1).split(NUMBER_PATTERN).map(tryParseInt);\n  var keys2 = ('' + value2).split(NUMBER_PATTERN).map(tryParseInt);\n  var key1;\n  var key2;\n  var compareFirst = Math.min(keys1.length, keys2.length);\n  var i, l;\n\n  for (i = 0, l = compareFirst; i < l; i++) {\n    key1 = keys1[i];\n    key2 = keys2[i];\n\n    if (key1 != key2) {\n      return key1 > key2 ? 1 : -1;\n    }\n  }\n\n  return keys1.length > keys2.length ? 1 : (keys1.length == keys2.length ? 0 : -1);\n}\n\nfunction tryParseInt(value) {\n  return ('' + parseInt(value)) == value ?\n    parseInt(value) :\n    value;\n}\n\nmodule.exports = naturalCompare;\n"]},"metadata":{},"sourceType":"script"}