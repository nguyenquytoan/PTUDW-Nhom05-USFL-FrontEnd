{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar path = require(\"path\");\n\nvar loaderUtils = require(\"loader-utils\");\n\nvar validateOptions = require('schema-utils');\n\nmodule.exports = function () {};\n\nmodule.exports.pitch = function (request) {\n  if (this.cacheable) this.cacheable();\n  var options = loaderUtils.getOptions(this) || {};\n  validateOptions(require('./options.json'), options, 'Style Loader');\n  options.hmr = typeof options.hmr === 'undefined' ? true : options.hmr; // The variable is needed, because the function should be inlined.\n  // If is just stored it in options, JSON.stringify will quote\n  // the function and it would be just a string at runtime\n\n  var insertInto;\n\n  if (typeof options.insertInto === \"function\") {\n    insertInto = options.insertInto.toString();\n  } // We need to check if it a string, or variable will be \"undefined\"\n  // and the loader crashes\n\n\n  if (typeof options.insertInto === \"string\") {\n    insertInto = '\"' + options.insertInto + '\"';\n  }\n\n  var hmr = [// Hot Module Replacement,\n  \"if(module.hot) {\", // When the styles change, update the <style> tags\n  \"\tmodule.hot.accept(\" + loaderUtils.stringifyRequest(this, \"!!\" + request) + \", function() {\", \"\t\tvar newContent = require(\" + loaderUtils.stringifyRequest(this, \"!!\" + request) + \");\", \"\", \"\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\", \"\", \"\t\tvar locals = (function(a, b) {\", \"\t\t\tvar key, idx = 0;\", \"\", \"\t\t\tfor(key in a) {\", \"\t\t\t\tif(!b || a[key] !== b[key]) return false;\", \"\t\t\t\tidx++;\", \"\t\t\t}\", \"\", \"\t\t\tfor(key in b) idx--;\", \"\", \"\t\t\treturn idx === 0;\", \"\t\t}(content.locals, newContent.locals));\", \"\", // This error is caught and not shown and causes a full reload\n  \"\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\", \"\", \"\t\tupdate(newContent);\", \"\t});\", \"\", // When the module is disposed, remove the <style> tags\n  \"\tmodule.hot.dispose(function() { update(); });\", \"}\"].join(\"\\n\");\n  return [// Style Loader\n  // Adds CSS to the DOM by adding a <style> tag\n  \"\", // Load styles\n  \"var content = require(\" + loaderUtils.stringifyRequest(this, \"!!\" + request) + \");\", \"\", \"if(typeof content === 'string') content = [[module.id, content, '']];\", \"\", // Transform styles\",\n  \"var transform;\", \"var insertInto;\", \"\", options.transform ? \"transform = require(\" + loaderUtils.stringifyRequest(this, \"!\" + path.resolve(options.transform)) + \");\" : \"\", \"\", \"var options = \" + JSON.stringify(options), \"\", \"options.transform = transform\", \"options.insertInto = \" + insertInto + \";\", \"\", // Add styles to the DOM\n  \"var update = require(\" + loaderUtils.stringifyRequest(this, \"!\" + path.join(__dirname, \"lib\", \"addStyles.js\")) + \")(content, options);\", \"\", \"if(content.locals) module.exports = content.locals;\", \"\", options.hmr ? hmr : \"\"].join(\"\\n\");\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/style-loader/index.js"],"names":["path","require","loaderUtils","validateOptions","module","exports","pitch","request","cacheable","options","getOptions","hmr","insertInto","toString","stringifyRequest","join","transform","resolve","JSON","stringify","__dirname"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar path = require(\"path\");\n\nvar loaderUtils = require(\"loader-utils\");\nvar validateOptions = require('schema-utils');\n\nmodule.exports = function () {};\n\nmodule.exports.pitch = function (request) {\n\tif (this.cacheable) this.cacheable();\n\n\tvar options = loaderUtils.getOptions(this) || {};\n\n\tvalidateOptions(require('./options.json'), options, 'Style Loader')\n\n\toptions.hmr = typeof options.hmr === 'undefined' ? true : options.hmr;\n\n\t// The variable is needed, because the function should be inlined.\n\t// If is just stored it in options, JSON.stringify will quote\n\t// the function and it would be just a string at runtime\n\tvar insertInto;\n\n\tif (typeof options.insertInto === \"function\") {\n\t\tinsertInto = options.insertInto.toString();\n\t}\n\n\t// We need to check if it a string, or variable will be \"undefined\"\n\t// and the loader crashes\n\tif (typeof options.insertInto === \"string\") {\n\t\tinsertInto = '\"' + options.insertInto + '\"';\n\t}\n\n\tvar hmr = [\n\t\t// Hot Module Replacement,\n\t\t\"if(module.hot) {\",\n\t\t// When the styles change, update the <style> tags\n\t\t\"\tmodule.hot.accept(\" + loaderUtils.stringifyRequest(this, \"!!\" + request) + \", function() {\",\n\t\t\"\t\tvar newContent = require(\" + loaderUtils.stringifyRequest(this, \"!!\" + request) + \");\",\n\t\t\"\",\n\t\t\"\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\",\n\t\t\"\",\n\t\t\"\t\tvar locals = (function(a, b) {\",\n\t\t\"\t\t\tvar key, idx = 0;\",\n\t\t\"\",\n\t\t\"\t\t\tfor(key in a) {\",\n\t\t\"\t\t\t\tif(!b || a[key] !== b[key]) return false;\",\n\t\t\"\t\t\t\tidx++;\",\n\t\t\"\t\t\t}\",\n\t\t\"\",\n\t\t\"\t\t\tfor(key in b) idx--;\",\n\t\t\"\",\n\t\t\"\t\t\treturn idx === 0;\",\n\t\t\"\t\t}(content.locals, newContent.locals));\",\n\t\t\"\",\n\t\t// This error is caught and not shown and causes a full reload\n\t\t\"\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\",\n\t\t\"\",\n\t\t\"\t\tupdate(newContent);\",\n\t\t\"\t});\",\n\t\t\"\",\n\t\t// When the module is disposed, remove the <style> tags\n\t\t\"\tmodule.hot.dispose(function() { update(); });\",\n\t\t\"}\"\n\t].join(\"\\n\");\n\n\treturn [\n\t\t// Style Loader\n\t\t// Adds CSS to the DOM by adding a <style> tag\n\t\t\"\",\n\t\t// Load styles\n\t\t\"var content = require(\" + loaderUtils.stringifyRequest(this, \"!!\" + request) + \");\",\n\t\t\"\",\n\t\t\"if(typeof content === 'string') content = [[module.id, content, '']];\",\n\t\t\"\",\n\t\t// Transform styles\",\n\t\t\"var transform;\",\n\t\t\"var insertInto;\",\n\t\t\"\",\n\t\toptions.transform ? \"transform = require(\" + loaderUtils.stringifyRequest(this, \"!\" + path.resolve(options.transform)) + \");\" : \"\",\n \t\t\"\",\n\t\t\"var options = \" + JSON.stringify(options),\n\t\t\"\",\n\t\t\"options.transform = transform\",\n\t\t\"options.insertInto = \" + insertInto + \";\",\n\t\t\"\",\n\t\t// Add styles to the DOM\n\t\t\"var update = require(\" + loaderUtils.stringifyRequest(this, \"!\" + path.join(__dirname, \"lib\", \"addStyles.js\")) + \")(content, options);\",\n\t\t\"\",\n\t\t\"if(content.locals) module.exports = content.locals;\",\n\t\t\"\",\n\t\toptions.hmr ? hmr : \"\"\n\t].join(\"\\n\");\n};\n"]},"metadata":{},"sourceType":"script"}