{"ast":null,"code":"import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport class HotObservable extends Subject {\n  constructor(messages, scheduler) {\n    super();\n    this.messages = messages;\n    this.subscriptions = [];\n    this.scheduler = scheduler;\n  }\n\n  _subscribe(subscriber) {\n    const subject = this;\n    const index = subject.logSubscribedFrame();\n    const subscription = new Subscription();\n    subscription.add(new Subscription(() => {\n      subject.logUnsubscribedFrame(index);\n    }));\n    subscription.add(super._subscribe(subscriber));\n    return subscription;\n  }\n\n  setup() {\n    const subject = this;\n    const messagesLength = subject.messages.length;\n\n    for (var i = 0; i < messagesLength; i++) {\n      (() => {\n        var message = subject.messages[i];\n        subject.scheduler.schedule(() => {\n          message.notification.observe(subject);\n        }, message.frame);\n      })();\n    }\n  }\n\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);","map":{"version":3,"sources":["../../../src/internal/testing/HotObservable.ts"],"names":[],"mappings":"AAAA,SAAS,OAAT,QAAwB,YAAxB;AAEA,SAAS,YAAT,QAA6B,iBAA7B;AAIA,SAAS,oBAAT,QAAqC,wBAArC;AACA,SAAS,WAAT,QAA4B,qBAA5B;AAOA,OAAM,MAAO,aAAP,SAAgC,OAAhC,CAA0C;AAM9C,EAAA,WAAA,CAAmB,QAAnB,EACY,SADZ,EACgC;AAC9B;AAFiB,SAAA,QAAA,GAAA,QAAA;AALZ,SAAA,aAAA,GAAmC,EAAnC;AAQL,SAAK,SAAL,GAAiB,SAAjB;AACD;;AAGD,EAAA,UAAU,CAAC,UAAD,EAA4B;AACpC,UAAM,OAAO,GAAqB,IAAlC;AACA,UAAM,KAAK,GAAG,OAAO,CAAC,kBAAR,EAAd;AACA,UAAM,YAAY,GAAG,IAAI,YAAJ,EAArB;AACA,IAAA,YAAY,CAAC,GAAb,CAAiB,IAAI,YAAJ,CAAiB,MAAK;AACrC,MAAA,OAAO,CAAC,oBAAR,CAA6B,KAA7B;AACD,KAFgB,CAAjB;AAGA,IAAA,YAAY,CAAC,GAAb,CAAiB,MAAM,UAAN,CAAiB,UAAjB,CAAjB;AACA,WAAO,YAAP;AACD;;AAED,EAAA,KAAK,GAAA;AACH,UAAM,OAAO,GAAG,IAAhB;AACA,UAAM,cAAc,GAAG,OAAO,CAAC,QAAR,CAAiB,MAAxC;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,cAApB,EAAoC,CAAC,EAArC,EAAyC;AACvC,OAAC,MAAK;AACJ,YAAI,OAAO,GAAG,OAAO,CAAC,QAAR,CAAiB,CAAjB,CAAd;AAEA,QAAA,OAAO,CAAC,SAAR,CAAkB,QAAlB,CACE,MAAK;AAAG,UAAA,OAAO,CAAC,YAAR,CAAqB,OAArB,CAA6B,OAA7B;AAAwC,SADlD,EAEE,OAAO,CAAC,KAFV;AAID,OAPD;AAQD;AACF;;AAtC6C;AAwChD,WAAW,CAAC,aAAD,EAAgB,CAAC,oBAAD,CAAhB,CAAX","sourcesContent":["import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport class HotObservable extends Subject {\n    constructor(messages, scheduler) {\n        super();\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    _subscribe(subscriber) {\n        const subject = this;\n        const index = subject.logSubscribedFrame();\n        const subscription = new Subscription();\n        subscription.add(new Subscription(() => {\n            subject.logUnsubscribedFrame(index);\n        }));\n        subscription.add(super._subscribe(subscriber));\n        return subscription;\n    }\n    setup() {\n        const subject = this;\n        const messagesLength = subject.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            (() => {\n                var message = subject.messages[i];\n                subject.scheduler.schedule(() => { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);\n//# sourceMappingURL=HotObservable.js.map"]},"metadata":{},"sourceType":"module"}