{"ast":null,"code":"/*!\n * is-directory <https://github.com/jonschlinkert/is-directory>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n'use strict';\n\nvar fs = require('fs');\n/**\n * async\n */\n\n\nfunction isDirectory(filepath, cb) {\n  if (typeof cb !== 'function') {\n    throw new Error('expected a callback function');\n  }\n\n  if (typeof filepath !== 'string') {\n    cb(new Error('expected filepath to be a string'));\n    return;\n  }\n\n  fs.stat(filepath, function (err, stats) {\n    if (err) {\n      if (err.code === 'ENOENT') {\n        cb(null, false);\n        return;\n      }\n\n      cb(err);\n      return;\n    }\n\n    cb(null, stats.isDirectory());\n  });\n}\n/**\n * sync\n */\n\n\nisDirectory.sync = function isDirectorySync(filepath) {\n  if (typeof filepath !== 'string') {\n    throw new Error('expected filepath to be a string');\n  }\n\n  try {\n    var stat = fs.statSync(filepath);\n    return stat.isDirectory();\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      return false;\n    } else {\n      throw err;\n    }\n  }\n\n  return false;\n};\n/**\n * Expose `isDirectory`\n */\n\n\nmodule.exports = isDirectory;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/is-directory/index.js"],"names":["fs","require","isDirectory","filepath","cb","Error","stat","err","stats","code","sync","isDirectorySync","statSync","module","exports"],"mappings":"AAAA;;;;;;AAOA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;AAEA;;;;;AAIA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,EAA/B,EAAmC;AACjC,MAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC5B,UAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,MAAI,OAAOF,QAAP,KAAoB,QAAxB,EAAkC;AAChCC,IAAAA,EAAE,CAAC,IAAIC,KAAJ,CAAU,kCAAV,CAAD,CAAF;AACA;AACD;;AAEDL,EAAAA,EAAE,CAACM,IAAH,CAAQH,QAAR,EAAkB,UAASI,GAAT,EAAcC,KAAd,EAAqB;AACrC,QAAID,GAAJ,EAAS;AACP,UAAIA,GAAG,CAACE,IAAJ,KAAa,QAAjB,EAA2B;AACzBL,QAAAA,EAAE,CAAC,IAAD,EAAO,KAAP,CAAF;AACA;AACD;;AACDA,MAAAA,EAAE,CAACG,GAAD,CAAF;AACA;AACD;;AACDH,IAAAA,EAAE,CAAC,IAAD,EAAOI,KAAK,CAACN,WAAN,EAAP,CAAF;AACD,GAVD;AAWD;AAED;;;;;AAIAA,WAAW,CAACQ,IAAZ,GAAmB,SAASC,eAAT,CAAyBR,QAAzB,EAAmC;AACpD,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,UAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,MAAI;AACF,QAAIC,IAAI,GAAGN,EAAE,CAACY,QAAH,CAAYT,QAAZ,CAAX;AACA,WAAOG,IAAI,CAACJ,WAAL,EAAP;AACD,GAHD,CAGE,OAAOK,GAAP,EAAY;AACZ,QAAIA,GAAG,CAACE,IAAJ,KAAa,QAAjB,EAA2B;AACzB,aAAO,KAAP;AACD,KAFD,MAEO;AACL,YAAMF,GAAN;AACD;AACF;;AACD,SAAO,KAAP;AACD,CAhBD;AAkBA;;;;;AAIAM,MAAM,CAACC,OAAP,GAAiBZ,WAAjB","sourcesContent":["/*!\n * is-directory <https://github.com/jonschlinkert/is-directory>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar fs = require('fs');\n\n/**\n * async\n */\n\nfunction isDirectory(filepath, cb) {\n  if (typeof cb !== 'function') {\n    throw new Error('expected a callback function');\n  }\n\n  if (typeof filepath !== 'string') {\n    cb(new Error('expected filepath to be a string'));\n    return;\n  }\n\n  fs.stat(filepath, function(err, stats) {\n    if (err) {\n      if (err.code === 'ENOENT') {\n        cb(null, false);\n        return;\n      }\n      cb(err);\n      return;\n    }\n    cb(null, stats.isDirectory());\n  });\n}\n\n/**\n * sync\n */\n\nisDirectory.sync = function isDirectorySync(filepath) {\n  if (typeof filepath !== 'string') {\n    throw new Error('expected filepath to be a string');\n  }\n\n  try {\n    var stat = fs.statSync(filepath);\n    return stat.isDirectory();\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      return false;\n    } else {\n      throw err;\n    }\n  }\n  return false;\n};\n\n/**\n * Expose `isDirectory`\n */\n\nmodule.exports = isDirectory;\n"]},"metadata":{},"sourceType":"script"}