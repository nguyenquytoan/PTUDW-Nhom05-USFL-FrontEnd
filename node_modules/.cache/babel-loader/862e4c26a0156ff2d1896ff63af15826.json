{"ast":null,"code":"\"use strict\";\n\nvar assert = require(\"chai\").assert,\n    isValue = require(\"../../value/is\");\n\ndescribe(\"value/is\", function () {\n  it(\"Should return true on object\", function () {\n    assert.equal(isValue({}), true);\n  });\n  it(\"Should return true on function\", function () {\n    assert.equal(isValue(function () {\n      return true;\n    }), true);\n  });\n  it(\"Should return true on array\", function () {\n    assert.equal(isValue([]), true);\n  });\n\n  if (typeof Object.create === \"function\") {\n    it(\"Should return true on object with no prototype\", function () {\n      assert.equal(isValue(Object.create(null)), true);\n    });\n  }\n\n  it(\"Should return true on string\", function () {\n    assert.equal(isValue(\"foo\"), true);\n  });\n  it(\"Should return true on empty string\", function () {\n    assert.equal(isValue(\"\"), true);\n  });\n  it(\"Should return true on number\", function () {\n    assert.equal(isValue(123), true);\n  });\n  it(\"Should return true on NaN\", function () {\n    assert.equal(isValue(NaN), true);\n  });\n  it(\"Should return true on boolean\", function () {\n    assert.equal(isValue(false), true);\n  });\n\n  if (typeof Symbol === \"function\") {\n    // eslint-disable-next-line no-undef\n    it(\"Should return true on symbol\", function () {\n      assert.equal(isValue(Symbol()), true);\n    });\n  }\n\n  it(\"Should return false on null\", function () {\n    assert.equal(isValue(null), false);\n  });\n  it(\"Should return false on undefined\", function () {\n    assert.equal(isValue(void 0), false);\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/type/test/value/is.js"],"names":["assert","require","isValue","describe","it","equal","Object","create","NaN","Symbol"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAIC,OAAO,CAAC,MAAD,CAAP,CAAgBD,MAA9B;AAAA,IACIE,OAAO,GAAGD,OAAO,CAAC,gBAAD,CADrB;;AAGAE,QAAQ,CAAC,UAAD,EAAa,YAAY;AAChCC,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAAC,EAAD,CAApB,EAA0B,IAA1B;AAAkC,GAAjF,CAAF;AACAE,EAAAA,EAAE,CAAC,gCAAD,EAAmC,YAAY;AAChDJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAAC,YAAY;AAAE,aAAO,IAAP;AAAc,KAA7B,CAApB,EAAoD,IAApD;AACA,GAFC,CAAF;AAGAE,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAAC,EAAD,CAApB,EAA0B,IAA1B;AAAkC,GAAhF,CAAF;;AACA,MAAI,OAAOI,MAAM,CAACC,MAAd,KAAyB,UAA7B,EAAyC;AACxCH,IAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAY;AAChEJ,MAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAACI,MAAM,CAACC,MAAP,CAAc,IAAd,CAAD,CAApB,EAA2C,IAA3C;AACA,KAFC,CAAF;AAGA;;AACDH,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAAC,KAAD,CAApB,EAA6B,IAA7B;AAAqC,GAApF,CAAF;AACAE,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAAC,EAAD,CAApB,EAA0B,IAA1B;AAAkC,GAAvF,CAAF;AACAE,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAAC,GAAD,CAApB,EAA2B,IAA3B;AAAmC,GAAlF,CAAF;AACAE,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAACM,GAAD,CAApB,EAA2B,IAA3B;AAAmC,GAA/E,CAAF;AACAJ,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAAC,KAAD,CAApB,EAA6B,IAA7B;AAAqC,GAArF,CAAF;;AACA,MAAI,OAAOO,MAAP,KAAkB,UAAtB,EAAkC;AACjC;AACAL,IAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAY;AAAEJ,MAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAACO,MAAM,EAAP,CAApB,EAAgC,IAAhC;AAAwC,KAAvF,CAAF;AACA;;AAEDL,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAAC,IAAD,CAApB,EAA4B,KAA5B;AAAqC,GAAnF,CAAF;AACAE,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,OAAO,CAAC,KAAK,CAAN,CAApB,EAA8B,KAA9B;AAAuC,GAA1F,CAAF;AACA,CAvBO,CAAR","sourcesContent":["\"use strict\";\n\nvar assert  = require(\"chai\").assert\n  , isValue = require(\"../../value/is\");\n\ndescribe(\"value/is\", function () {\n\tit(\"Should return true on object\", function () { assert.equal(isValue({}), true); });\n\tit(\"Should return true on function\", function () {\n\t\tassert.equal(isValue(function () { return true; }), true);\n\t});\n\tit(\"Should return true on array\", function () { assert.equal(isValue([]), true); });\n\tif (typeof Object.create === \"function\") {\n\t\tit(\"Should return true on object with no prototype\", function () {\n\t\t\tassert.equal(isValue(Object.create(null)), true);\n\t\t});\n\t}\n\tit(\"Should return true on string\", function () { assert.equal(isValue(\"foo\"), true); });\n\tit(\"Should return true on empty string\", function () { assert.equal(isValue(\"\"), true); });\n\tit(\"Should return true on number\", function () { assert.equal(isValue(123), true); });\n\tit(\"Should return true on NaN\", function () { assert.equal(isValue(NaN), true); });\n\tit(\"Should return true on boolean\", function () { assert.equal(isValue(false), true); });\n\tif (typeof Symbol === \"function\") {\n\t\t// eslint-disable-next-line no-undef\n\t\tit(\"Should return true on symbol\", function () { assert.equal(isValue(Symbol()), true); });\n\t}\n\n\tit(\"Should return false on null\", function () { assert.equal(isValue(null), false); });\n\tit(\"Should return false on undefined\", function () { assert.equal(isValue(void 0), false); });\n});\n"]},"metadata":{},"sourceType":"script"}