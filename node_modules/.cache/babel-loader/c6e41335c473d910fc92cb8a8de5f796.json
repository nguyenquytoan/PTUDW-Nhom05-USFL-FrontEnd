{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar order = {\n  \"*\": 0,\n  \"/\": 0,\n  \"+\": 1,\n  \"-\": 1\n};\n\nfunction round(value, prec) {\n  if (prec !== false) {\n    var precision = Math.pow(10, prec);\n    return Math.round(value * precision) / precision;\n  }\n\n  return value;\n}\n\nfunction stringify(node, prec) {\n  switch (node.type) {\n    case \"MathExpression\":\n      {\n        var left = node.left,\n            right = node.right,\n            op = node.operator;\n        var str = \"\";\n\n        if (left.type === 'MathExpression' && order[op] < order[left.operator]) {\n          str += `(${stringify(left, prec)})`;\n        } else {\n          str += stringify(left, prec);\n        }\n\n        str += order[op] ? ` ${node.operator} ` : node.operator;\n\n        if (right.type === 'MathExpression' && order[op] < order[right.operator]) {\n          str += `(${stringify(right, prec)})`;\n        } else {\n          str += stringify(right, prec);\n        }\n\n        return str;\n      }\n\n    case 'Number':\n      return round(node.value, prec);\n\n    case 'Function':\n      return node.value;\n\n    default:\n      return round(node.value, prec) + node.unit;\n  }\n}\n\nfunction _default(calc, node, originalValue, options, result, item) {\n  var str = stringify(node, options.precision);\n  var shouldPrintCalc = node.type === \"MathExpression\" || node.type === \"Function\";\n\n  if (shouldPrintCalc) {\n    // if calc expression couldn't be resolved to a single value, re-wrap it as\n    // a calc()\n    str = `${calc}(${str})`; // if the warnWhenCannotResolve option is on, inform the user that the calc\n    // expression could not be resolved to a single value\n\n    if (options.warnWhenCannotResolve) {\n      result.warn(\"Could not reduce expression: \" + originalValue, {\n        plugin: 'postcss-calc',\n        node: item\n      });\n    }\n  }\n\n  return str;\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-calc/dist/lib/stringifier.js"],"names":["Object","defineProperty","exports","value","default","_default","order","round","prec","precision","Math","pow","stringify","node","type","left","right","op","operator","str","unit","calc","originalValue","options","result","item","shouldPrintCalc","warnWhenCannotResolve","warn","plugin","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar order = {\n  \"*\": 0,\n  \"/\": 0,\n  \"+\": 1,\n  \"-\": 1\n};\n\nfunction round(value, prec) {\n  if (prec !== false) {\n    var precision = Math.pow(10, prec);\n    return Math.round(value * precision) / precision;\n  }\n\n  return value;\n}\n\nfunction stringify(node, prec) {\n  switch (node.type) {\n    case \"MathExpression\":\n      {\n        var left = node.left,\n            right = node.right,\n            op = node.operator;\n        var str = \"\";\n\n        if (left.type === 'MathExpression' && order[op] < order[left.operator]) {\n          str += `(${stringify(left, prec)})`;\n        } else {\n          str += stringify(left, prec);\n        }\n\n        str += order[op] ? ` ${node.operator} ` : node.operator;\n\n        if (right.type === 'MathExpression' && order[op] < order[right.operator]) {\n          str += `(${stringify(right, prec)})`;\n        } else {\n          str += stringify(right, prec);\n        }\n\n        return str;\n      }\n\n    case 'Number':\n      return round(node.value, prec);\n\n    case 'Function':\n      return node.value;\n\n    default:\n      return round(node.value, prec) + node.unit;\n  }\n}\n\nfunction _default(calc, node, originalValue, options, result, item) {\n  var str = stringify(node, options.precision);\n  var shouldPrintCalc = node.type === \"MathExpression\" || node.type === \"Function\";\n\n  if (shouldPrintCalc) {\n    // if calc expression couldn't be resolved to a single value, re-wrap it as\n    // a calc()\n    str = `${calc}(${str})`; // if the warnWhenCannotResolve option is on, inform the user that the calc\n    // expression could not be resolved to a single value\n\n    if (options.warnWhenCannotResolve) {\n      result.warn(\"Could not reduce expression: \" + originalValue, {\n        plugin: 'postcss-calc',\n        node: item\n      });\n    }\n  }\n\n  return str;\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}