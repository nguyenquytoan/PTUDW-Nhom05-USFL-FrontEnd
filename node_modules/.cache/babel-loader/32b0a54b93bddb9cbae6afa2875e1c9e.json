{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nfunction base64SourceMap(source) {\n  const base64 = Buffer.from(JSON.stringify(source.map()), 'utf8').toString('base64');\n  return `data:application/json;charset=utf-8;base64,${base64}`;\n}\n\nfunction getSourceById(server, id) {\n  const module = server._stats.compilation.modules.find(m => m.id == id);\n\n  return module.originalSource();\n}\n/*\n * Middleware responsible for retrieving a generated source\n * Receives a webpack internal url: \"webpack-internal:///<module-id>\"\n * Returns a generated source: \"<source-text><sourceMappingURL><sourceURL>\"\n *\n * Based on EvalSourceMapDevToolModuleTemplatePlugin.js\n */\n\n\nmodule.exports = function createEvalSourceMapMiddleware(server) {\n  return function handleWebpackInternalMiddleware(req, res, next) {\n    if (req.url.startsWith('/__get-internal-source')) {\n      const fileName = req.query.fileName;\n      const id = fileName.match(/webpack-internal:\\/\\/\\/(.+)/)[1];\n\n      if (!id || !server._stats) {\n        next();\n      }\n\n      const source = getSourceById(server, id);\n      const sourceMapURL = `//# sourceMappingURL=${base64SourceMap(source)}`;\n      const sourceURL = `//# sourceURL=webpack-internal:///${module.id}`;\n      res.end(`${source.source()}\\n${sourceMapURL}\\n${sourceURL}`);\n    } else {\n      next();\n    }\n  };\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/react-dev-utils/evalSourceMapMiddleware.js"],"names":["base64SourceMap","source","base64","Buffer","from","JSON","stringify","map","toString","getSourceById","server","id","module","_stats","compilation","modules","find","m","originalSource","exports","createEvalSourceMapMiddleware","handleWebpackInternalMiddleware","req","res","next","url","startsWith","fileName","query","match","sourceMapURL","sourceURL","end"],"mappings":"AAAA;;;;;;AAMA;;AAEA,SAASA,eAAT,CAAyBC,MAAzB,EAAiC;AAC/B,QAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeL,MAAM,CAACM,GAAP,EAAf,CAAZ,EAA0C,MAA1C,EAAkDC,QAAlD,CACb,QADa,CAAf;AAGA,SAAQ,8CAA6CN,MAAO,EAA5D;AACD;;AAED,SAASO,aAAT,CAAuBC,MAAvB,EAA+BC,EAA/B,EAAmC;AACjC,QAAMC,MAAM,GAAGF,MAAM,CAACG,MAAP,CAAcC,WAAd,CAA0BC,OAA1B,CAAkCC,IAAlC,CAAuCC,CAAC,IAAIA,CAAC,CAACN,EAAF,IAAQA,EAApD,CAAf;;AACA,SAAOC,MAAM,CAACM,cAAP,EAAP;AACD;AAED;;;;;;;;;AAOAN,MAAM,CAACO,OAAP,GAAiB,SAASC,6BAAT,CAAuCV,MAAvC,EAA+C;AAC9D,SAAO,SAASW,+BAAT,CAAyCC,GAAzC,EAA8CC,GAA9C,EAAmDC,IAAnD,EAAyD;AAC9D,QAAIF,GAAG,CAACG,GAAJ,CAAQC,UAAR,CAAmB,wBAAnB,CAAJ,EAAkD;AAChD,YAAMC,QAAQ,GAAGL,GAAG,CAACM,KAAJ,CAAUD,QAA3B;AACA,YAAMhB,EAAE,GAAGgB,QAAQ,CAACE,KAAT,CAAe,6BAAf,EAA8C,CAA9C,CAAX;;AACA,UAAI,CAAClB,EAAD,IAAO,CAACD,MAAM,CAACG,MAAnB,EAA2B;AACzBW,QAAAA,IAAI;AACL;;AAED,YAAMvB,MAAM,GAAGQ,aAAa,CAACC,MAAD,EAASC,EAAT,CAA5B;AACA,YAAMmB,YAAY,GAAI,wBAAuB9B,eAAe,CAACC,MAAD,CAAS,EAArE;AACA,YAAM8B,SAAS,GAAI,qCAAoCnB,MAAM,CAACD,EAAG,EAAjE;AACAY,MAAAA,GAAG,CAACS,GAAJ,CAAS,GAAE/B,MAAM,CAACA,MAAP,EAAgB,KAAI6B,YAAa,KAAIC,SAAU,EAA1D;AACD,KAXD,MAWO;AACLP,MAAAA,IAAI;AACL;AACF,GAfD;AAgBD,CAjBD","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nfunction base64SourceMap(source) {\n  const base64 = Buffer.from(JSON.stringify(source.map()), 'utf8').toString(\n    'base64'\n  );\n  return `data:application/json;charset=utf-8;base64,${base64}`;\n}\n\nfunction getSourceById(server, id) {\n  const module = server._stats.compilation.modules.find(m => m.id == id);\n  return module.originalSource();\n}\n\n/*\n * Middleware responsible for retrieving a generated source\n * Receives a webpack internal url: \"webpack-internal:///<module-id>\"\n * Returns a generated source: \"<source-text><sourceMappingURL><sourceURL>\"\n *\n * Based on EvalSourceMapDevToolModuleTemplatePlugin.js\n */\nmodule.exports = function createEvalSourceMapMiddleware(server) {\n  return function handleWebpackInternalMiddleware(req, res, next) {\n    if (req.url.startsWith('/__get-internal-source')) {\n      const fileName = req.query.fileName;\n      const id = fileName.match(/webpack-internal:\\/\\/\\/(.+)/)[1];\n      if (!id || !server._stats) {\n        next();\n      }\n\n      const source = getSourceById(server, id);\n      const sourceMapURL = `//# sourceMappingURL=${base64SourceMap(source)}`;\n      const sourceURL = `//# sourceURL=webpack-internal:///${module.id}`;\n      res.end(`${source.source()}\\n${sourceMapURL}\\n${sourceURL}`);\n    } else {\n      next();\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"script"}