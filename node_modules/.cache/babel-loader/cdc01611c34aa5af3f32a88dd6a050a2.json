{"ast":null,"code":"var all = require('./helpers').all;\n\nfunction store(serializeContext, token) {\n  var value = typeof token == 'string' ? token : token[1];\n  var wrap = serializeContext.wrap;\n  wrap(serializeContext, value);\n  track(serializeContext, value);\n  serializeContext.output.push(value);\n}\n\nfunction wrap(serializeContext, value) {\n  if (serializeContext.column + value.length > serializeContext.format.wrapAt) {\n    track(serializeContext, serializeContext.format.breakWith);\n    serializeContext.output.push(serializeContext.format.breakWith);\n  }\n}\n\nfunction track(serializeContext, value) {\n  var parts = value.split('\\n');\n  serializeContext.line += parts.length - 1;\n  serializeContext.column = parts.length > 1 ? 0 : serializeContext.column + parts.pop().length;\n}\n\nfunction serializeStyles(tokens, context) {\n  var serializeContext = {\n    column: 0,\n    format: context.options.format,\n    indentBy: 0,\n    indentWith: '',\n    line: 1,\n    output: [],\n    spaceAfterClosingBrace: context.options.compatibility.properties.spaceAfterClosingBrace,\n    store: store,\n    wrap: context.options.format.wrapAt ? wrap : function () {\n      /* noop */\n    }\n  };\n  all(serializeContext, tokens);\n  return {\n    styles: serializeContext.output.join('')\n  };\n}\n\nmodule.exports = serializeStyles;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/writer/simple.js"],"names":["all","require","store","serializeContext","token","value","wrap","track","output","push","column","length","format","wrapAt","breakWith","parts","split","line","pop","serializeStyles","tokens","context","options","indentBy","indentWith","spaceAfterClosingBrace","compatibility","properties","styles","join","module","exports"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBD,GAA/B;;AAEA,SAASE,KAAT,CAAeC,gBAAf,EAAiCC,KAAjC,EAAwC;AACtC,MAAIC,KAAK,GAAG,OAAOD,KAAP,IAAgB,QAAhB,GACVA,KADU,GAEVA,KAAK,CAAC,CAAD,CAFP;AAGA,MAAIE,IAAI,GAAGH,gBAAgB,CAACG,IAA5B;AAEAA,EAAAA,IAAI,CAACH,gBAAD,EAAmBE,KAAnB,CAAJ;AACAE,EAAAA,KAAK,CAACJ,gBAAD,EAAmBE,KAAnB,CAAL;AACAF,EAAAA,gBAAgB,CAACK,MAAjB,CAAwBC,IAAxB,CAA6BJ,KAA7B;AACD;;AAED,SAASC,IAAT,CAAcH,gBAAd,EAAgCE,KAAhC,EAAuC;AACrC,MAAIF,gBAAgB,CAACO,MAAjB,GAA0BL,KAAK,CAACM,MAAhC,GAAyCR,gBAAgB,CAACS,MAAjB,CAAwBC,MAArE,EAA6E;AAC3EN,IAAAA,KAAK,CAACJ,gBAAD,EAAmBA,gBAAgB,CAACS,MAAjB,CAAwBE,SAA3C,CAAL;AACAX,IAAAA,gBAAgB,CAACK,MAAjB,CAAwBC,IAAxB,CAA6BN,gBAAgB,CAACS,MAAjB,CAAwBE,SAArD;AACD;AACF;;AAED,SAASP,KAAT,CAAeJ,gBAAf,EAAiCE,KAAjC,EAAwC;AACtC,MAAIU,KAAK,GAAGV,KAAK,CAACW,KAAN,CAAY,IAAZ,CAAZ;AAEAb,EAAAA,gBAAgB,CAACc,IAAjB,IAAyBF,KAAK,CAACJ,MAAN,GAAe,CAAxC;AACAR,EAAAA,gBAAgB,CAACO,MAAjB,GAA0BK,KAAK,CAACJ,MAAN,GAAe,CAAf,GAAmB,CAAnB,GAAwBR,gBAAgB,CAACO,MAAjB,GAA0BK,KAAK,CAACG,GAAN,GAAYP,MAAxF;AACD;;AAED,SAASQ,eAAT,CAAyBC,MAAzB,EAAiCC,OAAjC,EAA0C;AACxC,MAAIlB,gBAAgB,GAAG;AACrBO,IAAAA,MAAM,EAAE,CADa;AAErBE,IAAAA,MAAM,EAAES,OAAO,CAACC,OAAR,CAAgBV,MAFH;AAGrBW,IAAAA,QAAQ,EAAE,CAHW;AAIrBC,IAAAA,UAAU,EAAE,EAJS;AAKrBP,IAAAA,IAAI,EAAE,CALe;AAMrBT,IAAAA,MAAM,EAAE,EANa;AAOrBiB,IAAAA,sBAAsB,EAAEJ,OAAO,CAACC,OAAR,CAAgBI,aAAhB,CAA8BC,UAA9B,CAAyCF,sBAP5C;AAQrBvB,IAAAA,KAAK,EAAEA,KARc;AASrBI,IAAAA,IAAI,EAAEe,OAAO,CAACC,OAAR,CAAgBV,MAAhB,CAAuBC,MAAvB,GACJP,IADI,GAEJ,YAAY;AAAE;AAAa;AAXR,GAAvB;AAcAN,EAAAA,GAAG,CAACG,gBAAD,EAAmBiB,MAAnB,CAAH;AAEA,SAAO;AACLQ,IAAAA,MAAM,EAAEzB,gBAAgB,CAACK,MAAjB,CAAwBqB,IAAxB,CAA6B,EAA7B;AADH,GAAP;AAGD;;AAEDC,MAAM,CAACC,OAAP,GAAiBZ,eAAjB","sourcesContent":["var all = require('./helpers').all;\n\nfunction store(serializeContext, token) {\n  var value = typeof token == 'string' ?\n    token :\n    token[1];\n  var wrap = serializeContext.wrap;\n\n  wrap(serializeContext, value);\n  track(serializeContext, value);\n  serializeContext.output.push(value);\n}\n\nfunction wrap(serializeContext, value) {\n  if (serializeContext.column + value.length > serializeContext.format.wrapAt) {\n    track(serializeContext, serializeContext.format.breakWith);\n    serializeContext.output.push(serializeContext.format.breakWith);\n  }\n}\n\nfunction track(serializeContext, value) {\n  var parts = value.split('\\n');\n\n  serializeContext.line += parts.length - 1;\n  serializeContext.column = parts.length > 1 ? 0 : (serializeContext.column + parts.pop().length);\n}\n\nfunction serializeStyles(tokens, context) {\n  var serializeContext = {\n    column: 0,\n    format: context.options.format,\n    indentBy: 0,\n    indentWith: '',\n    line: 1,\n    output: [],\n    spaceAfterClosingBrace: context.options.compatibility.properties.spaceAfterClosingBrace,\n    store: store,\n    wrap: context.options.format.wrapAt ?\n      wrap :\n      function () { /* noop */  }\n  };\n\n  all(serializeContext, tokens);\n\n  return {\n    styles: serializeContext.output.join('')\n  };\n}\n\nmodule.exports = serializeStyles;\n"]},"metadata":{},"sourceType":"script"}