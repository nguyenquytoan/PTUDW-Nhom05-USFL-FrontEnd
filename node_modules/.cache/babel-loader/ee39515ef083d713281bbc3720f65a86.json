{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = enhanceUnexpectedTokenMessage;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst DOT = ' \\u2022 ';\n\nfunction enhanceUnexpectedTokenMessage(e) {\n  e.stack = `${_chalk().default.bold.red('Jest encountered an unexpected token')}\n\nThis usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\nBy default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\nHere's what you can do:\n${DOT}To have some of your \"node_modules\" files transformed, you can specify a custom ${_chalk().default.bold('\"transformIgnorePatterns\"')} in your config.\n${DOT}If you need a custom transformation specify a ${_chalk().default.bold('\"transform\"')} option in your config.\n${DOT}If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the ${_chalk().default.bold('\"moduleNameMapper\"')} config option.\n\nYou'll find more details and examples of these config options in the docs:\n${_chalk().default.cyan('https://jestjs.io/docs/en/configuration.html')}\n\n${_chalk().default.bold.red('Details:')}\n\n` + e.stack;\n  return e;\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@jest/transform/build/enhanceUnexpectedTokenMessage.js"],"names":["Object","defineProperty","exports","value","default","enhanceUnexpectedTokenMessage","_chalk","data","_interopRequireDefault","require","obj","__esModule","DOT","e","stack","bold","red","cyan"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,6BAAlB;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEAH,EAAAA,MAAM,GAAG,SAASA,MAAT,GAAkB;AACzB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASC,sBAAT,CAAgCE,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAACN,IAAAA,OAAO,EAAEM;AAAV,GAArC;AACD;AAED;;;;;;;;AAMA,MAAME,GAAG,GAAG,UAAZ;;AAEA,SAASP,6BAAT,CAAuCQ,CAAvC,EAA0C;AACxCA,EAAAA,CAAC,CAACC,KAAF,GACG,GAAER,MAAM,GAAGF,OAAT,CAAiBW,IAAjB,CAAsBC,GAAtB,CAA0B,sCAA1B,CAAkE;;;;;;;EAOvEJ,GAAI,mFAAkFN,MAAM,GAAGF,OAAT,CAAiBW,IAAjB,CAClF,2BADkF,CAElF;EACJH,GAAI,iDAAgDN,MAAM,GAAGF,OAAT,CAAiBW,IAAjB,CAChD,aADgD,CAEhD;EACJH,GAAI,sGAAqGN,MAAM,GAAGF,OAAT,CAAiBW,IAAjB,CACrG,oBADqG,CAErG;;;EAGJT,MAAM,GAAGF,OAAT,CAAiBa,IAAjB,CAAsB,8CAAtB,CAAsE;;EAEtEX,MAAM,GAAGF,OAAT,CAAiBW,IAAjB,CAAsBC,GAAtB,CAA0B,UAA1B,CAAsC;;CApBpC,GAsBAH,CAAC,CAACC,KAvBJ;AAwBA,SAAOD,CAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = enhanceUnexpectedTokenMessage;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst DOT = ' \\u2022 ';\n\nfunction enhanceUnexpectedTokenMessage(e) {\n  e.stack =\n    `${_chalk().default.bold.red('Jest encountered an unexpected token')}\n\nThis usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\nBy default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\nHere's what you can do:\n${DOT}To have some of your \"node_modules\" files transformed, you can specify a custom ${_chalk().default.bold(\n      '\"transformIgnorePatterns\"'\n    )} in your config.\n${DOT}If you need a custom transformation specify a ${_chalk().default.bold(\n      '\"transform\"'\n    )} option in your config.\n${DOT}If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the ${_chalk().default.bold(\n      '\"moduleNameMapper\"'\n    )} config option.\n\nYou'll find more details and examples of these config options in the docs:\n${_chalk().default.cyan('https://jestjs.io/docs/en/configuration.html')}\n\n${_chalk().default.bold.red('Details:')}\n\n` + e.stack;\n  return e;\n}\n"]},"metadata":{},"sourceType":"script"}