{"ast":null,"code":"\"use strict\";\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _createForOfIteratorHelperLoose(o) {\n  var i = 0;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  i = o[Symbol.iterator]();\n  return i.next.bind(i);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults(subClass, superClass);\n}\n\nvar Prefixer = require('./prefixer');\n\nvar Browsers = require('./browsers');\n\nvar utils = require('./utils');\n\nvar Declaration = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(Declaration, _Prefixer);\n\n  function Declaration() {\n    return _Prefixer.apply(this, arguments) || this;\n  }\n\n  var _proto = Declaration.prototype;\n  /**\n     * Always true, because we already get prefixer by property name\n     */\n\n  _proto.check = function check()\n  /* decl */\n  {\n    return true;\n  }\n  /**\n     * Return prefixed version of property\n     */\n  ;\n\n  _proto.prefixed = function prefixed(prop, prefix) {\n    return prefix + prop;\n  }\n  /**\n     * Return unprefixed version of property\n     */\n  ;\n\n  _proto.normalize = function normalize(prop) {\n    return prop;\n  }\n  /**\n     * Check `value`, that it contain other prefixes, rather than `prefix`\n     */\n  ;\n\n  _proto.otherPrefixes = function otherPrefixes(value, prefix) {\n    for (var _iterator = _createForOfIteratorHelperLoose(Browsers.prefixes()), _step; !(_step = _iterator()).done;) {\n      var other = _step.value;\n\n      if (other === prefix) {\n        continue;\n      }\n\n      if (value.includes(other)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n     * Set prefix to declaration\n     */\n  ;\n\n  _proto.set = function set(decl, prefix) {\n    decl.prop = this.prefixed(decl.prop, prefix);\n    return decl;\n  }\n  /**\n     * Should we use visual cascade for prefixes\n     */\n  ;\n\n  _proto.needCascade = function needCascade(decl) {\n    if (!decl._autoprefixerCascade) {\n      decl._autoprefixerCascade = this.all.options.cascade !== false && decl.raw('before').includes('\\n');\n    }\n\n    return decl._autoprefixerCascade;\n  }\n  /**\n     * Return maximum length of possible prefixed property\n     */\n  ;\n\n  _proto.maxPrefixed = function maxPrefixed(prefixes, decl) {\n    if (decl._autoprefixerMax) {\n      return decl._autoprefixerMax;\n    }\n\n    var max = 0;\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(prefixes), _step2; !(_step2 = _iterator2()).done;) {\n      var prefix = _step2.value;\n      prefix = utils.removeNote(prefix);\n\n      if (prefix.length > max) {\n        max = prefix.length;\n      }\n    }\n\n    decl._autoprefixerMax = max;\n    return decl._autoprefixerMax;\n  }\n  /**\n     * Calculate indentation to create visual cascade\n     */\n  ;\n\n  _proto.calcBefore = function calcBefore(prefixes, decl, prefix) {\n    if (prefix === void 0) {\n      prefix = '';\n    }\n\n    var max = this.maxPrefixed(prefixes, decl);\n    var diff = max - utils.removeNote(prefix).length;\n    var before = decl.raw('before');\n\n    if (diff > 0) {\n      before += Array(diff).fill(' ').join('');\n    }\n\n    return before;\n  }\n  /**\n     * Remove visual cascade\n     */\n  ;\n\n  _proto.restoreBefore = function restoreBefore(decl) {\n    var lines = decl.raw('before').split('\\n');\n    var min = lines[lines.length - 1];\n    this.all.group(decl).up(function (prefixed) {\n      var array = prefixed.raw('before').split('\\n');\n      var last = array[array.length - 1];\n\n      if (last.length < min.length) {\n        min = last;\n      }\n    });\n    lines[lines.length - 1] = min;\n    decl.raws.before = lines.join('\\n');\n  }\n  /**\n     * Clone and insert new declaration\n     */\n  ;\n\n  _proto.insert = function insert(decl, prefix, prefixes) {\n    var cloned = this.set(this.clone(decl), prefix);\n    if (!cloned) return undefined;\n    var already = decl.parent.some(function (i) {\n      return i.prop === cloned.prop && i.value === cloned.value;\n    });\n\n    if (already) {\n      return undefined;\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n\n    return decl.parent.insertBefore(decl, cloned);\n  }\n  /**\n     * Did this declaration has this prefix above\n     */\n  ;\n\n  _proto.isAlready = function isAlready(decl, prefixed) {\n    var already = this.all.group(decl).up(function (i) {\n      return i.prop === prefixed;\n    });\n\n    if (!already) {\n      already = this.all.group(decl).down(function (i) {\n        return i.prop === prefixed;\n      });\n    }\n\n    return already;\n  }\n  /**\n     * Clone and add prefixes for declaration\n     */\n  ;\n\n  _proto.add = function add(decl, prefix, prefixes, result) {\n    var prefixed = this.prefixed(decl.prop, prefix);\n\n    if (this.isAlready(decl, prefixed) || this.otherPrefixes(decl.value, prefix)) {\n      return undefined;\n    }\n\n    return this.insert(decl, prefix, prefixes, result);\n  }\n  /**\n     * Add spaces for visual cascade\n     */\n  ;\n\n  _proto.process = function process(decl, result) {\n    if (!this.needCascade(decl)) {\n      _Prefixer.prototype.process.call(this, decl, result);\n\n      return;\n    }\n\n    var prefixes = _Prefixer.prototype.process.call(this, decl, result);\n\n    if (!prefixes || !prefixes.length) {\n      return;\n    }\n\n    this.restoreBefore(decl);\n    decl.raws.before = this.calcBefore(prefixes, decl);\n  }\n  /**\n     * Return list of prefixed properties to clean old prefixes\n     */\n  ;\n\n  _proto.old = function old(prop, prefix) {\n    return [this.prefixed(prop, prefix)];\n  };\n\n  return Declaration;\n}(Prefixer);\n\nmodule.exports = Declaration;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/autoprefixer/lib/declaration.js"],"names":["_defaults","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_createForOfIteratorHelperLoose","o","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","done","TypeError","next","bind","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","_inheritsLoose","subClass","superClass","create","Prefixer","require","Browsers","utils","Declaration","_Prefixer","apply","arguments","_proto","check","prefixed","prop","prefix","normalize","otherPrefixes","_iterator","prefixes","_step","other","includes","set","decl","needCascade","_autoprefixerCascade","all","options","cascade","raw","maxPrefixed","_autoprefixerMax","max","_iterator2","_step2","removeNote","calcBefore","diff","before","fill","join","restoreBefore","lines","split","min","group","up","array","last","raws","insert","cloned","clone","already","parent","some","insertBefore","isAlready","down","add","result","process","old","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _createForOfIteratorHelperLoose(o) { var i = 0; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } i = o[Symbol.iterator](); return i.next.bind(i); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }\n\nvar Prefixer = require('./prefixer');\n\nvar Browsers = require('./browsers');\n\nvar utils = require('./utils');\n\nvar Declaration = /*#__PURE__*/function (_Prefixer) {\n  _inheritsLoose(Declaration, _Prefixer);\n\n  function Declaration() {\n    return _Prefixer.apply(this, arguments) || this;\n  }\n\n  var _proto = Declaration.prototype;\n\n  /**\n     * Always true, because we already get prefixer by property name\n     */\n  _proto.check = function check()\n  /* decl */\n  {\n    return true;\n  }\n  /**\n     * Return prefixed version of property\n     */\n  ;\n\n  _proto.prefixed = function prefixed(prop, prefix) {\n    return prefix + prop;\n  }\n  /**\n     * Return unprefixed version of property\n     */\n  ;\n\n  _proto.normalize = function normalize(prop) {\n    return prop;\n  }\n  /**\n     * Check `value`, that it contain other prefixes, rather than `prefix`\n     */\n  ;\n\n  _proto.otherPrefixes = function otherPrefixes(value, prefix) {\n    for (var _iterator = _createForOfIteratorHelperLoose(Browsers.prefixes()), _step; !(_step = _iterator()).done;) {\n      var other = _step.value;\n\n      if (other === prefix) {\n        continue;\n      }\n\n      if (value.includes(other)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n     * Set prefix to declaration\n     */\n  ;\n\n  _proto.set = function set(decl, prefix) {\n    decl.prop = this.prefixed(decl.prop, prefix);\n    return decl;\n  }\n  /**\n     * Should we use visual cascade for prefixes\n     */\n  ;\n\n  _proto.needCascade = function needCascade(decl) {\n    if (!decl._autoprefixerCascade) {\n      decl._autoprefixerCascade = this.all.options.cascade !== false && decl.raw('before').includes('\\n');\n    }\n\n    return decl._autoprefixerCascade;\n  }\n  /**\n     * Return maximum length of possible prefixed property\n     */\n  ;\n\n  _proto.maxPrefixed = function maxPrefixed(prefixes, decl) {\n    if (decl._autoprefixerMax) {\n      return decl._autoprefixerMax;\n    }\n\n    var max = 0;\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(prefixes), _step2; !(_step2 = _iterator2()).done;) {\n      var prefix = _step2.value;\n      prefix = utils.removeNote(prefix);\n\n      if (prefix.length > max) {\n        max = prefix.length;\n      }\n    }\n\n    decl._autoprefixerMax = max;\n    return decl._autoprefixerMax;\n  }\n  /**\n     * Calculate indentation to create visual cascade\n     */\n  ;\n\n  _proto.calcBefore = function calcBefore(prefixes, decl, prefix) {\n    if (prefix === void 0) {\n      prefix = '';\n    }\n\n    var max = this.maxPrefixed(prefixes, decl);\n    var diff = max - utils.removeNote(prefix).length;\n    var before = decl.raw('before');\n\n    if (diff > 0) {\n      before += Array(diff).fill(' ').join('');\n    }\n\n    return before;\n  }\n  /**\n     * Remove visual cascade\n     */\n  ;\n\n  _proto.restoreBefore = function restoreBefore(decl) {\n    var lines = decl.raw('before').split('\\n');\n    var min = lines[lines.length - 1];\n    this.all.group(decl).up(function (prefixed) {\n      var array = prefixed.raw('before').split('\\n');\n      var last = array[array.length - 1];\n\n      if (last.length < min.length) {\n        min = last;\n      }\n    });\n    lines[lines.length - 1] = min;\n    decl.raws.before = lines.join('\\n');\n  }\n  /**\n     * Clone and insert new declaration\n     */\n  ;\n\n  _proto.insert = function insert(decl, prefix, prefixes) {\n    var cloned = this.set(this.clone(decl), prefix);\n    if (!cloned) return undefined;\n    var already = decl.parent.some(function (i) {\n      return i.prop === cloned.prop && i.value === cloned.value;\n    });\n\n    if (already) {\n      return undefined;\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n\n    return decl.parent.insertBefore(decl, cloned);\n  }\n  /**\n     * Did this declaration has this prefix above\n     */\n  ;\n\n  _proto.isAlready = function isAlready(decl, prefixed) {\n    var already = this.all.group(decl).up(function (i) {\n      return i.prop === prefixed;\n    });\n\n    if (!already) {\n      already = this.all.group(decl).down(function (i) {\n        return i.prop === prefixed;\n      });\n    }\n\n    return already;\n  }\n  /**\n     * Clone and add prefixes for declaration\n     */\n  ;\n\n  _proto.add = function add(decl, prefix, prefixes, result) {\n    var prefixed = this.prefixed(decl.prop, prefix);\n\n    if (this.isAlready(decl, prefixed) || this.otherPrefixes(decl.value, prefix)) {\n      return undefined;\n    }\n\n    return this.insert(decl, prefix, prefixes, result);\n  }\n  /**\n     * Add spaces for visual cascade\n     */\n  ;\n\n  _proto.process = function process(decl, result) {\n    if (!this.needCascade(decl)) {\n      _Prefixer.prototype.process.call(this, decl, result);\n\n      return;\n    }\n\n    var prefixes = _Prefixer.prototype.process.call(this, decl, result);\n\n    if (!prefixes || !prefixes.length) {\n      return;\n    }\n\n    this.restoreBefore(decl);\n    decl.raws.before = this.calcBefore(prefixes, decl);\n  }\n  /**\n     * Return list of prefixed properties to clean old prefixes\n     */\n  ;\n\n  _proto.old = function old(prop, prefix) {\n    return [this.prefixed(prop, prefix)];\n  };\n\n  return Declaration;\n}(Prefixer);\n\nmodule.exports = Declaration;"]},"metadata":{},"sourceType":"script"}