{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nconst chalk = require('chalk');\n\nconst path = require('path');\n\nconst os = require('os');\n\nclass ModuleScopePlugin {\n  constructor(appSrc, allowedFiles = []) {\n    this.appSrcs = Array.isArray(appSrc) ? appSrc : [appSrc];\n    this.allowedFiles = new Set(allowedFiles);\n  }\n\n  apply(resolver) {\n    const {\n      appSrcs\n    } = this;\n    resolver.hooks.file.tapAsync('ModuleScopePlugin', (request, contextResolver, callback) => {\n      // Unknown issuer, probably webpack internals\n      if (!request.context.issuer) {\n        return callback();\n      }\n\n      if ( // If this resolves to a node_module, we don't care what happens next\n      request.descriptionFileRoot.indexOf('/node_modules/') !== -1 || request.descriptionFileRoot.indexOf('\\\\node_modules\\\\') !== -1 || // Make sure this request was manual\n      !request.__innerRequest_request) {\n        return callback();\n      } // Resolve the issuer from our appSrc and make sure it's one of our files\n      // Maybe an indexOf === 0 would be better?\n\n\n      if (appSrcs.every(appSrc => {\n        const relative = path.relative(appSrc, request.context.issuer); // If it's not in one of our app src or a subdirectory, not our request!\n\n        return relative.startsWith('../') || relative.startsWith('..\\\\');\n      })) {\n        return callback();\n      }\n\n      const requestFullPath = path.resolve(path.dirname(request.context.issuer), request.__innerRequest_request);\n\n      if (this.allowedFiles.has(requestFullPath)) {\n        return callback();\n      } // Find path from src to the requested file\n      // Error if in a parent directory of all given appSrcs\n\n\n      if (appSrcs.every(appSrc => {\n        const requestRelative = path.relative(appSrc, requestFullPath);\n        return requestRelative.startsWith('../') || requestRelative.startsWith('..\\\\');\n      })) {\n        const scopeError = new Error(`You attempted to import ${chalk.cyan(request.__innerRequest_request)} which falls outside of the project ${chalk.cyan('src/')} directory. ` + `Relative imports outside of ${chalk.cyan('src/')} are not supported.` + os.EOL + `You can either move it inside ${chalk.cyan('src/')}, or add a symlink to it from project's ${chalk.cyan('node_modules/')}.`);\n        Object.defineProperty(scopeError, '__module_scope_plugin', {\n          value: true,\n          writable: false,\n          enumerable: false\n        });\n        callback(scopeError, request);\n      } else {\n        callback();\n      }\n    });\n  }\n\n}\n\nmodule.exports = ModuleScopePlugin;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/react-dev-utils/ModuleScopePlugin.js"],"names":["chalk","require","path","os","ModuleScopePlugin","constructor","appSrc","allowedFiles","appSrcs","Array","isArray","Set","apply","resolver","hooks","file","tapAsync","request","contextResolver","callback","context","issuer","descriptionFileRoot","indexOf","__innerRequest_request","every","relative","startsWith","requestFullPath","resolve","dirname","has","requestRelative","scopeError","Error","cyan","EOL","Object","defineProperty","value","writable","enumerable","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nconst chalk = require('chalk');\nconst path = require('path');\nconst os = require('os');\n\nclass ModuleScopePlugin {\n  constructor(appSrc, allowedFiles = []) {\n    this.appSrcs = Array.isArray(appSrc) ? appSrc : [appSrc];\n    this.allowedFiles = new Set(allowedFiles);\n  }\n\n  apply(resolver) {\n    const { appSrcs } = this;\n    resolver.hooks.file.tapAsync(\n      'ModuleScopePlugin',\n      (request, contextResolver, callback) => {\n        // Unknown issuer, probably webpack internals\n        if (!request.context.issuer) {\n          return callback();\n        }\n        if (\n          // If this resolves to a node_module, we don't care what happens next\n          request.descriptionFileRoot.indexOf('/node_modules/') !== -1 ||\n          request.descriptionFileRoot.indexOf('\\\\node_modules\\\\') !== -1 ||\n          // Make sure this request was manual\n          !request.__innerRequest_request\n        ) {\n          return callback();\n        }\n        // Resolve the issuer from our appSrc and make sure it's one of our files\n        // Maybe an indexOf === 0 would be better?\n        if (\n          appSrcs.every(appSrc => {\n            const relative = path.relative(appSrc, request.context.issuer);\n            // If it's not in one of our app src or a subdirectory, not our request!\n            return relative.startsWith('../') || relative.startsWith('..\\\\');\n          })\n        ) {\n          return callback();\n        }\n        const requestFullPath = path.resolve(\n          path.dirname(request.context.issuer),\n          request.__innerRequest_request\n        );\n        if (this.allowedFiles.has(requestFullPath)) {\n          return callback();\n        }\n        // Find path from src to the requested file\n        // Error if in a parent directory of all given appSrcs\n        if (\n          appSrcs.every(appSrc => {\n            const requestRelative = path.relative(appSrc, requestFullPath);\n            return (\n              requestRelative.startsWith('../') ||\n              requestRelative.startsWith('..\\\\')\n            );\n          })\n        ) {\n          const scopeError = new Error(\n            `You attempted to import ${chalk.cyan(\n              request.__innerRequest_request\n            )} which falls outside of the project ${chalk.cyan(\n              'src/'\n            )} directory. ` +\n              `Relative imports outside of ${chalk.cyan(\n                'src/'\n              )} are not supported.` +\n              os.EOL +\n              `You can either move it inside ${chalk.cyan(\n                'src/'\n              )}, or add a symlink to it from project's ${chalk.cyan(\n                'node_modules/'\n              )}.`\n          );\n          Object.defineProperty(scopeError, '__module_scope_plugin', {\n            value: true,\n            writable: false,\n            enumerable: false,\n          });\n          callback(scopeError, request);\n        } else {\n          callback();\n        }\n      }\n    );\n  }\n}\n\nmodule.exports = ModuleScopePlugin;\n"]},"metadata":{},"sourceType":"script"}