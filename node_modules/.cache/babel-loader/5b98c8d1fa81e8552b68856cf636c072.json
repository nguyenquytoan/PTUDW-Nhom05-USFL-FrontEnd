{"ast":null,"code":"var assert = require('assert');\n\nvar ourProcess = require('./browser');\n\ndescribe('test against our process', function () {\n  test(ourProcess);\n});\n\nif (!process.browser) {\n  describe('test against node', function () {\n    test(process);\n  });\n  vmtest();\n}\n\nfunction test(ourProcess) {\n  describe('test arguments', function () {\n    it('works', function (done) {\n      var order = 0;\n      ourProcess.nextTick(function (num) {\n        assert.equal(num, order++, 'first one works');\n        ourProcess.nextTick(function (num) {\n          assert.equal(num, order++, 'recursive one is 4th');\n        }, 3);\n      }, 0);\n      ourProcess.nextTick(function (num) {\n        assert.equal(num, order++, 'second one starts');\n        ourProcess.nextTick(function (num) {\n          assert.equal(num, order++, 'this is third');\n          ourProcess.nextTick(function (num) {\n            assert.equal(num, order++, 'this is last');\n            done();\n          }, 5);\n        }, 4);\n      }, 1);\n      ourProcess.nextTick(function (num) {\n        assert.equal(num, order++, '3rd schedualed happens after the error');\n      }, 2);\n    });\n  });\n\n  if (!process.browser) {\n    describe('test errors', function (t) {\n      it('works', function (done) {\n        var order = 0;\n        process.removeAllListeners('uncaughtException');\n        process.once('uncaughtException', function (err) {\n          assert.equal(2, order++, 'error is third');\n          ourProcess.nextTick(function () {\n            assert.equal(5, order++, 'schedualed in error is last');\n            done();\n          });\n        });\n        ourProcess.nextTick(function () {\n          assert.equal(0, order++, 'first one works');\n          ourProcess.nextTick(function () {\n            assert.equal(4, order++, 'recursive one is 4th');\n          });\n        });\n        ourProcess.nextTick(function () {\n          assert.equal(1, order++, 'second one starts');\n          throw new Error('an error is thrown');\n        });\n        ourProcess.nextTick(function () {\n          assert.equal(3, order++, '3rd schedualed happens after the error');\n        });\n      });\n    });\n  }\n\n  describe('rename globals', function (t) {\n    var oldTimeout = setTimeout;\n    var oldClear = clearTimeout;\n    it('clearTimeout', function (done) {\n      var ok = true;\n\n      clearTimeout = function () {\n        ok = false;\n      };\n\n      var ran = false;\n\n      function cleanup() {\n        clearTimeout = oldClear;\n        var err;\n\n        try {\n          assert.ok(ok, 'fake clearTimeout ran');\n          assert.ok(ran, 'should have run');\n        } catch (e) {\n          err = e;\n        }\n\n        done(err);\n      }\n\n      setTimeout(cleanup, 1000);\n      ourProcess.nextTick(function () {\n        ran = true;\n      });\n    });\n    it('just setTimeout', function (done) {\n      setTimeout = function () {\n        setTimeout = oldTimeout;\n\n        try {\n          assert.ok(false, 'fake setTimeout called');\n        } catch (e) {\n          done(e);\n        }\n      };\n\n      ourProcess.nextTick(function () {\n        setTimeout = oldTimeout;\n        done();\n      });\n    });\n  });\n}\n\nfunction vmtest() {\n  var vm = require('vm');\n\n  var fs = require('fs');\n\n  var process = fs.readFileSync('./browser.js', {\n    encoding: 'utf8'\n  });\n  describe('should work in vm in strict mode with no globals', function () {\n    it('should parse', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'this.works = process.browser;';\n      var script = new vm.Script(str);\n      var context = {\n        works: false\n      };\n      script.runInNewContext(context);\n      assert.ok(context.works);\n      done();\n    });\n    it('setTimeout throws error', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'try {process.nextTick(function () {})} catch (e){this.works = e;}';\n      var script = new vm.Script(str);\n      var context = {\n        works: false\n      };\n      script.runInNewContext(context);\n      assert.ok(context.works);\n      done();\n    });\n    it('should generally work', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'process.nextTick(function () {assert.ok(true);done();})';\n      var script = new vm.Script(str);\n      var context = {\n        clearTimeout: clearTimeout,\n        setTimeout: setTimeout,\n        done: done,\n        assert: assert\n      };\n      script.runInNewContext(context);\n    });\n    it('late defs setTimeout', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'var setTimeout = hiddenSetTimeout;process.nextTick(function () {assert.ok(true);done();})';\n      var script = new vm.Script(str);\n      var context = {\n        clearTimeout: clearTimeout,\n        hiddenSetTimeout: setTimeout,\n        done: done,\n        assert: assert\n      };\n      script.runInNewContext(context);\n    });\n    it('late defs clearTimeout', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'var clearTimeout = hiddenClearTimeout;process.nextTick(function () {assert.ok(true);done();})';\n      var script = new vm.Script(str);\n      var context = {\n        hiddenClearTimeout: clearTimeout,\n        setTimeout: setTimeout,\n        done: done,\n        assert: assert\n      };\n      script.runInNewContext(context);\n    });\n    it('late defs setTimeout and then redefine', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'var setTimeout = hiddenSetTimeout;process.nextTick(function () {setTimeout = function (){throw new Error(\"foo\")};hiddenSetTimeout(function(){process.nextTick(function (){assert.ok(true);done();});});});';\n      var script = new vm.Script(str);\n      var context = {\n        clearTimeout: clearTimeout,\n        hiddenSetTimeout: setTimeout,\n        done: done,\n        assert: assert\n      };\n      script.runInNewContext(context);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/process/test.js"],"names":["assert","require","ourProcess","describe","test","process","browser","vmtest","it","done","order","nextTick","num","equal","t","removeAllListeners","once","err","Error","oldTimeout","setTimeout","oldClear","clearTimeout","ok","ran","cleanup","e","vm","fs","readFileSync","encoding","str","script","Script","context","works","runInNewContext","hiddenSetTimeout","hiddenClearTimeout"],"mappings":"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","sourcesContent":["var assert = require('assert');\nvar ourProcess = require('./browser');\ndescribe('test against our process', function () {\n    test(ourProcess);\n});\nif (!process.browser) {\n  describe('test against node', function () {\n    test(process);\n  });\n  vmtest();\n}\nfunction test (ourProcess) {\n    describe('test arguments', function () {\n        it ('works', function (done) {\n          var order = 0;\n\n\n          ourProcess.nextTick(function (num) {\n              assert.equal(num, order++, 'first one works');\n              ourProcess.nextTick(function (num) {\n                assert.equal(num, order++, 'recursive one is 4th');\n              }, 3);\n          }, 0);\n          ourProcess.nextTick(function (num) {\n              assert.equal(num, order++, 'second one starts');\n              ourProcess.nextTick(function (num) {\n                assert.equal(num, order++, 'this is third');\n                ourProcess.nextTick(function (num) {\n                    assert.equal(num, order++, 'this is last');\n                    done();\n                }, 5);\n            }, 4);\n          }, 1);\n          ourProcess.nextTick(function (num) {\n\n              assert.equal(num, order++, '3rd schedualed happens after the error');\n          }, 2);\n        });\n    });\nif (!process.browser) {\n    describe('test errors', function (t) {\n        it ('works', function (done) {\n        var order = 0;\n        process.removeAllListeners('uncaughtException');\n        process.once('uncaughtException', function(err) {\n            assert.equal(2, order++, 'error is third');\n            ourProcess.nextTick(function () {\n                assert.equal(5, order++, 'schedualed in error is last');\n                done();\n            });\n        });\n        ourProcess.nextTick(function () {\n            assert.equal(0, order++, 'first one works');\n            ourProcess.nextTick(function () {\n            assert.equal(4, order++, 'recursive one is 4th');\n            });\n        });\n        ourProcess.nextTick(function () {\n            assert.equal(1, order++, 'second one starts');\n            throw(new Error('an error is thrown'));\n        });\n        ourProcess.nextTick(function () {\n            assert.equal(3, order++, '3rd schedualed happens after the error');\n        });\n        });\n    });\n}\n    describe('rename globals', function (t) {\n      var oldTimeout = setTimeout;\n      var oldClear = clearTimeout;\n\n      it('clearTimeout', function (done){\n\n        var ok = true;\n        clearTimeout = function () {\n          ok = false;\n        }\n        var ran = false;\n        function cleanup() {\n          clearTimeout = oldClear;\n          var err;\n          try {\n            assert.ok(ok, 'fake clearTimeout ran');\n            assert.ok(ran, 'should have run');\n          } catch (e) {\n            err = e;\n          }\n          done(err);\n        }\n        setTimeout(cleanup, 1000);\n        ourProcess.nextTick(function () {\n          ran = true;\n        });\n      });\n      it('just setTimeout', function (done){\n\n\n        setTimeout = function () {\n          setTimeout = oldTimeout;\n          try {\n            assert.ok(false, 'fake setTimeout called')\n          } catch (e) {\n            done(e);\n          }\n\n        }\n\n        ourProcess.nextTick(function () {\n          setTimeout = oldTimeout;\n          done();\n        });\n      });\n    });\n}\nfunction vmtest() {\n  var vm = require('vm');\n  var fs = require('fs');\n  var process =  fs.readFileSync('./browser.js', {encoding: 'utf8'});\n\n\n  describe('should work in vm in strict mode with no globals', function () {\n    it('should parse', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'this.works = process.browser;';\n      var script = new vm.Script(str);\n      var context = {\n        works: false\n      };\n      script.runInNewContext(context);\n      assert.ok(context.works);\n      done();\n    });\n    it('setTimeout throws error', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'try {process.nextTick(function () {})} catch (e){this.works = e;}';\n      var script = new vm.Script(str);\n      var context = {\n        works: false\n      };\n      script.runInNewContext(context);\n      assert.ok(context.works);\n      done();\n    });\n    it('should generally work', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'process.nextTick(function () {assert.ok(true);done();})';\n      var script = new vm.Script(str);\n      var context = {\n        clearTimeout: clearTimeout,\n        setTimeout: setTimeout,\n        done: done,\n        assert: assert\n      };\n      script.runInNewContext(context);\n    });\n    it('late defs setTimeout', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'var setTimeout = hiddenSetTimeout;process.nextTick(function () {assert.ok(true);done();})';\n      var script = new vm.Script(str);\n      var context = {\n        clearTimeout: clearTimeout,\n        hiddenSetTimeout: setTimeout,\n        done: done,\n        assert: assert\n      };\n      script.runInNewContext(context);\n    });\n    it('late defs clearTimeout', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'var clearTimeout = hiddenClearTimeout;process.nextTick(function () {assert.ok(true);done();})';\n      var script = new vm.Script(str);\n      var context = {\n        hiddenClearTimeout: clearTimeout,\n        setTimeout: setTimeout,\n        done: done,\n        assert: assert\n      };\n      script.runInNewContext(context);\n    });\n    it('late defs setTimeout and then redefine', function (done) {\n      var str = '\"use strict\";var module = {exports:{}};';\n      str += process;\n      str += 'var setTimeout = hiddenSetTimeout;process.nextTick(function () {setTimeout = function (){throw new Error(\"foo\")};hiddenSetTimeout(function(){process.nextTick(function (){assert.ok(true);done();});});});';\n      var script = new vm.Script(str);\n      var context = {\n        clearTimeout: clearTimeout,\n        hiddenSetTimeout: setTimeout,\n        done: done,\n        assert: assert\n      };\n      script.runInNewContext(context);\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"script"}