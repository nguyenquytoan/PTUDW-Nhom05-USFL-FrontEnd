{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.mjs';\nimport '../_version.mjs';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\n\nexport const getOrCreateDefaultRouter = () => {\n  if (!defaultRouter) {\n    defaultRouter = new Router(); // The helpers that use the default Router assume these listeners exist.\n\n    defaultRouter.addFetchListener();\n    defaultRouter.addCacheListener();\n  }\n\n  return defaultRouter;\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-routing/utils/getOrCreateDefaultRouter.mjs"],"names":["Router","defaultRouter","getOrCreateDefaultRouter","addFetchListener","addCacheListener"],"mappings":"AAAA;;;;;;;AAQA,SAAQA,MAAR,QAAqB,eAArB;AACA,OAAO,iBAAP;AAEA,IAAIC,aAAJ;AAEA;;;;;;;;AAOA,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC5C,MAAI,CAACD,aAAL,EAAoB;AAClBA,IAAAA,aAAa,GAAG,IAAID,MAAJ,EAAhB,CADkB,CAGlB;;AACAC,IAAAA,aAAa,CAACE,gBAAd;AACAF,IAAAA,aAAa,CAACG,gBAAd;AACD;;AACD,SAAOH,aAAP;AACD,CATM","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport {Router} from '../Router.mjs';\nimport '../_version.mjs';\n\nlet defaultRouter;\n\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n  if (!defaultRouter) {\n    defaultRouter = new Router();\n\n    // The helpers that use the default Router assume these listeners exist.\n    defaultRouter.addFetchListener();\n    defaultRouter.addCacheListener();\n  }\n  return defaultRouter;\n};\n"]},"metadata":{},"sourceType":"module"}