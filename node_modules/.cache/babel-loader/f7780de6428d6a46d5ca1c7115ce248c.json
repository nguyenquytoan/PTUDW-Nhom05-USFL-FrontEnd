{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar autoprefixer = _interopDefault(require('autoprefixer'));\n\nvar browserslist = _interopDefault(require('browserslist'));\n\nvar cssdb = _interopDefault(require('cssdb'));\n\nvar postcss$1 = _interopDefault(require('postcss'));\n\nvar postcssAttributeCaseInsensitive = _interopDefault(require('postcss-attribute-case-insensitive'));\n\nvar postcssBlankPseudo = _interopDefault(require('css-blank-pseudo/postcss'));\n\nvar postcssColorFunctionalNotation = _interopDefault(require('postcss-color-functional-notation'));\n\nvar postcssColorGray = _interopDefault(require('postcss-color-gray'));\n\nvar postcssColorHexAlpha = _interopDefault(require('postcss-color-hex-alpha'));\n\nvar postcssColorModFunction = _interopDefault(require('postcss-color-mod-function'));\n\nvar postcssColorRebeccapurple = _interopDefault(require('postcss-color-rebeccapurple'));\n\nvar postcssCustomMedia = _interopDefault(require('postcss-custom-media'));\n\nvar postcssCustomProperties = _interopDefault(require('postcss-custom-properties'));\n\nvar postcssCustomSelectors = _interopDefault(require('postcss-custom-selectors'));\n\nvar postcssDirPseudoClass = _interopDefault(require('postcss-dir-pseudo-class'));\n\nvar postcssDoublePositionGradients = _interopDefault(require('postcss-double-position-gradients'));\n\nvar postcssEnvFunction = _interopDefault(require('postcss-env-function'));\n\nvar postcssFocusVisible = _interopDefault(require('postcss-focus-visible'));\n\nvar postcssFocusWithin = _interopDefault(require('postcss-focus-within'));\n\nvar postcssFontVariant = _interopDefault(require('postcss-font-variant'));\n\nvar postcssGapProperties = _interopDefault(require('postcss-gap-properties'));\n\nvar postcssHasPseudo = _interopDefault(require('css-has-pseudo/postcss'));\n\nvar postcssImageSetPolyfill = _interopDefault(require('postcss-image-set-function'));\n\nvar postcssInitial = _interopDefault(require('postcss-initial'));\n\nvar postcssLabFunction = _interopDefault(require('postcss-lab-function'));\n\nvar postcssLogical = _interopDefault(require('postcss-logical'));\n\nvar postcssMediaMinmax = _interopDefault(require('postcss-media-minmax'));\n\nvar postcssNesting = _interopDefault(require('postcss-nesting'));\n\nvar postcssOverflowShorthand = _interopDefault(require('postcss-overflow-shorthand'));\n\nvar postcssPageBreak = _interopDefault(require('postcss-page-break'));\n\nvar postcssPlace = _interopDefault(require('postcss-place'));\n\nvar postcssPrefersColorScheme = _interopDefault(require('css-prefers-color-scheme/postcss'));\n\nvar postcssPseudoClassAnyLink = _interopDefault(require('postcss-pseudo-class-any-link'));\n\nvar postcssReplaceOverflowWrap = _interopDefault(require('postcss-replace-overflow-wrap'));\n\nvar postcssSelectorMatches = _interopDefault(require('postcss-selector-matches'));\n\nvar postcssSelectorNot = _interopDefault(require('postcss-selector-not'));\n\nvar caniuse = require('caniuse-lite');\n\nvar fs = _interopDefault(require('fs'));\n\nvar path = _interopDefault(require('path'));\n\nvar postcssFontFamilySystemUi = postcss$1.plugin('postcss-system-ui-font', () => root => {\n  root.walkDecls(propertyRegExp, decl => {\n    decl.value = decl.value.replace(systemUiMatch, systemUiReplace);\n  });\n});\nconst propertyRegExp = /(?:^(?:-|\\\\002d){2})|(?:^font(?:-family)?$)/i;\nconst whitespace = '[\\\\f\\\\n\\\\r\\\\x09\\\\x20]';\nconst systemUiFamily = ['system-ui',\n/* macOS 10.11-10.12 */\n'-apple-system',\n/* Windows 6+ */\n'Segoe UI',\n/* Android 4+ */\n'Roboto',\n/* Ubuntu 10.10+ */\n'Ubuntu',\n/* Gnome 3+ */\n'Cantarell',\n/* KDE Plasma 5+ */\n'Noto Sans',\n/* fallback */\n'sans-serif'];\nconst systemUiMatch = new RegExp(`(^|,|${whitespace}+)(?:system-ui${whitespace}*)(?:,${whitespace}*(?:${systemUiFamily.join('|')})${whitespace}*)?(,|$)`, 'i');\nconst systemUiReplace = `$1${systemUiFamily.join(', ')}$2`;\nvar plugins = {\n  'all-property': postcssInitial,\n  'any-link-pseudo-class': postcssPseudoClassAnyLink,\n  'blank-pseudo-class': postcssBlankPseudo,\n  'break-properties': postcssPageBreak,\n  'case-insensitive-attributes': postcssAttributeCaseInsensitive,\n  'color-functional-notation': postcssColorFunctionalNotation,\n  'color-mod-function': postcssColorModFunction,\n  'custom-media-queries': postcssCustomMedia,\n  'custom-properties': postcssCustomProperties,\n  'custom-selectors': postcssCustomSelectors,\n  'dir-pseudo-class': postcssDirPseudoClass,\n  'double-position-gradients': postcssDoublePositionGradients,\n  'environment-variables': postcssEnvFunction,\n  'focus-visible-pseudo-class': postcssFocusVisible,\n  'focus-within-pseudo-class': postcssFocusWithin,\n  'font-variant-property': postcssFontVariant,\n  'gap-properties': postcssGapProperties,\n  'gray-function': postcssColorGray,\n  'has-pseudo-class': postcssHasPseudo,\n  'hexadecimal-alpha-notation': postcssColorHexAlpha,\n  'image-set-function': postcssImageSetPolyfill,\n  'lab-function': postcssLabFunction,\n  'logical-properties-and-values': postcssLogical,\n  'matches-pseudo-class': postcssSelectorMatches,\n  'media-query-ranges': postcssMediaMinmax,\n  'nesting-rules': postcssNesting,\n  'not-pseudo-class': postcssSelectorNot,\n  'overflow-property': postcssOverflowShorthand,\n  'overflow-wrap-property': postcssReplaceOverflowWrap,\n  'place-properties': postcssPlace,\n  'prefers-color-scheme-query': postcssPrefersColorScheme,\n  'rebeccapurple-color': postcssColorRebeccapurple,\n  'system-ui-font-family': postcssFontFamilySystemUi\n}; // return a list of features to be inserted before or after cssdb features\n\nfunction getTransformedInsertions(insertions, placement) {\n  return Object.keys(insertions).map(id => [].concat(insertions[id]).map(plugin => ({\n    [placement]: true,\n    plugin,\n    id\n  }))).reduce((array, feature) => array.concat(feature), []);\n}\n\nfunction getUnsupportedBrowsersByFeature(feature) {\n  const caniuseFeature = caniuse.features[feature]; // if feature support can be determined\n\n  if (caniuseFeature) {\n    const stats = caniuse.feature(caniuseFeature).stats; // return an array of browsers and versions that do not support the feature\n\n    const results = Object.keys(stats).reduce((browsers, browser) => browsers.concat(Object.keys(stats[browser]).filter(version => stats[browser][version].indexOf('y') !== 0).map(version => `${browser} ${version}`)), []);\n    return results;\n  } else {\n    // otherwise, return that the feature does not work in any browser\n    return ['> 0%'];\n  }\n} // ids ordered by required execution, then alphabetically\n\n\nvar idsByExecutionOrder = ['custom-media-queries', 'custom-properties', 'environment-variables', // run environment-variables here to access transpiled custom media params and properties\n'image-set-function', // run images-set-function before nesting-rules so that it may fix nested media\n'media-query-ranges', // run media-query-range and\n'prefers-color-scheme-query', // run prefers-color-scheme-query here to prevent duplicate transpilation after nesting-rules\n'nesting-rules', 'custom-selectors', // run custom-selectors after nesting-rules to correctly transpile &:--custom-selector\n'any-link-pseudo-class', 'case-insensitive-attributes', 'focus-visible-pseudo-class', 'focus-within-pseudo-class', 'matches-pseudo-class', // run matches-pseudo-class and\n'not-pseudo-class', // run not-pseudo-class after other selectors have been transpiled\n'logical-properties-and-values', // run logical-properties-and-values before dir-pseudo-class\n'dir-pseudo-class', 'all-property', // run all-property before other property polyfills\n'color-functional-notation', 'double-position-gradients', 'gray-function', 'hexadecimal-alpha-notation', 'lab-function', 'rebeccapurple-color', 'color-mod-function', // run color-mod after other color modifications have finished\n'blank-pseudo-class', 'break-properties', 'font-variant-property', 'has-pseudo-class', 'gap-properties', 'overflow-property', 'overflow-wrap-property', 'place-properties', 'system-ui-font-family'];\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n/* Write Exports to CSS File\n/* ========================================================================== */\n\n\nfunction getCustomMediaAsCss(customMedia) {\n  const cssContent = Object.keys(customMedia).reduce((cssLines, name) => {\n    cssLines.push(`@custom-media ${name} ${customMedia[name]};`);\n    return cssLines;\n  }, []).join('\\n');\n  const css = `${cssContent}\\n`;\n  return css;\n}\n\nfunction getCustomPropertiesAsCss(customProperties) {\n  const cssContent = Object.keys(customProperties).reduce((cssLines, name) => {\n    cssLines.push(`\\t${name}: ${customProperties[name]};`);\n    return cssLines;\n  }, []).join('\\n');\n  const css = `:root {\\n${cssContent}\\n}\\n`;\n  return css;\n}\n\nfunction getCustomSelectorsAsCss(customSelectors) {\n  const cssContent = Object.keys(customSelectors).reduce((cssLines, name) => {\n    cssLines.push(`@custom-selector ${name} ${customSelectors[name]};`);\n    return cssLines;\n  }, []).join('\\n');\n  const css = `${cssContent}\\n`;\n  return css;\n}\n\nfunction writeExportsToCssFile(_x, _x2, _x3, _x4) {\n  return _writeExportsToCssFile.apply(this, arguments);\n}\n/* Write Exports to JSON file\n/* ========================================================================== */\n\n\nfunction _writeExportsToCssFile() {\n  _writeExportsToCssFile = _asyncToGenerator(function* (to, customMedia, customProperties, customSelectors) {\n    const customPropertiesAsCss = getCustomPropertiesAsCss(customProperties);\n    const customMediaAsCss = getCustomMediaAsCss(customMedia);\n    const customSelectorsAsCss = getCustomSelectorsAsCss(customSelectors);\n    const css = `${customMediaAsCss}\\n${customSelectorsAsCss}\\n${customPropertiesAsCss}`;\n    yield writeFile(to, css);\n  });\n  return _writeExportsToCssFile.apply(this, arguments);\n}\n\nfunction writeExportsToJsonFile(_x5, _x6, _x7, _x8) {\n  return _writeExportsToJsonFile.apply(this, arguments);\n}\n/* Write Exports to Common JS file\n/* ========================================================================== */\n\n\nfunction _writeExportsToJsonFile() {\n  _writeExportsToJsonFile = _asyncToGenerator(function* (to, customMedia, customProperties, customSelectors) {\n    const jsonContent = JSON.stringify({\n      'custom-media': customMedia,\n      'custom-properties': customProperties,\n      'custom-selectors': customSelectors\n    }, null, '  ');\n    const json = `${jsonContent}\\n`;\n    yield writeFile(to, json);\n  });\n  return _writeExportsToJsonFile.apply(this, arguments);\n}\n\nfunction getObjectWithKeyAsCjs(key, object) {\n  const jsContents = Object.keys(object).reduce((jsLines, name) => {\n    jsLines.push(`\\t\\t'${escapeForJS(name)}': '${escapeForJS(object[name])}'`);\n    return jsLines;\n  }, []).join(',\\n');\n  const cjs = `\\n\\t${key}: {\\n${jsContents}\\n\\t}`;\n  return cjs;\n}\n\nfunction writeExportsToCjsFile(_x9, _x10, _x11, _x12) {\n  return _writeExportsToCjsFile.apply(this, arguments);\n}\n/* Write Exports to Module JS file\n/* ========================================================================== */\n\n\nfunction _writeExportsToCjsFile() {\n  _writeExportsToCjsFile = _asyncToGenerator(function* (to, customMedia, customProperties, customSelectors) {\n    const customMediaAsCjs = getObjectWithKeyAsCjs('customMedia', customMedia);\n    const customPropertiesAsCjs = getObjectWithKeyAsCjs('customProperties', customProperties);\n    const customSelectorsAsCjs = getObjectWithKeyAsCjs('customSelectors', customSelectors);\n    const cjs = `module.exports = {${customMediaAsCjs},${customPropertiesAsCjs},${customSelectorsAsCjs}\\n};\\n`;\n    yield writeFile(to, cjs);\n  });\n  return _writeExportsToCjsFile.apply(this, arguments);\n}\n\nfunction getObjectWithKeyAsMjs(key, object) {\n  const mjsContents = Object.keys(object).reduce((mjsLines, name) => {\n    mjsLines.push(`\\t'${escapeForJS(name)}': '${escapeForJS(object[name])}'`);\n    return mjsLines;\n  }, []).join(',\\n');\n  const mjs = `export const ${key} = {\\n${mjsContents}\\n};\\n`;\n  return mjs;\n}\n\nfunction writeExportsToMjsFile(_x13, _x14, _x15, _x16) {\n  return _writeExportsToMjsFile.apply(this, arguments);\n}\n/* Write Exports to Exports\n/* ========================================================================== */\n\n\nfunction _writeExportsToMjsFile() {\n  _writeExportsToMjsFile = _asyncToGenerator(function* (to, customMedia, customProperties, customSelectors) {\n    const customMediaAsMjs = getObjectWithKeyAsMjs('customMedia', customMedia);\n    const customPropertiesAsMjs = getObjectWithKeyAsMjs('customProperties', customProperties);\n    const customSelectorsAsMjs = getObjectWithKeyAsMjs('customSelectors', customSelectors);\n    const mjs = `${customMediaAsMjs}\\n${customPropertiesAsMjs}\\n${customSelectorsAsMjs}`;\n    yield writeFile(to, mjs);\n  });\n  return _writeExportsToMjsFile.apply(this, arguments);\n}\n\nfunction writeToExports(customExports, destinations) {\n  return Promise.all([].concat(destinations).map( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (destination) {\n      if (destination instanceof Function) {\n        yield destination({\n          customMedia: getObjectWithStringifiedKeys(customExports.customMedia),\n          customProperties: getObjectWithStringifiedKeys(customExports.customProperties),\n          customSelectors: getObjectWithStringifiedKeys(customExports.customSelectors)\n        });\n      } else {\n        // read the destination as an object\n        const opts = destination === Object(destination) ? destination : {\n          to: String(destination)\n        }; // transformer for Exports into a JSON-compatible object\n\n        const toJSON = opts.toJSON || getObjectWithStringifiedKeys;\n\n        if ('customMedia' in opts || 'customProperties' in opts || 'customSelectors' in opts) {\n          // write directly to an object as customProperties\n          opts.customMedia = toJSON(customExports.customMedia);\n          opts.customProperties = toJSON(customExports.customProperties);\n          opts.customSelectors = toJSON(customExports.customSelectors);\n        } else if ('custom-media' in opts || 'custom-properties' in opts || 'custom-selectors' in opts) {\n          // write directly to an object as custom-properties\n          opts['custom-media'] = toJSON(customExports.customMedia);\n          opts['custom-properties'] = toJSON(customExports.customProperties);\n          opts['custom-selectors'] = toJSON(customExports.customSelectors);\n        } else {\n          // destination pathname\n          const to = String(opts.to || ''); // type of file being written to\n\n          const type = (opts.type || path.extname(opts.to).slice(1)).toLowerCase(); // transformed Exports\n\n          const customMediaJSON = toJSON(customExports.customMedia);\n          const customPropertiesJSON = toJSON(customExports.customProperties);\n          const customSelectorsJSON = toJSON(customExports.customSelectors);\n\n          if (type === 'css') {\n            yield writeExportsToCssFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n          }\n\n          if (type === 'js') {\n            yield writeExportsToCjsFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n          }\n\n          if (type === 'json') {\n            yield writeExportsToJsonFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n          }\n\n          if (type === 'mjs') {\n            yield writeExportsToMjsFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n          }\n        }\n      }\n    });\n\n    return function (_x17) {\n      return _ref.apply(this, arguments);\n    };\n  }()));\n}\n/* Helper utilities\n/* ========================================================================== */\n\n\nfunction getObjectWithStringifiedKeys(object) {\n  return Object.keys(object).reduce((objectJSON, key) => {\n    objectJSON[key] = String(object[key]);\n    return objectJSON;\n  }, {});\n}\n\nfunction writeFile(to, text) {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(to, text, error => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction escapeForJS(string) {\n  return string.replace(/\\\\([\\s\\S])|(')/g, '\\\\$1$2').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n}\n\nvar postcss = postcss$1.plugin('postcss-preset-env', opts => {\n  // initialize options\n  const features = Object(Object(opts).features);\n  const insertBefore = Object(Object(opts).insertBefore);\n  const insertAfter = Object(Object(opts).insertAfter);\n  const browsers = Object(opts).browsers;\n  const stage = 'stage' in Object(opts) ? opts.stage === false ? 5 : parseInt(opts.stage) || 0 : 2;\n  const autoprefixerOptions = Object(opts).autoprefixer;\n  const sharedOpts = initializeSharedOpts(Object(opts));\n  const stagedAutoprefixer = autoprefixerOptions === false ? () => {} : autoprefixer(Object.assign({\n    overrideBrowserslist: browsers\n  }, autoprefixerOptions)); // polyfillable features (those with an available postcss plugin)\n\n  const polyfillableFeatures = cssdb.concat( // additional features to be inserted before cssdb features\n  getTransformedInsertions(insertBefore, 'insertBefore'), // additional features to be inserted after cssdb features\n  getTransformedInsertions(insertAfter, 'insertAfter')).filter( // inserted features or features with an available postcss plugin\n  feature => feature.insertBefore || feature.id in plugins).sort( // features sorted by execution order and then insertion order\n  (a, b) => idsByExecutionOrder.indexOf(a.id) - idsByExecutionOrder.indexOf(b.id) || (a.insertBefore ? -1 : b.insertBefore ? 1 : 0) || (a.insertAfter ? 1 : b.insertAfter ? -1 : 0)).map( // polyfillable features as an object\n  feature => {\n    // target browsers for the polyfill\n    const unsupportedBrowsers = getUnsupportedBrowsersByFeature(feature.caniuse);\n    return feature.insertBefore || feature.insertAfter ? {\n      browsers: unsupportedBrowsers,\n      plugin: feature.plugin,\n      id: `${feature.insertBefore ? 'before' : 'after'}-${feature.id}`,\n      stage: 6\n    } : {\n      browsers: unsupportedBrowsers,\n      plugin: plugins[feature.id],\n      id: feature.id,\n      stage: feature.stage\n    };\n  }); // staged features (those at or above the selected stage)\n\n  const stagedFeatures = polyfillableFeatures.filter(feature => feature.id in features ? features[feature.id] : feature.stage >= stage).map(feature => ({\n    browsers: feature.browsers,\n    plugin: typeof feature.plugin.process === 'function' ? features[feature.id] === true ? sharedOpts // if the plugin is enabled and has shared options\n    ? feature.plugin(Object.assign({}, sharedOpts)) // otherwise, if the plugin is enabled\n    : feature.plugin() : sharedOpts // if the plugin has shared options and individual options\n    ? feature.plugin(Object.assign({}, sharedOpts, features[feature.id])) // if the plugin has individual options\n    : feature.plugin(Object.assign({}, features[feature.id])) // if the plugin is already initialized\n    : feature.plugin,\n    id: feature.id\n  })); // browsers supported by the configuration\n\n  const supportedBrowsers = browserslist(browsers, {\n    ignoreUnknownVersions: true\n  }); // features supported by the stage and browsers\n\n  const supportedFeatures = stagedFeatures.filter(feature => supportedBrowsers.some(supportedBrowser => browserslist(feature.browsers, {\n    ignoreUnknownVersions: true\n  }).some(polyfillBrowser => polyfillBrowser === supportedBrowser)));\n  return (root, result) => {\n    // polyfills run in execution order\n    const polyfills = supportedFeatures.reduce((promise, feature) => promise.then(() => feature.plugin(result.root, result)), Promise.resolve()).then(() => stagedAutoprefixer(result.root, result)).then(() => {\n      if (Object(opts).exportTo) {\n        writeToExports(sharedOpts.exportTo, opts.exportTo);\n      }\n    });\n    return polyfills;\n  };\n});\n\nconst initializeSharedOpts = opts => {\n  if ('importFrom' in opts || 'exportTo' in opts || 'preserve' in opts) {\n    const sharedOpts = {};\n\n    if ('importFrom' in opts) {\n      sharedOpts.importFrom = opts.importFrom;\n    }\n\n    if ('exportTo' in opts) {\n      sharedOpts.exportTo = {\n        customMedia: {},\n        customProperties: {},\n        customSelectors: {}\n      };\n    }\n\n    if ('preserve' in opts) {\n      sharedOpts.preserve = opts.preserve;\n    }\n\n    return sharedOpts;\n  }\n\n  return false;\n};\n\nmodule.exports = postcss;","map":{"version":3,"sources":["src/patch/postcss-system-ui-font-family.js","src/lib/plugins-by-id.js","src/lib/get-transformed-insertions.js","src/lib/get-unsupported-browsers-by-feature.js","src/lib/ids-by-execution-order.js","src/lib/write-to-exports.js","src/postcss.js"],"names":["root","decl","propertyRegExp","whitespace","systemUiFamily","systemUiMatch","systemUiReplace","postcssFontFamilySystemUi","id","insertions","plugin","array","caniuseFeature","caniuse","stats","results","Object","browsers","version","browser","cssContent","cssLines","name","customMedia","css","customProperties","customSelectors","writeExportsToCssFile","customPropertiesAsCss","getCustomPropertiesAsCss","customMediaAsCss","getCustomMediaAsCss","customSelectorsAsCss","getCustomSelectorsAsCss","writeFile","writeExportsToJsonFile","jsonContent","json","jsContents","jsLines","escapeForJS","object","cjs","key","writeExportsToCjsFile","customMediaAsCjs","getObjectWithKeyAsCjs","customPropertiesAsCjs","customSelectorsAsCjs","mjsContents","mjsLines","mjs","writeExportsToMjsFile","customMediaAsMjs","getObjectWithKeyAsMjs","customPropertiesAsMjs","customSelectorsAsMjs","destination","getObjectWithStringifiedKeys","customExports","opts","to","String","toJSON","type","path","customMediaJSON","customPropertiesJSON","customSelectorsJSON","objectJSON","fs","error","reject","resolve","string","features","insertBefore","insertAfter","stage","parseInt","autoprefixerOptions","sharedOpts","initializeSharedOpts","stagedAutoprefixer","autoprefixer","overrideBrowserslist","polyfillableFeatures","getTransformedInsertions","feature","idsByExecutionOrder","a","b","unsupportedBrowsers","getUnsupportedBrowsersByFeature","plugins","stagedFeatures","supportedBrowsers","browserslist","ignoreUnknownVersions","supportedFeatures","supportedBrowser","polyfillBrowser","polyfills","promise","result","Promise","writeToExports"],"mappings":"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","sourcesContent":["import postcss from 'postcss';\n\nexport default postcss.plugin('postcss-system-ui-font', () => root => {\n\troot.walkDecls(propertyRegExp, decl => {\n\t\tdecl.value = decl.value.replace(systemUiMatch, systemUiReplace);\n\t});\n});\n\nconst propertyRegExp = /(?:^(?:-|\\\\002d){2})|(?:^font(?:-family)?$)/i;\nconst whitespace = '[\\\\f\\\\n\\\\r\\\\x09\\\\x20]';\nconst systemUiFamily = [\n\t'system-ui',\n\t/* macOS 10.11-10.12 */ '-apple-system',\n\t/* Windows 6+ */ 'Segoe UI',\n\t/* Android 4+ */ 'Roboto',\n\t/* Ubuntu 10.10+ */ 'Ubuntu',\n\t/* Gnome 3+ */ 'Cantarell',\n\t/* KDE Plasma 5+ */ 'Noto Sans',\n\t/* fallback */ 'sans-serif'\n];\nconst systemUiMatch = new RegExp(`(^|,|${whitespace}+)(?:system-ui${whitespace}*)(?:,${whitespace}*(?:${systemUiFamily.join('|')})${whitespace}*)?(,|$)`, 'i');\nconst systemUiReplace = `$1${systemUiFamily.join(', ')}$2`;\n","import postcssAttributeCaseInsensitive from 'postcss-attribute-case-insensitive';\nimport postcssBlankPseudo from 'css-blank-pseudo/postcss';\nimport postcssColorFunctionalNotation from 'postcss-color-functional-notation';\nimport postcssColorGray from 'postcss-color-gray';\nimport postcssColorHexAlpha from 'postcss-color-hex-alpha';\nimport postcssColorModFunction from 'postcss-color-mod-function';\nimport postcssColorRebeccapurple from 'postcss-color-rebeccapurple';\nimport postcssCustomMedia from 'postcss-custom-media';\nimport postcssCustomProperties from 'postcss-custom-properties';\nimport postcssCustomSelectors from 'postcss-custom-selectors';\nimport postcssDirPseudoClass from 'postcss-dir-pseudo-class';\nimport postcssDoublePositionGradients from 'postcss-double-position-gradients';\nimport postcssEnvFunction from 'postcss-env-function';\nimport postcssFocusVisible from 'postcss-focus-visible';\nimport postcssFocusWithin from 'postcss-focus-within';\nimport postcssFontVariant from 'postcss-font-variant';\nimport postcssFontFamilySystemUi from '../patch/postcss-system-ui-font-family';\nimport postcssGapProperties from 'postcss-gap-properties';\nimport postcssHasPseudo from 'css-has-pseudo/postcss';\nimport postcssImageSetPolyfill from 'postcss-image-set-function';\nimport postcssInitial from 'postcss-initial';\nimport postcssLabFunction from 'postcss-lab-function';\nimport postcssLogical from 'postcss-logical';\nimport postcssMediaMinmax from 'postcss-media-minmax';\nimport postcssNesting from 'postcss-nesting';\nimport postcssOverflowShorthand from 'postcss-overflow-shorthand';\nimport postcssPageBreak from 'postcss-page-break';\nimport postcssPlace from 'postcss-place';\nimport postcssPrefersColorScheme from 'css-prefers-color-scheme/postcss';\nimport postcssPseudoClassAnyLink from 'postcss-pseudo-class-any-link';\nimport postcssReplaceOverflowWrap from 'postcss-replace-overflow-wrap';\nimport postcssSelectorMatches from 'postcss-selector-matches';\nimport postcssSelectorNot from 'postcss-selector-not';\n\n// postcss plugins ordered by id\nexport default {\n\t'all-property': postcssInitial,\n\t'any-link-pseudo-class': postcssPseudoClassAnyLink,\n\t'blank-pseudo-class': postcssBlankPseudo,\n\t'break-properties': postcssPageBreak,\n\t'case-insensitive-attributes': postcssAttributeCaseInsensitive,\n\t'color-functional-notation': postcssColorFunctionalNotation,\n\t'color-mod-function': postcssColorModFunction,\n\t'custom-media-queries': postcssCustomMedia,\n\t'custom-properties': postcssCustomProperties,\n\t'custom-selectors': postcssCustomSelectors,\n\t'dir-pseudo-class': postcssDirPseudoClass,\n\t'double-position-gradients': postcssDoublePositionGradients,\n\t'environment-variables': postcssEnvFunction,\n\t'focus-visible-pseudo-class': postcssFocusVisible,\n\t'focus-within-pseudo-class': postcssFocusWithin,\n\t'font-variant-property': postcssFontVariant,\n\t'gap-properties': postcssGapProperties,\n\t'gray-function': postcssColorGray,\n\t'has-pseudo-class': postcssHasPseudo,\n\t'hexadecimal-alpha-notation': postcssColorHexAlpha,\n\t'image-set-function': postcssImageSetPolyfill,\n\t'lab-function': postcssLabFunction,\n\t'logical-properties-and-values': postcssLogical,\n\t'matches-pseudo-class': postcssSelectorMatches,\n\t'media-query-ranges': postcssMediaMinmax,\n\t'nesting-rules': postcssNesting,\n\t'not-pseudo-class': postcssSelectorNot,\n\t'overflow-property': postcssOverflowShorthand,\n\t'overflow-wrap-property': postcssReplaceOverflowWrap,\n\t'place-properties': postcssPlace,\n\t'prefers-color-scheme-query': postcssPrefersColorScheme,\n\t'rebeccapurple-color': postcssColorRebeccapurple,\n\t'system-ui-font-family': postcssFontFamilySystemUi\n};\n","// return a list of features to be inserted before or after cssdb features\nexport default function getTransformedInsertions(insertions, placement) {\n\treturn Object.keys(insertions).map(\n\t\tid => [].concat(insertions[id]).map(\n\t\t\tplugin => ({\n\t\t\t\t[placement]: true,\n\t\t\t\tplugin,\n\t\t\t\tid\n\t\t\t})\n\t\t)\n\t).reduce(\n\t\t(array, feature) => array.concat(feature), []\n\t);\n}\n","import * as caniuse from 'caniuse-lite';\n\n// return a list of browsers that do not support the feature\nexport default function getUnsupportedBrowsersByFeature(feature) {\n\tconst caniuseFeature = caniuse.features[feature];\n\n\t// if feature support can be determined\n\tif (caniuseFeature) {\n\t\tconst stats = caniuse.feature(caniuseFeature).stats;\n\n\t\t// return an array of browsers and versions that do not support the feature\n\t\tconst results = Object.keys(stats).reduce(\n\t\t\t(browsers, browser) => browsers.concat(\n\t\t\t\tObject.keys(stats[browser]).filter(\n\t\t\t\t\tversion => stats[browser][version].indexOf('y') !== 0\n\t\t\t\t).map(\n\t\t\t\t\tversion => `${browser} ${version}`\n\t\t\t\t)\n\t\t\t),\n\t\t\t[]\n\t\t);\n\n\t\treturn results;\n\t} else {\n\t\t// otherwise, return that the feature does not work in any browser\n\t\treturn [ '> 0%' ];\n\t}\n}\n","// ids ordered by required execution, then alphabetically\nexport default [\n\t'custom-media-queries',\n\t'custom-properties',\n\t'environment-variables', // run environment-variables here to access transpiled custom media params and properties\n\t'image-set-function', // run images-set-function before nesting-rules so that it may fix nested media\n\t'media-query-ranges', // run media-query-range and\n\t'prefers-color-scheme-query', // run prefers-color-scheme-query here to prevent duplicate transpilation after nesting-rules\n\t'nesting-rules',\n\t'custom-selectors', // run custom-selectors after nesting-rules to correctly transpile &:--custom-selector\n\t'any-link-pseudo-class',\n\t'case-insensitive-attributes',\n\t'focus-visible-pseudo-class',\n\t'focus-within-pseudo-class',\n\t'matches-pseudo-class', // run matches-pseudo-class and\n\t'not-pseudo-class', // run not-pseudo-class after other selectors have been transpiled\n\t'logical-properties-and-values', // run logical-properties-and-values before dir-pseudo-class\n\t'dir-pseudo-class',\n\t'all-property', // run all-property before other property polyfills\n\t'color-functional-notation',\n\t'double-position-gradients',\n\t'gray-function',\n\t'hexadecimal-alpha-notation',\n\t'lab-function',\n\t'rebeccapurple-color',\n\t'color-mod-function', // run color-mod after other color modifications have finished\n\t'blank-pseudo-class',\n\t'break-properties',\n\t'font-variant-property',\n\t'has-pseudo-class',\n\t'gap-properties',\n\t'overflow-property',\n\t'overflow-wrap-property',\n\t'place-properties',\n\t'system-ui-font-family'\n];\n","/* eslint max-params: [\"error\", 4] */\n\nimport fs from 'fs';\nimport path from 'path';\n\n/* Write Exports to CSS File\n/* ========================================================================== */\n\nfunction getCustomMediaAsCss(customMedia) {\n\tconst cssContent = Object.keys(customMedia).reduce((cssLines, name) => {\n\t\tcssLines.push(`@custom-media ${name} ${customMedia[name]};`);\n\n\t\treturn cssLines;\n\t}, []).join('\\n');\n\tconst css = `${cssContent}\\n`;\n\n\treturn css;\n}\n\nfunction getCustomPropertiesAsCss(customProperties) {\n\tconst cssContent = Object.keys(customProperties).reduce((cssLines, name) => {\n\t\tcssLines.push(`\\t${name}: ${customProperties[name]};`);\n\n\t\treturn cssLines;\n\t}, []).join('\\n');\n\tconst css = `:root {\\n${cssContent}\\n}\\n`;\n\n\treturn css;\n}\n\nfunction getCustomSelectorsAsCss(customSelectors) {\n\tconst cssContent = Object.keys(customSelectors).reduce((cssLines, name) => {\n\t\tcssLines.push(`@custom-selector ${name} ${customSelectors[name]};`);\n\n\t\treturn cssLines;\n\t}, []).join('\\n');\n\tconst css = `${cssContent}\\n`;\n\n\treturn css;\n}\n\nasync function writeExportsToCssFile(to, customMedia, customProperties, customSelectors) {\n\tconst customPropertiesAsCss = getCustomPropertiesAsCss(customProperties);\n\tconst customMediaAsCss = getCustomMediaAsCss(customMedia);\n\tconst customSelectorsAsCss = getCustomSelectorsAsCss(customSelectors);\n\tconst css = `${customMediaAsCss}\\n${customSelectorsAsCss}\\n${customPropertiesAsCss}`;\n\n\tawait writeFile(to, css);\n}\n\n/* Write Exports to JSON file\n/* ========================================================================== */\n\nasync function writeExportsToJsonFile(to, customMedia, customProperties, customSelectors) {\n\tconst jsonContent = JSON.stringify({\n\t\t'custom-media': customMedia,\n\t\t'custom-properties': customProperties,\n\t\t'custom-selectors': customSelectors\n\t}, null, '  ');\n\tconst json = `${jsonContent}\\n`;\n\n\tawait writeFile(to, json);\n}\n\n/* Write Exports to Common JS file\n/* ========================================================================== */\n\nfunction getObjectWithKeyAsCjs(key, object) {\n\tconst jsContents = Object.keys(object).reduce((jsLines, name) => {\n\t\tjsLines.push(`\\t\\t'${escapeForJS(name)}': '${escapeForJS(object[name])}'`);\n\n\t\treturn jsLines;\n\t}, []).join(',\\n');\n\tconst cjs = `\\n\\t${key}: {\\n${jsContents}\\n\\t}`;\n\n\treturn cjs;\n}\n\nasync function writeExportsToCjsFile(to, customMedia, customProperties, customSelectors) {\n\tconst customMediaAsCjs = getObjectWithKeyAsCjs('customMedia', customMedia);\n\tconst customPropertiesAsCjs = getObjectWithKeyAsCjs('customProperties', customProperties);\n\tconst customSelectorsAsCjs = getObjectWithKeyAsCjs('customSelectors', customSelectors);\n\tconst cjs = `module.exports = {${customMediaAsCjs},${customPropertiesAsCjs},${customSelectorsAsCjs}\\n};\\n`;\n\n\tawait writeFile(to, cjs);\n}\n\n/* Write Exports to Module JS file\n/* ========================================================================== */\n\nfunction getObjectWithKeyAsMjs(key, object) {\n\tconst mjsContents = Object.keys(object).reduce((mjsLines, name) => {\n\t\tmjsLines.push(`\\t'${escapeForJS(name)}': '${escapeForJS(object[name])}'`);\n\n\t\treturn mjsLines;\n\t}, []).join(',\\n');\n\tconst mjs = `export const ${key} = {\\n${mjsContents}\\n};\\n`;\n\n\treturn mjs;\n}\n\nasync function writeExportsToMjsFile(to, customMedia, customProperties, customSelectors) {\n\tconst customMediaAsMjs = getObjectWithKeyAsMjs('customMedia', customMedia);\n\tconst customPropertiesAsMjs = getObjectWithKeyAsMjs('customProperties', customProperties);\n\tconst customSelectorsAsMjs = getObjectWithKeyAsMjs('customSelectors', customSelectors);\n\tconst mjs = `${customMediaAsMjs}\\n${customPropertiesAsMjs}\\n${customSelectorsAsMjs}`;\n\n\tawait writeFile(to, mjs);\n}\n\n/* Write Exports to Exports\n/* ========================================================================== */\n\nexport default function writeToExports(customExports, destinations) {\n\treturn Promise.all([].concat(destinations).map(async destination => {\n\t\tif (destination instanceof Function) {\n\t\t\tawait destination({\n\t\t\t\tcustomMedia: getObjectWithStringifiedKeys(customExports.customMedia),\n\t\t\t\tcustomProperties: getObjectWithStringifiedKeys(customExports.customProperties),\n\t\t\t\tcustomSelectors: getObjectWithStringifiedKeys(customExports.customSelectors)\n\t\t\t});\n\t\t} else {\n\t\t\t// read the destination as an object\n\t\t\tconst opts = destination === Object(destination) ? destination : { to: String(destination) };\n\n\t\t\t// transformer for Exports into a JSON-compatible object\n\t\t\tconst toJSON = opts.toJSON || getObjectWithStringifiedKeys;\n\n\t\t\tif ('customMedia' in opts || 'customProperties' in opts || 'customSelectors' in opts) {\n\t\t\t\t// write directly to an object as customProperties\n\t\t\t\topts.customMedia = toJSON(customExports.customMedia);\n\t\t\t\topts.customProperties = toJSON(customExports.customProperties);\n\t\t\t\topts.customSelectors = toJSON(customExports.customSelectors);\n\t\t\t} else if ('custom-media' in opts || 'custom-properties' in opts || 'custom-selectors' in opts) {\n\t\t\t\t// write directly to an object as custom-properties\n\t\t\t\topts['custom-media'] = toJSON(customExports.customMedia);\n\t\t\t\topts['custom-properties'] = toJSON(customExports.customProperties);\n\t\t\t\topts['custom-selectors'] = toJSON(customExports.customSelectors);\n\t\t\t} else {\n\t\t\t\t// destination pathname\n\t\t\t\tconst to = String(opts.to || '');\n\n\t\t\t\t// type of file being written to\n\t\t\t\tconst type = (opts.type || path.extname(opts.to).slice(1)).toLowerCase();\n\n\t\t\t\t// transformed Exports\n\t\t\t\tconst customMediaJSON = toJSON(customExports.customMedia);\n\t\t\t\tconst customPropertiesJSON = toJSON(customExports.customProperties);\n\t\t\t\tconst customSelectorsJSON = toJSON(customExports.customSelectors);\n\n\t\t\t\tif (type === 'css') {\n\t\t\t\t\tawait writeExportsToCssFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'js') {\n\t\t\t\t\tawait writeExportsToCjsFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'json') {\n\t\t\t\t\tawait writeExportsToJsonFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'mjs') {\n\t\t\t\t\tawait writeExportsToMjsFile(to, customMediaJSON, customPropertiesJSON, customSelectorsJSON);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}));\n}\n\n/* Helper utilities\n/* ========================================================================== */\n\nfunction getObjectWithStringifiedKeys(object) {\n\treturn Object.keys(object).reduce((objectJSON, key) => {\n\t\tobjectJSON[key] = String(object[key]);\n\n\t\treturn objectJSON;\n\t}, {});\n}\n\nfunction writeFile(to, text) {\n\treturn new Promise((resolve, reject) => {\n\t\tfs.writeFile(to, text, error => {\n\t\t\tif (error) {\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction escapeForJS(string) {\n\treturn string.replace(/\\\\([\\s\\S])|(')/g, '\\\\$1$2').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n}\n","import autoprefixer from 'autoprefixer'\nimport browserslist from 'browserslist';\nimport cssdb from 'cssdb';\nimport postcss from 'postcss';\nimport plugins from './lib/plugins-by-id';\nimport getTransformedInsertions from './lib/get-transformed-insertions';\nimport getUnsupportedBrowsersByFeature from './lib/get-unsupported-browsers-by-feature';\nimport idsByExecutionOrder from './lib/ids-by-execution-order';\nimport writeToExports from './lib/write-to-exports';\n\nexport default postcss.plugin('postcss-preset-env', opts => {\n\t// initialize options\n\tconst features = Object(Object(opts).features);\n\tconst insertBefore = Object(Object(opts).insertBefore);\n\tconst insertAfter = Object(Object(opts).insertAfter);\n\tconst browsers = Object(opts).browsers;\n\tconst stage = 'stage' in Object(opts)\n\t\t? opts.stage === false\n\t\t\t? 5\n\t\t: parseInt(opts.stage) || 0\n\t: 2;\n\tconst autoprefixerOptions = Object(opts).autoprefixer;\n\tconst sharedOpts = initializeSharedOpts(Object(opts));\n\tconst stagedAutoprefixer = autoprefixerOptions === false\n\t\t? () => {}\n\t: autoprefixer(Object.assign({ overrideBrowserslist: browsers }, autoprefixerOptions));\n\n\t// polyfillable features (those with an available postcss plugin)\n\tconst polyfillableFeatures = cssdb.concat(\n\t\t// additional features to be inserted before cssdb features\n\t\tgetTransformedInsertions(insertBefore, 'insertBefore'),\n\t\t// additional features to be inserted after cssdb features\n\t\tgetTransformedInsertions(insertAfter, 'insertAfter')\n\t).filter(\n\t\t// inserted features or features with an available postcss plugin\n\t\tfeature => feature.insertBefore || feature.id in plugins\n\t).sort(\n\t\t// features sorted by execution order and then insertion order\n\t\t(a, b) => idsByExecutionOrder.indexOf(a.id) - idsByExecutionOrder.indexOf(b.id) || (a.insertBefore ? -1 : b.insertBefore ? 1 : 0) || (a.insertAfter ? 1 : b.insertAfter ? -1 : 0)\n\t).map(\n\t\t// polyfillable features as an object\n\t\tfeature => {\n\t\t\t// target browsers for the polyfill\n\t\t\tconst unsupportedBrowsers = getUnsupportedBrowsersByFeature(feature.caniuse);\n\n\t\t\treturn feature.insertBefore || feature.insertAfter ? {\n\t\t\t\tbrowsers: unsupportedBrowsers,\n\t\t\t\tplugin:   feature.plugin,\n\t\t\t\tid:       `${feature.insertBefore ? 'before' : 'after'}-${feature.id}`,\n\t\t\t\tstage:    6\n\t\t\t} : {\n\t\t\t\tbrowsers: unsupportedBrowsers,\n\t\t\t\tplugin:   plugins[feature.id],\n\t\t\t\tid:       feature.id,\n\t\t\t\tstage:    feature.stage\n\t\t\t};\n\t\t}\n\t);\n\n\t// staged features (those at or above the selected stage)\n\tconst stagedFeatures = polyfillableFeatures.filter(\n\t\tfeature => feature.id in features\n\t\t\t? features[feature.id]\n\t\t: feature.stage >= stage\n\t).map(\n\t\tfeature => ({\n\t\t\tbrowsers: feature.browsers,\n\t\t\tplugin: typeof feature.plugin.process === 'function'\n\t\t\t\t? features[feature.id] === true\n\t\t\t\t\t? sharedOpts\n\t\t\t\t\t\t// if the plugin is enabled and has shared options\n\t\t\t\t\t\t? feature.plugin(Object.assign({}, sharedOpts))\n\t\t\t\t\t// otherwise, if the plugin is enabled\n\t\t\t\t\t: feature.plugin()\n\t\t\t\t: sharedOpts\n\t\t\t\t\t// if the plugin has shared options and individual options\n\t\t\t\t\t? feature.plugin(Object.assign({}, sharedOpts, features[feature.id]))\n\t\t\t\t// if the plugin has individual options\n\t\t\t\t: feature.plugin(Object.assign({}, features[feature.id]))\n\t\t\t// if the plugin is already initialized\n\t\t\t: feature.plugin,\n\t\t\tid: feature.id\n\t\t})\n\t);\n\n\t// browsers supported by the configuration\n\tconst supportedBrowsers = browserslist(browsers, { ignoreUnknownVersions: true });\n\n\t// features supported by the stage and browsers\n\tconst supportedFeatures = stagedFeatures.filter(\n\t\tfeature => supportedBrowsers.some(\n\t\t\tsupportedBrowser => browserslist(feature.browsers, {\n\t\t\t\tignoreUnknownVersions: true\n\t\t\t}).some(\n\t\t\t\tpolyfillBrowser => polyfillBrowser === supportedBrowser\n\t\t\t)\n\t\t)\n\t);\n\n\treturn (root, result) => {\n\t\t// polyfills run in execution order\n\t\tconst polyfills = supportedFeatures.reduce(\n\t\t\t(promise, feature) => promise.then(\n\t\t\t\t() => feature.plugin(result.root, result)\n\t\t\t),\n\t\t\tPromise.resolve()\n\t\t).then(\n\t\t\t() => stagedAutoprefixer(result.root, result)\n\t\t).then(\n\t\t\t() => {\n\t\t\t\tif (Object(opts).exportTo) {\n\t\t\t\t\twriteToExports(sharedOpts.exportTo, opts.exportTo);\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\n\t\treturn polyfills;\n\t};\n});\n\nconst initializeSharedOpts = opts => {\n\tif ('importFrom' in opts || 'exportTo' in opts || 'preserve' in opts) {\n\t\tconst sharedOpts = {};\n\n\t\tif ('importFrom' in opts) {\n\t\t\tsharedOpts.importFrom = opts.importFrom;\n\t\t}\n\n\t\tif ('exportTo' in opts) {\n\t\t\tsharedOpts.exportTo = {\n\t\t\t\tcustomMedia: {},\n\t\t\t\tcustomProperties: {},\n\t\t\t\tcustomSelectors: {},\n\t\t\t};\n\t\t}\n\n\t\tif ('preserve' in opts) {\n\t\t\tsharedOpts.preserve = opts.preserve;\n\t\t}\n\n\t\treturn sharedOpts;\n\t}\n\n\treturn false;\n};\n"]},"metadata":{},"sourceType":"script"}