{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _ansiEscapes = _interopRequireDefault(require(\"ansi-escapes\"));\n\nvar _stringLength = _interopRequireDefault(require(\"string-length\"));\n\nvar _jestWatcher = require(\"jest-watcher\");\n\nvar _utils = require(\"../lib/utils\");\n\nvar _pattern_mode_helpers = require(\"../lib/pattern_mode_helpers\");\n\nvar _scroll2 = _interopRequireDefault(require(\"../lib/scroll\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nclass FileNamePatternPrompt extends _jestWatcher.PatternPrompt {\n  constructor(pipe, prompt) {\n    super(pipe, prompt);\n    this._entityName = 'filenames';\n    this._searchSources = [];\n  }\n\n  _onChange(pattern, options) {\n    super._onChange(pattern, options);\n\n    this._printTypeahead(pattern, options);\n  }\n\n  _printTypeahead(pattern, options) {\n    const matchedTests = this._getMatchedTests(pattern);\n\n    const total = matchedTests.length;\n    const pipe = this._pipe;\n    const prompt = this._prompt;\n    (0, _jestWatcher.printPatternCaret)(pattern, pipe);\n    pipe.write(_ansiEscapes.default.cursorLeft);\n\n    if (pattern) {\n      (0, _pattern_mode_helpers.printPatternMatches)(total, 'file', pipe);\n      const prefix = `  ${_chalk.default.dim('\\u203A')} `;\n      const padding = (0, _stringLength.default)(prefix) + 2;\n      const width = (0, _utils.getTerminalWidth)(pipe);\n\n      const _scroll = (0, _scroll2.default)(total, options),\n            start = _scroll.start,\n            end = _scroll.end,\n            index = _scroll.index;\n\n      prompt.setPromptLength(total);\n      matchedTests.slice(start, end).map(({\n        path,\n        context\n      }) => {\n        const filePath = (0, _utils.trimAndFormatPath)(padding, context.config, path, width);\n        return (0, _utils.highlight)(path, filePath, pattern, context.config.rootDir);\n      }).map((item, i) => (0, _pattern_mode_helpers.formatTypeaheadSelection)(item, i, index, prompt)).forEach(item => (0, _pattern_mode_helpers.printTypeaheadItem)(item, pipe));\n\n      if (total > end) {\n        (0, _pattern_mode_helpers.printMore)('file', pipe, total - end);\n      }\n    } else {\n      (0, _pattern_mode_helpers.printStartTyping)('filename', pipe);\n    }\n\n    (0, _jestWatcher.printRestoredPatternCaret)(pattern, this._currentUsageRows, pipe);\n  }\n\n  _getMatchedTests(pattern) {\n    let regex;\n\n    try {\n      regex = new RegExp(pattern, 'i');\n    } catch (e) {\n      return [];\n    }\n\n    return this._searchSources.reduce((tests, {\n      testPaths,\n      config\n    }) => {\n      return tests.concat(testPaths.filter(testPath => regex.test(testPath)).map(path => ({\n        path,\n        context: {\n          config\n        }\n      })));\n    }, []);\n  }\n\n  updateSearchSources(searchSources) {\n    this._searchSources = searchSources;\n  }\n\n}\n\nexports.default = FileNamePatternPrompt;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-watch-typeahead/build/file_name_plugin/prompt.js"],"names":["Object","defineProperty","exports","value","default","_chalk","_interopRequireDefault","require","_ansiEscapes","_stringLength","_jestWatcher","_utils","_pattern_mode_helpers","_scroll2","obj","__esModule","FileNamePatternPrompt","PatternPrompt","constructor","pipe","prompt","_entityName","_searchSources","_onChange","pattern","options","_printTypeahead","matchedTests","_getMatchedTests","total","length","_pipe","_prompt","printPatternCaret","write","cursorLeft","printPatternMatches","prefix","dim","padding","width","getTerminalWidth","_scroll","start","end","index","setPromptLength","slice","map","path","context","filePath","trimAndFormatPath","config","highlight","rootDir","item","i","formatTypeaheadSelection","forEach","printTypeaheadItem","printMore","printStartTyping","printRestoredPatternCaret","_currentUsageRows","regex","RegExp","e","reduce","tests","testPaths","concat","filter","testPath","test","updateSearchSources","searchSources"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _ansiEscapes = _interopRequireDefault(require(\"ansi-escapes\"));\n\nvar _stringLength = _interopRequireDefault(require(\"string-length\"));\n\nvar _jestWatcher = require(\"jest-watcher\");\n\nvar _utils = require(\"../lib/utils\");\n\nvar _pattern_mode_helpers = require(\"../lib/pattern_mode_helpers\");\n\nvar _scroll2 = _interopRequireDefault(require(\"../lib/scroll\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass FileNamePatternPrompt extends _jestWatcher.PatternPrompt {\n  constructor(pipe, prompt) {\n    super(pipe, prompt);\n    this._entityName = 'filenames';\n    this._searchSources = [];\n  }\n\n  _onChange(pattern, options) {\n    super._onChange(pattern, options);\n\n    this._printTypeahead(pattern, options);\n  }\n\n  _printTypeahead(pattern, options) {\n    const matchedTests = this._getMatchedTests(pattern);\n\n    const total = matchedTests.length;\n    const pipe = this._pipe;\n    const prompt = this._prompt;\n    (0, _jestWatcher.printPatternCaret)(pattern, pipe);\n    pipe.write(_ansiEscapes.default.cursorLeft);\n\n    if (pattern) {\n      (0, _pattern_mode_helpers.printPatternMatches)(total, 'file', pipe);\n      const prefix = `  ${_chalk.default.dim('\\u203A')} `;\n      const padding = (0, _stringLength.default)(prefix) + 2;\n      const width = (0, _utils.getTerminalWidth)(pipe);\n\n      const _scroll = (0, _scroll2.default)(total, options),\n            start = _scroll.start,\n            end = _scroll.end,\n            index = _scroll.index;\n\n      prompt.setPromptLength(total);\n      matchedTests.slice(start, end).map(({\n        path,\n        context\n      }) => {\n        const filePath = (0, _utils.trimAndFormatPath)(padding, context.config, path, width);\n        return (0, _utils.highlight)(path, filePath, pattern, context.config.rootDir);\n      }).map((item, i) => (0, _pattern_mode_helpers.formatTypeaheadSelection)(item, i, index, prompt)).forEach(item => (0, _pattern_mode_helpers.printTypeaheadItem)(item, pipe));\n\n      if (total > end) {\n        (0, _pattern_mode_helpers.printMore)('file', pipe, total - end);\n      }\n    } else {\n      (0, _pattern_mode_helpers.printStartTyping)('filename', pipe);\n    }\n\n    (0, _jestWatcher.printRestoredPatternCaret)(pattern, this._currentUsageRows, pipe);\n  }\n\n  _getMatchedTests(pattern) {\n    let regex;\n\n    try {\n      regex = new RegExp(pattern, 'i');\n    } catch (e) {\n      return [];\n    }\n\n    return this._searchSources.reduce((tests, {\n      testPaths,\n      config\n    }) => {\n      return tests.concat(testPaths.filter(testPath => regex.test(testPath)).map(path => ({\n        path,\n        context: {\n          config\n        }\n      })));\n    }, []);\n  }\n\n  updateSearchSources(searchSources) {\n    this._searchSources = searchSources;\n  }\n\n}\n\nexports.default = FileNamePatternPrompt;"]},"metadata":{},"sourceType":"script"}