{"ast":null,"code":"'use strict';\n\nvar define = require('define-properties');\n\nvar hasSymbols = require('has-symbols')();\n\nvar getPolyfill = require('./polyfill');\n\nvar regexpMatchAllPolyfill = require('./polyfill-regexp-matchall');\n\nvar defineP = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nmodule.exports = function shimMatchAll() {\n  var polyfill = getPolyfill();\n  define(String.prototype, {\n    matchAll: polyfill\n  }, {\n    matchAll: function () {\n      return String.prototype.matchAll !== polyfill;\n    }\n  });\n\n  if (hasSymbols) {\n    // eslint-disable-next-line no-restricted-properties\n    var symbol = Symbol.matchAll || (Symbol['for'] ? Symbol['for']('Symbol.matchAll') : Symbol('Symbol.matchAll'));\n    define(Symbol, {\n      matchAll: symbol\n    }, {\n      matchAll: function () {\n        return Symbol.matchAll !== symbol;\n      }\n    });\n\n    if (defineP && gOPD) {\n      var desc = gOPD(Symbol, symbol);\n\n      if (!desc || desc.configurable) {\n        defineP(Symbol, symbol, {\n          configurable: false,\n          enumerable: false,\n          value: symbol,\n          writable: false\n        });\n      }\n    }\n\n    var regexpMatchAll = regexpMatchAllPolyfill();\n    var func = {};\n    func[symbol] = regexpMatchAll;\n    var predicate = {};\n\n    predicate[symbol] = function () {\n      return RegExp.prototype[symbol] !== regexpMatchAll;\n    };\n\n    define(RegExp.prototype, func, predicate);\n  }\n\n  return polyfill;\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/string.prototype.matchall/shim.js"],"names":["define","require","hasSymbols","getPolyfill","regexpMatchAllPolyfill","defineP","Object","defineProperty","gOPD","getOwnPropertyDescriptor","module","exports","shimMatchAll","polyfill","String","prototype","matchAll","symbol","Symbol","desc","configurable","enumerable","value","writable","regexpMatchAll","func","predicate","RegExp"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAAP,EAAjB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,YAAD,CAAzB;;AACA,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,4BAAD,CAApC;;AAEA,IAAII,OAAO,GAAGC,MAAM,CAACC,cAArB;AACA,IAAIC,IAAI,GAAGF,MAAM,CAACG,wBAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,GAAwB;AACxC,MAAIC,QAAQ,GAAGV,WAAW,EAA1B;AACAH,EAAAA,MAAM,CACLc,MAAM,CAACC,SADF,EAEL;AAAEC,IAAAA,QAAQ,EAAEH;AAAZ,GAFK,EAGL;AAAEG,IAAAA,QAAQ,EAAE,YAAY;AAAE,aAAOF,MAAM,CAACC,SAAP,CAAiBC,QAAjB,KAA8BH,QAArC;AAAgD;AAA1E,GAHK,CAAN;;AAKA,MAAIX,UAAJ,EAAgB;AACf;AACA,QAAIe,MAAM,GAAGC,MAAM,CAACF,QAAP,KAAoBE,MAAM,CAAC,KAAD,CAAN,GAAgBA,MAAM,CAAC,KAAD,CAAN,CAAc,iBAAd,CAAhB,GAAmDA,MAAM,CAAC,iBAAD,CAA7E,CAAb;AACAlB,IAAAA,MAAM,CACLkB,MADK,EAEL;AAAEF,MAAAA,QAAQ,EAAEC;AAAZ,KAFK,EAGL;AAAED,MAAAA,QAAQ,EAAE,YAAY;AAAE,eAAOE,MAAM,CAACF,QAAP,KAAoBC,MAA3B;AAAoC;AAA9D,KAHK,CAAN;;AAMA,QAAIZ,OAAO,IAAIG,IAAf,EAAqB;AACpB,UAAIW,IAAI,GAAGX,IAAI,CAACU,MAAD,EAASD,MAAT,CAAf;;AACA,UAAI,CAACE,IAAD,IAASA,IAAI,CAACC,YAAlB,EAAgC;AAC/Bf,QAAAA,OAAO,CAACa,MAAD,EAASD,MAAT,EAAiB;AACvBG,UAAAA,YAAY,EAAE,KADS;AAEvBC,UAAAA,UAAU,EAAE,KAFW;AAGvBC,UAAAA,KAAK,EAAEL,MAHgB;AAIvBM,UAAAA,QAAQ,EAAE;AAJa,SAAjB,CAAP;AAMA;AACD;;AAED,QAAIC,cAAc,GAAGpB,sBAAsB,EAA3C;AACA,QAAIqB,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,CAACR,MAAD,CAAJ,GAAeO,cAAf;AACA,QAAIE,SAAS,GAAG,EAAhB;;AACAA,IAAAA,SAAS,CAACT,MAAD,CAAT,GAAoB,YAAY;AAC/B,aAAOU,MAAM,CAACZ,SAAP,CAAiBE,MAAjB,MAA6BO,cAApC;AACA,KAFD;;AAGAxB,IAAAA,MAAM,CAAC2B,MAAM,CAACZ,SAAR,EAAmBU,IAAnB,EAAyBC,SAAzB,CAAN;AACA;;AACD,SAAOb,QAAP;AACA,CAtCD","sourcesContent":["'use strict';\n\nvar define = require('define-properties');\nvar hasSymbols = require('has-symbols')();\nvar getPolyfill = require('./polyfill');\nvar regexpMatchAllPolyfill = require('./polyfill-regexp-matchall');\n\nvar defineP = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nmodule.exports = function shimMatchAll() {\n\tvar polyfill = getPolyfill();\n\tdefine(\n\t\tString.prototype,\n\t\t{ matchAll: polyfill },\n\t\t{ matchAll: function () { return String.prototype.matchAll !== polyfill; } }\n\t);\n\tif (hasSymbols) {\n\t\t// eslint-disable-next-line no-restricted-properties\n\t\tvar symbol = Symbol.matchAll || (Symbol['for'] ? Symbol['for']('Symbol.matchAll') : Symbol('Symbol.matchAll'));\n\t\tdefine(\n\t\t\tSymbol,\n\t\t\t{ matchAll: symbol },\n\t\t\t{ matchAll: function () { return Symbol.matchAll !== symbol; } }\n\t\t);\n\n\t\tif (defineP && gOPD) {\n\t\t\tvar desc = gOPD(Symbol, symbol);\n\t\t\tif (!desc || desc.configurable) {\n\t\t\t\tdefineP(Symbol, symbol, {\n\t\t\t\t\tconfigurable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: symbol,\n\t\t\t\t\twritable: false\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar regexpMatchAll = regexpMatchAllPolyfill();\n\t\tvar func = {};\n\t\tfunc[symbol] = regexpMatchAll;\n\t\tvar predicate = {};\n\t\tpredicate[symbol] = function () {\n\t\t\treturn RegExp.prototype[symbol] !== regexpMatchAll;\n\t\t};\n\t\tdefine(RegExp.prototype, func, predicate);\n\t}\n\treturn polyfill;\n};\n"]},"metadata":{},"sourceType":"script"}