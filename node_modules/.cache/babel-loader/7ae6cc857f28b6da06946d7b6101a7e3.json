{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observable_1 = require(\"../../Observable\");\n\nvar Subscription_1 = require(\"../../Subscription\");\n\nfunction fromFetch(input, init) {\n  return new Observable_1.Observable(function (subscriber) {\n    var controller = new AbortController();\n    var signal = controller.signal;\n    var abortable = true;\n    var unsubscribed = false;\n    var subscription = new Subscription_1.Subscription();\n    subscription.add(function () {\n      unsubscribed = true;\n\n      if (abortable) {\n        controller.abort();\n      }\n    });\n    var perSubscriberInit;\n\n    if (init) {\n      if (init.signal) {\n        if (init.signal.aborted) {\n          controller.abort();\n        } else {\n          var outerSignal_1 = init.signal;\n\n          var outerSignalHandler_1 = function () {\n            if (!signal.aborted) {\n              controller.abort();\n            }\n          };\n\n          outerSignal_1.addEventListener('abort', outerSignalHandler_1);\n          subscription.add(function () {\n            return outerSignal_1.removeEventListener('abort', outerSignalHandler_1);\n          });\n        }\n      }\n\n      perSubscriberInit = __assign({}, init, {\n        signal: signal\n      });\n    } else {\n      perSubscriberInit = {\n        signal: signal\n      };\n    }\n\n    fetch(input, perSubscriberInit).then(function (response) {\n      abortable = false;\n      subscriber.next(response);\n      subscriber.complete();\n    }).catch(function (err) {\n      abortable = false;\n\n      if (!unsubscribed) {\n        subscriber.error(err);\n      }\n    });\n    return subscription;\n  });\n}\n\nexports.fromFetch = fromFetch;","map":{"version":3,"sources":["../../../src/internal/observable/dom/fetch.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAoDA,SAAgB,SAAhB,CAA0B,KAA1B,EAAmD,IAAnD,EAAqE;AACnE,SAAO,IAAI,YAAA,CAAA,UAAJ,CAAyB,UAAA,UAAA,EAAU;AACxC,QAAM,UAAU,GAAG,IAAI,eAAJ,EAAnB;AACA,QAAM,MAAM,GAAG,UAAU,CAAC,MAA1B;AACA,QAAI,SAAS,GAAG,IAAhB;AACA,QAAI,YAAY,GAAG,KAAnB;AAEA,QAAM,YAAY,GAAG,IAAI,cAAA,CAAA,YAAJ,EAArB;AACA,IAAA,YAAY,CAAC,GAAb,CAAiB,YAAA;AACf,MAAA,YAAY,GAAG,IAAf;;AACA,UAAI,SAAJ,EAAe;AACb,QAAA,UAAU,CAAC,KAAX;AACD;AACF,KALD;AAOA,QAAI,iBAAJ;;AACA,QAAI,IAAJ,EAAU;AAER,UAAI,IAAI,CAAC,MAAT,EAAiB;AACf,YAAI,IAAI,CAAC,MAAL,CAAY,OAAhB,EAAyB;AACvB,UAAA,UAAU,CAAC,KAAX;AACD,SAFD,MAEO;AACL,cAAM,aAAW,GAAG,IAAI,CAAC,MAAzB;;AACA,cAAM,oBAAkB,GAAG,YAAA;AACzB,gBAAI,CAAC,MAAM,CAAC,OAAZ,EAAqB;AACnB,cAAA,UAAU,CAAC,KAAX;AACD;AACF,WAJD;;AAKA,UAAA,aAAW,CAAC,gBAAZ,CAA6B,OAA7B,EAAsC,oBAAtC;AACA,UAAA,YAAY,CAAC,GAAb,CAAiB,YAAA;AAAM,mBAAA,aAAW,CAAC,mBAAZ,CAAgC,OAAhC,EAAA,oBAAA,CAAA;AAA4D,WAAnF;AACD;AACF;;AAGD,MAAA,iBAAiB,GAAA,QAAA,CAAA,EAAA,EAAQ,IAAR,EAAY;AAAE,QAAA,MAAM,EAAA;AAAR,OAAZ,CAAjB;AACD,KAnBD,MAmBO;AACL,MAAA,iBAAiB,GAAG;AAAE,QAAA,MAAM,EAAA;AAAR,OAApB;AACD;;AAED,IAAA,KAAK,CAAC,KAAD,EAAQ,iBAAR,CAAL,CAAgC,IAAhC,CAAqC,UAAA,QAAA,EAAQ;AAC3C,MAAA,SAAS,GAAG,KAAZ;AACA,MAAA,UAAU,CAAC,IAAX,CAAgB,QAAhB;AACA,MAAA,UAAU,CAAC,QAAX;AACD,KAJD,EAIG,KAJH,CAIS,UAAA,GAAA,EAAG;AACV,MAAA,SAAS,GAAG,KAAZ;;AACA,UAAI,CAAC,YAAL,EAAmB;AAEjB,QAAA,UAAU,CAAC,KAAX,CAAiB,GAAjB;AACD;AACF,KAVD;AAYA,WAAO,YAAP;AACD,GAnDM,CAAP;AAoDD;;AArDD,OAAA,CAAA,SAAA,GAAA,SAAA","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../../Observable\");\nvar Subscription_1 = require(\"../../Subscription\");\nfunction fromFetch(input, init) {\n    return new Observable_1.Observable(function (subscriber) {\n        var controller = new AbortController();\n        var signal = controller.signal;\n        var abortable = true;\n        var unsubscribed = false;\n        var subscription = new Subscription_1.Subscription();\n        subscription.add(function () {\n            unsubscribed = true;\n            if (abortable) {\n                controller.abort();\n            }\n        });\n        var perSubscriberInit;\n        if (init) {\n            if (init.signal) {\n                if (init.signal.aborted) {\n                    controller.abort();\n                }\n                else {\n                    var outerSignal_1 = init.signal;\n                    var outerSignalHandler_1 = function () {\n                        if (!signal.aborted) {\n                            controller.abort();\n                        }\n                    };\n                    outerSignal_1.addEventListener('abort', outerSignalHandler_1);\n                    subscription.add(function () { return outerSignal_1.removeEventListener('abort', outerSignalHandler_1); });\n                }\n            }\n            perSubscriberInit = __assign({}, init, { signal: signal });\n        }\n        else {\n            perSubscriberInit = { signal: signal };\n        }\n        fetch(input, perSubscriberInit).then(function (response) {\n            abortable = false;\n            subscriber.next(response);\n            subscriber.complete();\n        }).catch(function (err) {\n            abortable = false;\n            if (!unsubscribed) {\n                subscriber.error(err);\n            }\n        });\n        return subscription;\n    });\n}\nexports.fromFetch = fromFetch;\n//# sourceMappingURL=fetch.js.map"]},"metadata":{},"sourceType":"script"}