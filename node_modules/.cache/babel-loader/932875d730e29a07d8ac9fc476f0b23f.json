{"ast":null,"code":"\"use strict\";\n\nvar _ava = _interopRequireDefault(require(\"ava\"));\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _helpers = require(\"./util/helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar cse = 'CssSyntaxError';\n\nfunction showCode(t, selector) {\n  var rule = _postcss.default.parse(selector).first;\n\n  try {\n    (0, _helpers.parse)(rule);\n  } catch (e) {\n    if (e.name !== cse) {\n      return;\n    } // Removes ANSI codes from snapshot tests as it makes them illegible.\n    // The formatting of this error is otherwise identical to e.toString()\n\n\n    t.snapshot(cse + \": \" + e.message + \"\\n\\n\" + e.showSourceCode(false) + \"\\n\");\n  }\n}\n\n(0, _ava.default)('missing open square bracket', showCode, 'a b c] {}');\n(0, _ava.default)('missing open parenthesis', showCode, 'a b c) {}');\n(0, _ava.default)('missing pseudo class or pseudo element', showCode, 'a b c: {}');\n(0, _ava.default)('space in between colon and word (incorrect pseudo)', showCode, 'a b: c {}');\n(0, _ava.default)('string after colon (incorrect pseudo)', showCode, 'a b:\"wow\" {}'); // attribute selectors\n\n(0, _ava.default)('bad string attribute', showCode, '[\"hello\"] {}');\n(0, _ava.default)('bad string attribute with value', showCode, '[\"foo\"=bar] {}');\n(0, _ava.default)('bad parentheses', showCode, '[foo=(bar)] {}');\n(0, _ava.default)('bad lonely asterisk', showCode, '[*] {}');\n(0, _ava.default)('bad lonely pipe', showCode, '[|] {}');\n(0, _ava.default)('bad lonely caret', showCode, '[^] {}');\n(0, _ava.default)('bad lonely dollar', showCode, '[$] {}');\n(0, _ava.default)('bad lonely tilde', showCode, '[~] {}');\n(0, _ava.default)('bad lonely equals', showCode, '[=] {}');\n(0, _ava.default)('bad lonely operator', showCode, '[*=] {}');\n(0, _ava.default)('bad lonely operator (2)', showCode, '[|=] {}');\n(0, _ava.default)('bad doubled operator', showCode, '[href=foo=bar] {}');","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-selector-parser/dist/__tests__/postcss.js"],"names":["_ava","_interopRequireDefault","require","_postcss","_helpers","obj","__esModule","default","cse","showCode","t","selector","rule","parse","first","e","name","snapshot","message","showSourceCode"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,KAAD,CAAR,CAAjC;;AAEA,IAAIC,QAAQ,GAAGF,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAArC;;AAEA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,gBAAD,CAAtB;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,IAAIG,GAAG,GAAG,gBAAV;;AAEA,SAASC,QAAT,CAAkBC,CAAlB,EAAqBC,QAArB,EAA+B;AAC7B,MAAIC,IAAI,GAAGT,QAAQ,CAACI,OAAT,CAAiBM,KAAjB,CAAuBF,QAAvB,EAAiCG,KAA5C;;AAEA,MAAI;AACF,KAAC,GAAGV,QAAQ,CAACS,KAAb,EAAoBD,IAApB;AACD,GAFD,CAEE,OAAOG,CAAP,EAAU;AACV,QAAIA,CAAC,CAACC,IAAF,KAAWR,GAAf,EAAoB;AAClB;AACD,KAHS,CAGR;AACF;;;AAGAE,IAAAA,CAAC,CAACO,QAAF,CAAWT,GAAG,GAAG,IAAN,GAAaO,CAAC,CAACG,OAAf,GAAyB,MAAzB,GAAkCH,CAAC,CAACI,cAAF,CAAiB,KAAjB,CAAlC,GAA4D,IAAvE;AACD;AACF;;AAED,CAAC,GAAGnB,IAAI,CAACO,OAAT,EAAkB,6BAAlB,EAAiDE,QAAjD,EAA2D,WAA3D;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,0BAAlB,EAA8CE,QAA9C,EAAwD,WAAxD;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,wCAAlB,EAA4DE,QAA5D,EAAsE,WAAtE;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,oDAAlB,EAAwEE,QAAxE,EAAkF,WAAlF;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,uCAAlB,EAA2DE,QAA3D,EAAqE,cAArE,E,CAAsF;;AAEtF,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,sBAAlB,EAA0CE,QAA1C,EAAoD,cAApD;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,iCAAlB,EAAqDE,QAArD,EAA+D,gBAA/D;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,iBAAlB,EAAqCE,QAArC,EAA+C,gBAA/C;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,qBAAlB,EAAyCE,QAAzC,EAAmD,QAAnD;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,iBAAlB,EAAqCE,QAArC,EAA+C,QAA/C;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,kBAAlB,EAAsCE,QAAtC,EAAgD,QAAhD;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,mBAAlB,EAAuCE,QAAvC,EAAiD,QAAjD;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,kBAAlB,EAAsCE,QAAtC,EAAgD,QAAhD;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,mBAAlB,EAAuCE,QAAvC,EAAiD,QAAjD;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,qBAAlB,EAAyCE,QAAzC,EAAmD,SAAnD;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,yBAAlB,EAA6CE,QAA7C,EAAuD,SAAvD;AACA,CAAC,GAAGT,IAAI,CAACO,OAAT,EAAkB,sBAAlB,EAA0CE,QAA1C,EAAoD,mBAApD","sourcesContent":["\"use strict\";\n\nvar _ava = _interopRequireDefault(require(\"ava\"));\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _helpers = require(\"./util/helpers\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cse = 'CssSyntaxError';\n\nfunction showCode(t, selector) {\n  var rule = _postcss.default.parse(selector).first;\n\n  try {\n    (0, _helpers.parse)(rule);\n  } catch (e) {\n    if (e.name !== cse) {\n      return;\n    } // Removes ANSI codes from snapshot tests as it makes them illegible.\n    // The formatting of this error is otherwise identical to e.toString()\n\n\n    t.snapshot(cse + \": \" + e.message + \"\\n\\n\" + e.showSourceCode(false) + \"\\n\");\n  }\n}\n\n(0, _ava.default)('missing open square bracket', showCode, 'a b c] {}');\n(0, _ava.default)('missing open parenthesis', showCode, 'a b c) {}');\n(0, _ava.default)('missing pseudo class or pseudo element', showCode, 'a b c: {}');\n(0, _ava.default)('space in between colon and word (incorrect pseudo)', showCode, 'a b: c {}');\n(0, _ava.default)('string after colon (incorrect pseudo)', showCode, 'a b:\"wow\" {}'); // attribute selectors\n\n(0, _ava.default)('bad string attribute', showCode, '[\"hello\"] {}');\n(0, _ava.default)('bad string attribute with value', showCode, '[\"foo\"=bar] {}');\n(0, _ava.default)('bad parentheses', showCode, '[foo=(bar)] {}');\n(0, _ava.default)('bad lonely asterisk', showCode, '[*] {}');\n(0, _ava.default)('bad lonely pipe', showCode, '[|] {}');\n(0, _ava.default)('bad lonely caret', showCode, '[^] {}');\n(0, _ava.default)('bad lonely dollar', showCode, '[$] {}');\n(0, _ava.default)('bad lonely tilde', showCode, '[~] {}');\n(0, _ava.default)('bad lonely equals', showCode, '[=] {}');\n(0, _ava.default)('bad lonely operator', showCode, '[*=] {}');\n(0, _ava.default)('bad lonely operator (2)', showCode, '[|=] {}');\n(0, _ava.default)('bad doubled operator', showCode, '[href=foo=bar] {}');"]},"metadata":{},"sourceType":"script"}