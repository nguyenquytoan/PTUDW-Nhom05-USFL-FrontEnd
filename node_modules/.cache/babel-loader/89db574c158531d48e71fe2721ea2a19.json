{"ast":null,"code":"const url = require('url');\n\nconst LastCallWebpackPlugin = require('last-call-webpack-plugin');\n\nclass OptimizeCssAssetsWebpackPlugin extends LastCallWebpackPlugin {\n  constructor(options) {\n    super({\n      assetProcessors: [{\n        phase: LastCallWebpackPlugin.PHASES.OPTIMIZE_CHUNK_ASSETS,\n        regExp: options && options.assetNameRegExp || /\\.css(\\?.*)?$/i,\n        processor: (assetName, asset, assets) => this.processCss(assetName, asset, assets)\n      }],\n      canPrint: options && options.canPrint\n    });\n    this.options.assetNameRegExp = !options || !options.assetNameRegExp ? /\\.css(\\?.*)?$/i : options.assetNameRegExp;\n    this.options.cssProcessor = !options || !options.cssProcessor ? require('cssnano') : options.cssProcessor;\n    this.options.cssProcessorOptions = !options || options.cssProcessorOptions === undefined ? {} : options.cssProcessorOptions;\n    this.options.cssProcessorPluginOptions = !options || options.cssProcessorPluginOptions === undefined ? {} : options.cssProcessorPluginOptions;\n  }\n\n  buildPluginDescriptor() {\n    return {\n      name: 'OptimizeCssAssetsWebpackPlugin'\n    };\n  }\n\n  processCss(assetName, asset, assets) {\n    const parse = url.parse(assetName);\n    const assetInfo = {\n      path: parse.pathname,\n      query: parse.query ? `?${parse.query}` : ''\n    };\n    const css = asset.sourceAndMap ? asset.sourceAndMap() : {\n      source: asset.source()\n    };\n    const processOptions = Object.assign({\n      from: assetName,\n      to: assetName\n    }, this.options.cssProcessorOptions);\n\n    if (processOptions.map && !processOptions.map.prev) {\n      try {\n        let map = css.map;\n\n        if (!map) {\n          const mapJson = assets.getAsset(`${assetInfo.path}.map`);\n\n          if (mapJson) {\n            map = JSON.parse(mapJson);\n          }\n        }\n\n        if (map && (map.sources && map.sources.length > 0 || map.mappings && map.mappings.length > 0)) {\n          processOptions.map = Object.assign({\n            prev: map\n          }, processOptions.map);\n        }\n      } catch (err) {\n        console.warn('OptimizeCssAssetsPlugin.processCss() Error getting previous source map', err);\n      }\n    }\n\n    return this.options.cssProcessor.process(css.source, processOptions, this.options.cssProcessorPluginOptions).then(r => {\n      if (processOptions.map && r.map && r.map.toString) {\n        assets.setAsset(`${assetInfo.path}.map${assetInfo.query}`, r.map.toString());\n      }\n\n      return r.css;\n    });\n  }\n\n}\n\nmodule.exports = OptimizeCssAssetsWebpackPlugin;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/optimize-css-assets-webpack-plugin/src/index.js"],"names":["url","require","LastCallWebpackPlugin","OptimizeCssAssetsWebpackPlugin","constructor","options","assetProcessors","phase","PHASES","OPTIMIZE_CHUNK_ASSETS","regExp","assetNameRegExp","processor","assetName","asset","assets","processCss","canPrint","cssProcessor","cssProcessorOptions","undefined","cssProcessorPluginOptions","buildPluginDescriptor","name","parse","assetInfo","path","pathname","query","css","sourceAndMap","source","processOptions","Object","assign","from","to","map","prev","mapJson","getAsset","JSON","sources","length","mappings","err","console","warn","process","then","r","toString","setAsset","module","exports"],"mappings":"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","sourcesContent":["const url = require('url');\n\nconst LastCallWebpackPlugin = require('last-call-webpack-plugin');\n\nclass OptimizeCssAssetsWebpackPlugin extends LastCallWebpackPlugin {\n  constructor(options) {\n    super({\n      assetProcessors: [\n        {\n          phase: LastCallWebpackPlugin.PHASES.OPTIMIZE_CHUNK_ASSETS,\n          regExp: (options && options.assetNameRegExp) || /\\.css(\\?.*)?$/i,\n          processor: (assetName, asset, assets) =>\n            this.processCss(assetName, asset, assets),\n        }\n      ],\n      canPrint: options && options.canPrint,\n    });\n\n    this.options.assetNameRegExp = !options || !options.assetNameRegExp ?\n      /\\.css(\\?.*)?$/i :\n      options.assetNameRegExp;\n    this.options.cssProcessor = !options || !options.cssProcessor ?\n        require('cssnano') :\n        options.cssProcessor;\n    this.options.cssProcessorOptions = !options || options.cssProcessorOptions === undefined ?\n      {} :\n      options.cssProcessorOptions;\n    this.options.cssProcessorPluginOptions = !options || options.cssProcessorPluginOptions === undefined ?\n      {} :\n      options.cssProcessorPluginOptions;\n  }\n\n  buildPluginDescriptor() {\n    return { name: 'OptimizeCssAssetsWebpackPlugin' };\n  }\n\n  processCss(assetName, asset, assets) {\n    const parse = url.parse(assetName);\n    const assetInfo = {\n      path: parse.pathname,\n      query: parse.query ? `?${parse.query}` : '',\n    };\n\n    const css = asset.sourceAndMap ? asset.sourceAndMap() : { source: asset.source() };\n    const processOptions = Object.assign(\n      { from: assetName, to: assetName },\n      this.options.cssProcessorOptions\n    );\n\n    if (processOptions.map && !processOptions.map.prev) {\n      try {\n        let map = css.map;\n        if (!map) {\n          const mapJson = assets.getAsset(`${assetInfo.path}.map`);\n          if (mapJson) {\n            map = JSON.parse(mapJson);\n          }\n        }\n        if (\n          map &&\n          (\n            (map.sources && map.sources.length > 0) ||\n            (map.mappings && map.mappings.length > 0)\n          )\n        ) {\n          processOptions.map = Object.assign({ prev: map }, processOptions.map);\n        }\n      } catch (err) {\n        console.warn('OptimizeCssAssetsPlugin.processCss() Error getting previous source map', err);\n      }\n    }\n    return this.options\n      .cssProcessor.process(css.source, processOptions, this.options.cssProcessorPluginOptions)\n      .then(r => {\n        if (processOptions.map && r.map && r.map.toString) {\n          assets.setAsset(`${assetInfo.path}.map${assetInfo.query}`, r.map.toString());\n        }\n        return r.css;\n      });\n  }\n}\n\nmodule.exports = OptimizeCssAssetsWebpackPlugin;\n"]},"metadata":{},"sourceType":"script"}