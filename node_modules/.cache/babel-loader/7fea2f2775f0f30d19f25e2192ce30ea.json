{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nrequire(\"./toBeInRangeMatcher\");\n\nvar _index = _interopRequireDefault(require(\"./index\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n\n      function _next(value) {\n        step(\"next\", value);\n      }\n\n      function _throw(err) {\n        step(\"throw\", err);\n      }\n\n      _next();\n    });\n  };\n} // this is a copy of \"it waits for expectation to pass\" modified to use jestFakeTimers and two ways of Date.now mocking\n// This breakes when we remove the const { setTimeout, Date: { now } } = typeof window !== \"undefined\" ? window : global;\n// line from the index.ts\n\n\nbeforeEach(function () {\n  jest.resetModules();\n  jest.restoreAllMocks();\n  jest.useRealTimers();\n});\ntest(\"it always uses real timers even if they were set to fake before importing the module\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var importedWaitForExpect, numberToChange, randomTimeout;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          jest.useFakeTimers();\n          /* eslint-disable global-require */\n\n          importedWaitForExpect = require(\"./index\");\n          jest.useRealTimers();\n          numberToChange = 10; // we are using random timeout here to simulate a real-time example\n          // of an async operation calling a callback at a non-deterministic time\n\n          randomTimeout = Math.floor(Math.random() * 300);\n          setTimeout(function () {\n            numberToChange = 100;\n          }, randomTimeout);\n          jest.useFakeTimers();\n          _context.next = 9;\n          return importedWaitForExpect(function () {\n            expect(numberToChange).toEqual(100);\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this);\n}))); // Date.now might be mocked with two main ways:\n// via mocking whole Date, or by mocking just Date.now\n// hence two test cases covered both ways\n\ntest(\"it works even if the Date was mocked\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n  var numberToChange, expectFailingMessage;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          /* eslint-disable no-global-assign */\n          // @ts-ignore: Cannot reassign to const Date\n          Date = jest.fn(function () {\n            return {\n              now: function now() {\n                return 1482363367071;\n              }\n            };\n          });\n          /* eslint-enable */\n\n          numberToChange = 10;\n          setTimeout(function () {\n            numberToChange = 100;\n          }, 100);\n          _context2.prev = 3;\n          _context2.next = 6;\n          return (0, _index.default)(function () {\n            expect(numberToChange).toEqual(101);\n          }, 1000);\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](3);\n          expectFailingMessage = _context2.t0.message;\n\n        case 11:\n          expect(expectFailingMessage).toMatch(\"Expected value to equal:\");\n          expect(expectFailingMessage).toMatch(\"101\");\n          expect(expectFailingMessage).toMatch(\"Received:\");\n          expect(expectFailingMessage).toMatch(\"100\");\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2, this, [[3, 8]]);\n})));\ntest(\"it works even if the Date.now was mocked\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n  var numberToChange, expectFailingMessage;\n  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          Date.now = jest.fn(function () {\n            return 1482363367071;\n          });\n          numberToChange = 10;\n          setTimeout(function () {\n            numberToChange = 100;\n          }, 100);\n          _context3.prev = 3;\n          _context3.next = 6;\n          return (0, _index.default)(function () {\n            expect(numberToChange).toEqual(101);\n          }, 1000);\n\n        case 6:\n          _context3.next = 11;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](3);\n          expectFailingMessage = _context3.t0.message;\n\n        case 11:\n          expect(expectFailingMessage).toMatch(\"Expected value to equal:\");\n          expect(expectFailingMessage).toMatch(\"101\");\n          expect(expectFailingMessage).toMatch(\"Received:\");\n          expect(expectFailingMessage).toMatch(\"100\");\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3, this, [[3, 8]]);\n})));","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/wait-for-expect/lib/withFakeTimers.spec.js"],"names":["require","_index","_interopRequireDefault","obj","__esModule","default","_asyncToGenerator","fn","self","args","arguments","Promise","resolve","reject","gen","apply","step","key","arg","info","value","error","done","then","_next","_throw","err","beforeEach","jest","resetModules","restoreAllMocks","useRealTimers","test","mark","_callee","importedWaitForExpect","numberToChange","randomTimeout","wrap","_callee$","_context","prev","next","useFakeTimers","Math","floor","random","setTimeout","expect","toEqual","stop","_callee2","expectFailingMessage","_callee2$","_context2","Date","now","t0","message","toMatch","_callee3","_callee3$","_context3"],"mappings":"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","sourcesContent":["\"use strict\";\n\nrequire(\"./toBeInRangeMatcher\");\n\nvar _index = _interopRequireDefault(require(\"./index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } } function _next(value) { step(\"next\", value); } function _throw(err) { step(\"throw\", err); } _next(); }); }; }\n\n// this is a copy of \"it waits for expectation to pass\" modified to use jestFakeTimers and two ways of Date.now mocking\n// This breakes when we remove the const { setTimeout, Date: { now } } = typeof window !== \"undefined\" ? window : global;\n// line from the index.ts\nbeforeEach(function () {\n  jest.resetModules();\n  jest.restoreAllMocks();\n  jest.useRealTimers();\n});\ntest(\"it always uses real timers even if they were set to fake before importing the module\",\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\nregeneratorRuntime.mark(function _callee() {\n  var importedWaitForExpect, numberToChange, randomTimeout;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          jest.useFakeTimers();\n          /* eslint-disable global-require */\n\n          importedWaitForExpect = require(\"./index\");\n          jest.useRealTimers();\n          numberToChange = 10; // we are using random timeout here to simulate a real-time example\n          // of an async operation calling a callback at a non-deterministic time\n\n          randomTimeout = Math.floor(Math.random() * 300);\n          setTimeout(function () {\n            numberToChange = 100;\n          }, randomTimeout);\n          jest.useFakeTimers();\n          _context.next = 9;\n          return importedWaitForExpect(function () {\n            expect(numberToChange).toEqual(100);\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, this);\n}))); // Date.now might be mocked with two main ways:\n// via mocking whole Date, or by mocking just Date.now\n// hence two test cases covered both ways\n\ntest(\"it works even if the Date was mocked\",\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\nregeneratorRuntime.mark(function _callee2() {\n  var numberToChange, expectFailingMessage;\n  return regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          /* eslint-disable no-global-assign */\n          // @ts-ignore: Cannot reassign to const Date\n          Date = jest.fn(function () {\n            return {\n              now: function now() {\n                return 1482363367071;\n              }\n            };\n          });\n          /* eslint-enable */\n\n          numberToChange = 10;\n          setTimeout(function () {\n            numberToChange = 100;\n          }, 100);\n          _context2.prev = 3;\n          _context2.next = 6;\n          return (0, _index.default)(function () {\n            expect(numberToChange).toEqual(101);\n          }, 1000);\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](3);\n          expectFailingMessage = _context2.t0.message;\n\n        case 11:\n          expect(expectFailingMessage).toMatch(\"Expected value to equal:\");\n          expect(expectFailingMessage).toMatch(\"101\");\n          expect(expectFailingMessage).toMatch(\"Received:\");\n          expect(expectFailingMessage).toMatch(\"100\");\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2, this, [[3, 8]]);\n})));\ntest(\"it works even if the Date.now was mocked\",\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\nregeneratorRuntime.mark(function _callee3() {\n  var numberToChange, expectFailingMessage;\n  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          Date.now = jest.fn(function () {\n            return 1482363367071;\n          });\n          numberToChange = 10;\n          setTimeout(function () {\n            numberToChange = 100;\n          }, 100);\n          _context3.prev = 3;\n          _context3.next = 6;\n          return (0, _index.default)(function () {\n            expect(numberToChange).toEqual(101);\n          }, 1000);\n\n        case 6:\n          _context3.next = 11;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](3);\n          expectFailingMessage = _context3.t0.message;\n\n        case 11:\n          expect(expectFailingMessage).toMatch(\"Expected value to equal:\");\n          expect(expectFailingMessage).toMatch(\"101\");\n          expect(expectFailingMessage).toMatch(\"Received:\");\n          expect(expectFailingMessage).toMatch(\"100\");\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3, this, [[3, 8]]);\n})));"]},"metadata":{},"sourceType":"script"}