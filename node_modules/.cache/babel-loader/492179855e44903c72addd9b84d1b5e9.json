{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findConfigUpwards = findConfigUpwards;\nexports.findRelativeConfig = findRelativeConfig;\nexports.findRootConfig = findRootConfig;\nexports.loadConfig = loadConfig;\nexports.ROOT_CONFIG_FILENAMES = void 0;\n\nfunction _debug() {\n  const data = _interopRequireDefault(require(\"debug\"));\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _json() {\n  const data = _interopRequireDefault(require(\"json5\"));\n\n  _json = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  const data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _caching = require(\"../caching\");\n\nvar _configApi = _interopRequireDefault(require(\"../helpers/config-api\"));\n\nvar _utils = require(\"./utils\");\n\nvar _moduleTypes = _interopRequireDefault(require(\"./module-types\"));\n\nvar _patternToRegex = _interopRequireDefault(require(\"../pattern-to-regex\"));\n\nvar fs = _interopRequireWildcard(require(\"../../gensync-utils/fs\"));\n\nvar _resolve = _interopRequireDefault(require(\"../../gensync-utils/resolve\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst debug = (0, _debug().default)(\"babel:config:loading:files:configuration\");\nconst ROOT_CONFIG_FILENAMES = [\"babel.config.js\", \"babel.config.cjs\", \"babel.config.mjs\", \"babel.config.json\"];\nexports.ROOT_CONFIG_FILENAMES = ROOT_CONFIG_FILENAMES;\nconst RELATIVE_CONFIG_FILENAMES = [\".babelrc\", \".babelrc.js\", \".babelrc.cjs\", \".babelrc.mjs\", \".babelrc.json\"];\nconst BABELIGNORE_FILENAME = \".babelignore\";\n\nfunction* findConfigUpwards(rootDir) {\n  let dirname = rootDir;\n\n  while (true) {\n    for (const filename of ROOT_CONFIG_FILENAMES) {\n      if (yield* fs.exists(_path().default.join(dirname, filename))) {\n        return dirname;\n      }\n    }\n\n    const nextDir = _path().default.dirname(dirname);\n\n    if (dirname === nextDir) break;\n    dirname = nextDir;\n  }\n\n  return null;\n}\n\nfunction* findRelativeConfig(packageData, envName, caller) {\n  let config = null;\n  let ignore = null;\n\n  const dirname = _path().default.dirname(packageData.filepath);\n\n  for (const loc of packageData.directories) {\n    if (!config) {\n      config = yield* loadOneConfig(RELATIVE_CONFIG_FILENAMES, loc, envName, caller, packageData.pkg && packageData.pkg.dirname === loc ? packageToBabelConfig(packageData.pkg) : null);\n    }\n\n    if (!ignore) {\n      const ignoreLoc = _path().default.join(loc, BABELIGNORE_FILENAME);\n\n      ignore = yield* readIgnoreConfig(ignoreLoc);\n\n      if (ignore) {\n        debug(\"Found ignore %o from %o.\", ignore.filepath, dirname);\n      }\n    }\n  }\n\n  return {\n    config,\n    ignore\n  };\n}\n\nfunction findRootConfig(dirname, envName, caller) {\n  return loadOneConfig(ROOT_CONFIG_FILENAMES, dirname, envName, caller);\n}\n\nfunction* loadOneConfig(names, dirname, envName, caller, previousConfig = null) {\n  const configs = yield* _gensync().default.all(names.map(filename => readConfig(_path().default.join(dirname, filename), envName, caller)));\n  const config = configs.reduce((previousConfig, config) => {\n    if (config && previousConfig) {\n      throw new Error(`Multiple configuration files found. Please remove one:\\n` + ` - ${_path().default.basename(previousConfig.filepath)}\\n` + ` - ${config.filepath}\\n` + `from ${dirname}`);\n    }\n\n    return config || previousConfig;\n  }, previousConfig);\n\n  if (config) {\n    debug(\"Found configuration %o from %o.\", config.filepath, dirname);\n  }\n\n  return config;\n}\n\nfunction* loadConfig(name, dirname, envName, caller) {\n  const filepath = yield* (0, _resolve.default)(name, {\n    basedir: dirname\n  });\n  const conf = yield* readConfig(filepath, envName, caller);\n\n  if (!conf) {\n    throw new Error(`Config file ${filepath} contains no configuration data`);\n  }\n\n  debug(\"Loaded config %o from %o.\", name, dirname);\n  return conf;\n}\n\nfunction readConfig(filepath, envName, caller) {\n  const ext = _path().default.extname(filepath);\n\n  return ext === \".js\" || ext === \".cjs\" || ext === \".mjs\" ? readConfigJS(filepath, {\n    envName,\n    caller\n  }) : readConfigJSON5(filepath);\n}\n\nconst LOADING_CONFIGS = new Set();\nconst readConfigJS = (0, _caching.makeStrongCache)(function* readConfigJS(filepath, cache) {\n  if (!fs.exists.sync(filepath)) {\n    cache.forever();\n    return null;\n  }\n\n  if (LOADING_CONFIGS.has(filepath)) {\n    cache.never();\n    debug(\"Auto-ignoring usage of config %o.\", filepath);\n    return {\n      filepath,\n      dirname: _path().default.dirname(filepath),\n      options: {}\n    };\n  }\n\n  let options;\n\n  try {\n    LOADING_CONFIGS.add(filepath);\n    options = yield* (0, _moduleTypes.default)(filepath, \"You appear to be using a native ECMAScript module configuration \" + \"file, which is only supported when running Babel asynchronously.\");\n  } catch (err) {\n    err.message = `${filepath}: Error while loading config - ${err.message}`;\n    throw err;\n  } finally {\n    LOADING_CONFIGS.delete(filepath);\n  }\n\n  let assertCache = false;\n\n  if (typeof options === \"function\") {\n    yield* [];\n    options = options((0, _configApi.default)(cache));\n    assertCache = true;\n  }\n\n  if (!options || typeof options !== \"object\" || Array.isArray(options)) {\n    throw new Error(`${filepath}: Configuration should be an exported JavaScript object.`);\n  }\n\n  if (typeof options.then === \"function\") {\n    throw new Error(`You appear to be using an async configuration, ` + `which your current version of Babel does not support. ` + `We may add support for this in the future, ` + `but if you're on the most recent version of @babel/core and still ` + `seeing this error, then you'll need to synchronously return your config.`);\n  }\n\n  if (assertCache && !cache.configured()) throwConfigError();\n  return {\n    filepath,\n    dirname: _path().default.dirname(filepath),\n    options\n  };\n});\nconst packageToBabelConfig = (0, _caching.makeWeakCacheSync)(file => {\n  const babel = file.options[\"babel\"];\n  if (typeof babel === \"undefined\") return null;\n\n  if (typeof babel !== \"object\" || Array.isArray(babel) || babel === null) {\n    throw new Error(`${file.filepath}: .babel property must be an object`);\n  }\n\n  return {\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: babel\n  };\n});\nconst readConfigJSON5 = (0, _utils.makeStaticFileCache)((filepath, content) => {\n  let options;\n\n  try {\n    options = _json().default.parse(content);\n  } catch (err) {\n    err.message = `${filepath}: Error while parsing config - ${err.message}`;\n    throw err;\n  }\n\n  if (!options) throw new Error(`${filepath}: No config detected`);\n\n  if (typeof options !== \"object\") {\n    throw new Error(`${filepath}: Config returned typeof ${typeof options}`);\n  }\n\n  if (Array.isArray(options)) {\n    throw new Error(`${filepath}: Expected config object but found array`);\n  }\n\n  return {\n    filepath,\n    dirname: _path().default.dirname(filepath),\n    options\n  };\n});\nconst readIgnoreConfig = (0, _utils.makeStaticFileCache)((filepath, content) => {\n  const ignoreDir = _path().default.dirname(filepath);\n\n  const ignorePatterns = content.split(\"\\n\").map(line => line.replace(/#(.*?)$/, \"\").trim()).filter(line => !!line);\n\n  for (const pattern of ignorePatterns) {\n    if (pattern[0] === \"!\") {\n      throw new Error(`Negation of file paths is not supported.`);\n    }\n  }\n\n  return {\n    filepath,\n    dirname: _path().default.dirname(filepath),\n    ignore: ignorePatterns.map(pattern => (0, _patternToRegex.default)(pattern, ignoreDir))\n  };\n});\n\nfunction throwConfigError() {\n  throw new Error(`\\\nCaching was left unconfigured. Babel's plugins, presets, and .babelrc.js files can be configured\nfor various types of caching, using the first param of their handler functions:\n\nmodule.exports = function(api) {\n  // The API exposes the following:\n\n  // Cache the returned value forever and don't call this function again.\n  api.cache(true);\n\n  // Don't cache at all. Not recommended because it will be very slow.\n  api.cache(false);\n\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === \"production\");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \"production\");\n\n  // Note, we also expose the following more-verbose versions of the above examples:\n  api.cache.forever(); // api.cache(true)\n  api.cache.never();   // api.cache(false)\n  api.cache.using(fn); // api.cache(fn)\n\n  // Return the value that will be cached.\n  return { };\n};`);\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@babel/core/lib/config/files/configuration.js"],"names":["Object","defineProperty","exports","value","findConfigUpwards","findRelativeConfig","findRootConfig","loadConfig","ROOT_CONFIG_FILENAMES","_debug","data","_interopRequireDefault","require","_path","_json","_gensync","_caching","_configApi","_utils","_moduleTypes","_patternToRegex","fs","_interopRequireWildcard","_resolve","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","default","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","debug","RELATIVE_CONFIG_FILENAMES","BABELIGNORE_FILENAME","rootDir","dirname","filename","exists","join","nextDir","packageData","envName","caller","config","ignore","filepath","loc","directories","loadOneConfig","pkg","packageToBabelConfig","ignoreLoc","readIgnoreConfig","names","previousConfig","configs","all","map","readConfig","reduce","Error","basename","name","basedir","conf","ext","extname","readConfigJS","readConfigJSON5","LOADING_CONFIGS","Set","makeStrongCache","sync","forever","never","options","add","err","message","delete","assertCache","Array","isArray","then","configured","throwConfigError","makeWeakCacheSync","file","babel","makeStaticFileCache","content","parse","ignoreDir","ignorePatterns","split","line","replace","trim","filter","pattern"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;AACAF,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;AACAH,OAAO,CAACI,cAAR,GAAyBA,cAAzB;AACAJ,OAAO,CAACK,UAAR,GAAqBA,UAArB;AACAL,OAAO,CAACM,qBAAR,GAAgC,KAAK,CAArC;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEAH,EAAAA,MAAM,GAAG,YAAY;AACnB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASG,KAAT,GAAiB;AACf,QAAMH,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAnC;;AAEAC,EAAAA,KAAK,GAAG,YAAY;AAClB,WAAOH,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASI,KAAT,GAAiB;AACf,QAAMJ,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEAE,EAAAA,KAAK,GAAG,YAAY;AAClB,WAAOJ,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASK,QAAT,GAAoB;AAClB,QAAML,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAnC;;AAEAG,EAAAA,QAAQ,GAAG,YAAY;AACrB,WAAOL,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIM,QAAQ,GAAGJ,OAAO,CAAC,YAAD,CAAtB;;AAEA,IAAIK,UAAU,GAAGN,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAvC;;AAEA,IAAIM,MAAM,GAAGN,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIO,YAAY,GAAGR,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAAzC;;AAEA,IAAIQ,eAAe,GAAGT,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA5C;;AAEA,IAAIS,EAAE,GAAGC,uBAAuB,CAACV,OAAO,CAAC,wBAAD,CAAR,CAAhC;;AAEA,IAAIW,QAAQ,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,6BAAD,CAAR,CAArC;;AAEA,SAASY,wBAAT,GAAoC;AAAE,MAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP;AAAa,MAAIC,KAAK,GAAG,IAAID,OAAJ,EAAZ;;AAA2BD,EAAAA,wBAAwB,GAAG,YAAY;AAAE,WAAOE,KAAP;AAAe,GAAxD;;AAA0D,SAAOA,KAAP;AAAe;;AAE1L,SAASJ,uBAAT,CAAiCK,GAAjC,EAAsC;AAAE,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B;AAAE,WAAOD,GAAP;AAAa;;AAAC,MAAIA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA9D,EAA0E;AAAE,WAAO;AAAEE,MAAAA,OAAO,EAAEF;AAAX,KAAP;AAA0B;;AAAC,MAAID,KAAK,GAAGF,wBAAwB,EAApC;;AAAwC,MAAIE,KAAK,IAAIA,KAAK,CAACI,GAAN,CAAUH,GAAV,CAAb,EAA6B;AAAE,WAAOD,KAAK,CAACK,GAAN,CAAUJ,GAAV,CAAP;AAAwB;;AAAC,MAAIK,MAAM,GAAG,EAAb;AAAiB,MAAIC,qBAAqB,GAAGjC,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACkC,wBAA5D;;AAAsF,OAAK,IAAIC,GAAT,IAAgBR,GAAhB,EAAqB;AAAE,QAAI3B,MAAM,CAACoC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCX,GAArC,EAA0CQ,GAA1C,CAAJ,EAAoD;AAAE,UAAII,IAAI,GAAGN,qBAAqB,GAAGjC,MAAM,CAACkC,wBAAP,CAAgCP,GAAhC,EAAqCQ,GAArC,CAAH,GAA+C,IAA/E;;AAAqF,UAAII,IAAI,KAAKA,IAAI,CAACR,GAAL,IAAYQ,IAAI,CAACC,GAAtB,CAAR,EAAoC;AAAExC,QAAAA,MAAM,CAACC,cAAP,CAAsB+B,MAAtB,EAA8BG,GAA9B,EAAmCI,IAAnC;AAA2C,OAAjF,MAAuF;AAAEP,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcR,GAAG,CAACQ,GAAD,CAAjB;AAAyB;AAAE;AAAE;;AAACH,EAAAA,MAAM,CAACH,OAAP,GAAiBF,GAAjB;;AAAsB,MAAID,KAAJ,EAAW;AAAEA,IAAAA,KAAK,CAACc,GAAN,CAAUb,GAAV,EAAeK,MAAf;AAAyB;;AAAC,SAAOA,MAAP;AAAgB;;AAEvuB,SAASrB,sBAAT,CAAgCgB,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,MAAMc,KAAK,GAAG,CAAC,GAAGhC,MAAM,GAAGoB,OAAb,EAAsB,0CAAtB,CAAd;AACA,MAAMrB,qBAAqB,GAAG,CAAC,iBAAD,EAAoB,kBAApB,EAAwC,kBAAxC,EAA4D,mBAA5D,CAA9B;AACAN,OAAO,CAACM,qBAAR,GAAgCA,qBAAhC;AACA,MAAMkC,yBAAyB,GAAG,CAAC,UAAD,EAAa,aAAb,EAA4B,cAA5B,EAA4C,cAA5C,EAA4D,eAA5D,CAAlC;AACA,MAAMC,oBAAoB,GAAG,cAA7B;;AAEA,UAAUvC,iBAAV,CAA4BwC,OAA5B,EAAqC;AACnC,MAAIC,OAAO,GAAGD,OAAd;;AAEA,SAAO,IAAP,EAAa;AACX,SAAK,MAAME,QAAX,IAAuBtC,qBAAvB,EAA8C;AAC5C,UAAI,OAAOa,EAAE,CAAC0B,MAAH,CAAUlC,KAAK,GAAGgB,OAAR,CAAgBmB,IAAhB,CAAqBH,OAArB,EAA8BC,QAA9B,CAAV,CAAX,EAA+D;AAC7D,eAAOD,OAAP;AACD;AACF;;AAED,UAAMI,OAAO,GAAGpC,KAAK,GAAGgB,OAAR,CAAgBgB,OAAhB,CAAwBA,OAAxB,CAAhB;;AAEA,QAAIA,OAAO,KAAKI,OAAhB,EAAyB;AACzBJ,IAAAA,OAAO,GAAGI,OAAV;AACD;;AAED,SAAO,IAAP;AACD;;AAED,UAAU5C,kBAAV,CAA6B6C,WAA7B,EAA0CC,OAA1C,EAAmDC,MAAnD,EAA2D;AACzD,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,MAAM,GAAG,IAAb;;AAEA,QAAMT,OAAO,GAAGhC,KAAK,GAAGgB,OAAR,CAAgBgB,OAAhB,CAAwBK,WAAW,CAACK,QAApC,CAAhB;;AAEA,OAAK,MAAMC,GAAX,IAAkBN,WAAW,CAACO,WAA9B,EAA2C;AACzC,QAAI,CAACJ,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,OAAOK,aAAa,CAAChB,yBAAD,EAA4Bc,GAA5B,EAAiCL,OAAjC,EAA0CC,MAA1C,EAAkDF,WAAW,CAACS,GAAZ,IAAmBT,WAAW,CAACS,GAAZ,CAAgBd,OAAhB,KAA4BW,GAA/C,GAAqDI,oBAAoB,CAACV,WAAW,CAACS,GAAb,CAAzE,GAA6F,IAA/I,CAA7B;AACD;;AAED,QAAI,CAACL,MAAL,EAAa;AACX,YAAMO,SAAS,GAAGhD,KAAK,GAAGgB,OAAR,CAAgBmB,IAAhB,CAAqBQ,GAArB,EAA0Bb,oBAA1B,CAAlB;;AAEAW,MAAAA,MAAM,GAAG,OAAOQ,gBAAgB,CAACD,SAAD,CAAhC;;AAEA,UAAIP,MAAJ,EAAY;AACVb,QAAAA,KAAK,CAAC,0BAAD,EAA6Ba,MAAM,CAACC,QAApC,EAA8CV,OAA9C,CAAL;AACD;AACF;AACF;;AAED,SAAO;AACLQ,IAAAA,MADK;AAELC,IAAAA;AAFK,GAAP;AAID;;AAED,SAAShD,cAAT,CAAwBuC,OAAxB,EAAiCM,OAAjC,EAA0CC,MAA1C,EAAkD;AAChD,SAAOM,aAAa,CAAClD,qBAAD,EAAwBqC,OAAxB,EAAiCM,OAAjC,EAA0CC,MAA1C,CAApB;AACD;;AAED,UAAUM,aAAV,CAAwBK,KAAxB,EAA+BlB,OAA/B,EAAwCM,OAAxC,EAAiDC,MAAjD,EAAyDY,cAAc,GAAG,IAA1E,EAAgF;AAC9E,QAAMC,OAAO,GAAG,OAAOlD,QAAQ,GAAGc,OAAX,CAAmBqC,GAAnB,CAAuBH,KAAK,CAACI,GAAN,CAAUrB,QAAQ,IAAIsB,UAAU,CAACvD,KAAK,GAAGgB,OAAR,CAAgBmB,IAAhB,CAAqBH,OAArB,EAA8BC,QAA9B,CAAD,EAA0CK,OAA1C,EAAmDC,MAAnD,CAAhC,CAAvB,CAAvB;AACA,QAAMC,MAAM,GAAGY,OAAO,CAACI,MAAR,CAAe,CAACL,cAAD,EAAiBX,MAAjB,KAA4B;AACxD,QAAIA,MAAM,IAAIW,cAAd,EAA8B;AAC5B,YAAM,IAAIM,KAAJ,CAAW,0DAAD,GAA8D,MAAKzD,KAAK,GAAGgB,OAAR,CAAgB0C,QAAhB,CAAyBP,cAAc,CAACT,QAAxC,CAAkD,IAArH,GAA4H,MAAKF,MAAM,CAACE,QAAS,IAAjJ,GAAwJ,QAAOV,OAAQ,EAAjL,CAAN;AACD;;AAED,WAAOQ,MAAM,IAAIW,cAAjB;AACD,GANc,EAMZA,cANY,CAAf;;AAQA,MAAIX,MAAJ,EAAY;AACVZ,IAAAA,KAAK,CAAC,iCAAD,EAAoCY,MAAM,CAACE,QAA3C,EAAqDV,OAArD,CAAL;AACD;;AAED,SAAOQ,MAAP;AACD;;AAED,UAAU9C,UAAV,CAAqBiE,IAArB,EAA2B3B,OAA3B,EAAoCM,OAApC,EAA6CC,MAA7C,EAAqD;AACnD,QAAMG,QAAQ,GAAG,OAAO,CAAC,GAAGhC,QAAQ,CAACM,OAAb,EAAsB2C,IAAtB,EAA4B;AAClDC,IAAAA,OAAO,EAAE5B;AADyC,GAA5B,CAAxB;AAGA,QAAM6B,IAAI,GAAG,OAAON,UAAU,CAACb,QAAD,EAAWJ,OAAX,EAAoBC,MAApB,CAA9B;;AAEA,MAAI,CAACsB,IAAL,EAAW;AACT,UAAM,IAAIJ,KAAJ,CAAW,eAAcf,QAAS,iCAAlC,CAAN;AACD;;AAEDd,EAAAA,KAAK,CAAC,2BAAD,EAA8B+B,IAA9B,EAAoC3B,OAApC,CAAL;AACA,SAAO6B,IAAP;AACD;;AAED,SAASN,UAAT,CAAoBb,QAApB,EAA8BJ,OAA9B,EAAuCC,MAAvC,EAA+C;AAC7C,QAAMuB,GAAG,GAAG9D,KAAK,GAAGgB,OAAR,CAAgB+C,OAAhB,CAAwBrB,QAAxB,CAAZ;;AAEA,SAAOoB,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,MAAzB,IAAmCA,GAAG,KAAK,MAA3C,GAAoDE,YAAY,CAACtB,QAAD,EAAW;AAChFJ,IAAAA,OADgF;AAEhFC,IAAAA;AAFgF,GAAX,CAAhE,GAGF0B,eAAe,CAACvB,QAAD,CAHpB;AAID;;AAED,MAAMwB,eAAe,GAAG,IAAIC,GAAJ,EAAxB;AACA,MAAMH,YAAY,GAAG,CAAC,GAAG7D,QAAQ,CAACiE,eAAb,EAA8B,UAAUJ,YAAV,CAAuBtB,QAAvB,EAAiC7B,KAAjC,EAAwC;AACzF,MAAI,CAACL,EAAE,CAAC0B,MAAH,CAAUmC,IAAV,CAAe3B,QAAf,CAAL,EAA+B;AAC7B7B,IAAAA,KAAK,CAACyD,OAAN;AACA,WAAO,IAAP;AACD;;AAED,MAAIJ,eAAe,CAACjD,GAAhB,CAAoByB,QAApB,CAAJ,EAAmC;AACjC7B,IAAAA,KAAK,CAAC0D,KAAN;AACA3C,IAAAA,KAAK,CAAC,mCAAD,EAAsCc,QAAtC,CAAL;AACA,WAAO;AACLA,MAAAA,QADK;AAELV,MAAAA,OAAO,EAAEhC,KAAK,GAAGgB,OAAR,CAAgBgB,OAAhB,CAAwBU,QAAxB,CAFJ;AAGL8B,MAAAA,OAAO,EAAE;AAHJ,KAAP;AAKD;;AAED,MAAIA,OAAJ;;AAEA,MAAI;AACFN,IAAAA,eAAe,CAACO,GAAhB,CAAoB/B,QAApB;AACA8B,IAAAA,OAAO,GAAG,OAAO,CAAC,GAAGlE,YAAY,CAACU,OAAjB,EAA0B0B,QAA1B,EAAoC,qEAAqE,kEAAzG,CAAjB;AACD,GAHD,CAGE,OAAOgC,GAAP,EAAY;AACZA,IAAAA,GAAG,CAACC,OAAJ,GAAe,GAAEjC,QAAS,kCAAiCgC,GAAG,CAACC,OAAQ,EAAvE;AACA,UAAMD,GAAN;AACD,GAND,SAMU;AACRR,IAAAA,eAAe,CAACU,MAAhB,CAAuBlC,QAAvB;AACD;;AAED,MAAImC,WAAW,GAAG,KAAlB;;AAEA,MAAI,OAAOL,OAAP,KAAmB,UAAvB,EAAmC;AACjC,WAAO,EAAP;AACAA,IAAAA,OAAO,GAAGA,OAAO,CAAC,CAAC,GAAGpE,UAAU,CAACY,OAAf,EAAwBH,KAAxB,CAAD,CAAjB;AACAgE,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,MAAI,CAACL,OAAD,IAAY,OAAOA,OAAP,KAAmB,QAA/B,IAA2CM,KAAK,CAACC,OAAN,CAAcP,OAAd,CAA/C,EAAuE;AACrE,UAAM,IAAIf,KAAJ,CAAW,GAAEf,QAAS,0DAAtB,CAAN;AACD;;AAED,MAAI,OAAO8B,OAAO,CAACQ,IAAf,KAAwB,UAA5B,EAAwC;AACtC,UAAM,IAAIvB,KAAJ,CAAW,iDAAD,GAAqD,wDAArD,GAAgH,6CAAhH,GAAgK,oEAAhK,GAAuO,0EAAjP,CAAN;AACD;;AAED,MAAIoB,WAAW,IAAI,CAAChE,KAAK,CAACoE,UAAN,EAApB,EAAwCC,gBAAgB;AACxD,SAAO;AACLxC,IAAAA,QADK;AAELV,IAAAA,OAAO,EAAEhC,KAAK,GAAGgB,OAAR,CAAgBgB,OAAhB,CAAwBU,QAAxB,CAFJ;AAGL8B,IAAAA;AAHK,GAAP;AAKD,CAlDoB,CAArB;AAmDA,MAAMzB,oBAAoB,GAAG,CAAC,GAAG5C,QAAQ,CAACgF,iBAAb,EAAgCC,IAAI,IAAI;AACnE,QAAMC,KAAK,GAAGD,IAAI,CAACZ,OAAL,CAAa,OAAb,CAAd;AACA,MAAI,OAAOa,KAAP,KAAiB,WAArB,EAAkC,OAAO,IAAP;;AAElC,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BP,KAAK,CAACC,OAAN,CAAcM,KAAd,CAA7B,IAAqDA,KAAK,KAAK,IAAnE,EAAyE;AACvE,UAAM,IAAI5B,KAAJ,CAAW,GAAE2B,IAAI,CAAC1C,QAAS,qCAA3B,CAAN;AACD;;AAED,SAAO;AACLA,IAAAA,QAAQ,EAAE0C,IAAI,CAAC1C,QADV;AAELV,IAAAA,OAAO,EAAEoD,IAAI,CAACpD,OAFT;AAGLwC,IAAAA,OAAO,EAAEa;AAHJ,GAAP;AAKD,CAb4B,CAA7B;AAcA,MAAMpB,eAAe,GAAG,CAAC,GAAG5D,MAAM,CAACiF,mBAAX,EAAgC,CAAC5C,QAAD,EAAW6C,OAAX,KAAuB;AAC7E,MAAIf,OAAJ;;AAEA,MAAI;AACFA,IAAAA,OAAO,GAAGvE,KAAK,GAAGe,OAAR,CAAgBwE,KAAhB,CAAsBD,OAAtB,CAAV;AACD,GAFD,CAEE,OAAOb,GAAP,EAAY;AACZA,IAAAA,GAAG,CAACC,OAAJ,GAAe,GAAEjC,QAAS,kCAAiCgC,GAAG,CAACC,OAAQ,EAAvE;AACA,UAAMD,GAAN;AACD;;AAED,MAAI,CAACF,OAAL,EAAc,MAAM,IAAIf,KAAJ,CAAW,GAAEf,QAAS,sBAAtB,CAAN;;AAEd,MAAI,OAAO8B,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAM,IAAIf,KAAJ,CAAW,GAAEf,QAAS,4BAA2B,OAAO8B,OAAQ,EAAhE,CAAN;AACD;;AAED,MAAIM,KAAK,CAACC,OAAN,CAAcP,OAAd,CAAJ,EAA4B;AAC1B,UAAM,IAAIf,KAAJ,CAAW,GAAEf,QAAS,0CAAtB,CAAN;AACD;;AAED,SAAO;AACLA,IAAAA,QADK;AAELV,IAAAA,OAAO,EAAEhC,KAAK,GAAGgB,OAAR,CAAgBgB,OAAhB,CAAwBU,QAAxB,CAFJ;AAGL8B,IAAAA;AAHK,GAAP;AAKD,CAzBuB,CAAxB;AA0BA,MAAMvB,gBAAgB,GAAG,CAAC,GAAG5C,MAAM,CAACiF,mBAAX,EAAgC,CAAC5C,QAAD,EAAW6C,OAAX,KAAuB;AAC9E,QAAME,SAAS,GAAGzF,KAAK,GAAGgB,OAAR,CAAgBgB,OAAhB,CAAwBU,QAAxB,CAAlB;;AAEA,QAAMgD,cAAc,GAAGH,OAAO,CAACI,KAAR,CAAc,IAAd,EAAoBrC,GAApB,CAAwBsC,IAAI,IAAIA,IAAI,CAACC,OAAL,CAAa,SAAb,EAAwB,EAAxB,EAA4BC,IAA5B,EAAhC,EAAoEC,MAApE,CAA2EH,IAAI,IAAI,CAAC,CAACA,IAArF,CAAvB;;AAEA,OAAK,MAAMI,OAAX,IAAsBN,cAAtB,EAAsC;AACpC,QAAIM,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EAAwB;AACtB,YAAM,IAAIvC,KAAJ,CAAW,0CAAX,CAAN;AACD;AACF;;AAED,SAAO;AACLf,IAAAA,QADK;AAELV,IAAAA,OAAO,EAAEhC,KAAK,GAAGgB,OAAR,CAAgBgB,OAAhB,CAAwBU,QAAxB,CAFJ;AAGLD,IAAAA,MAAM,EAAEiD,cAAc,CAACpC,GAAf,CAAmB0C,OAAO,IAAI,CAAC,GAAGzF,eAAe,CAACS,OAApB,EAA6BgF,OAA7B,EAAsCP,SAAtC,CAA9B;AAHH,GAAP;AAKD,CAhBwB,CAAzB;;AAkBA,SAASP,gBAAT,GAA4B;AAC1B,QAAM,IAAIzB,KAAJ,CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAX,CAAN;AAkCD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findConfigUpwards = findConfigUpwards;\nexports.findRelativeConfig = findRelativeConfig;\nexports.findRootConfig = findRootConfig;\nexports.loadConfig = loadConfig;\nexports.ROOT_CONFIG_FILENAMES = void 0;\n\nfunction _debug() {\n  const data = _interopRequireDefault(require(\"debug\"));\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _json() {\n  const data = _interopRequireDefault(require(\"json5\"));\n\n  _json = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  const data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _caching = require(\"../caching\");\n\nvar _configApi = _interopRequireDefault(require(\"../helpers/config-api\"));\n\nvar _utils = require(\"./utils\");\n\nvar _moduleTypes = _interopRequireDefault(require(\"./module-types\"));\n\nvar _patternToRegex = _interopRequireDefault(require(\"../pattern-to-regex\"));\n\nvar fs = _interopRequireWildcard(require(\"../../gensync-utils/fs\"));\n\nvar _resolve = _interopRequireDefault(require(\"../../gensync-utils/resolve\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst debug = (0, _debug().default)(\"babel:config:loading:files:configuration\");\nconst ROOT_CONFIG_FILENAMES = [\"babel.config.js\", \"babel.config.cjs\", \"babel.config.mjs\", \"babel.config.json\"];\nexports.ROOT_CONFIG_FILENAMES = ROOT_CONFIG_FILENAMES;\nconst RELATIVE_CONFIG_FILENAMES = [\".babelrc\", \".babelrc.js\", \".babelrc.cjs\", \".babelrc.mjs\", \".babelrc.json\"];\nconst BABELIGNORE_FILENAME = \".babelignore\";\n\nfunction* findConfigUpwards(rootDir) {\n  let dirname = rootDir;\n\n  while (true) {\n    for (const filename of ROOT_CONFIG_FILENAMES) {\n      if (yield* fs.exists(_path().default.join(dirname, filename))) {\n        return dirname;\n      }\n    }\n\n    const nextDir = _path().default.dirname(dirname);\n\n    if (dirname === nextDir) break;\n    dirname = nextDir;\n  }\n\n  return null;\n}\n\nfunction* findRelativeConfig(packageData, envName, caller) {\n  let config = null;\n  let ignore = null;\n\n  const dirname = _path().default.dirname(packageData.filepath);\n\n  for (const loc of packageData.directories) {\n    if (!config) {\n      config = yield* loadOneConfig(RELATIVE_CONFIG_FILENAMES, loc, envName, caller, packageData.pkg && packageData.pkg.dirname === loc ? packageToBabelConfig(packageData.pkg) : null);\n    }\n\n    if (!ignore) {\n      const ignoreLoc = _path().default.join(loc, BABELIGNORE_FILENAME);\n\n      ignore = yield* readIgnoreConfig(ignoreLoc);\n\n      if (ignore) {\n        debug(\"Found ignore %o from %o.\", ignore.filepath, dirname);\n      }\n    }\n  }\n\n  return {\n    config,\n    ignore\n  };\n}\n\nfunction findRootConfig(dirname, envName, caller) {\n  return loadOneConfig(ROOT_CONFIG_FILENAMES, dirname, envName, caller);\n}\n\nfunction* loadOneConfig(names, dirname, envName, caller, previousConfig = null) {\n  const configs = yield* _gensync().default.all(names.map(filename => readConfig(_path().default.join(dirname, filename), envName, caller)));\n  const config = configs.reduce((previousConfig, config) => {\n    if (config && previousConfig) {\n      throw new Error(`Multiple configuration files found. Please remove one:\\n` + ` - ${_path().default.basename(previousConfig.filepath)}\\n` + ` - ${config.filepath}\\n` + `from ${dirname}`);\n    }\n\n    return config || previousConfig;\n  }, previousConfig);\n\n  if (config) {\n    debug(\"Found configuration %o from %o.\", config.filepath, dirname);\n  }\n\n  return config;\n}\n\nfunction* loadConfig(name, dirname, envName, caller) {\n  const filepath = yield* (0, _resolve.default)(name, {\n    basedir: dirname\n  });\n  const conf = yield* readConfig(filepath, envName, caller);\n\n  if (!conf) {\n    throw new Error(`Config file ${filepath} contains no configuration data`);\n  }\n\n  debug(\"Loaded config %o from %o.\", name, dirname);\n  return conf;\n}\n\nfunction readConfig(filepath, envName, caller) {\n  const ext = _path().default.extname(filepath);\n\n  return ext === \".js\" || ext === \".cjs\" || ext === \".mjs\" ? readConfigJS(filepath, {\n    envName,\n    caller\n  }) : readConfigJSON5(filepath);\n}\n\nconst LOADING_CONFIGS = new Set();\nconst readConfigJS = (0, _caching.makeStrongCache)(function* readConfigJS(filepath, cache) {\n  if (!fs.exists.sync(filepath)) {\n    cache.forever();\n    return null;\n  }\n\n  if (LOADING_CONFIGS.has(filepath)) {\n    cache.never();\n    debug(\"Auto-ignoring usage of config %o.\", filepath);\n    return {\n      filepath,\n      dirname: _path().default.dirname(filepath),\n      options: {}\n    };\n  }\n\n  let options;\n\n  try {\n    LOADING_CONFIGS.add(filepath);\n    options = yield* (0, _moduleTypes.default)(filepath, \"You appear to be using a native ECMAScript module configuration \" + \"file, which is only supported when running Babel asynchronously.\");\n  } catch (err) {\n    err.message = `${filepath}: Error while loading config - ${err.message}`;\n    throw err;\n  } finally {\n    LOADING_CONFIGS.delete(filepath);\n  }\n\n  let assertCache = false;\n\n  if (typeof options === \"function\") {\n    yield* [];\n    options = options((0, _configApi.default)(cache));\n    assertCache = true;\n  }\n\n  if (!options || typeof options !== \"object\" || Array.isArray(options)) {\n    throw new Error(`${filepath}: Configuration should be an exported JavaScript object.`);\n  }\n\n  if (typeof options.then === \"function\") {\n    throw new Error(`You appear to be using an async configuration, ` + `which your current version of Babel does not support. ` + `We may add support for this in the future, ` + `but if you're on the most recent version of @babel/core and still ` + `seeing this error, then you'll need to synchronously return your config.`);\n  }\n\n  if (assertCache && !cache.configured()) throwConfigError();\n  return {\n    filepath,\n    dirname: _path().default.dirname(filepath),\n    options\n  };\n});\nconst packageToBabelConfig = (0, _caching.makeWeakCacheSync)(file => {\n  const babel = file.options[\"babel\"];\n  if (typeof babel === \"undefined\") return null;\n\n  if (typeof babel !== \"object\" || Array.isArray(babel) || babel === null) {\n    throw new Error(`${file.filepath}: .babel property must be an object`);\n  }\n\n  return {\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: babel\n  };\n});\nconst readConfigJSON5 = (0, _utils.makeStaticFileCache)((filepath, content) => {\n  let options;\n\n  try {\n    options = _json().default.parse(content);\n  } catch (err) {\n    err.message = `${filepath}: Error while parsing config - ${err.message}`;\n    throw err;\n  }\n\n  if (!options) throw new Error(`${filepath}: No config detected`);\n\n  if (typeof options !== \"object\") {\n    throw new Error(`${filepath}: Config returned typeof ${typeof options}`);\n  }\n\n  if (Array.isArray(options)) {\n    throw new Error(`${filepath}: Expected config object but found array`);\n  }\n\n  return {\n    filepath,\n    dirname: _path().default.dirname(filepath),\n    options\n  };\n});\nconst readIgnoreConfig = (0, _utils.makeStaticFileCache)((filepath, content) => {\n  const ignoreDir = _path().default.dirname(filepath);\n\n  const ignorePatterns = content.split(\"\\n\").map(line => line.replace(/#(.*?)$/, \"\").trim()).filter(line => !!line);\n\n  for (const pattern of ignorePatterns) {\n    if (pattern[0] === \"!\") {\n      throw new Error(`Negation of file paths is not supported.`);\n    }\n  }\n\n  return {\n    filepath,\n    dirname: _path().default.dirname(filepath),\n    ignore: ignorePatterns.map(pattern => (0, _patternToRegex.default)(pattern, ignoreDir))\n  };\n});\n\nfunction throwConfigError() {\n  throw new Error(`\\\nCaching was left unconfigured. Babel's plugins, presets, and .babelrc.js files can be configured\nfor various types of caching, using the first param of their handler functions:\n\nmodule.exports = function(api) {\n  // The API exposes the following:\n\n  // Cache the returned value forever and don't call this function again.\n  api.cache(true);\n\n  // Don't cache at all. Not recommended because it will be very slow.\n  api.cache(false);\n\n  // Cached based on the value of some function. If this function returns a value different from\n  // a previously-encountered value, the plugins will re-evaluate.\n  var env = api.cache(() => process.env.NODE_ENV);\n\n  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for\n  // any possible NODE_ENV value that might come up during plugin execution.\n  var isProd = api.cache(() => process.env.NODE_ENV === \"production\");\n\n  // .cache(fn) will perform a linear search though instances to find the matching plugin based\n  // based on previous instantiated plugins. If you want to recreate the plugin and discard the\n  // previous instance whenever something changes, you may use:\n  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === \"production\");\n\n  // Note, we also expose the following more-verbose versions of the above examples:\n  api.cache.forever(); // api.cache(true)\n  api.cache.never();   // api.cache(false)\n  api.cache.using(fn); // api.cache(fn)\n\n  // Return the value that will be cached.\n  return { };\n};`);\n}"]},"metadata":{},"sourceType":"script"}