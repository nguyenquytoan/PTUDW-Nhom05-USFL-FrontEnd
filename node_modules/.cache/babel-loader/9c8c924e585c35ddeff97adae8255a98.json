{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar assert = require('assert');\n\nvar util = require('../../');\n\nif (process.argv[2] === 'child') child();else parent();\n\nfunction parent() {\n  test('foo,tud,bar', true);\n  test('foo,tud', true);\n  test('tud,bar', true);\n  test('tud', true);\n  test('foo,bar', false);\n  test('', false);\n}\n\nfunction test(environ, shouldWrite) {\n  var expectErr = '';\n\n  if (shouldWrite) {\n    expectErr = 'TUD %PID%: this { is: \\'a\\' } /debugging/\\n' + 'TUD %PID%: number=1234 string=asdf obj={\"foo\":\"bar\"}\\n';\n  }\n\n  var expectOut = 'ok\\n';\n  var didTest = false;\n\n  var spawn = require('child_process').spawn;\n\n  var child = spawn(process.execPath, [__filename, 'child'], {\n    env: {\n      NODE_DEBUG: environ\n    }\n  });\n  expectErr = expectErr.split('%PID%').join(child.pid);\n  var err = '';\n  child.stderr.setEncoding('utf8');\n  child.stderr.on('data', function (c) {\n    err += c;\n  });\n  var out = '';\n  child.stdout.setEncoding('utf8');\n  child.stdout.on('data', function (c) {\n    out += c;\n  });\n  child.on('close', function (c) {\n    assert(!c);\n    assert.equal(err, expectErr);\n    assert.equal(out, expectOut);\n    didTest = true;\n    console.log('ok %j %j', environ, shouldWrite);\n  });\n  process.on('exit', function () {\n    assert(didTest);\n  });\n}\n\nfunction child() {\n  var debug = util.debuglog('tud');\n  debug('this', {\n    is: 'a'\n  }, /debugging/);\n  debug('number=%d string=%s obj=%j', 1234, 'asdf', {\n    foo: 'bar'\n  });\n  console.log('ok');\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/util/test/node/debug.js"],"names":["assert","require","util","process","argv","child","parent","test","environ","shouldWrite","expectErr","expectOut","didTest","spawn","execPath","__filename","env","NODE_DEBUG","split","join","pid","err","stderr","setEncoding","on","c","out","stdout","equal","console","log","debug","debuglog","is","foo"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAAlB;;AAEA,IAAIE,OAAO,CAACC,IAAR,CAAa,CAAb,MAAoB,OAAxB,EACEC,KAAK,GADP,KAGEC,MAAM;;AAER,SAASA,MAAT,GAAkB;AAChBC,EAAAA,IAAI,CAAC,aAAD,EAAgB,IAAhB,CAAJ;AACAA,EAAAA,IAAI,CAAC,SAAD,EAAY,IAAZ,CAAJ;AACAA,EAAAA,IAAI,CAAC,SAAD,EAAY,IAAZ,CAAJ;AACAA,EAAAA,IAAI,CAAC,KAAD,EAAQ,IAAR,CAAJ;AACAA,EAAAA,IAAI,CAAC,SAAD,EAAY,KAAZ,CAAJ;AACAA,EAAAA,IAAI,CAAC,EAAD,EAAK,KAAL,CAAJ;AACD;;AAED,SAASA,IAAT,CAAcC,OAAd,EAAuBC,WAAvB,EAAoC;AAClC,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAID,WAAJ,EAAiB;AACfC,IAAAA,SAAS,GAAG,gDACA,wDADZ;AAED;;AACD,MAAIC,SAAS,GAAG,MAAhB;AACA,MAAIC,OAAO,GAAG,KAAd;;AAEA,MAAIC,KAAK,GAAGZ,OAAO,CAAC,eAAD,CAAP,CAAyBY,KAArC;;AACA,MAAIR,KAAK,GAAGQ,KAAK,CAACV,OAAO,CAACW,QAAT,EAAmB,CAACC,UAAD,EAAa,OAAb,CAAnB,EAA0C;AACzDC,IAAAA,GAAG,EAAE;AAAEC,MAAAA,UAAU,EAAET;AAAd;AADoD,GAA1C,CAAjB;AAIAE,EAAAA,SAAS,GAAGA,SAAS,CAACQ,KAAV,CAAgB,OAAhB,EAAyBC,IAAzB,CAA8Bd,KAAK,CAACe,GAApC,CAAZ;AAEA,MAAIC,GAAG,GAAG,EAAV;AACAhB,EAAAA,KAAK,CAACiB,MAAN,CAAaC,WAAb,CAAyB,MAAzB;AACAlB,EAAAA,KAAK,CAACiB,MAAN,CAAaE,EAAb,CAAgB,MAAhB,EAAwB,UAASC,CAAT,EAAY;AAClCJ,IAAAA,GAAG,IAAII,CAAP;AACD,GAFD;AAIA,MAAIC,GAAG,GAAG,EAAV;AACArB,EAAAA,KAAK,CAACsB,MAAN,CAAaJ,WAAb,CAAyB,MAAzB;AACAlB,EAAAA,KAAK,CAACsB,MAAN,CAAaH,EAAb,CAAgB,MAAhB,EAAwB,UAASC,CAAT,EAAY;AAClCC,IAAAA,GAAG,IAAID,CAAP;AACD,GAFD;AAIApB,EAAAA,KAAK,CAACmB,EAAN,CAAS,OAAT,EAAkB,UAASC,CAAT,EAAY;AAC5BzB,IAAAA,MAAM,CAAC,CAACyB,CAAF,CAAN;AACAzB,IAAAA,MAAM,CAAC4B,KAAP,CAAaP,GAAb,EAAkBX,SAAlB;AACAV,IAAAA,MAAM,CAAC4B,KAAP,CAAaF,GAAb,EAAkBf,SAAlB;AACAC,IAAAA,OAAO,GAAG,IAAV;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBtB,OAAxB,EAAiCC,WAAjC;AACD,GAND;AAQAN,EAAAA,OAAO,CAACqB,EAAR,CAAW,MAAX,EAAmB,YAAW;AAC5BxB,IAAAA,MAAM,CAACY,OAAD,CAAN;AACD,GAFD;AAGD;;AAGD,SAASP,KAAT,GAAiB;AACf,MAAI0B,KAAK,GAAG7B,IAAI,CAAC8B,QAAL,CAAc,KAAd,CAAZ;AACAD,EAAAA,KAAK,CAAC,MAAD,EAAS;AAAEE,IAAAA,EAAE,EAAE;AAAN,GAAT,EAAsB,WAAtB,CAAL;AACAF,EAAAA,KAAK,CAAC,4BAAD,EAA+B,IAA/B,EAAqC,MAArC,EAA6C;AAAEG,IAAAA,GAAG,EAAE;AAAP,GAA7C,CAAL;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar assert = require('assert');\nvar util = require('../../');\n\nif (process.argv[2] === 'child')\n  child();\nelse\n  parent();\n\nfunction parent() {\n  test('foo,tud,bar', true);\n  test('foo,tud', true);\n  test('tud,bar', true);\n  test('tud', true);\n  test('foo,bar', false);\n  test('', false);\n}\n\nfunction test(environ, shouldWrite) {\n  var expectErr = '';\n  if (shouldWrite) {\n    expectErr = 'TUD %PID%: this { is: \\'a\\' } /debugging/\\n' +\n                'TUD %PID%: number=1234 string=asdf obj={\"foo\":\"bar\"}\\n';\n  }\n  var expectOut = 'ok\\n';\n  var didTest = false;\n\n  var spawn = require('child_process').spawn;\n  var child = spawn(process.execPath, [__filename, 'child'], {\n    env: { NODE_DEBUG: environ }\n  });\n\n  expectErr = expectErr.split('%PID%').join(child.pid);\n\n  var err = '';\n  child.stderr.setEncoding('utf8');\n  child.stderr.on('data', function(c) {\n    err += c;\n  });\n\n  var out = '';\n  child.stdout.setEncoding('utf8');\n  child.stdout.on('data', function(c) {\n    out += c;\n  });\n\n  child.on('close', function(c) {\n    assert(!c);\n    assert.equal(err, expectErr);\n    assert.equal(out, expectOut);\n    didTest = true;\n    console.log('ok %j %j', environ, shouldWrite);\n  });\n\n  process.on('exit', function() {\n    assert(didTest);\n  });\n}\n\n\nfunction child() {\n  var debug = util.debuglog('tud');\n  debug('this', { is: 'a' }, /debugging/);\n  debug('number=%d string=%s obj=%j', 1234, 'asdf', { foo: 'bar' });\n  console.log('ok');\n}\n"]},"metadata":{},"sourceType":"script"}