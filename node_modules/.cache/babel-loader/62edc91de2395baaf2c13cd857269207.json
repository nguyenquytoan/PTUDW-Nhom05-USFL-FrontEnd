{"ast":null,"code":"// Generated by CoffeeScript 1.6.3\nvar object,\n    _common,\n    __hasProp = {}.hasOwnProperty;\n\n_common = require('./_common');\nmodule.exports = object = {\n  isBareObject: _common.isBareObject.bind(_common),\n\n  /*\n  \tif object is an instance of a class\n  */\n  isInstance: function (what) {\n    return !this.isBareObject(what);\n  },\n\n  /*\n  \tAlias to _common.typeOf\n  */\n  typeOf: _common.typeOf.bind(_common),\n\n  /*\n  \tAlias to _common.clone\n  */\n  clone: _common.clone.bind(_common),\n\n  /*\n  \tEmpties an object of its properties.\n  */\n  empty: function (o) {\n    var prop;\n\n    for (prop in o) {\n      if (o.hasOwnProperty(prop)) {\n        delete o[prop];\n      }\n    }\n\n    return o;\n  },\n\n  /*\n  \tEmpties an object. Doesn't check for hasOwnProperty, so it's a tiny\n  \tbit faster. Use it for plain objects.\n  */\n  fastEmpty: function (o) {\n    var property;\n\n    for (property in o) {\n      delete o[property];\n    }\n\n    return o;\n  },\n\n  /*\n  \tOverrides values fomr `newValues` on `base`, as long as they\n  \talready exist in base.\n  */\n  overrideOnto: function (base, newValues) {\n    var key, newVal, oldVal;\n\n    if (!this.isBareObject(newValues) || !this.isBareObject(base)) {\n      return base;\n    }\n\n    for (key in base) {\n      oldVal = base[key];\n      newVal = newValues[key];\n\n      if (newVal === void 0) {\n        continue;\n      }\n\n      if (typeof newVal !== 'object' || this.isInstance(newVal)) {\n        base[key] = this.clone(newVal);\n      } else {\n        if (typeof oldVal !== 'object' || this.isInstance(oldVal)) {\n          base[key] = this.clone(newVal);\n        } else {\n          this.overrideOnto(oldVal, newVal);\n        }\n      }\n    }\n\n    return base;\n  },\n\n  /*\n  \tTakes a clone of 'base' and runs #overrideOnto on it\n  */\n  override: function (base, newValues) {\n    return this.overrideOnto(this.clone(base), newValues);\n  },\n  append: function (base, toAppend) {\n    return this.appendOnto(this.clone(base), toAppend);\n  },\n  appendOnto: function (base, toAppend) {\n    var key, newVal, oldVal;\n\n    if (!this.isBareObject(toAppend) || !this.isBareObject(base)) {\n      return base;\n    }\n\n    for (key in toAppend) {\n      if (!__hasProp.call(toAppend, key)) continue;\n      newVal = toAppend[key];\n\n      if (newVal === void 0) {\n        continue;\n      }\n\n      if (typeof newVal !== 'object' || this.isInstance(newVal)) {\n        base[key] = newVal;\n      } else {\n        oldVal = base[key];\n\n        if (typeof oldVal !== 'object' || this.isInstance(oldVal)) {\n          base[key] = this.clone(newVal);\n        } else {\n          this.appendOnto(oldVal, newVal);\n        }\n      }\n    }\n\n    return base;\n  },\n  groupProps: function (obj, groups) {\n    var def, defs, grouped, key, name, shouldAdd, val, _i, _len;\n\n    grouped = {};\n\n    for (name in groups) {\n      defs = groups[name];\n      grouped[name] = {};\n    }\n\n    grouped['rest'] = {};\n\n    top: //;\n    for (key in obj) {\n      val = obj[key];\n      shouldAdd = false;\n\n      for (name in groups) {\n        defs = groups[name];\n\n        if (!Array.isArray(defs)) {\n          defs = [defs];\n        }\n\n        for (_i = 0, _len = defs.length; _i < _len; _i++) {\n          def = defs[_i];\n\n          if (typeof def === 'string') {\n            if (key === def) {\n              shouldAdd = true;\n            }\n          } else if (def instanceof RegExp) {\n            if (def.test(key)) {\n              shouldAdd = true;\n            }\n          } else if (def instanceof Function) {\n            if (def(key)) {\n              shouldAdd = true;\n            }\n          } else {\n            throw Error('Group definitions must either\\\n\t\t\t\t\t\tbe strings, regexes, or functions.');\n          }\n\n          if (shouldAdd) {\n            grouped[name][key] = val;\n            continue top;\n          }\n        }\n      }\n\n      grouped['rest'][key] = val;\n    }\n\n    return grouped;\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/utila/lib/object.js"],"names":["object","_common","__hasProp","hasOwnProperty","require","module","exports","isBareObject","bind","isInstance","what","typeOf","clone","empty","o","prop","fastEmpty","property","overrideOnto","base","newValues","key","newVal","oldVal","override","append","toAppend","appendOnto","call","groupProps","obj","groups","def","defs","grouped","name","shouldAdd","val","_i","_len","top","Array","isArray","length","RegExp","test","Function","Error"],"mappings":"AAAA;AACA,IAAIA,MAAJ;AAAA,IAAYC,OAAZ;AAAA,IACEC,SAAS,GAAG,GAAGC,cADjB;;AAGAF,OAAO,GAAGG,OAAO,CAAC,WAAD,CAAjB;AAEAC,MAAM,CAACC,OAAP,GAAiBN,MAAM,GAAG;AACxBO,EAAAA,YAAY,EAAEN,OAAO,CAACM,YAAR,CAAqBC,IAArB,CAA0BP,OAA1B,CADU;;AAExB;;;AAIAQ,EAAAA,UAAU,EAAE,UAASC,IAAT,EAAe;AACzB,WAAO,CAAC,KAAKH,YAAL,CAAkBG,IAAlB,CAAR;AACD,GARuB;;AASxB;;;AAIAC,EAAAA,MAAM,EAAEV,OAAO,CAACU,MAAR,CAAeH,IAAf,CAAoBP,OAApB,CAbgB;;AAcxB;;;AAIAW,EAAAA,KAAK,EAAEX,OAAO,CAACW,KAAR,CAAcJ,IAAd,CAAmBP,OAAnB,CAlBiB;;AAmBxB;;;AAIAY,EAAAA,KAAK,EAAE,UAASC,CAAT,EAAY;AACjB,QAAIC,IAAJ;;AACA,SAAKA,IAAL,IAAaD,CAAb,EAAgB;AACd,UAAIA,CAAC,CAACX,cAAF,CAAiBY,IAAjB,CAAJ,EAA4B;AAC1B,eAAOD,CAAC,CAACC,IAAD,CAAR;AACD;AACF;;AACD,WAAOD,CAAP;AACD,GA/BuB;;AAgCxB;;;;AAKAE,EAAAA,SAAS,EAAE,UAASF,CAAT,EAAY;AACrB,QAAIG,QAAJ;;AACA,SAAKA,QAAL,IAAiBH,CAAjB,EAAoB;AAClB,aAAOA,CAAC,CAACG,QAAD,CAAR;AACD;;AACD,WAAOH,CAAP;AACD,GA3CuB;;AA4CxB;;;;AAKAI,EAAAA,YAAY,EAAE,UAASC,IAAT,EAAeC,SAAf,EAA0B;AACtC,QAAIC,GAAJ,EAASC,MAAT,EAAiBC,MAAjB;;AACA,QAAI,CAAC,KAAKhB,YAAL,CAAkBa,SAAlB,CAAD,IAAiC,CAAC,KAAKb,YAAL,CAAkBY,IAAlB,CAAtC,EAA+D;AAC7D,aAAOA,IAAP;AACD;;AACD,SAAKE,GAAL,IAAYF,IAAZ,EAAkB;AAChBI,MAAAA,MAAM,GAAGJ,IAAI,CAACE,GAAD,CAAb;AACAC,MAAAA,MAAM,GAAGF,SAAS,CAACC,GAAD,CAAlB;;AACA,UAAIC,MAAM,KAAK,KAAK,CAApB,EAAuB;AACrB;AACD;;AACD,UAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,KAAKb,UAAL,CAAgBa,MAAhB,CAAlC,EAA2D;AACzDH,QAAAA,IAAI,CAACE,GAAD,CAAJ,GAAY,KAAKT,KAAL,CAAWU,MAAX,CAAZ;AACD,OAFD,MAEO;AACL,YAAI,OAAOC,MAAP,KAAkB,QAAlB,IAA8B,KAAKd,UAAL,CAAgBc,MAAhB,CAAlC,EAA2D;AACzDJ,UAAAA,IAAI,CAACE,GAAD,CAAJ,GAAY,KAAKT,KAAL,CAAWU,MAAX,CAAZ;AACD,SAFD,MAEO;AACL,eAAKJ,YAAL,CAAkBK,MAAlB,EAA0BD,MAA1B;AACD;AACF;AACF;;AACD,WAAOH,IAAP;AACD,GAvEuB;;AAwExB;;;AAIAK,EAAAA,QAAQ,EAAE,UAASL,IAAT,EAAeC,SAAf,EAA0B;AAClC,WAAO,KAAKF,YAAL,CAAkB,KAAKN,KAAL,CAAWO,IAAX,CAAlB,EAAoCC,SAApC,CAAP;AACD,GA9EuB;AA+ExBK,EAAAA,MAAM,EAAE,UAASN,IAAT,EAAeO,QAAf,EAAyB;AAC/B,WAAO,KAAKC,UAAL,CAAgB,KAAKf,KAAL,CAAWO,IAAX,CAAhB,EAAkCO,QAAlC,CAAP;AACD,GAjFuB;AAkFxBC,EAAAA,UAAU,EAAE,UAASR,IAAT,EAAeO,QAAf,EAAyB;AACnC,QAAIL,GAAJ,EAASC,MAAT,EAAiBC,MAAjB;;AACA,QAAI,CAAC,KAAKhB,YAAL,CAAkBmB,QAAlB,CAAD,IAAgC,CAAC,KAAKnB,YAAL,CAAkBY,IAAlB,CAArC,EAA8D;AAC5D,aAAOA,IAAP;AACD;;AACD,SAAKE,GAAL,IAAYK,QAAZ,EAAsB;AACpB,UAAI,CAACxB,SAAS,CAAC0B,IAAV,CAAeF,QAAf,EAAyBL,GAAzB,CAAL,EAAoC;AACpCC,MAAAA,MAAM,GAAGI,QAAQ,CAACL,GAAD,CAAjB;;AACA,UAAIC,MAAM,KAAK,KAAK,CAApB,EAAuB;AACrB;AACD;;AACD,UAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,KAAKb,UAAL,CAAgBa,MAAhB,CAAlC,EAA2D;AACzDH,QAAAA,IAAI,CAACE,GAAD,CAAJ,GAAYC,MAAZ;AACD,OAFD,MAEO;AACLC,QAAAA,MAAM,GAAGJ,IAAI,CAACE,GAAD,CAAb;;AACA,YAAI,OAAOE,MAAP,KAAkB,QAAlB,IAA8B,KAAKd,UAAL,CAAgBc,MAAhB,CAAlC,EAA2D;AACzDJ,UAAAA,IAAI,CAACE,GAAD,CAAJ,GAAY,KAAKT,KAAL,CAAWU,MAAX,CAAZ;AACD,SAFD,MAEO;AACL,eAAKK,UAAL,CAAgBJ,MAAhB,EAAwBD,MAAxB;AACD;AACF;AACF;;AACD,WAAOH,IAAP;AACD,GAzGuB;AA0GxBU,EAAAA,UAAU,EAAE,UAASC,GAAT,EAAcC,MAAd,EAAsB;AAChC,QAAIC,GAAJ,EAASC,IAAT,EAAeC,OAAf,EAAwBb,GAAxB,EAA6Bc,IAA7B,EAAmCC,SAAnC,EAA8CC,GAA9C,EAAmDC,EAAnD,EAAuDC,IAAvD;;AACAL,IAAAA,OAAO,GAAG,EAAV;;AACA,SAAKC,IAAL,IAAaJ,MAAb,EAAqB;AACnBE,MAAAA,IAAI,GAAGF,MAAM,CAACI,IAAD,CAAb;AACAD,MAAAA,OAAO,CAACC,IAAD,CAAP,GAAgB,EAAhB;AACD;;AACDD,IAAAA,OAAO,CAAC,MAAD,CAAP,GAAkB,EAAlB;;AACAM,IAAAA,GAAG,EAAE;AACL,SAAKnB,GAAL,IAAYS,GAAZ,EAAiB;AACfO,MAAAA,GAAG,GAAGP,GAAG,CAACT,GAAD,CAAT;AACAe,MAAAA,SAAS,GAAG,KAAZ;;AACA,WAAKD,IAAL,IAAaJ,MAAb,EAAqB;AACnBE,QAAAA,IAAI,GAAGF,MAAM,CAACI,IAAD,CAAb;;AACA,YAAI,CAACM,KAAK,CAACC,OAAN,CAAcT,IAAd,CAAL,EAA0B;AACxBA,UAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACD;;AACD,aAAKK,EAAE,GAAG,CAAL,EAAQC,IAAI,GAAGN,IAAI,CAACU,MAAzB,EAAiCL,EAAE,GAAGC,IAAtC,EAA4CD,EAAE,EAA9C,EAAkD;AAChDN,UAAAA,GAAG,GAAGC,IAAI,CAACK,EAAD,CAAV;;AACA,cAAI,OAAON,GAAP,KAAe,QAAnB,EAA6B;AAC3B,gBAAIX,GAAG,KAAKW,GAAZ,EAAiB;AACfI,cAAAA,SAAS,GAAG,IAAZ;AACD;AACF,WAJD,MAIO,IAAIJ,GAAG,YAAYY,MAAnB,EAA2B;AAChC,gBAAIZ,GAAG,CAACa,IAAJ,CAASxB,GAAT,CAAJ,EAAmB;AACjBe,cAAAA,SAAS,GAAG,IAAZ;AACD;AACF,WAJM,MAIA,IAAIJ,GAAG,YAAYc,QAAnB,EAA6B;AAClC,gBAAId,GAAG,CAACX,GAAD,CAAP,EAAc;AACZe,cAAAA,SAAS,GAAG,IAAZ;AACD;AACF,WAJM,MAIA;AACL,kBAAMW,KAAK,CAAC;yCAAD,CAAX;AAED;;AACD,cAAIX,SAAJ,EAAe;AACbF,YAAAA,OAAO,CAACC,IAAD,CAAP,CAAcd,GAAd,IAAqBgB,GAArB;AACA,qBAASG,GAAT;AACD;AACF;AACF;;AACDN,MAAAA,OAAO,CAAC,MAAD,CAAP,CAAgBb,GAAhB,IAAuBgB,GAAvB;AACD;;AACD,WAAOH,OAAP;AACD;AAtJuB,CAA1B","sourcesContent":["// Generated by CoffeeScript 1.6.3\nvar object, _common,\n  __hasProp = {}.hasOwnProperty;\n\n_common = require('./_common');\n\nmodule.exports = object = {\n  isBareObject: _common.isBareObject.bind(_common),\n  /*\n  \tif object is an instance of a class\n  */\n\n  isInstance: function(what) {\n    return !this.isBareObject(what);\n  },\n  /*\n  \tAlias to _common.typeOf\n  */\n\n  typeOf: _common.typeOf.bind(_common),\n  /*\n  \tAlias to _common.clone\n  */\n\n  clone: _common.clone.bind(_common),\n  /*\n  \tEmpties an object of its properties.\n  */\n\n  empty: function(o) {\n    var prop;\n    for (prop in o) {\n      if (o.hasOwnProperty(prop)) {\n        delete o[prop];\n      }\n    }\n    return o;\n  },\n  /*\n  \tEmpties an object. Doesn't check for hasOwnProperty, so it's a tiny\n  \tbit faster. Use it for plain objects.\n  */\n\n  fastEmpty: function(o) {\n    var property;\n    for (property in o) {\n      delete o[property];\n    }\n    return o;\n  },\n  /*\n  \tOverrides values fomr `newValues` on `base`, as long as they\n  \talready exist in base.\n  */\n\n  overrideOnto: function(base, newValues) {\n    var key, newVal, oldVal;\n    if (!this.isBareObject(newValues) || !this.isBareObject(base)) {\n      return base;\n    }\n    for (key in base) {\n      oldVal = base[key];\n      newVal = newValues[key];\n      if (newVal === void 0) {\n        continue;\n      }\n      if (typeof newVal !== 'object' || this.isInstance(newVal)) {\n        base[key] = this.clone(newVal);\n      } else {\n        if (typeof oldVal !== 'object' || this.isInstance(oldVal)) {\n          base[key] = this.clone(newVal);\n        } else {\n          this.overrideOnto(oldVal, newVal);\n        }\n      }\n    }\n    return base;\n  },\n  /*\n  \tTakes a clone of 'base' and runs #overrideOnto on it\n  */\n\n  override: function(base, newValues) {\n    return this.overrideOnto(this.clone(base), newValues);\n  },\n  append: function(base, toAppend) {\n    return this.appendOnto(this.clone(base), toAppend);\n  },\n  appendOnto: function(base, toAppend) {\n    var key, newVal, oldVal;\n    if (!this.isBareObject(toAppend) || !this.isBareObject(base)) {\n      return base;\n    }\n    for (key in toAppend) {\n      if (!__hasProp.call(toAppend, key)) continue;\n      newVal = toAppend[key];\n      if (newVal === void 0) {\n        continue;\n      }\n      if (typeof newVal !== 'object' || this.isInstance(newVal)) {\n        base[key] = newVal;\n      } else {\n        oldVal = base[key];\n        if (typeof oldVal !== 'object' || this.isInstance(oldVal)) {\n          base[key] = this.clone(newVal);\n        } else {\n          this.appendOnto(oldVal, newVal);\n        }\n      }\n    }\n    return base;\n  },\n  groupProps: function(obj, groups) {\n    var def, defs, grouped, key, name, shouldAdd, val, _i, _len;\n    grouped = {};\n    for (name in groups) {\n      defs = groups[name];\n      grouped[name] = {};\n    }\n    grouped['rest'] = {};\n    top: //;\n    for (key in obj) {\n      val = obj[key];\n      shouldAdd = false;\n      for (name in groups) {\n        defs = groups[name];\n        if (!Array.isArray(defs)) {\n          defs = [defs];\n        }\n        for (_i = 0, _len = defs.length; _i < _len; _i++) {\n          def = defs[_i];\n          if (typeof def === 'string') {\n            if (key === def) {\n              shouldAdd = true;\n            }\n          } else if (def instanceof RegExp) {\n            if (def.test(key)) {\n              shouldAdd = true;\n            }\n          } else if (def instanceof Function) {\n            if (def(key)) {\n              shouldAdd = true;\n            }\n          } else {\n            throw Error('Group definitions must either\\\n\t\t\t\t\t\tbe strings, regexes, or functions.');\n          }\n          if (shouldAdd) {\n            grouped[name][key] = val;\n            continue top;\n          }\n        }\n      }\n      grouped['rest'][key] = val;\n    }\n    return grouped;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}