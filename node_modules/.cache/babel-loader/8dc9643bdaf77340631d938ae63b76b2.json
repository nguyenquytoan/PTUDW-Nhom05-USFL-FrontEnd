{"ast":null,"code":"var hasInherit = require('./has-inherit');\n\nvar everyValuesPair = require('./every-values-pair');\n\nvar findComponentIn = require('./find-component-in');\n\nvar isComponentOf = require('./is-component-of');\n\nvar isMergeableShorthand = require('./is-mergeable-shorthand');\n\nvar overridesNonComponentShorthand = require('./overrides-non-component-shorthand');\n\nvar sameVendorPrefixesIn = require('./vendor-prefixes').same;\n\nvar compactable = require('../compactable');\n\nvar deepClone = require('../clone').deep;\n\nvar restoreWithComponents = require('../restore-with-components');\n\nvar shallowClone = require('../clone').shallow;\n\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\n\nvar Token = require('../../../tokenizer/token');\n\nvar Marker = require('../../../tokenizer/marker');\n\nvar serializeProperty = require('../../../writer/one-time').property;\n\nfunction wouldBreakCompatibility(property, validator) {\n  for (var i = 0; i < property.components.length; i++) {\n    var component = property.components[i];\n    var descriptor = compactable[component.name];\n    var canOverride = descriptor && descriptor.canOverride || canOverride.sameValue;\n\n    var _component = shallowClone(component);\n\n    _component.value = [[Token.PROPERTY_VALUE, descriptor.defaultValue]];\n\n    if (!everyValuesPair(canOverride.bind(null, validator), _component, component)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction overrideIntoMultiplex(property, by) {\n  by.unused = true;\n  turnIntoMultiplex(by, multiplexSize(property));\n  property.value = by.value;\n}\n\nfunction overrideByMultiplex(property, by) {\n  by.unused = true;\n  property.multiplex = true;\n  property.value = by.value;\n}\n\nfunction overrideSimple(property, by) {\n  by.unused = true;\n  property.value = by.value;\n}\n\nfunction override(property, by) {\n  if (by.multiplex) overrideByMultiplex(property, by);else if (property.multiplex) overrideIntoMultiplex(property, by);else overrideSimple(property, by);\n}\n\nfunction overrideShorthand(property, by) {\n  by.unused = true;\n\n  for (var i = 0, l = property.components.length; i < l; i++) {\n    override(property.components[i], by.components[i], property.multiplex);\n  }\n}\n\nfunction turnIntoMultiplex(property, size) {\n  property.multiplex = true;\n\n  if (compactable[property.name].shorthand) {\n    turnShorthandValueIntoMultiplex(property, size);\n  } else {\n    turnLonghandValueIntoMultiplex(property, size);\n  }\n}\n\nfunction turnShorthandValueIntoMultiplex(property, size) {\n  var component;\n  var i, l;\n\n  for (i = 0, l = property.components.length; i < l; i++) {\n    component = property.components[i];\n\n    if (!component.multiplex) {\n      turnLonghandValueIntoMultiplex(component, size);\n    }\n  }\n}\n\nfunction turnLonghandValueIntoMultiplex(property, size) {\n  var descriptor = compactable[property.name];\n  var withRealValue = descriptor.intoMultiplexMode == 'real';\n  var withValue = descriptor.intoMultiplexMode == 'real' ? property.value.slice(0) : descriptor.intoMultiplexMode == 'placeholder' ? descriptor.placeholderValue : descriptor.defaultValue;\n  var i = multiplexSize(property);\n  var j;\n  var m = withValue.length;\n\n  for (; i < size; i++) {\n    property.value.push([Token.PROPERTY_VALUE, Marker.COMMA]);\n\n    if (Array.isArray(withValue)) {\n      for (j = 0; j < m; j++) {\n        property.value.push(withRealValue ? withValue[j] : [Token.PROPERTY_VALUE, withValue[j]]);\n      }\n    } else {\n      property.value.push(withRealValue ? withValue : [Token.PROPERTY_VALUE, withValue]);\n    }\n  }\n}\n\nfunction multiplexSize(component) {\n  var size = 0;\n\n  for (var i = 0, l = component.value.length; i < l; i++) {\n    if (component.value[i][1] == Marker.COMMA) size++;\n  }\n\n  return size + 1;\n}\n\nfunction lengthOf(property) {\n  var fakeAsArray = [Token.PROPERTY, [Token.PROPERTY_NAME, property.name]].concat(property.value);\n  return serializeProperty([fakeAsArray], 0).length;\n}\n\nfunction moreSameShorthands(properties, startAt, name) {\n  // Since we run the main loop in `compactOverrides` backwards, at this point some\n  // properties may not be marked as unused.\n  // We should consider reverting the order if possible\n  var count = 0;\n\n  for (var i = startAt; i >= 0; i--) {\n    if (properties[i].name == name && !properties[i].unused) count++;\n    if (count > 1) break;\n  }\n\n  return count > 1;\n}\n\nfunction overridingFunction(shorthand, validator) {\n  for (var i = 0, l = shorthand.components.length; i < l; i++) {\n    if (!anyValue(validator.isUrl, shorthand.components[i]) && anyValue(validator.isFunction, shorthand.components[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction anyValue(fn, property) {\n  for (var i = 0, l = property.value.length; i < l; i++) {\n    if (property.value[i][1] == Marker.COMMA) continue;\n    if (fn(property.value[i][1])) return true;\n  }\n\n  return false;\n}\n\nfunction wouldResultInLongerValue(left, right) {\n  if (!left.multiplex && !right.multiplex || left.multiplex && right.multiplex) return false;\n  var multiplex = left.multiplex ? left : right;\n  var simple = left.multiplex ? right : left;\n  var component;\n  var multiplexClone = deepClone(multiplex);\n  restoreFromOptimizing([multiplexClone], restoreWithComponents);\n  var simpleClone = deepClone(simple);\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n  var lengthBefore = lengthOf(multiplexClone) + 1 + lengthOf(simpleClone);\n\n  if (left.multiplex) {\n    component = findComponentIn(multiplexClone, simpleClone);\n    overrideIntoMultiplex(component, simpleClone);\n  } else {\n    component = findComponentIn(simpleClone, multiplexClone);\n    turnIntoMultiplex(simpleClone, multiplexSize(multiplexClone));\n    overrideByMultiplex(component, multiplexClone);\n  }\n\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n  var lengthAfter = lengthOf(simpleClone);\n  return lengthBefore <= lengthAfter;\n}\n\nfunction isCompactable(property) {\n  return property.name in compactable;\n}\n\nfunction noneOverrideHack(left, right) {\n  return !left.multiplex && (left.name == 'background' || left.name == 'background-image') && right.multiplex && (right.name == 'background' || right.name == 'background-image') && anyLayerIsNone(right.value);\n}\n\nfunction anyLayerIsNone(values) {\n  var layers = intoLayers(values);\n\n  for (var i = 0, l = layers.length; i < l; i++) {\n    if (layers[i].length == 1 && layers[i][0][1] == 'none') return true;\n  }\n\n  return false;\n}\n\nfunction intoLayers(values) {\n  var layers = [];\n\n  for (var i = 0, layer = [], l = values.length; i < l; i++) {\n    var value = values[i];\n\n    if (value[1] == Marker.COMMA) {\n      layers.push(layer);\n      layer = [];\n    } else {\n      layer.push(value);\n    }\n  }\n\n  layers.push(layer);\n  return layers;\n}\n\nfunction overrideProperties(properties, withMerging, compatibility, validator) {\n  var mayOverride, right, left, component;\n  var overriddenComponents;\n  var overriddenComponent;\n  var overridingComponent;\n  var overridable;\n  var i, j, k;\n\n  propertyLoop: for (i = properties.length - 1; i >= 0; i--) {\n    right = properties[i];\n    if (!isCompactable(right)) continue;\n    if (right.block) continue;\n    mayOverride = compactable[right.name].canOverride;\n\n    traverseLoop: for (j = i - 1; j >= 0; j--) {\n      left = properties[j];\n      if (!isCompactable(left)) continue;\n      if (left.block) continue;\n      if (left.unused || right.unused) continue;\n      if (left.hack && !right.hack && !right.important || !left.hack && !left.important && right.hack) continue;\n      if (left.important == right.important && left.hack[0] != right.hack[0]) continue;\n      if (left.important == right.important && (left.hack[0] != right.hack[0] || left.hack[1] && left.hack[1] != right.hack[1])) continue;\n      if (hasInherit(right)) continue;\n      if (noneOverrideHack(left, right)) continue;\n\n      if (right.shorthand && isComponentOf(right, left)) {\n        // maybe `left` can be overridden by `right` which is a shorthand?\n        if (!right.important && left.important) continue;\n        if (!sameVendorPrefixesIn([left], right.components)) continue;\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator)) continue;\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        component = findComponentIn(right, left);\n        mayOverride = compactable[left.name].canOverride;\n\n        if (everyValuesPair(mayOverride.bind(null, validator), left, component)) {\n          left.unused = true;\n        }\n      } else if (right.shorthand && overridesNonComponentShorthand(right, left)) {\n        // `right` is a shorthand while `left` can be overriden by it, think `border` and `border-top`\n        if (!right.important && left.important) {\n          continue;\n        }\n\n        if (!sameVendorPrefixesIn([left], right.components)) {\n          continue;\n        }\n\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator)) {\n          continue;\n        }\n\n        overriddenComponents = left.shorthand ? left.components : [left];\n\n        for (k = overriddenComponents.length - 1; k >= 0; k--) {\n          overriddenComponent = overriddenComponents[k];\n          overridingComponent = findComponentIn(right, overriddenComponent);\n          mayOverride = compactable[overriddenComponent.name].canOverride;\n\n          if (!everyValuesPair(mayOverride.bind(null, validator), left, overridingComponent)) {\n            continue traverseLoop;\n          }\n        }\n\n        left.unused = true;\n      } else if (withMerging && left.shorthand && !right.shorthand && isComponentOf(left, right, true)) {\n        // maybe `right` can be pulled into `left` which is a shorthand?\n        if (right.important && !left.important) continue;\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue;\n        } // Pending more clever algorithm in #527\n\n\n        if (moreSameShorthands(properties, i - 1, left.name)) continue;\n        if (overridingFunction(left, validator)) continue;\n        if (!isMergeableShorthand(left)) continue;\n        component = findComponentIn(left, right);\n\n        if (everyValuesPair(mayOverride.bind(null, validator), component, right)) {\n          var disabledBackgroundMerging = !compatibility.properties.backgroundClipMerging && component.name.indexOf('background-clip') > -1 || !compatibility.properties.backgroundOriginMerging && component.name.indexOf('background-origin') > -1 || !compatibility.properties.backgroundSizeMerging && component.name.indexOf('background-size') > -1;\n          var nonMergeableValue = compactable[right.name].nonMergeableValue === right.value[0][1];\n          if (disabledBackgroundMerging || nonMergeableValue) continue;\n          if (!compatibility.properties.merging && wouldBreakCompatibility(left, validator)) continue;\n          if (component.value[0][1] != right.value[0][1] && (hasInherit(left) || hasInherit(right))) continue;\n          if (wouldResultInLongerValue(left, right)) continue;\n          if (!left.multiplex && right.multiplex) turnIntoMultiplex(left, multiplexSize(right));\n          override(component, right);\n          left.dirty = true;\n        }\n      } else if (withMerging && left.shorthand && right.shorthand && left.name == right.name) {\n        // merge if all components can be merged\n        if (!left.multiplex && right.multiplex) continue;\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue propertyLoop;\n        }\n\n        if (right.important && !left.important) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        for (k = left.components.length - 1; k >= 0; k--) {\n          var leftComponent = left.components[k];\n          var rightComponent = right.components[k];\n          mayOverride = compactable[leftComponent.name].canOverride;\n          if (!everyValuesPair(mayOverride.bind(null, validator), leftComponent, rightComponent)) continue propertyLoop;\n        }\n\n        overrideShorthand(left, right);\n        left.dirty = true;\n      } else if (withMerging && left.shorthand && right.shorthand && isComponentOf(left, right)) {\n        // border is a shorthand but any of its components is a shorthand too\n        if (!left.important && right.important) continue;\n        component = findComponentIn(left, right);\n        mayOverride = compactable[right.name].canOverride;\n        if (!everyValuesPair(mayOverride.bind(null, validator), component, right)) continue;\n\n        if (left.important && !right.important) {\n          right.unused = true;\n          continue;\n        }\n\n        var rightRestored = compactable[right.name].restore(right, compactable);\n        if (rightRestored.length > 1) continue;\n        component = findComponentIn(left, right);\n        override(component, right);\n        right.dirty = true;\n      } else if (left.name == right.name) {\n        // two non-shorthands should be merged based on understandability\n        overridable = true;\n\n        if (right.shorthand) {\n          for (k = right.components.length - 1; k >= 0 && overridable; k--) {\n            overriddenComponent = left.components[k];\n            overridingComponent = right.components[k];\n            mayOverride = compactable[overridingComponent.name].canOverride;\n            overridable = overridable && everyValuesPair(mayOverride.bind(null, validator), overriddenComponent, overridingComponent);\n          }\n        } else {\n          mayOverride = compactable[right.name].canOverride;\n          overridable = everyValuesPair(mayOverride.bind(null, validator), left, right);\n        }\n\n        if (left.important && !right.important && overridable) {\n          right.unused = true;\n          continue;\n        }\n\n        if (!left.important && right.important && overridable) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!overridable) {\n          continue;\n        }\n\n        left.unused = true;\n      }\n    }\n  }\n}\n\nmodule.exports = overrideProperties;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/optimizer/level-2/properties/override-properties.js"],"names":["hasInherit","require","everyValuesPair","findComponentIn","isComponentOf","isMergeableShorthand","overridesNonComponentShorthand","sameVendorPrefixesIn","same","compactable","deepClone","deep","restoreWithComponents","shallowClone","shallow","restoreFromOptimizing","Token","Marker","serializeProperty","property","wouldBreakCompatibility","validator","i","components","length","component","descriptor","name","canOverride","sameValue","_component","value","PROPERTY_VALUE","defaultValue","bind","overrideIntoMultiplex","by","unused","turnIntoMultiplex","multiplexSize","overrideByMultiplex","multiplex","overrideSimple","override","overrideShorthand","l","size","shorthand","turnShorthandValueIntoMultiplex","turnLonghandValueIntoMultiplex","withRealValue","intoMultiplexMode","withValue","slice","placeholderValue","j","m","push","COMMA","Array","isArray","lengthOf","fakeAsArray","PROPERTY","PROPERTY_NAME","concat","moreSameShorthands","properties","startAt","count","overridingFunction","anyValue","isUrl","isFunction","fn","wouldResultInLongerValue","left","right","simple","multiplexClone","simpleClone","lengthBefore","lengthAfter","isCompactable","noneOverrideHack","anyLayerIsNone","values","layers","intoLayers","layer","overrideProperties","withMerging","compatibility","mayOverride","overriddenComponents","overriddenComponent","overridingComponent","overridable","k","propertyLoop","block","traverseLoop","hack","important","disabledBackgroundMerging","backgroundClipMerging","indexOf","backgroundOriginMerging","backgroundSizeMerging","nonMergeableValue","merging","dirty","leftComponent","rightComponent","rightRestored","restore","module","exports"],"mappings":"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","sourcesContent":["var hasInherit = require('./has-inherit');\nvar everyValuesPair = require('./every-values-pair');\nvar findComponentIn = require('./find-component-in');\nvar isComponentOf = require('./is-component-of');\nvar isMergeableShorthand = require('./is-mergeable-shorthand');\nvar overridesNonComponentShorthand = require('./overrides-non-component-shorthand');\nvar sameVendorPrefixesIn = require('./vendor-prefixes').same;\n\nvar compactable = require('../compactable');\nvar deepClone = require('../clone').deep;\nvar restoreWithComponents = require('../restore-with-components');\nvar shallowClone = require('../clone').shallow;\n\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\n\nvar Token = require('../../../tokenizer/token');\nvar Marker = require('../../../tokenizer/marker');\n\nvar serializeProperty = require('../../../writer/one-time').property;\n\nfunction wouldBreakCompatibility(property, validator) {\n  for (var i = 0; i < property.components.length; i++) {\n    var component = property.components[i];\n    var descriptor = compactable[component.name];\n    var canOverride = descriptor && descriptor.canOverride || canOverride.sameValue;\n\n    var _component = shallowClone(component);\n    _component.value = [[Token.PROPERTY_VALUE, descriptor.defaultValue]];\n\n    if (!everyValuesPair(canOverride.bind(null, validator), _component, component)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction overrideIntoMultiplex(property, by) {\n  by.unused = true;\n\n  turnIntoMultiplex(by, multiplexSize(property));\n  property.value = by.value;\n}\n\nfunction overrideByMultiplex(property, by) {\n  by.unused = true;\n  property.multiplex = true;\n  property.value = by.value;\n}\n\nfunction overrideSimple(property, by) {\n  by.unused = true;\n  property.value = by.value;\n}\n\nfunction override(property, by) {\n  if (by.multiplex)\n    overrideByMultiplex(property, by);\n  else if (property.multiplex)\n    overrideIntoMultiplex(property, by);\n  else\n    overrideSimple(property, by);\n}\n\nfunction overrideShorthand(property, by) {\n  by.unused = true;\n\n  for (var i = 0, l = property.components.length; i < l; i++) {\n    override(property.components[i], by.components[i], property.multiplex);\n  }\n}\n\nfunction turnIntoMultiplex(property, size) {\n  property.multiplex = true;\n\n  if (compactable[property.name].shorthand) {\n    turnShorthandValueIntoMultiplex(property, size);\n  } else {\n    turnLonghandValueIntoMultiplex(property, size);\n  }\n}\n\nfunction turnShorthandValueIntoMultiplex(property, size) {\n  var component;\n  var i, l;\n\n  for (i = 0, l = property.components.length; i < l; i++) {\n    component = property.components[i];\n\n    if (!component.multiplex) {\n      turnLonghandValueIntoMultiplex(component, size);\n    }\n  }\n}\n\nfunction turnLonghandValueIntoMultiplex(property, size) {\n  var descriptor = compactable[property.name];\n  var withRealValue = descriptor.intoMultiplexMode == 'real';\n  var withValue = descriptor.intoMultiplexMode == 'real' ?\n    property.value.slice(0) :\n    (descriptor.intoMultiplexMode == 'placeholder' ? descriptor.placeholderValue : descriptor.defaultValue);\n  var i = multiplexSize(property);\n  var j;\n  var m = withValue.length;\n\n  for (; i < size; i++) {\n    property.value.push([Token.PROPERTY_VALUE, Marker.COMMA]);\n\n    if (Array.isArray(withValue)) {\n      for (j = 0; j < m; j++) {\n        property.value.push(withRealValue ? withValue[j] : [Token.PROPERTY_VALUE, withValue[j]]);\n      }\n    } else {\n      property.value.push(withRealValue ? withValue : [Token.PROPERTY_VALUE, withValue]);\n    }\n  }\n}\n\nfunction multiplexSize(component) {\n  var size = 0;\n\n  for (var i = 0, l = component.value.length; i < l; i++) {\n    if (component.value[i][1] == Marker.COMMA)\n      size++;\n  }\n\n  return size + 1;\n}\n\nfunction lengthOf(property) {\n  var fakeAsArray = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, property.name]\n  ].concat(property.value);\n  return serializeProperty([fakeAsArray], 0).length;\n}\n\nfunction moreSameShorthands(properties, startAt, name) {\n  // Since we run the main loop in `compactOverrides` backwards, at this point some\n  // properties may not be marked as unused.\n  // We should consider reverting the order if possible\n  var count = 0;\n\n  for (var i = startAt; i >= 0; i--) {\n    if (properties[i].name == name && !properties[i].unused)\n      count++;\n    if (count > 1)\n      break;\n  }\n\n  return count > 1;\n}\n\nfunction overridingFunction(shorthand, validator) {\n  for (var i = 0, l = shorthand.components.length; i < l; i++) {\n    if (!anyValue(validator.isUrl, shorthand.components[i]) && anyValue(validator.isFunction, shorthand.components[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction anyValue(fn, property) {\n  for (var i = 0, l = property.value.length; i < l; i++) {\n    if (property.value[i][1] == Marker.COMMA)\n      continue;\n\n    if (fn(property.value[i][1]))\n      return true;\n  }\n\n  return false;\n}\n\nfunction wouldResultInLongerValue(left, right) {\n  if (!left.multiplex && !right.multiplex || left.multiplex && right.multiplex)\n    return false;\n\n  var multiplex = left.multiplex ? left : right;\n  var simple = left.multiplex ? right : left;\n  var component;\n\n  var multiplexClone = deepClone(multiplex);\n  restoreFromOptimizing([multiplexClone], restoreWithComponents);\n\n  var simpleClone = deepClone(simple);\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n\n  var lengthBefore = lengthOf(multiplexClone) + 1 + lengthOf(simpleClone);\n\n  if (left.multiplex) {\n    component = findComponentIn(multiplexClone, simpleClone);\n    overrideIntoMultiplex(component, simpleClone);\n  } else {\n    component = findComponentIn(simpleClone, multiplexClone);\n    turnIntoMultiplex(simpleClone, multiplexSize(multiplexClone));\n    overrideByMultiplex(component, multiplexClone);\n  }\n\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n\n  var lengthAfter = lengthOf(simpleClone);\n\n  return lengthBefore <= lengthAfter;\n}\n\nfunction isCompactable(property) {\n  return property.name in compactable;\n}\n\nfunction noneOverrideHack(left, right) {\n  return !left.multiplex &&\n    (left.name == 'background' || left.name == 'background-image') &&\n    right.multiplex &&\n    (right.name == 'background' || right.name == 'background-image') &&\n    anyLayerIsNone(right.value);\n}\n\nfunction anyLayerIsNone(values) {\n  var layers = intoLayers(values);\n\n  for (var i = 0, l = layers.length; i < l; i++) {\n    if (layers[i].length == 1 && layers[i][0][1] == 'none')\n      return true;\n  }\n\n  return false;\n}\n\nfunction intoLayers(values) {\n  var layers = [];\n\n  for (var i = 0, layer = [], l = values.length; i < l; i++) {\n    var value = values[i];\n    if (value[1] == Marker.COMMA) {\n      layers.push(layer);\n      layer = [];\n    } else {\n      layer.push(value);\n    }\n  }\n\n  layers.push(layer);\n  return layers;\n}\n\nfunction overrideProperties(properties, withMerging, compatibility, validator) {\n  var mayOverride, right, left, component;\n  var overriddenComponents;\n  var overriddenComponent;\n  var overridingComponent;\n  var overridable;\n  var i, j, k;\n\n  propertyLoop:\n  for (i = properties.length - 1; i >= 0; i--) {\n    right = properties[i];\n\n    if (!isCompactable(right))\n      continue;\n\n    if (right.block)\n      continue;\n\n    mayOverride = compactable[right.name].canOverride;\n\n    traverseLoop:\n    for (j = i - 1; j >= 0; j--) {\n      left = properties[j];\n\n      if (!isCompactable(left))\n        continue;\n\n      if (left.block)\n        continue;\n\n      if (left.unused || right.unused)\n        continue;\n\n      if (left.hack && !right.hack && !right.important || !left.hack && !left.important && right.hack)\n        continue;\n\n      if (left.important == right.important && left.hack[0] != right.hack[0])\n        continue;\n\n      if (left.important == right.important && (left.hack[0] != right.hack[0] || (left.hack[1] && left.hack[1] != right.hack[1])))\n        continue;\n\n      if (hasInherit(right))\n        continue;\n\n      if (noneOverrideHack(left, right))\n        continue;\n\n      if (right.shorthand && isComponentOf(right, left)) {\n        // maybe `left` can be overridden by `right` which is a shorthand?\n        if (!right.important && left.important)\n          continue;\n\n        if (!sameVendorPrefixesIn([left], right.components))\n          continue;\n\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator))\n          continue;\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        component = findComponentIn(right, left);\n        mayOverride = compactable[left.name].canOverride;\n        if (everyValuesPair(mayOverride.bind(null, validator), left, component)) {\n          left.unused = true;\n        }\n      } else if (right.shorthand && overridesNonComponentShorthand(right, left)) {\n        // `right` is a shorthand while `left` can be overriden by it, think `border` and `border-top`\n        if (!right.important && left.important) {\n          continue;\n        }\n\n        if (!sameVendorPrefixesIn([left], right.components)) {\n          continue;\n        }\n\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator)) {\n          continue;\n        }\n\n        overriddenComponents = left.shorthand ?\n          left.components:\n          [left];\n\n        for (k = overriddenComponents.length - 1; k >= 0; k--) {\n          overriddenComponent = overriddenComponents[k];\n          overridingComponent = findComponentIn(right, overriddenComponent);\n          mayOverride = compactable[overriddenComponent.name].canOverride;\n\n          if (!everyValuesPair(mayOverride.bind(null, validator), left, overridingComponent)) {\n            continue traverseLoop;\n          }\n        }\n\n        left.unused = true;\n      } else if (withMerging && left.shorthand && !right.shorthand && isComponentOf(left, right, true)) {\n        // maybe `right` can be pulled into `left` which is a shorthand?\n        if (right.important && !left.important)\n          continue;\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue;\n        }\n\n        // Pending more clever algorithm in #527\n        if (moreSameShorthands(properties, i - 1, left.name))\n          continue;\n\n        if (overridingFunction(left, validator))\n          continue;\n\n        if (!isMergeableShorthand(left))\n          continue;\n\n        component = findComponentIn(left, right);\n        if (everyValuesPair(mayOverride.bind(null, validator), component, right)) {\n          var disabledBackgroundMerging =\n            !compatibility.properties.backgroundClipMerging && component.name.indexOf('background-clip') > -1 ||\n            !compatibility.properties.backgroundOriginMerging && component.name.indexOf('background-origin') > -1 ||\n            !compatibility.properties.backgroundSizeMerging && component.name.indexOf('background-size') > -1;\n          var nonMergeableValue = compactable[right.name].nonMergeableValue === right.value[0][1];\n\n          if (disabledBackgroundMerging || nonMergeableValue)\n            continue;\n\n          if (!compatibility.properties.merging && wouldBreakCompatibility(left, validator))\n            continue;\n\n          if (component.value[0][1] != right.value[0][1] && (hasInherit(left) || hasInherit(right)))\n            continue;\n\n          if (wouldResultInLongerValue(left, right))\n            continue;\n\n          if (!left.multiplex && right.multiplex)\n            turnIntoMultiplex(left, multiplexSize(right));\n\n          override(component, right);\n          left.dirty = true;\n        }\n      } else if (withMerging && left.shorthand && right.shorthand && left.name == right.name) {\n        // merge if all components can be merged\n\n        if (!left.multiplex && right.multiplex)\n          continue;\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue propertyLoop;\n        }\n\n        if (right.important && !left.important) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        for (k = left.components.length - 1; k >= 0; k--) {\n          var leftComponent = left.components[k];\n          var rightComponent = right.components[k];\n\n          mayOverride = compactable[leftComponent.name].canOverride;\n          if (!everyValuesPair(mayOverride.bind(null, validator), leftComponent, rightComponent))\n            continue propertyLoop;\n        }\n\n        overrideShorthand(left, right);\n        left.dirty = true;\n      } else if (withMerging && left.shorthand && right.shorthand && isComponentOf(left, right)) {\n        // border is a shorthand but any of its components is a shorthand too\n\n        if (!left.important && right.important)\n          continue;\n\n        component = findComponentIn(left, right);\n        mayOverride = compactable[right.name].canOverride;\n        if (!everyValuesPair(mayOverride.bind(null, validator), component, right))\n          continue;\n\n        if (left.important && !right.important) {\n          right.unused = true;\n          continue;\n        }\n\n        var rightRestored = compactable[right.name].restore(right, compactable);\n        if (rightRestored.length > 1)\n          continue;\n\n        component = findComponentIn(left, right);\n        override(component, right);\n        right.dirty = true;\n      } else if (left.name == right.name) {\n        // two non-shorthands should be merged based on understandability\n        overridable = true;\n\n        if (right.shorthand) {\n          for (k = right.components.length - 1; k >= 0 && overridable; k--) {\n            overriddenComponent = left.components[k];\n            overridingComponent = right.components[k];\n            mayOverride = compactable[overridingComponent.name].canOverride;\n\n            overridable = overridable && everyValuesPair(mayOverride.bind(null, validator), overriddenComponent, overridingComponent);\n          }\n        } else {\n          mayOverride = compactable[right.name].canOverride;\n          overridable = everyValuesPair(mayOverride.bind(null, validator), left, right);\n        }\n\n        if (left.important && !right.important && overridable) {\n          right.unused = true;\n          continue;\n        }\n\n        if (!left.important && right.important && overridable) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!overridable) {\n          continue;\n        }\n\n        left.unused = true;\n      }\n    }\n  }\n}\n\nmodule.exports = overrideProperties;\n"]},"metadata":{},"sourceType":"script"}