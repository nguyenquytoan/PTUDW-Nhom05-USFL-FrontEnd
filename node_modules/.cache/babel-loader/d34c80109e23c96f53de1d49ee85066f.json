{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nconst fse = require('fs-extra');\n\nconst path = require('path');\n\nconst errors = require('./errors');\n\nconst populateSWTemplate = require('./populate-sw-template');\n\nmodule.exports = async ({\n  cacheId,\n  cleanupOutdatedCaches,\n  clientsClaim,\n  directoryIndex,\n  handleFetch,\n  ignoreURLParametersMatching,\n  importScripts,\n  manifestEntries,\n  modulePathPrefix,\n  navigateFallback,\n  navigateFallbackBlacklist,\n  navigateFallbackWhitelist,\n  navigationPreload,\n  offlineGoogleAnalytics,\n  runtimeCaching,\n  skipWaiting,\n  swDest,\n  workboxSWImport\n}) => {\n  try {\n    await fse.mkdirp(path.dirname(swDest));\n  } catch (error) {\n    throw new Error(`${errors['unable-to-make-sw-directory']}. ` + `'${error.message}'`);\n  }\n\n  const populatedTemplate = populateSWTemplate({\n    cacheId,\n    cleanupOutdatedCaches,\n    clientsClaim,\n    directoryIndex,\n    handleFetch,\n    ignoreURLParametersMatching,\n    importScripts,\n    manifestEntries,\n    modulePathPrefix,\n    navigateFallback,\n    navigateFallbackBlacklist,\n    navigateFallbackWhitelist,\n    navigationPreload,\n    offlineGoogleAnalytics,\n    runtimeCaching,\n    skipWaiting,\n    workboxSWImport\n  });\n\n  try {\n    await fse.writeFile(swDest, populatedTemplate);\n  } catch (error) {\n    if (error.code === 'EISDIR') {\n      // See https://github.com/GoogleChrome/workbox/issues/612\n      throw new Error(errors['sw-write-failure-directory']);\n    }\n\n    throw new Error(`${errors['sw-write-failure']}. '${error.message}'`);\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-build/src/lib/write-sw-using-default-template.js"],"names":["fse","require","path","errors","populateSWTemplate","module","exports","cacheId","cleanupOutdatedCaches","clientsClaim","directoryIndex","handleFetch","ignoreURLParametersMatching","importScripts","manifestEntries","modulePathPrefix","navigateFallback","navigateFallbackBlacklist","navigateFallbackWhitelist","navigationPreload","offlineGoogleAnalytics","runtimeCaching","skipWaiting","swDest","workboxSWImport","mkdirp","dirname","error","Error","message","populatedTemplate","writeFile","code"],"mappings":"AAAA;;;;;;;AAQA,MAAMA,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMG,kBAAkB,GAAGH,OAAO,CAAC,wBAAD,CAAlC;;AAEAI,MAAM,CAACC,OAAP,GAAiB,OAAO;AACtBC,EAAAA,OADsB;AAEtBC,EAAAA,qBAFsB;AAGtBC,EAAAA,YAHsB;AAItBC,EAAAA,cAJsB;AAKtBC,EAAAA,WALsB;AAMtBC,EAAAA,2BANsB;AAOtBC,EAAAA,aAPsB;AAQtBC,EAAAA,eARsB;AAStBC,EAAAA,gBATsB;AAUtBC,EAAAA,gBAVsB;AAWtBC,EAAAA,yBAXsB;AAYtBC,EAAAA,yBAZsB;AAatBC,EAAAA,iBAbsB;AActBC,EAAAA,sBAdsB;AAetBC,EAAAA,cAfsB;AAgBtBC,EAAAA,WAhBsB;AAiBtBC,EAAAA,MAjBsB;AAkBtBC,EAAAA;AAlBsB,CAAP,KAmBX;AACJ,MAAI;AACF,UAAMxB,GAAG,CAACyB,MAAJ,CAAWvB,IAAI,CAACwB,OAAL,CAAaH,MAAb,CAAX,CAAN;AACD,GAFD,CAEE,OAAOI,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAW,GAAEzB,MAAM,CAAC,6BAAD,CAAgC,IAAzC,GACb,IAAGwB,KAAK,CAACE,OAAQ,GADd,CAAN;AAED;;AAED,QAAMC,iBAAiB,GAAG1B,kBAAkB,CAAC;AAC3CG,IAAAA,OAD2C;AAE3CC,IAAAA,qBAF2C;AAG3CC,IAAAA,YAH2C;AAI3CC,IAAAA,cAJ2C;AAK3CC,IAAAA,WAL2C;AAM3CC,IAAAA,2BAN2C;AAO3CC,IAAAA,aAP2C;AAQ3CC,IAAAA,eAR2C;AAS3CC,IAAAA,gBAT2C;AAU3CC,IAAAA,gBAV2C;AAW3CC,IAAAA,yBAX2C;AAY3CC,IAAAA,yBAZ2C;AAa3CC,IAAAA,iBAb2C;AAc3CC,IAAAA,sBAd2C;AAe3CC,IAAAA,cAf2C;AAgB3CC,IAAAA,WAhB2C;AAiB3CE,IAAAA;AAjB2C,GAAD,CAA5C;;AAoBA,MAAI;AACF,UAAMxB,GAAG,CAAC+B,SAAJ,CAAcR,MAAd,EAAsBO,iBAAtB,CAAN;AACD,GAFD,CAEE,OAAOH,KAAP,EAAc;AACd,QAAIA,KAAK,CAACK,IAAN,KAAe,QAAnB,EAA6B;AAC3B;AACA,YAAM,IAAIJ,KAAJ,CAAUzB,MAAM,CAAC,4BAAD,CAAhB,CAAN;AACD;;AACD,UAAM,IAAIyB,KAAJ,CAAW,GAAEzB,MAAM,CAAC,kBAAD,CAAqB,MAAKwB,KAAK,CAACE,OAAQ,GAA3D,CAAN;AACD;AACF,CAxDD","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nconst fse = require('fs-extra');\nconst path = require('path');\n\nconst errors = require('./errors');\nconst populateSWTemplate = require('./populate-sw-template');\n\nmodule.exports = async ({\n  cacheId,\n  cleanupOutdatedCaches,\n  clientsClaim,\n  directoryIndex,\n  handleFetch,\n  ignoreURLParametersMatching,\n  importScripts,\n  manifestEntries,\n  modulePathPrefix,\n  navigateFallback,\n  navigateFallbackBlacklist,\n  navigateFallbackWhitelist,\n  navigationPreload,\n  offlineGoogleAnalytics,\n  runtimeCaching,\n  skipWaiting,\n  swDest,\n  workboxSWImport,\n}) => {\n  try {\n    await fse.mkdirp(path.dirname(swDest));\n  } catch (error) {\n    throw new Error(`${errors['unable-to-make-sw-directory']}. ` +\n      `'${error.message}'`);\n  }\n\n  const populatedTemplate = populateSWTemplate({\n    cacheId,\n    cleanupOutdatedCaches,\n    clientsClaim,\n    directoryIndex,\n    handleFetch,\n    ignoreURLParametersMatching,\n    importScripts,\n    manifestEntries,\n    modulePathPrefix,\n    navigateFallback,\n    navigateFallbackBlacklist,\n    navigateFallbackWhitelist,\n    navigationPreload,\n    offlineGoogleAnalytics,\n    runtimeCaching,\n    skipWaiting,\n    workboxSWImport,\n  });\n\n  try {\n    await fse.writeFile(swDest, populatedTemplate);\n  } catch (error) {\n    if (error.code === 'EISDIR') {\n      // See https://github.com/GoogleChrome/workbox/issues/612\n      throw new Error(errors['sw-write-failure-directory']);\n    }\n    throw new Error(`${errors['sw-write-failure']}. '${error.message}'`);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}