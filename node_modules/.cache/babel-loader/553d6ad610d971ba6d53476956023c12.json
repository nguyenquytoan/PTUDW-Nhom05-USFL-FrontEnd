{"ast":null,"code":"\"use strict\";\n/**\n * RegexParser\n * Parses a string input.\n *\n * @name RegexParser\n * @function\n * @param {String} input The string input that should be parsed as regular\n * expression.\n * @return {RegExp} The parsed regular expression.\n */\n\nvar RegexParser = module.exports = function (input) {\n  // Validate input\n  if (typeof input !== \"string\") {\n    throw new Error(\"Invalid input. Input must be a string\");\n  } // Parse input\n\n\n  var m = input.match(/(\\/?)(.+)\\1([a-z]*)/i); // Invalid flags\n\n  if (m[3] && !/^(?!.*?(.).*?\\1)[gmixXsuUAJ]+$/.test(m[3])) {\n    return RegExp(input);\n  } // Create the regular expression\n\n\n  return new RegExp(m[2], m[3]);\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/regex-parser/lib/index.js"],"names":["RegexParser","module","exports","input","Error","m","match","test","RegExp"],"mappings":"AAAA;AAEA;;;;;;;;;;;AAUA,IAAIA,WAAW,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AAEhD;AACA,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,UAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACH,GAL+C,CAOhD;;;AACA,MAAIC,CAAC,GAAGF,KAAK,CAACG,KAAN,CAAY,sBAAZ,CAAR,CARgD,CAUhD;;AACA,MAAID,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAC,iCAAiCE,IAAjC,CAAsCF,CAAC,CAAC,CAAD,CAAvC,CAAb,EAA0D;AACtD,WAAOG,MAAM,CAACL,KAAD,CAAb;AACH,GAb+C,CAehD;;;AACA,SAAO,IAAIK,MAAJ,CAAWH,CAAC,CAAC,CAAD,CAAZ,EAAiBA,CAAC,CAAC,CAAD,CAAlB,CAAP;AACH,CAjBD","sourcesContent":["\"use strict\";\n\n/**\n * RegexParser\n * Parses a string input.\n *\n * @name RegexParser\n * @function\n * @param {String} input The string input that should be parsed as regular\n * expression.\n * @return {RegExp} The parsed regular expression.\n */\nvar RegexParser = module.exports = function (input) {\n\n    // Validate input\n    if (typeof input !== \"string\") {\n        throw new Error(\"Invalid input. Input must be a string\");\n    }\n\n    // Parse input\n    var m = input.match(/(\\/?)(.+)\\1([a-z]*)/i);\n\n    // Invalid flags\n    if (m[3] && !/^(?!.*?(.).*?\\1)[gmixXsuUAJ]+$/.test(m[3])) {\n        return RegExp(input);\n    }\n\n    // Create the regular expression\n    return new RegExp(m[2], m[3]);\n};"]},"metadata":{},"sourceType":"script"}