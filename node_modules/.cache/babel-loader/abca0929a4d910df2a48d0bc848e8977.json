{"ast":null,"code":"var extractImportUrlAndMedia = require('./extract-import-url-and-media');\n\nvar restoreImport = require('./restore-import');\n\nvar rewriteUrl = require('./rewrite-url');\n\nvar Token = require('../tokenizer/token');\n\nvar isImport = require('../utils/is-import');\n\nvar SOURCE_MAP_COMMENT_PATTERN = /^\\/\\*# sourceMappingURL=(\\S+) \\*\\/$/;\n\nfunction rebase(tokens, rebaseAll, validator, rebaseConfig) {\n  return rebaseAll ? rebaseEverything(tokens, validator, rebaseConfig) : rebaseAtRules(tokens, validator, rebaseConfig);\n}\n\nfunction rebaseEverything(tokens, validator, rebaseConfig) {\n  var token;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    switch (token[0]) {\n      case Token.AT_RULE:\n        rebaseAtRule(token, validator, rebaseConfig);\n        break;\n\n      case Token.AT_RULE_BLOCK:\n        rebaseProperties(token[2], validator, rebaseConfig);\n        break;\n\n      case Token.COMMENT:\n        rebaseSourceMapComment(token, rebaseConfig);\n        break;\n\n      case Token.NESTED_BLOCK:\n        rebaseEverything(token[2], validator, rebaseConfig);\n        break;\n\n      case Token.RULE:\n        rebaseProperties(token[2], validator, rebaseConfig);\n        break;\n    }\n  }\n\n  return tokens;\n}\n\nfunction rebaseAtRules(tokens, validator, rebaseConfig) {\n  var token;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    switch (token[0]) {\n      case Token.AT_RULE:\n        rebaseAtRule(token, validator, rebaseConfig);\n        break;\n    }\n  }\n\n  return tokens;\n}\n\nfunction rebaseAtRule(token, validator, rebaseConfig) {\n  if (!isImport(token[1])) {\n    return;\n  }\n\n  var uriAndMediaQuery = extractImportUrlAndMedia(token[1]);\n  var newUrl = rewriteUrl(uriAndMediaQuery[0], rebaseConfig);\n  var mediaQuery = uriAndMediaQuery[1];\n  token[1] = restoreImport(newUrl, mediaQuery);\n}\n\nfunction rebaseSourceMapComment(token, rebaseConfig) {\n  var matches = SOURCE_MAP_COMMENT_PATTERN.exec(token[1]);\n\n  if (matches && matches[1].indexOf('data:') === -1) {\n    token[1] = token[1].replace(matches[1], rewriteUrl(matches[1], rebaseConfig, true));\n  }\n}\n\nfunction rebaseProperties(properties, validator, rebaseConfig) {\n  var property;\n  var value;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = properties.length; i < l; i++) {\n    property = properties[i];\n\n    for (j = 2\n    /* 0 is Token.PROPERTY, 1 is name */\n    , m = property.length; j < m; j++) {\n      value = property[j][1];\n\n      if (validator.isUrl(value)) {\n        property[j][1] = rewriteUrl(value, rebaseConfig);\n      }\n    }\n  }\n}\n\nmodule.exports = rebase;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/reader/rebase.js"],"names":["extractImportUrlAndMedia","require","restoreImport","rewriteUrl","Token","isImport","SOURCE_MAP_COMMENT_PATTERN","rebase","tokens","rebaseAll","validator","rebaseConfig","rebaseEverything","rebaseAtRules","token","i","l","length","AT_RULE","rebaseAtRule","AT_RULE_BLOCK","rebaseProperties","COMMENT","rebaseSourceMapComment","NESTED_BLOCK","RULE","uriAndMediaQuery","newUrl","mediaQuery","matches","exec","indexOf","replace","properties","property","value","j","m","isUrl","module","exports"],"mappings":"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","sourcesContent":["var extractImportUrlAndMedia = require('./extract-import-url-and-media');\nvar restoreImport = require('./restore-import');\nvar rewriteUrl = require('./rewrite-url');\n\nvar Token = require('../tokenizer/token');\nvar isImport = require('../utils/is-import');\n\nvar SOURCE_MAP_COMMENT_PATTERN = /^\\/\\*# sourceMappingURL=(\\S+) \\*\\/$/;\n\nfunction rebase(tokens, rebaseAll, validator, rebaseConfig) {\n  return rebaseAll ?\n    rebaseEverything(tokens, validator, rebaseConfig) :\n    rebaseAtRules(tokens, validator, rebaseConfig);\n}\n\nfunction rebaseEverything(tokens, validator, rebaseConfig) {\n  var token;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    switch (token[0]) {\n      case Token.AT_RULE:\n        rebaseAtRule(token, validator, rebaseConfig);\n        break;\n      case Token.AT_RULE_BLOCK:\n        rebaseProperties(token[2], validator, rebaseConfig);\n        break;\n      case Token.COMMENT:\n        rebaseSourceMapComment(token, rebaseConfig);\n        break;\n      case Token.NESTED_BLOCK:\n        rebaseEverything(token[2], validator, rebaseConfig);\n        break;\n      case Token.RULE:\n        rebaseProperties(token[2], validator, rebaseConfig);\n        break;\n    }\n  }\n\n  return tokens;\n}\n\nfunction rebaseAtRules(tokens, validator, rebaseConfig) {\n  var token;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    switch (token[0]) {\n      case Token.AT_RULE:\n        rebaseAtRule(token, validator, rebaseConfig);\n        break;\n    }\n  }\n\n  return tokens;\n}\n\nfunction rebaseAtRule(token, validator, rebaseConfig) {\n  if (!isImport(token[1])) {\n    return;\n  }\n\n  var uriAndMediaQuery = extractImportUrlAndMedia(token[1]);\n  var newUrl = rewriteUrl(uriAndMediaQuery[0], rebaseConfig);\n  var mediaQuery = uriAndMediaQuery[1];\n\n  token[1] = restoreImport(newUrl, mediaQuery);\n}\n\nfunction rebaseSourceMapComment(token, rebaseConfig) {\n  var matches = SOURCE_MAP_COMMENT_PATTERN.exec(token[1]);\n\n  if (matches && matches[1].indexOf('data:') === -1) {\n    token[1] = token[1].replace(matches[1], rewriteUrl(matches[1], rebaseConfig, true));\n  }\n}\n\nfunction rebaseProperties(properties, validator, rebaseConfig) {\n  var property;\n  var value;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = properties.length; i < l; i++) {\n    property = properties[i];\n\n    for (j = 2 /* 0 is Token.PROPERTY, 1 is name */, m = property.length; j < m; j++) {\n      value = property[j][1];\n\n      if (validator.isUrl(value)) {\n        property[j][1] = rewriteUrl(value, rebaseConfig);\n      }\n    }\n  }\n}\n\nmodule.exports = rebase;\n"]},"metadata":{},"sourceType":"script"}