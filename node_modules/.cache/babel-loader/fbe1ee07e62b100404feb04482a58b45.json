{"ast":null,"code":"'use strict'; // NOTE: This could be potentionally used to generate loop-less multiplications\n\nfunction genCombMulTo(alen, blen) {\n  var len = alen + blen - 1;\n  var src = ['var a = self.words;', 'var b = num.words;', 'var o = out.words;', 'var c = 0;', 'var lo;', 'var mid;', 'var hi;'];\n\n  for (var i = 0; i < alen; i++) {\n    src.push('var a' + i + ' = a[' + i + '] | 0;');\n    src.push('var al' + i + ' = a' + i + ' & 0x1fff;');\n    src.push('var ah' + i + ' = a' + i + ' >>> 13;');\n  }\n\n  for (i = 0; i < blen; i++) {\n    src.push('var b' + i + ' = b[' + i + '] | 0;');\n    src.push('var bl' + i + ' = b' + i + ' & 0x1fff;');\n    src.push('var bh' + i + ' = b' + i + ' >>> 13;');\n  }\n\n  src.push('');\n  src.push('out.negative = self.negative ^ num.negative;');\n  src.push('out.length = ' + len + ';');\n\n  for (var k = 0; k < len; k++) {\n    var minJ = Math.max(0, k - alen + 1);\n    var maxJ = Math.min(k, blen - 1);\n    src.push('\\/* k = ' + k + ' *\\/');\n    src.push('var w' + k + ' = c;');\n    src.push('c = 0;');\n\n    for (var j = minJ; j <= maxJ; j++) {\n      i = k - j;\n      src.push('lo = Math.imul(al' + i + ', bl' + j + ');');\n      src.push('mid = Math.imul(al' + i + ', bh' + j + ');');\n      src.push('mid = (mid + Math.imul(ah' + i + ', bl' + j + ')) | 0;');\n      src.push('hi = Math.imul(ah' + i + ', bh' + j + ');');\n      src.push('w' + k + ' = (w' + k + ' + lo) | 0;');\n      src.push('w' + k + ' = (w' + k + ' + ((mid & 0x1fff) << 13)) | 0;');\n      src.push('c = (c + hi) | 0;');\n      src.push('c = (c + (mid >>> 13)) | 0;');\n      src.push('c = (c + (w' + k + ' >>> 26)) | 0;');\n      src.push('w' + k + ' &= 0x3ffffff;');\n    }\n  } // Store in separate step for better memory access\n\n\n  for (k = 0; k < len; k++) {\n    src.push('o[' + k + '] = w' + k + ';');\n  }\n\n  src.push('if (c !== 0) {', '  o[' + k + '] = c;', '  out.length++;', '}', 'return out;');\n  return src.join('\\n');\n}\n\nconsole.log(genCombMulTo(10, 10));","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/public-encrypt/node_modules/bn.js/util/genCombMulTo.js"],"names":["genCombMulTo","alen","blen","len","src","i","push","k","minJ","Math","max","maxJ","min","j","join","console","log"],"mappings":"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","sourcesContent":["'use strict';\n\n// NOTE: This could be potentionally used to generate loop-less multiplications\nfunction genCombMulTo (alen, blen) {\n  var len = alen + blen - 1;\n  var src = [\n    'var a = self.words;',\n    'var b = num.words;',\n    'var o = out.words;',\n    'var c = 0;',\n    'var lo;',\n    'var mid;',\n    'var hi;'\n  ];\n  for (var i = 0; i < alen; i++) {\n    src.push('var a' + i + ' = a[' + i + '] | 0;');\n    src.push('var al' + i + ' = a' + i + ' & 0x1fff;');\n    src.push('var ah' + i + ' = a' + i + ' >>> 13;');\n  }\n  for (i = 0; i < blen; i++) {\n    src.push('var b' + i + ' = b[' + i + '] | 0;');\n    src.push('var bl' + i + ' = b' + i + ' & 0x1fff;');\n    src.push('var bh' + i + ' = b' + i + ' >>> 13;');\n  }\n  src.push('');\n  src.push('out.negative = self.negative ^ num.negative;');\n  src.push('out.length = ' + len + ';');\n\n  for (var k = 0; k < len; k++) {\n    var minJ = Math.max(0, k - alen + 1);\n    var maxJ = Math.min(k, blen - 1);\n\n    src.push('\\/* k = ' + k + ' *\\/');\n    src.push('var w' + k + ' = c;');\n    src.push('c = 0;');\n    for (var j = minJ; j <= maxJ; j++) {\n      i = k - j;\n\n      src.push('lo = Math.imul(al' + i + ', bl' + j + ');');\n      src.push('mid = Math.imul(al' + i + ', bh' + j + ');');\n      src.push('mid = (mid + Math.imul(ah' + i + ', bl' + j + ')) | 0;');\n      src.push('hi = Math.imul(ah' + i + ', bh' + j + ');');\n\n      src.push('w' + k + ' = (w' + k + ' + lo) | 0;');\n      src.push('w' + k + ' = (w' + k + ' + ((mid & 0x1fff) << 13)) | 0;');\n      src.push('c = (c + hi) | 0;');\n      src.push('c = (c + (mid >>> 13)) | 0;');\n      src.push('c = (c + (w' + k + ' >>> 26)) | 0;');\n      src.push('w' + k + ' &= 0x3ffffff;');\n    }\n  }\n  // Store in separate step for better memory access\n  for (k = 0; k < len; k++) {\n    src.push('o[' + k + '] = w' + k + ';');\n  }\n  src.push('if (c !== 0) {',\n           '  o[' + k + '] = c;',\n           '  out.length++;',\n           '}',\n           'return out;');\n\n  return src.join('\\n');\n}\n\nconsole.log(genCombMulTo(10, 10));\n"]},"metadata":{},"sourceType":"script"}