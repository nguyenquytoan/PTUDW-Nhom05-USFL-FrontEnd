{"ast":null,"code":"import { config } from './config';\nconst queue = [];\n\nfunction scheduleFlush() {\n  setTimeout(() => {\n    for (let i = 0; i < queue.length; i++) {\n      let entry = queue[i];\n      let payload = entry.payload;\n      payload.guid = payload.key + payload.id;\n      payload.childGuid = payload.key + payload.childId;\n\n      if (payload.error) {\n        payload.stack = payload.error.stack;\n      }\n\n      config['trigger'](entry.name, entry.payload);\n    }\n\n    queue.length = 0;\n  }, 50);\n}\n\nexport default function instrument(eventName, promise, child) {\n  if (1 === queue.push({\n    name: eventName,\n    payload: {\n      key: promise._guidKey,\n      id: promise._id,\n      eventName: eventName,\n      detail: promise._result,\n      childId: child && child._id,\n      label: promise._label,\n      timeStamp: Date.now(),\n      error: config[\"instrument-with-stack\"] ? new Error(promise._label) : null\n    }\n  })) {\n    scheduleFlush();\n  }\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/rsvp/lib/rsvp/instrument.js"],"names":["config","queue","scheduleFlush","setTimeout","i","length","entry","payload","guid","key","id","childGuid","childId","error","stack","name","instrument","eventName","promise","child","push","_guidKey","_id","detail","_result","label","_label","timeStamp","Date","now","Error"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AAEA,MAAMC,KAAK,GAAG,EAAd;;AAEA,SAASC,aAAT,GAAyB;AACvBC,EAAAA,UAAU,CAAC,MAAM;AACf,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIE,KAAK,GAAGL,KAAK,CAACG,CAAD,CAAjB;AAEA,UAAIG,OAAO,GAAGD,KAAK,CAACC,OAApB;AAEAA,MAAAA,OAAO,CAACC,IAAR,GAAeD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACG,EAArC;AACAH,MAAAA,OAAO,CAACI,SAAR,GAAoBJ,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACK,OAA1C;;AACA,UAAIL,OAAO,CAACM,KAAZ,EAAmB;AACjBN,QAAAA,OAAO,CAACO,KAAR,GAAgBP,OAAO,CAACM,KAAR,CAAcC,KAA9B;AACD;;AAEDd,MAAAA,MAAM,CAAC,SAAD,CAAN,CAAkBM,KAAK,CAACS,IAAxB,EAA8BT,KAAK,CAACC,OAApC;AACD;;AACDN,IAAAA,KAAK,CAACI,MAAN,GAAe,CAAf;AACD,GAfS,EAeP,EAfO,CAAV;AAgBD;;AAED,eAAe,SAASW,UAAT,CAAoBC,SAApB,EAA+BC,OAA/B,EAAwCC,KAAxC,EAA+C;AAC5D,MAAI,MAAMlB,KAAK,CAACmB,IAAN,CAAW;AACnBL,IAAAA,IAAI,EAAEE,SADa;AAEnBV,IAAAA,OAAO,EAAE;AACPE,MAAAA,GAAG,EAAES,OAAO,CAACG,QADN;AAEPX,MAAAA,EAAE,EAAGQ,OAAO,CAACI,GAFN;AAGPL,MAAAA,SAAS,EAAEA,SAHJ;AAIPM,MAAAA,MAAM,EAAEL,OAAO,CAACM,OAJT;AAKPZ,MAAAA,OAAO,EAAEO,KAAK,IAAIA,KAAK,CAACG,GALjB;AAMPG,MAAAA,KAAK,EAAEP,OAAO,CAACQ,MANR;AAOPC,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAPJ;AAQPhB,MAAAA,KAAK,EAAEb,MAAM,CAAC,uBAAD,CAAN,GAAkC,IAAI8B,KAAJ,CAAUZ,OAAO,CAACQ,MAAlB,CAAlC,GAA8D;AAR9D;AAFU,GAAX,CAAV,EAWO;AACHxB,IAAAA,aAAa;AACd;AACF","sourcesContent":["import { config } from './config';\n\nconst queue = [];\n\nfunction scheduleFlush() {\n  setTimeout(() => {\n    for (let i = 0; i < queue.length; i++) {\n      let entry = queue[i];\n\n      let payload = entry.payload;\n\n      payload.guid = payload.key + payload.id;\n      payload.childGuid = payload.key + payload.childId;\n      if (payload.error) {\n        payload.stack = payload.error.stack;\n      }\n\n      config['trigger'](entry.name, entry.payload);\n    }\n    queue.length = 0;\n  }, 50);\n}\n\nexport default function instrument(eventName, promise, child) {\n  if (1 === queue.push({\n    name: eventName,\n    payload: {\n      key: promise._guidKey,\n      id:  promise._id,\n      eventName: eventName,\n      detail: promise._result,\n      childId: child && child._id,\n      label: promise._label,\n      timeStamp: Date.now(),\n      error: config[\"instrument-with-stack\"] ? new Error(promise._label) : null\n    }})) {\n      scheduleFlush();\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}