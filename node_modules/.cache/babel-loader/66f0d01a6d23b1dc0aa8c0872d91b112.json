{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst Module = require('module');\n\nconst resolveFrom = (fromDir, moduleId, silent) => {\n  if (typeof fromDir !== 'string') {\n    throw new TypeError(`Expected \\`fromDir\\` to be of type \\`string\\`, got \\`${typeof fromDir}\\``);\n  }\n\n  if (typeof moduleId !== 'string') {\n    throw new TypeError(`Expected \\`moduleId\\` to be of type \\`string\\`, got \\`${typeof moduleId}\\``);\n  }\n\n  fromDir = path.resolve(fromDir);\n  const fromFile = path.join(fromDir, 'noop.js');\n\n  const resolveFileName = () => Module._resolveFilename(moduleId, {\n    id: fromFile,\n    filename: fromFile,\n    paths: Module._nodeModulePaths(fromDir)\n  });\n\n  if (silent) {\n    try {\n      return resolveFileName();\n    } catch (err) {\n      return null;\n    }\n  }\n\n  return resolveFileName();\n};\n\nmodule.exports = (fromDir, moduleId) => resolveFrom(fromDir, moduleId);\n\nmodule.exports.silent = (fromDir, moduleId) => resolveFrom(fromDir, moduleId, true);","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/resolve-from/index.js"],"names":["path","require","Module","resolveFrom","fromDir","moduleId","silent","TypeError","resolve","fromFile","join","resolveFileName","_resolveFilename","id","filename","paths","_nodeModulePaths","err","module","exports"],"mappings":"AAAA;;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAME,WAAW,GAAG,CAACC,OAAD,EAAUC,QAAV,EAAoBC,MAApB,KAA+B;AAClD,MAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;AAChC,UAAM,IAAIG,SAAJ,CAAe,wDAAuD,OAAOH,OAAQ,IAArF,CAAN;AACA;;AAED,MAAI,OAAOC,QAAP,KAAoB,QAAxB,EAAkC;AACjC,UAAM,IAAIE,SAAJ,CAAe,yDAAwD,OAAOF,QAAS,IAAvF,CAAN;AACA;;AAEDD,EAAAA,OAAO,GAAGJ,IAAI,CAACQ,OAAL,CAAaJ,OAAb,CAAV;AACA,QAAMK,QAAQ,GAAGT,IAAI,CAACU,IAAL,CAAUN,OAAV,EAAmB,SAAnB,CAAjB;;AAEA,QAAMO,eAAe,GAAG,MAAMT,MAAM,CAACU,gBAAP,CAAwBP,QAAxB,EAAkC;AAC/DQ,IAAAA,EAAE,EAAEJ,QAD2D;AAE/DK,IAAAA,QAAQ,EAAEL,QAFqD;AAG/DM,IAAAA,KAAK,EAAEb,MAAM,CAACc,gBAAP,CAAwBZ,OAAxB;AAHwD,GAAlC,CAA9B;;AAMA,MAAIE,MAAJ,EAAY;AACX,QAAI;AACH,aAAOK,eAAe,EAAtB;AACA,KAFD,CAEE,OAAOM,GAAP,EAAY;AACb,aAAO,IAAP;AACA;AACD;;AAED,SAAON,eAAe,EAAtB;AACA,CA3BD;;AA6BAO,MAAM,CAACC,OAAP,GAAiB,CAACf,OAAD,EAAUC,QAAV,KAAuBF,WAAW,CAACC,OAAD,EAAUC,QAAV,CAAnD;;AACAa,MAAM,CAACC,OAAP,CAAeb,MAAf,GAAwB,CAACF,OAAD,EAAUC,QAAV,KAAuBF,WAAW,CAACC,OAAD,EAAUC,QAAV,EAAoB,IAApB,CAA1D","sourcesContent":["'use strict';\nconst path = require('path');\nconst Module = require('module');\n\nconst resolveFrom = (fromDir, moduleId, silent) => {\n\tif (typeof fromDir !== 'string') {\n\t\tthrow new TypeError(`Expected \\`fromDir\\` to be of type \\`string\\`, got \\`${typeof fromDir}\\``);\n\t}\n\n\tif (typeof moduleId !== 'string') {\n\t\tthrow new TypeError(`Expected \\`moduleId\\` to be of type \\`string\\`, got \\`${typeof moduleId}\\``);\n\t}\n\n\tfromDir = path.resolve(fromDir);\n\tconst fromFile = path.join(fromDir, 'noop.js');\n\n\tconst resolveFileName = () => Module._resolveFilename(moduleId, {\n\t\tid: fromFile,\n\t\tfilename: fromFile,\n\t\tpaths: Module._nodeModulePaths(fromDir)\n\t});\n\n\tif (silent) {\n\t\ttry {\n\t\t\treturn resolveFileName();\n\t\t} catch (err) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn resolveFileName();\n};\n\nmodule.exports = (fromDir, moduleId) => resolveFrom(fromDir, moduleId);\nmodule.exports.silent = (fromDir, moduleId) => resolveFrom(fromDir, moduleId, true);\n"]},"metadata":{},"sourceType":"script"}