{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar microevent_ts_1 = require(\"microevent.ts\");\n\nvar MSG_RESOLVE_TRANSACTION = \"resolve_transaction\",\n    MSG_REJECT_TRANSACTION = \"reject_transaction\",\n    MSG_ERROR = \"error\";\n\nvar RpcProvider =\n/** @class */\nfunction () {\n  function RpcProvider(_dispatch, _rpcTimeout) {\n    if (_rpcTimeout === void 0) {\n      _rpcTimeout = 0;\n    }\n\n    this._dispatch = _dispatch;\n    this._rpcTimeout = _rpcTimeout;\n    this.error = new microevent_ts_1.Event();\n    this._rpcHandlers = {};\n    this._signalHandlers = {};\n    this._pendingTransactions = {};\n    this._nextTransactionId = 0;\n  }\n\n  RpcProvider.prototype.dispatch = function (payload) {\n    var message = payload;\n\n    switch (message.type) {\n      case RpcProvider.MessageType.signal:\n        return this._handleSignal(message);\n\n      case RpcProvider.MessageType.rpc:\n        return this._handeRpc(message);\n\n      case RpcProvider.MessageType.internal:\n        return this._handleInternal(message);\n\n      default:\n        this._raiseError(\"invalid message type \" + message.type);\n\n    }\n  };\n\n  RpcProvider.prototype.rpc = function (id, payload, transfer) {\n    var _this = this;\n\n    var transactionId = this._nextTransactionId++;\n\n    this._dispatch({\n      type: RpcProvider.MessageType.rpc,\n      transactionId: transactionId,\n      id: id,\n      payload: payload\n    }, transfer ? transfer : undefined);\n\n    return new Promise(function (resolve, reject) {\n      var transaction = _this._pendingTransactions[transactionId] = {\n        id: transactionId,\n        resolve: resolve,\n        reject: reject\n      };\n\n      if (_this._rpcTimeout > 0) {\n        _this._pendingTransactions[transactionId].timeoutHandle = setTimeout(function () {\n          return _this._transactionTimeout(transaction);\n        }, _this._rpcTimeout);\n      }\n    });\n  };\n\n  ;\n\n  RpcProvider.prototype.signal = function (id, payload, transfer) {\n    this._dispatch({\n      type: RpcProvider.MessageType.signal,\n      id: id,\n      payload: payload\n    }, transfer ? transfer : undefined);\n\n    return this;\n  };\n\n  RpcProvider.prototype.registerRpcHandler = function (id, handler) {\n    if (this._rpcHandlers[id]) {\n      throw new Error(\"rpc handler for \" + id + \" already registered\");\n    }\n\n    this._rpcHandlers[id] = handler;\n    return this;\n  };\n\n  ;\n\n  RpcProvider.prototype.registerSignalHandler = function (id, handler) {\n    if (!this._signalHandlers[id]) {\n      this._signalHandlers[id] = [];\n    }\n\n    this._signalHandlers[id].push(handler);\n\n    return this;\n  };\n\n  RpcProvider.prototype.deregisterRpcHandler = function (id, handler) {\n    if (this._rpcHandlers[id]) {\n      delete this._rpcHandlers[id];\n    }\n\n    return this;\n  };\n\n  ;\n\n  RpcProvider.prototype.deregisterSignalHandler = function (id, handler) {\n    if (this._signalHandlers[id]) {\n      this._signalHandlers[id] = this._signalHandlers[id].filter(function (h) {\n        return handler !== h;\n      });\n    }\n\n    return this;\n  };\n\n  RpcProvider.prototype._raiseError = function (error) {\n    this.error.dispatch(new Error(error));\n\n    this._dispatch({\n      type: RpcProvider.MessageType.internal,\n      id: MSG_ERROR,\n      payload: error\n    });\n  };\n\n  RpcProvider.prototype._handleSignal = function (message) {\n    if (!this._signalHandlers[message.id]) {\n      return this._raiseError(\"invalid signal \" + message.id);\n    }\n\n    this._signalHandlers[message.id].forEach(function (handler) {\n      return handler(message.payload);\n    });\n  };\n\n  RpcProvider.prototype._handeRpc = function (message) {\n    var _this = this;\n\n    if (!this._rpcHandlers[message.id]) {\n      return this._raiseError(\"invalid rpc \" + message.id);\n    }\n\n    Promise.resolve(this._rpcHandlers[message.id](message.payload)).then(function (result) {\n      return _this._dispatch({\n        type: RpcProvider.MessageType.internal,\n        id: MSG_RESOLVE_TRANSACTION,\n        transactionId: message.transactionId,\n        payload: result\n      });\n    }, function (reason) {\n      return _this._dispatch({\n        type: RpcProvider.MessageType.internal,\n        id: MSG_REJECT_TRANSACTION,\n        transactionId: message.transactionId,\n        payload: reason\n      });\n    });\n  };\n\n  RpcProvider.prototype._handleInternal = function (message) {\n    switch (message.id) {\n      case MSG_RESOLVE_TRANSACTION:\n        if (!this._pendingTransactions[message.transactionId]) {\n          return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n        }\n\n        this._pendingTransactions[message.transactionId].resolve(message.payload);\n\n        this._clearTransaction(this._pendingTransactions[message.transactionId]);\n\n        break;\n\n      case MSG_REJECT_TRANSACTION:\n        if (!this._pendingTransactions[message.transactionId]) {\n          return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n        }\n\n        this._pendingTransactions[message.transactionId].reject(message.payload);\n\n        this._clearTransaction(this._pendingTransactions[message.transactionId]);\n\n        break;\n\n      case MSG_ERROR:\n        this.error.dispatch(new Error(\"remote error: \" + message.payload));\n        break;\n\n      default:\n        this._raiseError(\"unhandled internal message \" + message.id);\n\n        break;\n    }\n  };\n\n  RpcProvider.prototype._transactionTimeout = function (transaction) {\n    transaction.reject('transaction timed out');\n\n    this._raiseError(\"transaction \" + transaction.id + \" timed out\");\n\n    delete this._pendingTransactions[transaction.id];\n    return;\n  };\n\n  RpcProvider.prototype._clearTransaction = function (transaction) {\n    if (typeof transaction.timeoutHandle !== 'undefined') {\n      clearTimeout(transaction.timeoutHandle);\n    }\n\n    delete this._pendingTransactions[transaction.id];\n  };\n\n  return RpcProvider;\n}();\n\n(function (RpcProvider) {\n  var MessageType;\n\n  (function (MessageType) {\n    MessageType[MessageType[\"signal\"] = 0] = \"signal\";\n    MessageType[MessageType[\"rpc\"] = 1] = \"rpc\";\n    MessageType[MessageType[\"internal\"] = 2] = \"internal\";\n  })(MessageType = RpcProvider.MessageType || (RpcProvider.MessageType = {}));\n\n  ;\n})(RpcProvider || (RpcProvider = {}));\n\nexports.default = RpcProvider;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/worker-rpc/lib/RpcProvider.js"],"names":["Object","defineProperty","exports","value","microevent_ts_1","require","MSG_RESOLVE_TRANSACTION","MSG_REJECT_TRANSACTION","MSG_ERROR","RpcProvider","_dispatch","_rpcTimeout","error","Event","_rpcHandlers","_signalHandlers","_pendingTransactions","_nextTransactionId","prototype","dispatch","payload","message","type","MessageType","signal","_handleSignal","rpc","_handeRpc","internal","_handleInternal","_raiseError","id","transfer","_this","transactionId","undefined","Promise","resolve","reject","transaction","timeoutHandle","setTimeout","_transactionTimeout","registerRpcHandler","handler","Error","registerSignalHandler","push","deregisterRpcHandler","deregisterSignalHandler","filter","h","forEach","then","result","reason","_clearTransaction","clearTimeout","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar microevent_ts_1 = require(\"microevent.ts\");\nvar MSG_RESOLVE_TRANSACTION = \"resolve_transaction\", MSG_REJECT_TRANSACTION = \"reject_transaction\", MSG_ERROR = \"error\";\nvar RpcProvider = /** @class */ (function () {\n    function RpcProvider(_dispatch, _rpcTimeout) {\n        if (_rpcTimeout === void 0) { _rpcTimeout = 0; }\n        this._dispatch = _dispatch;\n        this._rpcTimeout = _rpcTimeout;\n        this.error = new microevent_ts_1.Event();\n        this._rpcHandlers = {};\n        this._signalHandlers = {};\n        this._pendingTransactions = {};\n        this._nextTransactionId = 0;\n    }\n    RpcProvider.prototype.dispatch = function (payload) {\n        var message = payload;\n        switch (message.type) {\n            case RpcProvider.MessageType.signal:\n                return this._handleSignal(message);\n            case RpcProvider.MessageType.rpc:\n                return this._handeRpc(message);\n            case RpcProvider.MessageType.internal:\n                return this._handleInternal(message);\n            default:\n                this._raiseError(\"invalid message type \" + message.type);\n        }\n    };\n    RpcProvider.prototype.rpc = function (id, payload, transfer) {\n        var _this = this;\n        var transactionId = this._nextTransactionId++;\n        this._dispatch({\n            type: RpcProvider.MessageType.rpc,\n            transactionId: transactionId,\n            id: id,\n            payload: payload\n        }, transfer ? transfer : undefined);\n        return new Promise(function (resolve, reject) {\n            var transaction = _this._pendingTransactions[transactionId] = {\n                id: transactionId,\n                resolve: resolve,\n                reject: reject\n            };\n            if (_this._rpcTimeout > 0) {\n                _this._pendingTransactions[transactionId].timeoutHandle =\n                    setTimeout(function () { return _this._transactionTimeout(transaction); }, _this._rpcTimeout);\n            }\n        });\n    };\n    ;\n    RpcProvider.prototype.signal = function (id, payload, transfer) {\n        this._dispatch({\n            type: RpcProvider.MessageType.signal,\n            id: id,\n            payload: payload,\n        }, transfer ? transfer : undefined);\n        return this;\n    };\n    RpcProvider.prototype.registerRpcHandler = function (id, handler) {\n        if (this._rpcHandlers[id]) {\n            throw new Error(\"rpc handler for \" + id + \" already registered\");\n        }\n        this._rpcHandlers[id] = handler;\n        return this;\n    };\n    ;\n    RpcProvider.prototype.registerSignalHandler = function (id, handler) {\n        if (!this._signalHandlers[id]) {\n            this._signalHandlers[id] = [];\n        }\n        this._signalHandlers[id].push(handler);\n        return this;\n    };\n    RpcProvider.prototype.deregisterRpcHandler = function (id, handler) {\n        if (this._rpcHandlers[id]) {\n            delete this._rpcHandlers[id];\n        }\n        return this;\n    };\n    ;\n    RpcProvider.prototype.deregisterSignalHandler = function (id, handler) {\n        if (this._signalHandlers[id]) {\n            this._signalHandlers[id] = this._signalHandlers[id].filter(function (h) { return handler !== h; });\n        }\n        return this;\n    };\n    RpcProvider.prototype._raiseError = function (error) {\n        this.error.dispatch(new Error(error));\n        this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_ERROR,\n            payload: error\n        });\n    };\n    RpcProvider.prototype._handleSignal = function (message) {\n        if (!this._signalHandlers[message.id]) {\n            return this._raiseError(\"invalid signal \" + message.id);\n        }\n        this._signalHandlers[message.id].forEach(function (handler) { return handler(message.payload); });\n    };\n    RpcProvider.prototype._handeRpc = function (message) {\n        var _this = this;\n        if (!this._rpcHandlers[message.id]) {\n            return this._raiseError(\"invalid rpc \" + message.id);\n        }\n        Promise.resolve(this._rpcHandlers[message.id](message.payload))\n            .then(function (result) { return _this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_RESOLVE_TRANSACTION,\n            transactionId: message.transactionId,\n            payload: result\n        }); }, function (reason) { return _this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_REJECT_TRANSACTION,\n            transactionId: message.transactionId,\n            payload: reason\n        }); });\n    };\n    RpcProvider.prototype._handleInternal = function (message) {\n        switch (message.id) {\n            case MSG_RESOLVE_TRANSACTION:\n                if (!this._pendingTransactions[message.transactionId]) {\n                    return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n                }\n                this._pendingTransactions[message.transactionId].resolve(message.payload);\n                this._clearTransaction(this._pendingTransactions[message.transactionId]);\n                break;\n            case MSG_REJECT_TRANSACTION:\n                if (!this._pendingTransactions[message.transactionId]) {\n                    return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n                }\n                this._pendingTransactions[message.transactionId].reject(message.payload);\n                this._clearTransaction(this._pendingTransactions[message.transactionId]);\n                break;\n            case MSG_ERROR:\n                this.error.dispatch(new Error(\"remote error: \" + message.payload));\n                break;\n            default:\n                this._raiseError(\"unhandled internal message \" + message.id);\n                break;\n        }\n    };\n    RpcProvider.prototype._transactionTimeout = function (transaction) {\n        transaction.reject('transaction timed out');\n        this._raiseError(\"transaction \" + transaction.id + \" timed out\");\n        delete this._pendingTransactions[transaction.id];\n        return;\n    };\n    RpcProvider.prototype._clearTransaction = function (transaction) {\n        if (typeof (transaction.timeoutHandle) !== 'undefined') {\n            clearTimeout(transaction.timeoutHandle);\n        }\n        delete this._pendingTransactions[transaction.id];\n    };\n    return RpcProvider;\n}());\n(function (RpcProvider) {\n    var MessageType;\n    (function (MessageType) {\n        MessageType[MessageType[\"signal\"] = 0] = \"signal\";\n        MessageType[MessageType[\"rpc\"] = 1] = \"rpc\";\n        MessageType[MessageType[\"internal\"] = 2] = \"internal\";\n    })(MessageType = RpcProvider.MessageType || (RpcProvider.MessageType = {}));\n    ;\n})(RpcProvider || (RpcProvider = {}));\nexports.default = RpcProvider;\n"]},"metadata":{},"sourceType":"script"}