{"ast":null,"code":"\"use strict\";\n\nvar assert = require(\"chai\").assert,\n    isPromise = require(\"../../promise/is\");\n\ndescribe(\"promise/is\", function () {\n  if (typeof Promise === \"function\") {\n    it(\"Should return true on promise\", function () {\n      assert.equal(isPromise(Promise.resolve()), true);\n    });\n  }\n\n  it(\"Should return false on non-promise thenable\", function () {\n    assert.equal(isPromise({\n      then: function () {\n        return true;\n      }\n    }), false);\n  });\n  it(\"Should return false on plain object\", function () {\n    assert.equal(isPromise({}), false);\n  });\n  it(\"Should return false on function\", function () {\n    assert.equal(isPromise(function () {\n      return true;\n    }), false);\n  });\n  it(\"Should return false on array\", function () {\n    assert.equal(isPromise([]), false);\n  });\n\n  if (typeof Object.create === \"function\") {\n    it(\"Should return false on object with no prototype\", function () {\n      assert.equal(isPromise(Object.create(null)), false);\n    });\n  }\n\n  it(\"Should return false on string\", function () {\n    assert.equal(isPromise(\"foo\"), false);\n  });\n  it(\"Should return false on empty string\", function () {\n    assert.equal(isPromise(\"\"), false);\n  });\n  it(\"Should return false on number\", function () {\n    assert.equal(isPromise(123), false);\n  });\n  it(\"Should return false on NaN\", function () {\n    assert.equal(isPromise(NaN), false);\n  });\n  it(\"Should return false on boolean\", function () {\n    assert.equal(isPromise(true), false);\n  });\n\n  if (typeof Symbol === \"function\") {\n    it(\"Should return false on symbol\", function () {\n      assert.equal(isPromise(Symbol(\"foo\")), false);\n    });\n  }\n\n  it(\"Should return false on null\", function () {\n    assert.equal(isPromise(null), false);\n  });\n  it(\"Should return false on undefined\", function () {\n    assert.equal(isPromise(void 0), false);\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/type/test/promise/is.js"],"names":["assert","require","isPromise","describe","Promise","it","equal","resolve","then","Object","create","NaN","Symbol"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar assert    = require(\"chai\").assert\n  , isPromise = require(\"../../promise/is\");\n\ndescribe(\"promise/is\", function () {\n\tif (typeof Promise === \"function\") {\n\t\tit(\"Should return true on promise\", function () {\n\t\t\tassert.equal(isPromise(Promise.resolve()), true);\n\t\t});\n\t}\n\tit(\"Should return false on non-promise thenable\", function () {\n\t\tassert.equal(isPromise({ then: function () { return true; } }), false);\n\t});\n\n\tit(\"Should return false on plain object\", function () { assert.equal(isPromise({}), false); });\n\tit(\"Should return false on function\", function () {\n\t\tassert.equal(isPromise(function () { return true; }), false);\n\t});\n\tit(\"Should return false on array\", function () { assert.equal(isPromise([]), false); });\n\tif (typeof Object.create === \"function\") {\n\t\tit(\"Should return false on object with no prototype\", function () {\n\t\t\tassert.equal(isPromise(Object.create(null)), false);\n\t\t});\n\t}\n\tit(\"Should return false on string\", function () { assert.equal(isPromise(\"foo\"), false); });\n\tit(\"Should return false on empty string\", function () { assert.equal(isPromise(\"\"), false); });\n\tit(\"Should return false on number\", function () { assert.equal(isPromise(123), false); });\n\tit(\"Should return false on NaN\", function () { assert.equal(isPromise(NaN), false); });\n\tit(\"Should return false on boolean\", function () { assert.equal(isPromise(true), false); });\n\tif (typeof Symbol === \"function\") {\n\t\tit(\"Should return false on symbol\", function () {\n\t\t\tassert.equal(isPromise(Symbol(\"foo\")), false);\n\t\t});\n\t}\n\n\tit(\"Should return false on null\", function () { assert.equal(isPromise(null), false); });\n\tit(\"Should return false on undefined\", function () { assert.equal(isPromise(void 0), false); });\n});\n"]},"metadata":{},"sourceType":"script"}