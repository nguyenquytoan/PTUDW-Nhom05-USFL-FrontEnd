{"ast":null,"code":"// Generated by CoffeeScript 1.9.3\nvar htmlparser, object, objectToDom, self;\nhtmlparser = require('htmlparser2');\nobject = require('utila').object;\nobjectToDom = require('dom-converter').objectToDom;\nmodule.exports = self = {\n  repeatString: function (str, times) {\n    var i, j, output, ref;\n    output = '';\n\n    for (i = j = 0, ref = times; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      output += str;\n    }\n\n    return output;\n  },\n  toDom: function (subject) {\n    if (typeof subject === 'string') {\n      return self.stringToDom(subject);\n    } else if (object.isBareObject(subject)) {\n      return self._objectToDom(subject);\n    } else {\n      throw Error(\"tools.toDom() only supports strings and objects\");\n    }\n  },\n  stringToDom: function (string) {\n    var handler, parser;\n    handler = new htmlparser.DomHandler();\n    parser = new htmlparser.Parser(handler);\n    parser.write(string);\n    parser.end();\n    return handler.dom;\n  },\n  _fixQuotesInDom: function (input) {\n    var j, len, node;\n\n    if (Array.isArray(input)) {\n      for (j = 0, len = input.length; j < len; j++) {\n        node = input[j];\n\n        self._fixQuotesInDom(node);\n      }\n\n      return input;\n    }\n\n    node = input;\n\n    if (node.type === 'text') {\n      return node.data = self._quoteNodeText(node.data);\n    } else {\n      return self._fixQuotesInDom(node.children);\n    }\n  },\n  objectToDom: function (o) {\n    if (!Array.isArray(o)) {\n      if (!object.isBareObject(o)) {\n        throw Error(\"objectToDom() only accepts a bare object or an array\");\n      }\n    }\n\n    return self._fixQuotesInDom(objectToDom(o));\n  },\n  quote: function (str) {\n    return String(str).replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\\"/g, '&quot;').replace(/\\ /g, '&sp;').replace(/\\n/g, '<br />');\n  },\n  _quoteNodeText: function (text) {\n    return String(text).replace(/\\&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\\"/g, '&quot;').replace(/\\ /g, '&sp;').replace(/\\n/g, \"&nl;\");\n  },\n  getCols: function () {\n    var cols, tty;\n    tty = require('tty');\n\n    cols = function () {\n      try {\n        if (tty.isatty(1) && tty.isatty(2)) {\n          if (process.stdout.getWindowSize) {\n            return process.stdout.getWindowSize(1)[0];\n          } else if (tty.getWindowSize) {\n            return tty.getWindowSize()[1];\n          } else if (process.stdout.columns) {\n            return process.stdout.columns;\n          }\n        }\n      } catch (_error) {}\n    }();\n\n    if (typeof cols === 'number' && cols > 30) {\n      return cols;\n    } else {\n      return 80;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/renderkid/lib/tools.js"],"names":["htmlparser","object","objectToDom","self","require","module","exports","repeatString","str","times","i","j","output","ref","toDom","subject","stringToDom","isBareObject","_objectToDom","Error","string","handler","parser","DomHandler","Parser","write","end","dom","_fixQuotesInDom","input","len","node","Array","isArray","length","type","data","_quoteNodeText","children","o","quote","String","replace","text","getCols","cols","tty","isatty","process","stdout","getWindowSize","columns","_error"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.9.3\nvar htmlparser, object, objectToDom, self;\n\nhtmlparser = require('htmlparser2');\n\nobject = require('utila').object;\n\nobjectToDom = require('dom-converter').objectToDom;\n\nmodule.exports = self = {\n  repeatString: function(str, times) {\n    var i, j, output, ref;\n    output = '';\n    for (i = j = 0, ref = times; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      output += str;\n    }\n    return output;\n  },\n  toDom: function(subject) {\n    if (typeof subject === 'string') {\n      return self.stringToDom(subject);\n    } else if (object.isBareObject(subject)) {\n      return self._objectToDom(subject);\n    } else {\n      throw Error(\"tools.toDom() only supports strings and objects\");\n    }\n  },\n  stringToDom: function(string) {\n    var handler, parser;\n    handler = new htmlparser.DomHandler;\n    parser = new htmlparser.Parser(handler);\n    parser.write(string);\n    parser.end();\n    return handler.dom;\n  },\n  _fixQuotesInDom: function(input) {\n    var j, len, node;\n    if (Array.isArray(input)) {\n      for (j = 0, len = input.length; j < len; j++) {\n        node = input[j];\n        self._fixQuotesInDom(node);\n      }\n      return input;\n    }\n    node = input;\n    if (node.type === 'text') {\n      return node.data = self._quoteNodeText(node.data);\n    } else {\n      return self._fixQuotesInDom(node.children);\n    }\n  },\n  objectToDom: function(o) {\n    if (!Array.isArray(o)) {\n      if (!object.isBareObject(o)) {\n        throw Error(\"objectToDom() only accepts a bare object or an array\");\n      }\n    }\n    return self._fixQuotesInDom(objectToDom(o));\n  },\n  quote: function(str) {\n    return String(str).replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\\"/g, '&quot;').replace(/\\ /g, '&sp;').replace(/\\n/g, '<br />');\n  },\n  _quoteNodeText: function(text) {\n    return String(text).replace(/\\&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\\"/g, '&quot;').replace(/\\ /g, '&sp;').replace(/\\n/g, \"&nl;\");\n  },\n  getCols: function() {\n    var cols, tty;\n    tty = require('tty');\n    cols = (function() {\n      try {\n        if (tty.isatty(1) && tty.isatty(2)) {\n          if (process.stdout.getWindowSize) {\n            return process.stdout.getWindowSize(1)[0];\n          } else if (tty.getWindowSize) {\n            return tty.getWindowSize()[1];\n          } else if (process.stdout.columns) {\n            return process.stdout.columns;\n          }\n        }\n      } catch (_error) {}\n    })();\n    if (typeof cols === 'number' && cols > 30) {\n      return cols;\n    } else {\n      return 80;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}