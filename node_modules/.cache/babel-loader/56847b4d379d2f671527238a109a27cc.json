{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.setup = setup;\nexports.worker = worker;\n\nfunction _jestHasteMap() {\n  const data = _interopRequireDefault(require('jest-haste-map'));\n\n  _jestHasteMap = function _jestHasteMap() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _exit() {\n  const data = _interopRequireDefault(require('exit'));\n\n  _exit = function _exit() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function _jestMessageUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestRuntime() {\n  const data = _interopRequireDefault(require('jest-runtime'));\n\n  _jestRuntime = function _jestRuntime() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _runTest = _interopRequireDefault(require('./runTest'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);\n      }\n\n      _next(undefined);\n    });\n  };\n} // Make sure uncaught errors are logged before we exit.\n\n\nprocess.on('uncaughtException', err => {\n  console.error(err.stack);\n  (0, _exit().default)(1);\n});\n\nconst formatError = error => {\n  if (typeof error === 'string') {\n    const _separateMessageFromS = (0, _jestMessageUtil().separateMessageFromStack)(error),\n          message = _separateMessageFromS.message,\n          stack = _separateMessageFromS.stack;\n\n    return {\n      message,\n      stack,\n      type: 'Error'\n    };\n  }\n\n  return {\n    code: error.code || undefined,\n    message: error.message,\n    stack: error.stack,\n    type: 'Error'\n  };\n};\n\nconst resolvers = new Map();\n\nconst getResolver = config => {\n  const resolver = resolvers.get(config.name);\n\n  if (!resolver) {\n    throw new Error('Cannot find resolver for: ' + config.name);\n  }\n\n  return resolver;\n};\n\nfunction setup(setupData) {\n  // Module maps that will be needed for the test runs are passed.\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = setupData.serializableResolvers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      const _step$value = _step.value,\n            config = _step$value.config,\n            serializableModuleMap = _step$value.serializableModuleMap;\n\n      const moduleMap = _jestHasteMap().default.ModuleMap.fromJSON(serializableModuleMap);\n\n      resolvers.set(config.name, _jestRuntime().default.createResolver(config, moduleMap));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\nfunction worker(_x) {\n  return _worker.apply(this, arguments);\n}\n\nfunction _worker() {\n  _worker = _asyncToGenerator(function* ({\n    config,\n    globalConfig,\n    path,\n    context\n  }) {\n    try {\n      return yield (0, _runTest.default)(path, globalConfig, config, getResolver(config), context && _objectSpread({}, context, {\n        changedFiles: context.changedFiles && new Set(context.changedFiles)\n      }));\n    } catch (error) {\n      throw formatError(error);\n    }\n  });\n  return _worker.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-runner/build/testWorker.js"],"names":["Object","defineProperty","exports","value","setup","worker","_jestHasteMap","data","_interopRequireDefault","require","_exit","_jestMessageUtil","_jestRuntime","_runTest","obj","__esModule","default","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","apply","err","undefined","process","on","console","stack","formatError","_separateMessageFromS","separateMessageFromStack","message","type","code","resolvers","Map","getResolver","config","resolver","get","name","Error","setupData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","serializableResolvers","Symbol","iterator","_step","next","_step$value","serializableModuleMap","moduleMap","ModuleMap","fromJSON","set","createResolver","return","_x","_worker","globalConfig","path","context","changedFiles","Set"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.setup = setup;\nexports.worker = worker;\n\nfunction _jestHasteMap() {\n  const data = _interopRequireDefault(require('jest-haste-map'));\n\n  _jestHasteMap = function _jestHasteMap() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _exit() {\n  const data = _interopRequireDefault(require('exit'));\n\n  _exit = function _exit() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function _jestMessageUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestRuntime() {\n  const data = _interopRequireDefault(require('jest-runtime'));\n\n  _jestRuntime = function _jestRuntime() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _runTest = _interopRequireDefault(require('./runTest'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(\n        Object.getOwnPropertySymbols(source).filter(function(sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        })\n      );\n    }\n    ownKeys.forEach(function(key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function() {\n    var self = this,\n      args = arguments;\n    return new Promise(function(resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);\n      }\n      _next(undefined);\n    });\n  };\n}\n\n// Make sure uncaught errors are logged before we exit.\nprocess.on('uncaughtException', err => {\n  console.error(err.stack);\n  (0, _exit().default)(1);\n});\n\nconst formatError = error => {\n  if (typeof error === 'string') {\n    const _separateMessageFromS = (0,\n      _jestMessageUtil().separateMessageFromStack)(error),\n      message = _separateMessageFromS.message,\n      stack = _separateMessageFromS.stack;\n\n    return {\n      message,\n      stack,\n      type: 'Error'\n    };\n  }\n\n  return {\n    code: error.code || undefined,\n    message: error.message,\n    stack: error.stack,\n    type: 'Error'\n  };\n};\n\nconst resolvers = new Map();\n\nconst getResolver = config => {\n  const resolver = resolvers.get(config.name);\n\n  if (!resolver) {\n    throw new Error('Cannot find resolver for: ' + config.name);\n  }\n\n  return resolver;\n};\n\nfunction setup(setupData) {\n  // Module maps that will be needed for the test runs are passed.\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (\n      var _iterator = setupData.serializableResolvers[Symbol.iterator](), _step;\n      !(_iteratorNormalCompletion = (_step = _iterator.next()).done);\n      _iteratorNormalCompletion = true\n    ) {\n      const _step$value = _step.value,\n        config = _step$value.config,\n        serializableModuleMap = _step$value.serializableModuleMap;\n\n      const moduleMap = _jestHasteMap().default.ModuleMap.fromJSON(\n        serializableModuleMap\n      );\n\n      resolvers.set(\n        config.name,\n        _jestRuntime().default.createResolver(config, moduleMap)\n      );\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\nfunction worker(_x) {\n  return _worker.apply(this, arguments);\n}\n\nfunction _worker() {\n  _worker = _asyncToGenerator(function*({config, globalConfig, path, context}) {\n    try {\n      return yield (0, _runTest.default)(\n        path,\n        globalConfig,\n        config,\n        getResolver(config),\n        context &&\n          _objectSpread({}, context, {\n            changedFiles: context.changedFiles && new Set(context.changedFiles)\n          })\n      );\n    } catch (error) {\n      throw formatError(error);\n    }\n  });\n  return _worker.apply(this, arguments);\n}\n"]},"metadata":{},"sourceType":"script"}