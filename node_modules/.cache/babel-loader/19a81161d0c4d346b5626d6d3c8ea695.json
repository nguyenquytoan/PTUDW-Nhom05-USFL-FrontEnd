{"ast":null,"code":"\"use strict\";\n\nvar _helpers = require(\"./util/helpers\");\n\n(0, _helpers.test)('nesting selector', '&', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '&');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'nesting');\n});\n(0, _helpers.test)('nesting selector followed by a class', '& .class', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '&');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'nesting');\n  t.deepEqual(tree.nodes[0].nodes[1].value, ' ');\n  t.deepEqual(tree.nodes[0].nodes[1].type, 'combinator');\n  t.deepEqual(tree.nodes[0].nodes[2].value, 'class');\n  t.deepEqual(tree.nodes[0].nodes[2].type, 'class');\n});\n(0, _helpers.test)('&foo', '&foo', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '&');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'nesting');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'foo');\n  t.deepEqual(tree.nodes[0].nodes[1].type, 'tag');\n});\n(0, _helpers.test)('&-foo', '&-foo', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '&');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'nesting');\n  t.deepEqual(tree.nodes[0].nodes[1].value, '-foo');\n  t.deepEqual(tree.nodes[0].nodes[1].type, 'tag');\n});\n(0, _helpers.test)('&_foo', '&_foo', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '&');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'nesting');\n  t.deepEqual(tree.nodes[0].nodes[1].value, '_foo');\n  t.deepEqual(tree.nodes[0].nodes[1].type, 'tag');\n});\n(0, _helpers.test)('&|foo', '&|foo', function (t, tree) {\n  var element = tree.nodes[0].nodes[0];\n  t.deepEqual(element.value, 'foo');\n  t.deepEqual(element.type, 'tag');\n  t.deepEqual(element.namespace, '&');\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-selector-parser/dist/__tests__/nesting.js"],"names":["_helpers","require","test","t","tree","deepEqual","nodes","value","type","element","namespace"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _helpers = require(\"./util/helpers\");\n\n(0, _helpers.test)('nesting selector', '&', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '&');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'nesting');\n});\n(0, _helpers.test)('nesting selector followed by a class', '& .class', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '&');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'nesting');\n  t.deepEqual(tree.nodes[0].nodes[1].value, ' ');\n  t.deepEqual(tree.nodes[0].nodes[1].type, 'combinator');\n  t.deepEqual(tree.nodes[0].nodes[2].value, 'class');\n  t.deepEqual(tree.nodes[0].nodes[2].type, 'class');\n});\n(0, _helpers.test)('&foo', '&foo', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '&');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'nesting');\n  t.deepEqual(tree.nodes[0].nodes[1].value, 'foo');\n  t.deepEqual(tree.nodes[0].nodes[1].type, 'tag');\n});\n(0, _helpers.test)('&-foo', '&-foo', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '&');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'nesting');\n  t.deepEqual(tree.nodes[0].nodes[1].value, '-foo');\n  t.deepEqual(tree.nodes[0].nodes[1].type, 'tag');\n});\n(0, _helpers.test)('&_foo', '&_foo', function (t, tree) {\n  t.deepEqual(tree.nodes[0].nodes[0].value, '&');\n  t.deepEqual(tree.nodes[0].nodes[0].type, 'nesting');\n  t.deepEqual(tree.nodes[0].nodes[1].value, '_foo');\n  t.deepEqual(tree.nodes[0].nodes[1].type, 'tag');\n});\n(0, _helpers.test)('&|foo', '&|foo', function (t, tree) {\n  var element = tree.nodes[0].nodes[0];\n  t.deepEqual(element.value, 'foo');\n  t.deepEqual(element.type, 'tag');\n  t.deepEqual(element.namespace, '&');\n});"]},"metadata":{},"sourceType":"script"}