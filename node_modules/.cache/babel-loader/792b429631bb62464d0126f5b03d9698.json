{"ast":null,"code":"'use strict';\n/* eslint-disable\n  no-shadow,\n  no-undefined,\n  func-names\n*/\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst tls = require('tls');\n\nconst url = require('url');\n\nconst http = require('http');\n\nconst https = require('https');\n\nconst ip = require('ip');\n\nconst semver = require('semver');\n\nconst killable = require('killable');\n\nconst chokidar = require('chokidar');\n\nconst express = require('express');\n\nconst httpProxyMiddleware = require('http-proxy-middleware');\n\nconst historyApiFallback = require('connect-history-api-fallback');\n\nconst compress = require('compression');\n\nconst serveIndex = require('serve-index');\n\nconst webpack = require('webpack');\n\nconst webpackDevMiddleware = require('webpack-dev-middleware');\n\nconst validateOptions = require('schema-utils');\n\nconst isAbsoluteUrl = require('is-absolute-url');\n\nconst normalizeOptions = require('./utils/normalizeOptions');\n\nconst updateCompiler = require('./utils/updateCompiler');\n\nconst createLogger = require('./utils/createLogger');\n\nconst getCertificate = require('./utils/getCertificate');\n\nconst status = require('./utils/status');\n\nconst createDomain = require('./utils/createDomain');\n\nconst runBonjour = require('./utils/runBonjour');\n\nconst routes = require('./utils/routes');\n\nconst getSocketServerImplementation = require('./utils/getSocketServerImplementation');\n\nconst schema = require('./options.json'); // Workaround for node ^8.6.0, ^9.0.0\n// DEFAULT_ECDH_CURVE is default to prime256v1 in these version\n// breaking connection when certificate is not signed with prime256v1\n// change it to auto allows OpenSSL to select the curve automatically\n// See https://github.com/nodejs/node/issues/16196 for more information\n\n\nif (semver.satisfies(process.version, '8.6.0 - 9')) {\n  tls.DEFAULT_ECDH_CURVE = 'auto';\n}\n\nif (!process.env.WEBPACK_DEV_SERVER) {\n  process.env.WEBPACK_DEV_SERVER = true;\n}\n\nclass Server {\n  constructor(compiler, options = {}, _log) {\n    if (options.lazy && !options.filename) {\n      throw new Error(\"'filename' option must be set in lazy mode.\");\n    }\n\n    validateOptions(schema, options, 'webpack Dev Server');\n    this.compiler = compiler;\n    this.options = options;\n    this.log = _log || createLogger(options);\n\n    if (this.options.transportMode !== undefined) {\n      this.log.warn('transportMode is an experimental option, meaning its usage could potentially change without warning');\n    }\n\n    normalizeOptions(this.compiler, this.options);\n    updateCompiler(this.compiler, this.options);\n    this.heartbeatInterval = 30000; // this.SocketServerImplementation is a class, so it must be instantiated before use\n\n    this.socketServerImplementation = getSocketServerImplementation(this.options);\n    this.originalStats = this.options.stats && Object.keys(this.options.stats).length ? this.options.stats : {};\n    this.sockets = [];\n    this.contentBaseWatchers = []; // TODO this.<property> is deprecated (remove them in next major release.) in favor this.options.<property>\n\n    this.hot = this.options.hot || this.options.hotOnly;\n    this.headers = this.options.headers;\n    this.progress = this.options.progress;\n    this.serveIndex = this.options.serveIndex;\n    this.clientOverlay = this.options.overlay;\n    this.clientLogLevel = this.options.clientLogLevel;\n    this.publicHost = this.options.public;\n    this.allowedHosts = this.options.allowedHosts;\n    this.disableHostCheck = !!this.options.disableHostCheck;\n    this.watchOptions = options.watchOptions || {}; // Replace leading and trailing slashes to normalize path\n\n    this.sockPath = `/${this.options.sockPath ? this.options.sockPath.replace(/^\\/|\\/$/g, '') : 'sockjs-node'}`;\n\n    if (this.progress) {\n      this.setupProgressPlugin();\n    }\n\n    this.setupHooks();\n    this.setupApp();\n    this.setupCheckHostRoute();\n    this.setupDevMiddleware(); // set express routes\n\n    routes(this.app, this.middleware, this.options); // Keep track of websocket proxies for external websocket upgrade.\n\n    this.websocketProxies = [];\n    this.setupFeatures();\n    this.setupHttps();\n    this.createServer();\n    killable(this.listeningApp); // Proxy websockets without the initial http request\n    // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n\n    this.websocketProxies.forEach(function (wsProxy) {\n      this.listeningApp.on('upgrade', wsProxy.upgrade);\n    }, this);\n  }\n\n  setupProgressPlugin() {\n    // for CLI output\n    new webpack.ProgressPlugin({\n      profile: !!this.options.profile\n    }).apply(this.compiler); // for browser console output\n\n    new webpack.ProgressPlugin((percent, msg, addInfo) => {\n      percent = Math.floor(percent * 100);\n\n      if (percent === 100) {\n        msg = 'Compilation completed';\n      }\n\n      if (addInfo) {\n        msg = `${msg} (${addInfo})`;\n      }\n\n      this.sockWrite(this.sockets, 'progress-update', {\n        percent,\n        msg\n      });\n    }).apply(this.compiler);\n  }\n\n  setupApp() {\n    // Init express server\n    // eslint-disable-next-line new-cap\n    this.app = new express();\n  }\n\n  setupHooks() {\n    // Listening for events\n    const invalidPlugin = () => {\n      this.sockWrite(this.sockets, 'invalid');\n    };\n\n    const addHooks = compiler => {\n      const {\n        compile,\n        invalid,\n        done\n      } = compiler.hooks;\n      compile.tap('webpack-dev-server', invalidPlugin);\n      invalid.tap('webpack-dev-server', invalidPlugin);\n      done.tap('webpack-dev-server', stats => {\n        this._sendStats(this.sockets, this.getStats(stats));\n\n        this._stats = stats;\n      });\n    };\n\n    if (this.compiler.compilers) {\n      this.compiler.compilers.forEach(addHooks);\n    } else {\n      addHooks(this.compiler);\n    }\n  }\n\n  setupCheckHostRoute() {\n    this.app.all('*', (req, res, next) => {\n      if (this.checkHost(req.headers)) {\n        return next();\n      }\n\n      res.send('Invalid Host header');\n    });\n  }\n\n  setupDevMiddleware() {\n    // middleware for serving webpack bundle\n    this.middleware = webpackDevMiddleware(this.compiler, Object.assign({}, this.options, {\n      logLevel: this.log.options.level\n    }));\n  }\n\n  setupCompressFeature() {\n    this.app.use(compress());\n  }\n\n  setupProxyFeature() {\n    /**\n     * Assume a proxy configuration specified as:\n     * proxy: {\n     *   'context': { options }\n     * }\n     * OR\n     * proxy: {\n     *   'context': 'target'\n     * }\n     */\n    if (!Array.isArray(this.options.proxy)) {\n      if (Object.prototype.hasOwnProperty.call(this.options.proxy, 'target')) {\n        this.options.proxy = [this.options.proxy];\n      } else {\n        this.options.proxy = Object.keys(this.options.proxy).map(context => {\n          let proxyOptions; // For backwards compatibility reasons.\n\n          const correctedContext = context.replace(/^\\*$/, '**').replace(/\\/\\*$/, '');\n\n          if (typeof this.options.proxy[context] === 'string') {\n            proxyOptions = {\n              context: correctedContext,\n              target: this.options.proxy[context]\n            };\n          } else {\n            proxyOptions = Object.assign({}, this.options.proxy[context]);\n            proxyOptions.context = correctedContext;\n          }\n\n          proxyOptions.logLevel = proxyOptions.logLevel || 'warn';\n          return proxyOptions;\n        });\n      }\n    }\n\n    const getProxyMiddleware = proxyConfig => {\n      const context = proxyConfig.context || proxyConfig.path; // It is possible to use the `bypass` method without a `target`.\n      // However, the proxy middleware has no use in this case, and will fail to instantiate.\n\n      if (proxyConfig.target) {\n        return httpProxyMiddleware(context, proxyConfig);\n      }\n    };\n    /**\n     * Assume a proxy configuration specified as:\n     * proxy: [\n     *   {\n     *     context: ...,\n     *     ...options...\n     *   },\n     *   // or:\n     *   function() {\n     *     return {\n     *       context: ...,\n     *       ...options...\n     *     };\n     *   }\n     * ]\n     */\n\n\n    this.options.proxy.forEach(proxyConfigOrCallback => {\n      let proxyMiddleware;\n      let proxyConfig = typeof proxyConfigOrCallback === 'function' ? proxyConfigOrCallback() : proxyConfigOrCallback;\n      proxyMiddleware = getProxyMiddleware(proxyConfig);\n\n      if (proxyConfig.ws) {\n        this.websocketProxies.push(proxyMiddleware);\n      }\n\n      const handle = (req, res, next) => {\n        if (typeof proxyConfigOrCallback === 'function') {\n          const newProxyConfig = proxyConfigOrCallback();\n\n          if (newProxyConfig !== proxyConfig) {\n            proxyConfig = newProxyConfig;\n            proxyMiddleware = getProxyMiddleware(proxyConfig);\n          }\n        } // - Check if we have a bypass function defined\n        // - In case the bypass function is defined we'll retrieve the\n        // bypassUrl from it otherwise bypassUrl would be null\n\n\n        const isByPassFuncDefined = typeof proxyConfig.bypass === 'function';\n        const bypassUrl = isByPassFuncDefined ? proxyConfig.bypass(req, res, proxyConfig) : null;\n\n        if (typeof bypassUrl === 'boolean') {\n          // skip the proxy\n          req.url = null;\n          next();\n        } else if (typeof bypassUrl === 'string') {\n          // byPass to that url\n          req.url = bypassUrl;\n          next();\n        } else if (proxyMiddleware) {\n          return proxyMiddleware(req, res, next);\n        } else {\n          next();\n        }\n      };\n\n      this.app.use(handle); // Also forward error requests to the proxy so it can handle them.\n\n      this.app.use((error, req, res, next) => handle(req, res, next));\n    });\n  }\n\n  setupHistoryApiFallbackFeature() {\n    const fallback = typeof this.options.historyApiFallback === 'object' ? this.options.historyApiFallback : null; // Fall back to /index.html if nothing else matches.\n\n    this.app.use(historyApiFallback(fallback));\n  }\n\n  setupStaticFeature() {\n    const contentBase = this.options.contentBase;\n    const contentBasePublicPath = this.options.contentBasePublicPath;\n\n    if (Array.isArray(contentBase)) {\n      contentBase.forEach(item => {\n        this.app.use(contentBasePublicPath, express.static(item));\n      });\n    } else if (isAbsoluteUrl(String(contentBase))) {\n      this.log.warn('Using a URL as contentBase is deprecated and will be removed in the next major version. Please use the proxy option instead.');\n      this.log.warn('proxy: {\\n\\t\"*\": \"<your current contentBase configuration>\"\\n}'); // Redirect every request to contentBase\n\n      this.app.get('*', (req, res) => {\n        res.writeHead(302, {\n          Location: contentBase + req.path + (req._parsedUrl.search || '')\n        });\n        res.end();\n      });\n    } else if (typeof contentBase === 'number') {\n      this.log.warn('Using a number as contentBase is deprecated and will be removed in the next major version. Please use the proxy option instead.');\n      this.log.warn('proxy: {\\n\\t\"*\": \"//localhost:<your current contentBase configuration>\"\\n}'); // Redirect every request to the port contentBase\n\n      this.app.get('*', (req, res) => {\n        res.writeHead(302, {\n          Location: `//localhost:${contentBase}${req.path}${req._parsedUrl.search || ''}`\n        });\n        res.end();\n      });\n    } else {\n      // route content request\n      this.app.use(contentBasePublicPath, express.static(contentBase, this.options.staticOptions));\n    }\n  }\n\n  setupServeIndexFeature() {\n    const contentBase = this.options.contentBase;\n    const contentBasePublicPath = this.options.contentBasePublicPath;\n\n    if (Array.isArray(contentBase)) {\n      contentBase.forEach(item => {\n        this.app.use(contentBasePublicPath, (req, res, next) => {\n          // serve-index doesn't fallthrough non-get/head request to next middleware\n          if (req.method !== 'GET' && req.method !== 'HEAD') {\n            return next();\n          }\n\n          serveIndex(item)(req, res, next);\n        });\n      });\n    } else if (typeof contentBase !== 'number' && !isAbsoluteUrl(String(contentBase))) {\n      this.app.use(contentBasePublicPath, (req, res, next) => {\n        // serve-index doesn't fallthrough non-get/head request to next middleware\n        if (req.method !== 'GET' && req.method !== 'HEAD') {\n          return next();\n        }\n\n        serveIndex(contentBase)(req, res, next);\n      });\n    }\n  }\n\n  setupWatchStaticFeature() {\n    const contentBase = this.options.contentBase;\n\n    if (isAbsoluteUrl(String(contentBase)) || typeof contentBase === 'number') {\n      throw new Error('Watching remote files is not supported.');\n    } else if (Array.isArray(contentBase)) {\n      contentBase.forEach(item => {\n        if (isAbsoluteUrl(String(item)) || typeof item === 'number') {\n          throw new Error('Watching remote files is not supported.');\n        }\n\n        this._watch(item);\n      });\n    } else {\n      this._watch(contentBase);\n    }\n  }\n\n  setupBeforeFeature() {\n    // Todo rename onBeforeSetupMiddleware in next major release\n    // Todo pass only `this` argument\n    this.options.before(this.app, this, this.compiler);\n  }\n\n  setupMiddleware() {\n    this.app.use(this.middleware);\n  }\n\n  setupAfterFeature() {\n    // Todo rename onAfterSetupMiddleware in next major release\n    // Todo pass only `this` argument\n    this.options.after(this.app, this, this.compiler);\n  }\n\n  setupHeadersFeature() {\n    this.app.all('*', this.setContentHeaders.bind(this));\n  }\n\n  setupMagicHtmlFeature() {\n    this.app.get('*', this.serveMagicHtml.bind(this));\n  }\n\n  setupSetupFeature() {\n    this.log.warn('The `setup` option is deprecated and will be removed in v4. Please update your config to use `before`');\n    this.options.setup(this.app, this);\n  }\n\n  setupFeatures() {\n    const features = {\n      compress: () => {\n        if (this.options.compress) {\n          this.setupCompressFeature();\n        }\n      },\n      proxy: () => {\n        if (this.options.proxy) {\n          this.setupProxyFeature();\n        }\n      },\n      historyApiFallback: () => {\n        if (this.options.historyApiFallback) {\n          this.setupHistoryApiFallbackFeature();\n        }\n      },\n      // Todo rename to `static` in future major release\n      contentBaseFiles: () => {\n        this.setupStaticFeature();\n      },\n      // Todo rename to `serveIndex` in future major release\n      contentBaseIndex: () => {\n        this.setupServeIndexFeature();\n      },\n      // Todo rename to `watchStatic` in future major release\n      watchContentBase: () => {\n        this.setupWatchStaticFeature();\n      },\n      before: () => {\n        if (typeof this.options.before === 'function') {\n          this.setupBeforeFeature();\n        }\n      },\n      middleware: () => {\n        // include our middleware to ensure\n        // it is able to handle '/index.html' request after redirect\n        this.setupMiddleware();\n      },\n      after: () => {\n        if (typeof this.options.after === 'function') {\n          this.setupAfterFeature();\n        }\n      },\n      headers: () => {\n        this.setupHeadersFeature();\n      },\n      magicHtml: () => {\n        this.setupMagicHtmlFeature();\n      },\n      setup: () => {\n        if (typeof this.options.setup === 'function') {\n          this.setupSetupFeature();\n        }\n      }\n    };\n    const runnableFeatures = []; // compress is placed last and uses unshift so that it will be the first middleware used\n\n    if (this.options.compress) {\n      runnableFeatures.push('compress');\n    }\n\n    runnableFeatures.push('setup', 'before', 'headers', 'middleware');\n\n    if (this.options.proxy) {\n      runnableFeatures.push('proxy', 'middleware');\n    }\n\n    if (this.options.contentBase !== false) {\n      runnableFeatures.push('contentBaseFiles');\n    }\n\n    if (this.options.historyApiFallback) {\n      runnableFeatures.push('historyApiFallback', 'middleware');\n\n      if (this.options.contentBase !== false) {\n        runnableFeatures.push('contentBaseFiles');\n      }\n    } // checking if it's set to true or not set (Default : undefined => true)\n\n\n    this.serveIndex = this.serveIndex || this.serveIndex === undefined;\n\n    if (this.options.contentBase && this.serveIndex) {\n      runnableFeatures.push('contentBaseIndex');\n    }\n\n    if (this.options.watchContentBase) {\n      runnableFeatures.push('watchContentBase');\n    }\n\n    runnableFeatures.push('magicHtml');\n\n    if (this.options.after) {\n      runnableFeatures.push('after');\n    }\n\n    (this.options.features || runnableFeatures).forEach(feature => {\n      features[feature]();\n    });\n  }\n\n  setupHttps() {\n    // if the user enables http2, we can safely enable https\n    if (this.options.http2 && !this.options.https) {\n      this.options.https = true;\n    }\n\n    if (this.options.https) {\n      // for keep supporting CLI parameters\n      if (typeof this.options.https === 'boolean') {\n        this.options.https = {\n          ca: this.options.ca,\n          pfx: this.options.pfx,\n          key: this.options.key,\n          cert: this.options.cert,\n          passphrase: this.options.pfxPassphrase,\n          requestCert: this.options.requestCert || false\n        };\n      }\n\n      for (const property of ['ca', 'pfx', 'key', 'cert']) {\n        const value = this.options.https[property];\n        const isBuffer = value instanceof Buffer;\n\n        if (value && !isBuffer) {\n          let stats = null;\n\n          try {\n            stats = fs.lstatSync(fs.realpathSync(value)).isFile();\n          } catch (error) {} // ignore error\n          // It is file\n\n\n          this.options.https[property] = stats ? fs.readFileSync(path.resolve(value)) : value;\n        }\n      }\n\n      let fakeCert;\n\n      if (!this.options.https.key || !this.options.https.cert) {\n        fakeCert = getCertificate(this.log);\n      }\n\n      this.options.https.key = this.options.https.key || fakeCert;\n      this.options.https.cert = this.options.https.cert || fakeCert; // note that options.spdy never existed. The user was able\n      // to set options.https.spdy before, though it was not in the\n      // docs. Keep options.https.spdy if the user sets it for\n      // backwards compatibility, but log a deprecation warning.\n\n      if (this.options.https.spdy) {\n        // for backwards compatibility: if options.https.spdy was passed in before,\n        // it was not altered in any way\n        this.log.warn('Providing custom spdy server options is deprecated and will be removed in the next major version.');\n      } else {\n        // if the normal https server gets this option, it will not affect it.\n        this.options.https.spdy = {\n          protocols: ['h2', 'http/1.1']\n        };\n      }\n    }\n  }\n\n  createServer() {\n    if (this.options.https) {\n      // Only prevent HTTP/2 if http2 is explicitly set to false\n      const isHttp2 = this.options.http2 !== false; // `spdy` is effectively unmaintained, and as a consequence of an\n      // implementation that extensively relies on Node’s non-public APIs, broken\n      // on Node 10 and above. In those cases, only https will be used for now.\n      // Once express supports Node's built-in HTTP/2 support, migrating over to\n      // that should be the best way to go.\n      // The relevant issues are:\n      // - https://github.com/nodejs/node/issues/21665\n      // - https://github.com/webpack/webpack-dev-server/issues/1449\n      // - https://github.com/expressjs/express/issues/3388\n\n      if (semver.gte(process.version, '10.0.0') || !isHttp2) {\n        if (this.options.http2) {\n          // the user explicitly requested http2 but is not getting it because\n          // of the node version.\n          this.log.warn('HTTP/2 is currently unsupported for Node 10.0.0 and above, but will be supported once Express supports it');\n        }\n\n        this.listeningApp = https.createServer(this.options.https, this.app);\n      } else {\n        // The relevant issues are:\n        // https://github.com/spdy-http2/node-spdy/issues/350\n        // https://github.com/webpack/webpack-dev-server/issues/1592\n        this.listeningApp = require('spdy').createServer(this.options.https, this.app);\n      }\n    } else {\n      this.listeningApp = http.createServer(this.app);\n    }\n  }\n\n  createSocketServer() {\n    const SocketServerImplementation = this.socketServerImplementation;\n    this.socketServer = new SocketServerImplementation(this);\n    this.socketServer.onConnection((connection, headers) => {\n      if (!connection) {\n        return;\n      }\n\n      if (!headers) {\n        this.log.warn('transportMode.server implementation must pass headers to the callback of onConnection(f) ' + 'via f(connection, headers) in order for clients to pass a headers security check');\n      }\n\n      if (!headers || !this.checkHost(headers) || !this.checkOrigin(headers)) {\n        this.sockWrite([connection], 'error', 'Invalid Host/Origin header');\n        this.socketServer.close(connection);\n        return;\n      }\n\n      this.sockets.push(connection);\n      this.socketServer.onConnectionClose(connection, () => {\n        const idx = this.sockets.indexOf(connection);\n\n        if (idx >= 0) {\n          this.sockets.splice(idx, 1);\n        }\n      });\n\n      if (this.clientLogLevel) {\n        this.sockWrite([connection], 'log-level', this.clientLogLevel);\n      }\n\n      if (this.hot) {\n        this.sockWrite([connection], 'hot');\n      } // TODO: change condition at major version\n\n\n      if (this.options.liveReload !== false) {\n        this.sockWrite([connection], 'liveReload', this.options.liveReload);\n      }\n\n      if (this.progress) {\n        this.sockWrite([connection], 'progress', this.progress);\n      }\n\n      if (this.clientOverlay) {\n        this.sockWrite([connection], 'overlay', this.clientOverlay);\n      }\n\n      if (!this._stats) {\n        return;\n      }\n\n      this._sendStats([connection], this.getStats(this._stats), true);\n    });\n  }\n\n  showStatus() {\n    const suffix = this.options.inline !== false || this.options.lazy === true ? '/' : '/webpack-dev-server/';\n    const uri = `${createDomain(this.options, this.listeningApp)}${suffix}`;\n    status(uri, this.options, this.log, this.options.stats && this.options.stats.colors);\n  }\n\n  listen(port, hostname, fn) {\n    this.hostname = hostname;\n    return this.listeningApp.listen(port, hostname, err => {\n      this.createSocketServer();\n\n      if (this.options.bonjour) {\n        runBonjour(this.options);\n      }\n\n      this.showStatus();\n\n      if (fn) {\n        fn.call(this.listeningApp, err);\n      }\n\n      if (typeof this.options.onListening === 'function') {\n        this.options.onListening(this);\n      }\n    });\n  }\n\n  close(cb) {\n    this.sockets.forEach(socket => {\n      this.socketServer.close(socket);\n    });\n    this.sockets = [];\n    this.contentBaseWatchers.forEach(watcher => {\n      watcher.close();\n    });\n    this.contentBaseWatchers = [];\n    this.listeningApp.kill(() => {\n      this.middleware.close(cb);\n    });\n  }\n\n  static get DEFAULT_STATS() {\n    return {\n      all: false,\n      hash: true,\n      assets: true,\n      warnings: true,\n      errors: true,\n      errorDetails: false\n    };\n  }\n\n  getStats(statsObj) {\n    const stats = Server.DEFAULT_STATS;\n\n    if (this.originalStats.warningsFilter) {\n      stats.warningsFilter = this.originalStats.warningsFilter;\n    }\n\n    return statsObj.toJson(stats);\n  }\n\n  use() {\n    // eslint-disable-next-line\n    this.app.use.apply(this.app, arguments);\n  }\n\n  setContentHeaders(req, res, next) {\n    if (this.headers) {\n      // eslint-disable-next-line\n      for (const name in this.headers) {\n        res.setHeader(name, this.headers[name]);\n      }\n    }\n\n    next();\n  }\n\n  checkHost(headers) {\n    return this.checkHeaders(headers, 'host');\n  }\n\n  checkOrigin(headers) {\n    return this.checkHeaders(headers, 'origin');\n  }\n\n  checkHeaders(headers, headerToCheck) {\n    // allow user to opt-out this security check, at own risk\n    if (this.disableHostCheck) {\n      return true;\n    }\n\n    if (!headerToCheck) {\n      headerToCheck = 'host';\n    } // get the Host header and extract hostname\n    // we don't care about port not matching\n\n\n    const hostHeader = headers[headerToCheck];\n\n    if (!hostHeader) {\n      return false;\n    } // use the node url-parser to retrieve the hostname from the host-header.\n\n\n    const hostname = url.parse( // if hostHeader doesn't have scheme, add // for parsing.\n    /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : `//${hostHeader}`, false, true).hostname; // always allow requests with explicit IPv4 or IPv6-address.\n    // A note on IPv6 addresses:\n    // hostHeader will always contain the brackets denoting\n    // an IPv6-address in URLs,\n    // these are removed from the hostname in url.parse(),\n    // so we have the pure IPv6-address in hostname.\n    // always allow localhost host, for convenience (hostname === 'localhost')\n    // allow hostname of listening address  (hostname === this.hostname)\n\n    const isValidHostname = ip.isV4Format(hostname) || ip.isV6Format(hostname) || hostname === 'localhost' || hostname === this.hostname;\n\n    if (isValidHostname) {\n      return true;\n    } // always allow localhost host, for convenience\n    // allow if hostname is in allowedHosts\n\n\n    if (this.allowedHosts && this.allowedHosts.length) {\n      for (let hostIdx = 0; hostIdx < this.allowedHosts.length; hostIdx++) {\n        const allowedHost = this.allowedHosts[hostIdx];\n\n        if (allowedHost === hostname) {\n          return true;\n        } // support \".\" as a subdomain wildcard\n        // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n\n\n        if (allowedHost[0] === '.') {\n          // \"example.com\"  (hostname === allowedHost.substring(1))\n          // \"*.example.com\"  (hostname.endsWith(allowedHost))\n          if (hostname === allowedHost.substring(1) || hostname.endsWith(allowedHost)) {\n            return true;\n          }\n        }\n      }\n    } // also allow public hostname if provided\n\n\n    if (typeof this.publicHost === 'string') {\n      const idxPublic = this.publicHost.indexOf(':');\n      const publicHostname = idxPublic >= 0 ? this.publicHost.substr(0, idxPublic) : this.publicHost;\n\n      if (hostname === publicHostname) {\n        return true;\n      }\n    } // disallow\n\n\n    return false;\n  } // eslint-disable-next-line\n\n\n  sockWrite(sockets, type, data) {\n    sockets.forEach(socket => {\n      this.socketServer.send(socket, JSON.stringify({\n        type,\n        data\n      }));\n    });\n  }\n\n  serveMagicHtml(req, res, next) {\n    const _path = req.path;\n\n    try {\n      const isFile = this.middleware.fileSystem.statSync(this.middleware.getFilenameFromUrl(`${_path}.js`)).isFile();\n\n      if (!isFile) {\n        return next();\n      } // Serve a page that executes the javascript\n\n\n      const queries = req._parsedUrl.search || '';\n      const responsePage = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body><script type=\"text/javascript\" charset=\"utf-8\" src=\"${_path}.js${queries}\"></script></body></html>`;\n      res.send(responsePage);\n    } catch (err) {\n      return next();\n    }\n  } // send stats to a socket or multiple sockets\n\n\n  _sendStats(sockets, stats, force) {\n    const shouldEmit = !force && stats && (!stats.errors || stats.errors.length === 0) && stats.assets && stats.assets.every(asset => !asset.emitted);\n\n    if (shouldEmit) {\n      return this.sockWrite(sockets, 'still-ok');\n    }\n\n    this.sockWrite(sockets, 'hash', stats.hash);\n\n    if (stats.errors.length > 0) {\n      this.sockWrite(sockets, 'errors', stats.errors);\n    } else if (stats.warnings.length > 0) {\n      this.sockWrite(sockets, 'warnings', stats.warnings);\n    } else {\n      this.sockWrite(sockets, 'ok');\n    }\n  }\n\n  _watch(watchPath) {\n    // duplicate the same massaging of options that watchpack performs\n    // https://github.com/webpack/watchpack/blob/master/lib/DirectoryWatcher.js#L49\n    // this isn't an elegant solution, but we'll improve it in the future\n    const usePolling = this.watchOptions.poll ? true : undefined;\n    const interval = typeof this.watchOptions.poll === 'number' ? this.watchOptions.poll : undefined;\n    const watchOptions = {\n      ignoreInitial: true,\n      persistent: true,\n      followSymlinks: false,\n      atomic: false,\n      alwaysStat: true,\n      ignorePermissionErrors: true,\n      ignored: this.watchOptions.ignored,\n      usePolling,\n      interval\n    };\n    const watcher = chokidar.watch(watchPath, watchOptions); // disabling refreshing on changing the content\n\n    if (this.options.liveReload !== false) {\n      watcher.on('change', () => {\n        this.sockWrite(this.sockets, 'content-changed');\n      });\n    }\n\n    this.contentBaseWatchers.push(watcher);\n  }\n\n  invalidate(callback) {\n    if (this.middleware) {\n      this.middleware.invalidate(callback);\n    }\n  }\n\n} // Export this logic,\n// so that other implementations,\n// like task-runners can use it\n\n\nServer.addDevServerEntrypoints = require('./utils/addEntries');\nmodule.exports = Server;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/webpack-dev-server/lib/Server.js"],"names":["fs","require","path","tls","url","http","https","ip","semver","killable","chokidar","express","httpProxyMiddleware","historyApiFallback","compress","serveIndex","webpack","webpackDevMiddleware","validateOptions","isAbsoluteUrl","normalizeOptions","updateCompiler","createLogger","getCertificate","status","createDomain","runBonjour","routes","getSocketServerImplementation","schema","satisfies","process","version","DEFAULT_ECDH_CURVE","env","WEBPACK_DEV_SERVER","Server","constructor","compiler","options","_log","lazy","filename","Error","log","transportMode","undefined","warn","heartbeatInterval","socketServerImplementation","originalStats","stats","Object","keys","length","sockets","contentBaseWatchers","hot","hotOnly","headers","progress","clientOverlay","overlay","clientLogLevel","publicHost","public","allowedHosts","disableHostCheck","watchOptions","sockPath","replace","setupProgressPlugin","setupHooks","setupApp","setupCheckHostRoute","setupDevMiddleware","app","middleware","websocketProxies","setupFeatures","setupHttps","createServer","listeningApp","forEach","wsProxy","on","upgrade","ProgressPlugin","profile","apply","percent","msg","addInfo","Math","floor","sockWrite","invalidPlugin","addHooks","compile","invalid","done","hooks","tap","_sendStats","getStats","_stats","compilers","all","req","res","next","checkHost","send","assign","logLevel","level","setupCompressFeature","use","setupProxyFeature","Array","isArray","proxy","prototype","hasOwnProperty","call","map","context","proxyOptions","correctedContext","target","getProxyMiddleware","proxyConfig","proxyConfigOrCallback","proxyMiddleware","ws","push","handle","newProxyConfig","isByPassFuncDefined","bypass","bypassUrl","error","setupHistoryApiFallbackFeature","fallback","setupStaticFeature","contentBase","contentBasePublicPath","item","static","String","get","writeHead","Location","_parsedUrl","search","end","staticOptions","setupServeIndexFeature","method","setupWatchStaticFeature","_watch","setupBeforeFeature","before","setupMiddleware","setupAfterFeature","after","setupHeadersFeature","setContentHeaders","bind","setupMagicHtmlFeature","serveMagicHtml","setupSetupFeature","setup","features","contentBaseFiles","contentBaseIndex","watchContentBase","magicHtml","runnableFeatures","feature","http2","ca","pfx","key","cert","passphrase","pfxPassphrase","requestCert","property","value","isBuffer","Buffer","lstatSync","realpathSync","isFile","readFileSync","resolve","fakeCert","spdy","protocols","isHttp2","gte","createSocketServer","SocketServerImplementation","socketServer","onConnection","connection","checkOrigin","close","onConnectionClose","idx","indexOf","splice","liveReload","showStatus","suffix","inline","uri","colors","listen","port","hostname","fn","err","bonjour","onListening","cb","socket","watcher","kill","DEFAULT_STATS","hash","assets","warnings","errors","errorDetails","statsObj","warningsFilter","toJson","arguments","name","setHeader","checkHeaders","headerToCheck","hostHeader","parse","test","isValidHostname","isV4Format","isV6Format","hostIdx","allowedHost","substring","endsWith","idxPublic","publicHostname","substr","type","data","JSON","stringify","_path","fileSystem","statSync","getFilenameFromUrl","queries","responsePage","force","shouldEmit","every","asset","emitted","watchPath","usePolling","poll","interval","ignoreInitial","persistent","followSymlinks","atomic","alwaysStat","ignorePermissionErrors","ignored","watch","invalidate","callback","addDevServerEntrypoints","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* eslint-disable\n  no-shadow,\n  no-undefined,\n  func-names\n*/\nconst fs = require('fs');\nconst path = require('path');\nconst tls = require('tls');\nconst url = require('url');\nconst http = require('http');\nconst https = require('https');\nconst ip = require('ip');\nconst semver = require('semver');\nconst killable = require('killable');\nconst chokidar = require('chokidar');\nconst express = require('express');\nconst httpProxyMiddleware = require('http-proxy-middleware');\nconst historyApiFallback = require('connect-history-api-fallback');\nconst compress = require('compression');\nconst serveIndex = require('serve-index');\nconst webpack = require('webpack');\nconst webpackDevMiddleware = require('webpack-dev-middleware');\nconst validateOptions = require('schema-utils');\nconst isAbsoluteUrl = require('is-absolute-url');\nconst normalizeOptions = require('./utils/normalizeOptions');\nconst updateCompiler = require('./utils/updateCompiler');\nconst createLogger = require('./utils/createLogger');\nconst getCertificate = require('./utils/getCertificate');\nconst status = require('./utils/status');\nconst createDomain = require('./utils/createDomain');\nconst runBonjour = require('./utils/runBonjour');\nconst routes = require('./utils/routes');\nconst getSocketServerImplementation = require('./utils/getSocketServerImplementation');\nconst schema = require('./options.json');\n\n// Workaround for node ^8.6.0, ^9.0.0\n// DEFAULT_ECDH_CURVE is default to prime256v1 in these version\n// breaking connection when certificate is not signed with prime256v1\n// change it to auto allows OpenSSL to select the curve automatically\n// See https://github.com/nodejs/node/issues/16196 for more information\nif (semver.satisfies(process.version, '8.6.0 - 9')) {\n  tls.DEFAULT_ECDH_CURVE = 'auto';\n}\n\nif (!process.env.WEBPACK_DEV_SERVER) {\n  process.env.WEBPACK_DEV_SERVER = true;\n}\n\nclass Server {\n  constructor(compiler, options = {}, _log) {\n    if (options.lazy && !options.filename) {\n      throw new Error(\"'filename' option must be set in lazy mode.\");\n    }\n\n    validateOptions(schema, options, 'webpack Dev Server');\n\n    this.compiler = compiler;\n    this.options = options;\n\n    this.log = _log || createLogger(options);\n\n    if (this.options.transportMode !== undefined) {\n      this.log.warn(\n        'transportMode is an experimental option, meaning its usage could potentially change without warning'\n      );\n    }\n\n    normalizeOptions(this.compiler, this.options);\n\n    updateCompiler(this.compiler, this.options);\n\n    this.heartbeatInterval = 30000;\n    // this.SocketServerImplementation is a class, so it must be instantiated before use\n    this.socketServerImplementation = getSocketServerImplementation(\n      this.options\n    );\n\n    this.originalStats =\n      this.options.stats && Object.keys(this.options.stats).length\n        ? this.options.stats\n        : {};\n\n    this.sockets = [];\n    this.contentBaseWatchers = [];\n\n    // TODO this.<property> is deprecated (remove them in next major release.) in favor this.options.<property>\n    this.hot = this.options.hot || this.options.hotOnly;\n    this.headers = this.options.headers;\n    this.progress = this.options.progress;\n\n    this.serveIndex = this.options.serveIndex;\n\n    this.clientOverlay = this.options.overlay;\n    this.clientLogLevel = this.options.clientLogLevel;\n\n    this.publicHost = this.options.public;\n    this.allowedHosts = this.options.allowedHosts;\n    this.disableHostCheck = !!this.options.disableHostCheck;\n\n    this.watchOptions = options.watchOptions || {};\n\n    // Replace leading and trailing slashes to normalize path\n    this.sockPath = `/${\n      this.options.sockPath\n        ? this.options.sockPath.replace(/^\\/|\\/$/g, '')\n        : 'sockjs-node'\n    }`;\n\n    if (this.progress) {\n      this.setupProgressPlugin();\n    }\n\n    this.setupHooks();\n    this.setupApp();\n    this.setupCheckHostRoute();\n    this.setupDevMiddleware();\n\n    // set express routes\n    routes(this.app, this.middleware, this.options);\n\n    // Keep track of websocket proxies for external websocket upgrade.\n    this.websocketProxies = [];\n\n    this.setupFeatures();\n    this.setupHttps();\n    this.createServer();\n\n    killable(this.listeningApp);\n\n    // Proxy websockets without the initial http request\n    // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n    this.websocketProxies.forEach(function(wsProxy) {\n      this.listeningApp.on('upgrade', wsProxy.upgrade);\n    }, this);\n  }\n\n  setupProgressPlugin() {\n    // for CLI output\n    new webpack.ProgressPlugin({\n      profile: !!this.options.profile,\n    }).apply(this.compiler);\n\n    // for browser console output\n    new webpack.ProgressPlugin((percent, msg, addInfo) => {\n      percent = Math.floor(percent * 100);\n\n      if (percent === 100) {\n        msg = 'Compilation completed';\n      }\n\n      if (addInfo) {\n        msg = `${msg} (${addInfo})`;\n      }\n\n      this.sockWrite(this.sockets, 'progress-update', { percent, msg });\n    }).apply(this.compiler);\n  }\n\n  setupApp() {\n    // Init express server\n    // eslint-disable-next-line new-cap\n    this.app = new express();\n  }\n\n  setupHooks() {\n    // Listening for events\n    const invalidPlugin = () => {\n      this.sockWrite(this.sockets, 'invalid');\n    };\n\n    const addHooks = (compiler) => {\n      const { compile, invalid, done } = compiler.hooks;\n\n      compile.tap('webpack-dev-server', invalidPlugin);\n      invalid.tap('webpack-dev-server', invalidPlugin);\n      done.tap('webpack-dev-server', (stats) => {\n        this._sendStats(this.sockets, this.getStats(stats));\n        this._stats = stats;\n      });\n    };\n\n    if (this.compiler.compilers) {\n      this.compiler.compilers.forEach(addHooks);\n    } else {\n      addHooks(this.compiler);\n    }\n  }\n\n  setupCheckHostRoute() {\n    this.app.all('*', (req, res, next) => {\n      if (this.checkHost(req.headers)) {\n        return next();\n      }\n\n      res.send('Invalid Host header');\n    });\n  }\n\n  setupDevMiddleware() {\n    // middleware for serving webpack bundle\n    this.middleware = webpackDevMiddleware(\n      this.compiler,\n      Object.assign({}, this.options, { logLevel: this.log.options.level })\n    );\n  }\n\n  setupCompressFeature() {\n    this.app.use(compress());\n  }\n\n  setupProxyFeature() {\n    /**\n     * Assume a proxy configuration specified as:\n     * proxy: {\n     *   'context': { options }\n     * }\n     * OR\n     * proxy: {\n     *   'context': 'target'\n     * }\n     */\n    if (!Array.isArray(this.options.proxy)) {\n      if (Object.prototype.hasOwnProperty.call(this.options.proxy, 'target')) {\n        this.options.proxy = [this.options.proxy];\n      } else {\n        this.options.proxy = Object.keys(this.options.proxy).map((context) => {\n          let proxyOptions;\n          // For backwards compatibility reasons.\n          const correctedContext = context\n            .replace(/^\\*$/, '**')\n            .replace(/\\/\\*$/, '');\n\n          if (typeof this.options.proxy[context] === 'string') {\n            proxyOptions = {\n              context: correctedContext,\n              target: this.options.proxy[context],\n            };\n          } else {\n            proxyOptions = Object.assign({}, this.options.proxy[context]);\n            proxyOptions.context = correctedContext;\n          }\n\n          proxyOptions.logLevel = proxyOptions.logLevel || 'warn';\n\n          return proxyOptions;\n        });\n      }\n    }\n\n    const getProxyMiddleware = (proxyConfig) => {\n      const context = proxyConfig.context || proxyConfig.path;\n\n      // It is possible to use the `bypass` method without a `target`.\n      // However, the proxy middleware has no use in this case, and will fail to instantiate.\n      if (proxyConfig.target) {\n        return httpProxyMiddleware(context, proxyConfig);\n      }\n    };\n    /**\n     * Assume a proxy configuration specified as:\n     * proxy: [\n     *   {\n     *     context: ...,\n     *     ...options...\n     *   },\n     *   // or:\n     *   function() {\n     *     return {\n     *       context: ...,\n     *       ...options...\n     *     };\n     *   }\n     * ]\n     */\n    this.options.proxy.forEach((proxyConfigOrCallback) => {\n      let proxyMiddleware;\n\n      let proxyConfig =\n        typeof proxyConfigOrCallback === 'function'\n          ? proxyConfigOrCallback()\n          : proxyConfigOrCallback;\n\n      proxyMiddleware = getProxyMiddleware(proxyConfig);\n\n      if (proxyConfig.ws) {\n        this.websocketProxies.push(proxyMiddleware);\n      }\n\n      const handle = (req, res, next) => {\n        if (typeof proxyConfigOrCallback === 'function') {\n          const newProxyConfig = proxyConfigOrCallback();\n\n          if (newProxyConfig !== proxyConfig) {\n            proxyConfig = newProxyConfig;\n            proxyMiddleware = getProxyMiddleware(proxyConfig);\n          }\n        }\n\n        // - Check if we have a bypass function defined\n        // - In case the bypass function is defined we'll retrieve the\n        // bypassUrl from it otherwise bypassUrl would be null\n        const isByPassFuncDefined = typeof proxyConfig.bypass === 'function';\n        const bypassUrl = isByPassFuncDefined\n          ? proxyConfig.bypass(req, res, proxyConfig)\n          : null;\n\n        if (typeof bypassUrl === 'boolean') {\n          // skip the proxy\n          req.url = null;\n          next();\n        } else if (typeof bypassUrl === 'string') {\n          // byPass to that url\n          req.url = bypassUrl;\n          next();\n        } else if (proxyMiddleware) {\n          return proxyMiddleware(req, res, next);\n        } else {\n          next();\n        }\n      };\n\n      this.app.use(handle);\n      // Also forward error requests to the proxy so it can handle them.\n      this.app.use((error, req, res, next) => handle(req, res, next));\n    });\n  }\n\n  setupHistoryApiFallbackFeature() {\n    const fallback =\n      typeof this.options.historyApiFallback === 'object'\n        ? this.options.historyApiFallback\n        : null;\n\n    // Fall back to /index.html if nothing else matches.\n    this.app.use(historyApiFallback(fallback));\n  }\n\n  setupStaticFeature() {\n    const contentBase = this.options.contentBase;\n    const contentBasePublicPath = this.options.contentBasePublicPath;\n\n    if (Array.isArray(contentBase)) {\n      contentBase.forEach((item) => {\n        this.app.use(contentBasePublicPath, express.static(item));\n      });\n    } else if (isAbsoluteUrl(String(contentBase))) {\n      this.log.warn(\n        'Using a URL as contentBase is deprecated and will be removed in the next major version. Please use the proxy option instead.'\n      );\n\n      this.log.warn(\n        'proxy: {\\n\\t\"*\": \"<your current contentBase configuration>\"\\n}'\n      );\n\n      // Redirect every request to contentBase\n      this.app.get('*', (req, res) => {\n        res.writeHead(302, {\n          Location: contentBase + req.path + (req._parsedUrl.search || ''),\n        });\n\n        res.end();\n      });\n    } else if (typeof contentBase === 'number') {\n      this.log.warn(\n        'Using a number as contentBase is deprecated and will be removed in the next major version. Please use the proxy option instead.'\n      );\n\n      this.log.warn(\n        'proxy: {\\n\\t\"*\": \"//localhost:<your current contentBase configuration>\"\\n}'\n      );\n\n      // Redirect every request to the port contentBase\n      this.app.get('*', (req, res) => {\n        res.writeHead(302, {\n          Location: `//localhost:${contentBase}${req.path}${req._parsedUrl\n            .search || ''}`,\n        });\n\n        res.end();\n      });\n    } else {\n      // route content request\n      this.app.use(\n        contentBasePublicPath,\n        express.static(contentBase, this.options.staticOptions)\n      );\n    }\n  }\n\n  setupServeIndexFeature() {\n    const contentBase = this.options.contentBase;\n    const contentBasePublicPath = this.options.contentBasePublicPath;\n\n    if (Array.isArray(contentBase)) {\n      contentBase.forEach((item) => {\n        this.app.use(contentBasePublicPath, (req, res, next) => {\n          // serve-index doesn't fallthrough non-get/head request to next middleware\n          if (req.method !== 'GET' && req.method !== 'HEAD') {\n            return next();\n          }\n\n          serveIndex(item)(req, res, next);\n        });\n      });\n    } else if (\n      typeof contentBase !== 'number' &&\n      !isAbsoluteUrl(String(contentBase))\n    ) {\n      this.app.use(contentBasePublicPath, (req, res, next) => {\n        // serve-index doesn't fallthrough non-get/head request to next middleware\n        if (req.method !== 'GET' && req.method !== 'HEAD') {\n          return next();\n        }\n\n        serveIndex(contentBase)(req, res, next);\n      });\n    }\n  }\n\n  setupWatchStaticFeature() {\n    const contentBase = this.options.contentBase;\n\n    if (isAbsoluteUrl(String(contentBase)) || typeof contentBase === 'number') {\n      throw new Error('Watching remote files is not supported.');\n    } else if (Array.isArray(contentBase)) {\n      contentBase.forEach((item) => {\n        if (isAbsoluteUrl(String(item)) || typeof item === 'number') {\n          throw new Error('Watching remote files is not supported.');\n        }\n        this._watch(item);\n      });\n    } else {\n      this._watch(contentBase);\n    }\n  }\n\n  setupBeforeFeature() {\n    // Todo rename onBeforeSetupMiddleware in next major release\n    // Todo pass only `this` argument\n    this.options.before(this.app, this, this.compiler);\n  }\n\n  setupMiddleware() {\n    this.app.use(this.middleware);\n  }\n\n  setupAfterFeature() {\n    // Todo rename onAfterSetupMiddleware in next major release\n    // Todo pass only `this` argument\n    this.options.after(this.app, this, this.compiler);\n  }\n\n  setupHeadersFeature() {\n    this.app.all('*', this.setContentHeaders.bind(this));\n  }\n\n  setupMagicHtmlFeature() {\n    this.app.get('*', this.serveMagicHtml.bind(this));\n  }\n\n  setupSetupFeature() {\n    this.log.warn(\n      'The `setup` option is deprecated and will be removed in v4. Please update your config to use `before`'\n    );\n\n    this.options.setup(this.app, this);\n  }\n\n  setupFeatures() {\n    const features = {\n      compress: () => {\n        if (this.options.compress) {\n          this.setupCompressFeature();\n        }\n      },\n      proxy: () => {\n        if (this.options.proxy) {\n          this.setupProxyFeature();\n        }\n      },\n      historyApiFallback: () => {\n        if (this.options.historyApiFallback) {\n          this.setupHistoryApiFallbackFeature();\n        }\n      },\n      // Todo rename to `static` in future major release\n      contentBaseFiles: () => {\n        this.setupStaticFeature();\n      },\n      // Todo rename to `serveIndex` in future major release\n      contentBaseIndex: () => {\n        this.setupServeIndexFeature();\n      },\n      // Todo rename to `watchStatic` in future major release\n      watchContentBase: () => {\n        this.setupWatchStaticFeature();\n      },\n      before: () => {\n        if (typeof this.options.before === 'function') {\n          this.setupBeforeFeature();\n        }\n      },\n      middleware: () => {\n        // include our middleware to ensure\n        // it is able to handle '/index.html' request after redirect\n        this.setupMiddleware();\n      },\n      after: () => {\n        if (typeof this.options.after === 'function') {\n          this.setupAfterFeature();\n        }\n      },\n      headers: () => {\n        this.setupHeadersFeature();\n      },\n      magicHtml: () => {\n        this.setupMagicHtmlFeature();\n      },\n      setup: () => {\n        if (typeof this.options.setup === 'function') {\n          this.setupSetupFeature();\n        }\n      },\n    };\n\n    const runnableFeatures = [];\n\n    // compress is placed last and uses unshift so that it will be the first middleware used\n    if (this.options.compress) {\n      runnableFeatures.push('compress');\n    }\n\n    runnableFeatures.push('setup', 'before', 'headers', 'middleware');\n\n    if (this.options.proxy) {\n      runnableFeatures.push('proxy', 'middleware');\n    }\n\n    if (this.options.contentBase !== false) {\n      runnableFeatures.push('contentBaseFiles');\n    }\n\n    if (this.options.historyApiFallback) {\n      runnableFeatures.push('historyApiFallback', 'middleware');\n\n      if (this.options.contentBase !== false) {\n        runnableFeatures.push('contentBaseFiles');\n      }\n    }\n\n    // checking if it's set to true or not set (Default : undefined => true)\n    this.serveIndex = this.serveIndex || this.serveIndex === undefined;\n\n    if (this.options.contentBase && this.serveIndex) {\n      runnableFeatures.push('contentBaseIndex');\n    }\n\n    if (this.options.watchContentBase) {\n      runnableFeatures.push('watchContentBase');\n    }\n\n    runnableFeatures.push('magicHtml');\n\n    if (this.options.after) {\n      runnableFeatures.push('after');\n    }\n\n    (this.options.features || runnableFeatures).forEach((feature) => {\n      features[feature]();\n    });\n  }\n\n  setupHttps() {\n    // if the user enables http2, we can safely enable https\n    if (this.options.http2 && !this.options.https) {\n      this.options.https = true;\n    }\n\n    if (this.options.https) {\n      // for keep supporting CLI parameters\n      if (typeof this.options.https === 'boolean') {\n        this.options.https = {\n          ca: this.options.ca,\n          pfx: this.options.pfx,\n          key: this.options.key,\n          cert: this.options.cert,\n          passphrase: this.options.pfxPassphrase,\n          requestCert: this.options.requestCert || false,\n        };\n      }\n\n      for (const property of ['ca', 'pfx', 'key', 'cert']) {\n        const value = this.options.https[property];\n        const isBuffer = value instanceof Buffer;\n\n        if (value && !isBuffer) {\n          let stats = null;\n\n          try {\n            stats = fs.lstatSync(fs.realpathSync(value)).isFile();\n          } catch (error) {\n            // ignore error\n          }\n\n          // It is file\n          this.options.https[property] = stats\n            ? fs.readFileSync(path.resolve(value))\n            : value;\n        }\n      }\n\n      let fakeCert;\n\n      if (!this.options.https.key || !this.options.https.cert) {\n        fakeCert = getCertificate(this.log);\n      }\n\n      this.options.https.key = this.options.https.key || fakeCert;\n      this.options.https.cert = this.options.https.cert || fakeCert;\n\n      // note that options.spdy never existed. The user was able\n      // to set options.https.spdy before, though it was not in the\n      // docs. Keep options.https.spdy if the user sets it for\n      // backwards compatibility, but log a deprecation warning.\n      if (this.options.https.spdy) {\n        // for backwards compatibility: if options.https.spdy was passed in before,\n        // it was not altered in any way\n        this.log.warn(\n          'Providing custom spdy server options is deprecated and will be removed in the next major version.'\n        );\n      } else {\n        // if the normal https server gets this option, it will not affect it.\n        this.options.https.spdy = {\n          protocols: ['h2', 'http/1.1'],\n        };\n      }\n    }\n  }\n\n  createServer() {\n    if (this.options.https) {\n      // Only prevent HTTP/2 if http2 is explicitly set to false\n      const isHttp2 = this.options.http2 !== false;\n\n      // `spdy` is effectively unmaintained, and as a consequence of an\n      // implementation that extensively relies on Node’s non-public APIs, broken\n      // on Node 10 and above. In those cases, only https will be used for now.\n      // Once express supports Node's built-in HTTP/2 support, migrating over to\n      // that should be the best way to go.\n      // The relevant issues are:\n      // - https://github.com/nodejs/node/issues/21665\n      // - https://github.com/webpack/webpack-dev-server/issues/1449\n      // - https://github.com/expressjs/express/issues/3388\n      if (semver.gte(process.version, '10.0.0') || !isHttp2) {\n        if (this.options.http2) {\n          // the user explicitly requested http2 but is not getting it because\n          // of the node version.\n          this.log.warn(\n            'HTTP/2 is currently unsupported for Node 10.0.0 and above, but will be supported once Express supports it'\n          );\n        }\n        this.listeningApp = https.createServer(this.options.https, this.app);\n      } else {\n        // The relevant issues are:\n        // https://github.com/spdy-http2/node-spdy/issues/350\n        // https://github.com/webpack/webpack-dev-server/issues/1592\n        this.listeningApp = require('spdy').createServer(\n          this.options.https,\n          this.app\n        );\n      }\n    } else {\n      this.listeningApp = http.createServer(this.app);\n    }\n  }\n\n  createSocketServer() {\n    const SocketServerImplementation = this.socketServerImplementation;\n    this.socketServer = new SocketServerImplementation(this);\n\n    this.socketServer.onConnection((connection, headers) => {\n      if (!connection) {\n        return;\n      }\n\n      if (!headers) {\n        this.log.warn(\n          'transportMode.server implementation must pass headers to the callback of onConnection(f) ' +\n            'via f(connection, headers) in order for clients to pass a headers security check'\n        );\n      }\n\n      if (!headers || !this.checkHost(headers) || !this.checkOrigin(headers)) {\n        this.sockWrite([connection], 'error', 'Invalid Host/Origin header');\n\n        this.socketServer.close(connection);\n\n        return;\n      }\n\n      this.sockets.push(connection);\n\n      this.socketServer.onConnectionClose(connection, () => {\n        const idx = this.sockets.indexOf(connection);\n\n        if (idx >= 0) {\n          this.sockets.splice(idx, 1);\n        }\n      });\n\n      if (this.clientLogLevel) {\n        this.sockWrite([connection], 'log-level', this.clientLogLevel);\n      }\n\n      if (this.hot) {\n        this.sockWrite([connection], 'hot');\n      }\n\n      // TODO: change condition at major version\n      if (this.options.liveReload !== false) {\n        this.sockWrite([connection], 'liveReload', this.options.liveReload);\n      }\n\n      if (this.progress) {\n        this.sockWrite([connection], 'progress', this.progress);\n      }\n\n      if (this.clientOverlay) {\n        this.sockWrite([connection], 'overlay', this.clientOverlay);\n      }\n\n      if (!this._stats) {\n        return;\n      }\n\n      this._sendStats([connection], this.getStats(this._stats), true);\n    });\n  }\n\n  showStatus() {\n    const suffix =\n      this.options.inline !== false || this.options.lazy === true\n        ? '/'\n        : '/webpack-dev-server/';\n    const uri = `${createDomain(this.options, this.listeningApp)}${suffix}`;\n\n    status(\n      uri,\n      this.options,\n      this.log,\n      this.options.stats && this.options.stats.colors\n    );\n  }\n\n  listen(port, hostname, fn) {\n    this.hostname = hostname;\n\n    return this.listeningApp.listen(port, hostname, (err) => {\n      this.createSocketServer();\n\n      if (this.options.bonjour) {\n        runBonjour(this.options);\n      }\n\n      this.showStatus();\n\n      if (fn) {\n        fn.call(this.listeningApp, err);\n      }\n\n      if (typeof this.options.onListening === 'function') {\n        this.options.onListening(this);\n      }\n    });\n  }\n\n  close(cb) {\n    this.sockets.forEach((socket) => {\n      this.socketServer.close(socket);\n    });\n\n    this.sockets = [];\n\n    this.contentBaseWatchers.forEach((watcher) => {\n      watcher.close();\n    });\n\n    this.contentBaseWatchers = [];\n\n    this.listeningApp.kill(() => {\n      this.middleware.close(cb);\n    });\n  }\n\n  static get DEFAULT_STATS() {\n    return {\n      all: false,\n      hash: true,\n      assets: true,\n      warnings: true,\n      errors: true,\n      errorDetails: false,\n    };\n  }\n\n  getStats(statsObj) {\n    const stats = Server.DEFAULT_STATS;\n\n    if (this.originalStats.warningsFilter) {\n      stats.warningsFilter = this.originalStats.warningsFilter;\n    }\n\n    return statsObj.toJson(stats);\n  }\n\n  use() {\n    // eslint-disable-next-line\n    this.app.use.apply(this.app, arguments);\n  }\n\n  setContentHeaders(req, res, next) {\n    if (this.headers) {\n      // eslint-disable-next-line\n      for (const name in this.headers) {\n        res.setHeader(name, this.headers[name]);\n      }\n    }\n\n    next();\n  }\n\n  checkHost(headers) {\n    return this.checkHeaders(headers, 'host');\n  }\n\n  checkOrigin(headers) {\n    return this.checkHeaders(headers, 'origin');\n  }\n\n  checkHeaders(headers, headerToCheck) {\n    // allow user to opt-out this security check, at own risk\n    if (this.disableHostCheck) {\n      return true;\n    }\n\n    if (!headerToCheck) {\n      headerToCheck = 'host';\n    }\n\n    // get the Host header and extract hostname\n    // we don't care about port not matching\n    const hostHeader = headers[headerToCheck];\n\n    if (!hostHeader) {\n      return false;\n    }\n\n    // use the node url-parser to retrieve the hostname from the host-header.\n    const hostname = url.parse(\n      // if hostHeader doesn't have scheme, add // for parsing.\n      /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : `//${hostHeader}`,\n      false,\n      true\n    ).hostname;\n    // always allow requests with explicit IPv4 or IPv6-address.\n    // A note on IPv6 addresses:\n    // hostHeader will always contain the brackets denoting\n    // an IPv6-address in URLs,\n    // these are removed from the hostname in url.parse(),\n    // so we have the pure IPv6-address in hostname.\n    // always allow localhost host, for convenience (hostname === 'localhost')\n    // allow hostname of listening address  (hostname === this.hostname)\n    const isValidHostname =\n      ip.isV4Format(hostname) ||\n      ip.isV6Format(hostname) ||\n      hostname === 'localhost' ||\n      hostname === this.hostname;\n\n    if (isValidHostname) {\n      return true;\n    }\n    // always allow localhost host, for convenience\n    // allow if hostname is in allowedHosts\n    if (this.allowedHosts && this.allowedHosts.length) {\n      for (let hostIdx = 0; hostIdx < this.allowedHosts.length; hostIdx++) {\n        const allowedHost = this.allowedHosts[hostIdx];\n\n        if (allowedHost === hostname) {\n          return true;\n        }\n\n        // support \".\" as a subdomain wildcard\n        // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n        if (allowedHost[0] === '.') {\n          // \"example.com\"  (hostname === allowedHost.substring(1))\n          // \"*.example.com\"  (hostname.endsWith(allowedHost))\n          if (\n            hostname === allowedHost.substring(1) ||\n            hostname.endsWith(allowedHost)\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n\n    // also allow public hostname if provided\n    if (typeof this.publicHost === 'string') {\n      const idxPublic = this.publicHost.indexOf(':');\n      const publicHostname =\n        idxPublic >= 0 ? this.publicHost.substr(0, idxPublic) : this.publicHost;\n\n      if (hostname === publicHostname) {\n        return true;\n      }\n    }\n\n    // disallow\n    return false;\n  }\n\n  // eslint-disable-next-line\n  sockWrite(sockets, type, data) {\n    sockets.forEach((socket) => {\n      this.socketServer.send(socket, JSON.stringify({ type, data }));\n    });\n  }\n\n  serveMagicHtml(req, res, next) {\n    const _path = req.path;\n\n    try {\n      const isFile = this.middleware.fileSystem\n        .statSync(this.middleware.getFilenameFromUrl(`${_path}.js`))\n        .isFile();\n\n      if (!isFile) {\n        return next();\n      }\n      // Serve a page that executes the javascript\n      const queries = req._parsedUrl.search || '';\n      const responsePage = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body><script type=\"text/javascript\" charset=\"utf-8\" src=\"${_path}.js${queries}\"></script></body></html>`;\n      res.send(responsePage);\n    } catch (err) {\n      return next();\n    }\n  }\n\n  // send stats to a socket or multiple sockets\n  _sendStats(sockets, stats, force) {\n    const shouldEmit =\n      !force &&\n      stats &&\n      (!stats.errors || stats.errors.length === 0) &&\n      stats.assets &&\n      stats.assets.every((asset) => !asset.emitted);\n\n    if (shouldEmit) {\n      return this.sockWrite(sockets, 'still-ok');\n    }\n\n    this.sockWrite(sockets, 'hash', stats.hash);\n\n    if (stats.errors.length > 0) {\n      this.sockWrite(sockets, 'errors', stats.errors);\n    } else if (stats.warnings.length > 0) {\n      this.sockWrite(sockets, 'warnings', stats.warnings);\n    } else {\n      this.sockWrite(sockets, 'ok');\n    }\n  }\n\n  _watch(watchPath) {\n    // duplicate the same massaging of options that watchpack performs\n    // https://github.com/webpack/watchpack/blob/master/lib/DirectoryWatcher.js#L49\n    // this isn't an elegant solution, but we'll improve it in the future\n    const usePolling = this.watchOptions.poll ? true : undefined;\n    const interval =\n      typeof this.watchOptions.poll === 'number'\n        ? this.watchOptions.poll\n        : undefined;\n\n    const watchOptions = {\n      ignoreInitial: true,\n      persistent: true,\n      followSymlinks: false,\n      atomic: false,\n      alwaysStat: true,\n      ignorePermissionErrors: true,\n      ignored: this.watchOptions.ignored,\n      usePolling,\n      interval,\n    };\n\n    const watcher = chokidar.watch(watchPath, watchOptions);\n    // disabling refreshing on changing the content\n    if (this.options.liveReload !== false) {\n      watcher.on('change', () => {\n        this.sockWrite(this.sockets, 'content-changed');\n      });\n    }\n    this.contentBaseWatchers.push(watcher);\n  }\n\n  invalidate(callback) {\n    if (this.middleware) {\n      this.middleware.invalidate(callback);\n    }\n  }\n}\n\n// Export this logic,\n// so that other implementations,\n// like task-runners can use it\nServer.addDevServerEntrypoints = require('./utils/addEntries');\n\nmodule.exports = Server;\n"]},"metadata":{},"sourceType":"script"}