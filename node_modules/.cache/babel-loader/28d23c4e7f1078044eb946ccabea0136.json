{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestConfig() {\n  const data = require('jest-config');\n\n  _jestConfig = function _jestConfig() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst stringifyOption = (option, map, linePrefix = '') => {\n  const optionDescription = `  // ${_jestConfig().descriptions[option]}`;\n  const stringifiedObject = `${option}: ${JSON.stringify(map[option], null, 2)}`;\n  return optionDescription + '\\n' + stringifiedObject.split('\\n').map(line => '  ' + linePrefix + line).join('\\n') + ',\\n';\n};\n\nconst generateConfigFile = results => {\n  const coverage = results.coverage,\n        clearMocks = results.clearMocks,\n        environment = results.environment;\n  const overrides = {};\n\n  if (coverage) {\n    Object.assign(overrides, {\n      coverageDirectory: 'coverage'\n    });\n  }\n\n  if (environment === 'node') {\n    Object.assign(overrides, {\n      testEnvironment: 'node'\n    });\n  }\n\n  if (clearMocks) {\n    Object.assign(overrides, {\n      clearMocks: true\n    });\n  }\n\n  const overrideKeys = Object.keys(overrides);\n  const properties = [];\n\n  for (const option in _jestConfig().descriptions) {\n    const opt = option;\n\n    if (overrideKeys.includes(opt)) {\n      properties.push(stringifyOption(opt, overrides));\n    } else {\n      properties.push(stringifyOption(opt, _jestConfig().defaults, '// '));\n    }\n  }\n\n  return '// For a detailed explanation regarding each configuration property, visit:\\n' + '// https://jestjs.io/docs/en/configuration.html\\n\\n' + 'module.exports = {\\n' + properties.join('\\n') + '};\\n';\n};\n\nvar _default = generateConfigFile;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest/node_modules/jest-cli/build/init/generate_config_file.js"],"names":["Object","defineProperty","exports","value","default","_jestConfig","data","require","stringifyOption","option","map","linePrefix","optionDescription","descriptions","stringifiedObject","JSON","stringify","split","line","join","generateConfigFile","results","coverage","clearMocks","environment","overrides","assign","coverageDirectory","testEnvironment","overrideKeys","keys","properties","opt","includes","push","defaults","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,WAAT,GAAuB;AACrB,QAAMC,IAAI,GAAGC,OAAO,CAAC,aAAD,CAApB;;AAEAF,EAAAA,WAAW,GAAG,SAASA,WAAT,GAAuB;AACnC,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;AAED;;;;;;;;AAMA,MAAME,eAAe,GAAG,CAACC,MAAD,EAASC,GAAT,EAAcC,UAAU,GAAG,EAA3B,KAAkC;AACxD,QAAMC,iBAAiB,GAAI,QAAOP,WAAW,GAAGQ,YAAd,CAA2BJ,MAA3B,CAAmC,EAArE;AACA,QAAMK,iBAAiB,GAAI,GAAEL,MAAO,KAAIM,IAAI,CAACC,SAAL,CACtCN,GAAG,CAACD,MAAD,CADmC,EAEtC,IAFsC,EAGtC,CAHsC,CAItC,EAJF;AAKA,SACEG,iBAAiB,GACjB,IADA,GAEAE,iBAAiB,CACdG,KADH,CACS,IADT,EAEGP,GAFH,CAEOQ,IAAI,IAAI,OAAOP,UAAP,GAAoBO,IAFnC,EAGGC,IAHH,CAGQ,IAHR,CAFA,GAMA,KAPF;AASD,CAhBD;;AAkBA,MAAMC,kBAAkB,GAAGC,OAAO,IAAI;AACpC,QAAMC,QAAQ,GAAGD,OAAO,CAACC,QAAzB;AAAA,QACEC,UAAU,GAAGF,OAAO,CAACE,UADvB;AAAA,QAEEC,WAAW,GAAGH,OAAO,CAACG,WAFxB;AAGA,QAAMC,SAAS,GAAG,EAAlB;;AAEA,MAAIH,QAAJ,EAAc;AACZtB,IAAAA,MAAM,CAAC0B,MAAP,CAAcD,SAAd,EAAyB;AACvBE,MAAAA,iBAAiB,EAAE;AADI,KAAzB;AAGD;;AAED,MAAIH,WAAW,KAAK,MAApB,EAA4B;AAC1BxB,IAAAA,MAAM,CAAC0B,MAAP,CAAcD,SAAd,EAAyB;AACvBG,MAAAA,eAAe,EAAE;AADM,KAAzB;AAGD;;AAED,MAAIL,UAAJ,EAAgB;AACdvB,IAAAA,MAAM,CAAC0B,MAAP,CAAcD,SAAd,EAAyB;AACvBF,MAAAA,UAAU,EAAE;AADW,KAAzB;AAGD;;AAED,QAAMM,YAAY,GAAG7B,MAAM,CAAC8B,IAAP,CAAYL,SAAZ,CAArB;AACA,QAAMM,UAAU,GAAG,EAAnB;;AAEA,OAAK,MAAMtB,MAAX,IAAqBJ,WAAW,GAAGQ,YAAnC,EAAiD;AAC/C,UAAMmB,GAAG,GAAGvB,MAAZ;;AAEA,QAAIoB,YAAY,CAACI,QAAb,CAAsBD,GAAtB,CAAJ,EAAgC;AAC9BD,MAAAA,UAAU,CAACG,IAAX,CAAgB1B,eAAe,CAACwB,GAAD,EAAMP,SAAN,CAA/B;AACD,KAFD,MAEO;AACLM,MAAAA,UAAU,CAACG,IAAX,CAAgB1B,eAAe,CAACwB,GAAD,EAAM3B,WAAW,GAAG8B,QAApB,EAA8B,KAA9B,CAA/B;AACD;AACF;;AAED,SACE,kFACA,qDADA,GAEA,sBAFA,GAGAJ,UAAU,CAACZ,IAAX,CAAgB,IAAhB,CAHA,GAIA,MALF;AAOD,CA5CD;;AA8CA,IAAIiB,QAAQ,GAAGhB,kBAAf;AACAlB,OAAO,CAACE,OAAR,GAAkBgC,QAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestConfig() {\n  const data = require('jest-config');\n\n  _jestConfig = function _jestConfig() {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst stringifyOption = (option, map, linePrefix = '') => {\n  const optionDescription = `  // ${_jestConfig().descriptions[option]}`;\n  const stringifiedObject = `${option}: ${JSON.stringify(\n    map[option],\n    null,\n    2\n  )}`;\n  return (\n    optionDescription +\n    '\\n' +\n    stringifiedObject\n      .split('\\n')\n      .map(line => '  ' + linePrefix + line)\n      .join('\\n') +\n    ',\\n'\n  );\n};\n\nconst generateConfigFile = results => {\n  const coverage = results.coverage,\n    clearMocks = results.clearMocks,\n    environment = results.environment;\n  const overrides = {};\n\n  if (coverage) {\n    Object.assign(overrides, {\n      coverageDirectory: 'coverage'\n    });\n  }\n\n  if (environment === 'node') {\n    Object.assign(overrides, {\n      testEnvironment: 'node'\n    });\n  }\n\n  if (clearMocks) {\n    Object.assign(overrides, {\n      clearMocks: true\n    });\n  }\n\n  const overrideKeys = Object.keys(overrides);\n  const properties = [];\n\n  for (const option in _jestConfig().descriptions) {\n    const opt = option;\n\n    if (overrideKeys.includes(opt)) {\n      properties.push(stringifyOption(opt, overrides));\n    } else {\n      properties.push(stringifyOption(opt, _jestConfig().defaults, '// '));\n    }\n  }\n\n  return (\n    '// For a detailed explanation regarding each configuration property, visit:\\n' +\n    '// https://jestjs.io/docs/en/configuration.html\\n\\n' +\n    'module.exports = {\\n' +\n    properties.join('\\n') +\n    '};\\n'\n  );\n};\n\nvar _default = generateConfigFile;\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}