{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findPackageData = findPackageData;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst PACKAGE_FILENAME = \"package.json\";\n\nfunction* findPackageData(filepath) {\n  let pkg = null;\n  const directories = [];\n  let isPackage = true;\n\n  let dirname = _path().default.dirname(filepath);\n\n  while (!pkg && _path().default.basename(dirname) !== \"node_modules\") {\n    directories.push(dirname);\n    pkg = yield* readConfigPackage(_path().default.join(dirname, PACKAGE_FILENAME));\n\n    const nextLoc = _path().default.dirname(dirname);\n\n    if (dirname === nextLoc) {\n      isPackage = false;\n      break;\n    }\n\n    dirname = nextLoc;\n  }\n\n  return {\n    filepath,\n    directories,\n    pkg,\n    isPackage\n  };\n}\n\nconst readConfigPackage = (0, _utils.makeStaticFileCache)((filepath, content) => {\n  let options;\n\n  try {\n    options = JSON.parse(content);\n  } catch (err) {\n    err.message = `${filepath}: Error while parsing JSON - ${err.message}`;\n    throw err;\n  }\n\n  if (typeof options !== \"object\") {\n    throw new Error(`${filepath}: Config returned typeof ${typeof options}`);\n  }\n\n  if (Array.isArray(options)) {\n    throw new Error(`${filepath}: Expected config object but found array`);\n  }\n\n  return {\n    filepath,\n    dirname: _path().default.dirname(filepath),\n    options\n  };\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@babel/core/lib/config/files/package.js"],"names":["Object","defineProperty","exports","value","findPackageData","_path","data","_interopRequireDefault","require","_utils","obj","__esModule","default","PACKAGE_FILENAME","filepath","pkg","directories","isPackage","dirname","basename","push","readConfigPackage","join","nextLoc","makeStaticFileCache","content","options","JSON","parse","err","message","Error","Array","isArray"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BA,eAA1B;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAnC;;AAEAH,EAAAA,KAAK,GAAG,YAAY;AAClB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIG,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,MAAMG,gBAAgB,GAAG,cAAzB;;AAEA,UAAUT,eAAV,CAA0BU,QAA1B,EAAoC;AAClC,MAAIC,GAAG,GAAG,IAAV;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,MAAIC,SAAS,GAAG,IAAhB;;AAEA,MAAIC,OAAO,GAAGb,KAAK,GAAGO,OAAR,CAAgBM,OAAhB,CAAwBJ,QAAxB,CAAd;;AAEA,SAAO,CAACC,GAAD,IAAQV,KAAK,GAAGO,OAAR,CAAgBO,QAAhB,CAAyBD,OAAzB,MAAsC,cAArD,EAAqE;AACnEF,IAAAA,WAAW,CAACI,IAAZ,CAAiBF,OAAjB;AACAH,IAAAA,GAAG,GAAG,OAAOM,iBAAiB,CAAChB,KAAK,GAAGO,OAAR,CAAgBU,IAAhB,CAAqBJ,OAArB,EAA8BL,gBAA9B,CAAD,CAA9B;;AAEA,UAAMU,OAAO,GAAGlB,KAAK,GAAGO,OAAR,CAAgBM,OAAhB,CAAwBA,OAAxB,CAAhB;;AAEA,QAAIA,OAAO,KAAKK,OAAhB,EAAyB;AACvBN,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAEDC,IAAAA,OAAO,GAAGK,OAAV;AACD;;AAED,SAAO;AACLT,IAAAA,QADK;AAELE,IAAAA,WAFK;AAGLD,IAAAA,GAHK;AAILE,IAAAA;AAJK,GAAP;AAMD;;AAED,MAAMI,iBAAiB,GAAG,CAAC,GAAGZ,MAAM,CAACe,mBAAX,EAAgC,CAACV,QAAD,EAAWW,OAAX,KAAuB;AAC/E,MAAIC,OAAJ;;AAEA,MAAI;AACFA,IAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAX,CAAV;AACD,GAFD,CAEE,OAAOI,GAAP,EAAY;AACZA,IAAAA,GAAG,CAACC,OAAJ,GAAe,GAAEhB,QAAS,gCAA+Be,GAAG,CAACC,OAAQ,EAArE;AACA,UAAMD,GAAN;AACD;;AAED,MAAI,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAM,IAAIK,KAAJ,CAAW,GAAEjB,QAAS,4BAA2B,OAAOY,OAAQ,EAAhE,CAAN;AACD;;AAED,MAAIM,KAAK,CAACC,OAAN,CAAcP,OAAd,CAAJ,EAA4B;AAC1B,UAAM,IAAIK,KAAJ,CAAW,GAAEjB,QAAS,0CAAtB,CAAN;AACD;;AAED,SAAO;AACLA,IAAAA,QADK;AAELI,IAAAA,OAAO,EAAEb,KAAK,GAAGO,OAAR,CAAgBM,OAAhB,CAAwBJ,QAAxB,CAFJ;AAGLY,IAAAA;AAHK,GAAP;AAKD,CAvByB,CAA1B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findPackageData = findPackageData;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst PACKAGE_FILENAME = \"package.json\";\n\nfunction* findPackageData(filepath) {\n  let pkg = null;\n  const directories = [];\n  let isPackage = true;\n\n  let dirname = _path().default.dirname(filepath);\n\n  while (!pkg && _path().default.basename(dirname) !== \"node_modules\") {\n    directories.push(dirname);\n    pkg = yield* readConfigPackage(_path().default.join(dirname, PACKAGE_FILENAME));\n\n    const nextLoc = _path().default.dirname(dirname);\n\n    if (dirname === nextLoc) {\n      isPackage = false;\n      break;\n    }\n\n    dirname = nextLoc;\n  }\n\n  return {\n    filepath,\n    directories,\n    pkg,\n    isPackage\n  };\n}\n\nconst readConfigPackage = (0, _utils.makeStaticFileCache)((filepath, content) => {\n  let options;\n\n  try {\n    options = JSON.parse(content);\n  } catch (err) {\n    err.message = `${filepath}: Error while parsing JSON - ${err.message}`;\n    throw err;\n  }\n\n  if (typeof options !== \"object\") {\n    throw new Error(`${filepath}: Config returned typeof ${typeof options}`);\n  }\n\n  if (Array.isArray(options)) {\n    throw new Error(`${filepath}: Expected config object but found array`);\n  }\n\n  return {\n    filepath,\n    dirname: _path().default.dirname(filepath),\n    options\n  };\n});"]},"metadata":{},"sourceType":"script"}