{"ast":null,"code":"/**\n * Extractor function for a Literal type value node.\n *\n * @param - value - AST Value object with type `Literal`\n * @returns { String|Boolean } - The extracted value converted to correct type.\n */\nexport default function extractValueFromLiteral(value) {\n  const {\n    value: extractedValue\n  } = value;\n  const normalizedStringValue = typeof extractedValue === 'string' && extractedValue.toLowerCase();\n\n  if (normalizedStringValue === 'true') {\n    return true;\n  }\n\n  if (normalizedStringValue === 'false') {\n    return false;\n  }\n\n  return extractedValue;\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jsx-ast-utils/src/values/Literal.js"],"names":["extractValueFromLiteral","value","extractedValue","normalizedStringValue","toLowerCase"],"mappings":"AAAA;;;;;;AAMA,eAAe,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;AACrD,QAAM;AAAEA,IAAAA,KAAK,EAAEC;AAAT,MAA4BD,KAAlC;AAEA,QAAME,qBAAqB,GAAG,OAAOD,cAAP,KAA0B,QAA1B,IAAsCA,cAAc,CAACE,WAAf,EAApE;;AACA,MAAID,qBAAqB,KAAK,MAA9B,EAAsC;AACpC,WAAO,IAAP;AACD;;AAED,MAAIA,qBAAqB,KAAK,OAA9B,EAAuC;AACrC,WAAO,KAAP;AACD;;AAED,SAAOD,cAAP;AACD","sourcesContent":["/**\n * Extractor function for a Literal type value node.\n *\n * @param - value - AST Value object with type `Literal`\n * @returns { String|Boolean } - The extracted value converted to correct type.\n */\nexport default function extractValueFromLiteral(value) {\n  const { value: extractedValue } = value;\n\n  const normalizedStringValue = typeof extractedValue === 'string' && extractedValue.toLowerCase();\n  if (normalizedStringValue === 'true') {\n    return true;\n  }\n\n  if (normalizedStringValue === 'false') {\n    return false;\n  }\n\n  return extractedValue;\n}\n"]},"metadata":{},"sourceType":"module"}