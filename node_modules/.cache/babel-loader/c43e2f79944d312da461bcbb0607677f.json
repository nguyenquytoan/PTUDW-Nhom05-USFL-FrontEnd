{"ast":null,"code":"/** \r\n * JSON Schema link handler\r\n * Copyright (c) 2007 Kris Zyp SitePen (www.sitepen.com)\r\n * Licensed under the MIT (MIT-LICENSE.txt) license.\r\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return factory();\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.jsonSchemaLinks = factory();\n  }\n})(this, function () {\n  // setup primitive classes to be JSON Schema types\n  var exports = {};\n  exports.cacheLinks = true;\n\n  exports.getLink = function (relation, instance, schema) {\n    // gets the URI of the link for the given relation based on the instance and schema\n    // for example:\n    // getLink(\n    // \t\t\"brother\", \n    // \t\t{\"brother_id\":33}, \n    // \t\t{links:[{rel:\"brother\", href:\"Brother/{brother_id}\"}]}) ->\n    //\t\"Brother/33\"\n    var links = schema.__linkTemplates;\n\n    if (!links) {\n      links = {};\n      var schemaLinks = schema.links;\n\n      if (schemaLinks && schemaLinks instanceof Array) {\n        schemaLinks.forEach(function (link) {\n          /*\t\t\t// TODO: allow for multiple same-name relations\r\n          \t\t\tif(links[link.rel]){\r\n          \t\t\t\tif(!(links[link.rel] instanceof Array)){\r\n          \t\t\t\t\tlinks[link.rel] = [links[link.rel]];\r\n          \t\t\t\t}\r\n          \t\t\t}*/\n          links[link.rel] = link.href;\n        });\n      }\n\n      if (exports.cacheLinks) {\n        schema.__linkTemplates = links;\n      }\n    }\n\n    var linkTemplate = links[relation];\n    return linkTemplate && exports.substitute(linkTemplate, instance);\n  };\n\n  exports.substitute = function (linkTemplate, instance) {\n    return linkTemplate.replace(/\\{([^\\}]*)\\}/g, function (t, property) {\n      var value = instance[decodeURIComponent(property)];\n\n      if (value instanceof Array) {\n        // the value is an array, it should produce a URI like /Table/(4,5,8) and store.get() should handle that as an array of values\n        return '(' + value.join(',') + ')';\n      }\n\n      return value;\n    });\n  };\n\n  return exports;\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/json-schema/lib/links.js"],"names":["root","factory","define","amd","module","exports","jsonSchemaLinks","cacheLinks","getLink","relation","instance","schema","links","__linkTemplates","schemaLinks","Array","forEach","link","rel","href","linkTemplate","substitute","replace","t","property","value","decodeURIComponent","join"],"mappings":"AAAA;;;;;AAKC,WAAUA,IAAV,EAAgBC,OAAhB,EAAyB;AACtB,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC5C;AACAD,IAAAA,MAAM,CAAC,EAAD,EAAK,YAAY;AACnB,aAAOD,OAAO,EAAd;AACH,KAFK,CAAN;AAGH,GALD,MAKO,IAAI,OAAOG,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,OAAzC,EAAkD;AACrD;AACA;AACA;AACAD,IAAAA,MAAM,CAACC,OAAP,GAAiBJ,OAAO,EAAxB;AACH,GALM,MAKA;AACH;AACAD,IAAAA,IAAI,CAACM,eAAL,GAAuBL,OAAO,EAA9B;AACH;AACJ,CAfA,EAeC,IAfD,EAeO,YAAY;AAAC;AACrB,MAAII,OAAO,GAAG,EAAd;AACAA,EAAAA,OAAO,CAACE,UAAR,GAAqB,IAArB;;AACAF,EAAAA,OAAO,CAACG,OAAR,GAAkB,UAASC,QAAT,EAAmBC,QAAnB,EAA6BC,MAA7B,EAAoC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIC,KAAK,GAAGD,MAAM,CAACE,eAAnB;;AACA,QAAG,CAACD,KAAJ,EAAU;AACTA,MAAAA,KAAK,GAAG,EAAR;AACA,UAAIE,WAAW,GAAGH,MAAM,CAACC,KAAzB;;AACA,UAAGE,WAAW,IAAIA,WAAW,YAAYC,KAAzC,EAA+C;AAC9CD,QAAAA,WAAW,CAACE,OAAZ,CAAoB,UAASC,IAAT,EAAc;AACpC;;;;;;AAMGL,UAAAA,KAAK,CAACK,IAAI,CAACC,GAAN,CAAL,GAAkBD,IAAI,CAACE,IAAvB;AACA,SARD;AASA;;AACD,UAAGd,OAAO,CAACE,UAAX,EAAsB;AACrBI,QAAAA,MAAM,CAACE,eAAP,GAAyBD,KAAzB;AACA;AACD;;AACD,QAAIQ,YAAY,GAAGR,KAAK,CAACH,QAAD,CAAxB;AACA,WAAOW,YAAY,IAAIf,OAAO,CAACgB,UAAR,CAAmBD,YAAnB,EAAiCV,QAAjC,CAAvB;AACA,GA7BD;;AA+BAL,EAAAA,OAAO,CAACgB,UAAR,GAAqB,UAASD,YAAT,EAAuBV,QAAvB,EAAgC;AACpD,WAAOU,YAAY,CAACE,OAAb,CAAqB,eAArB,EAAsC,UAASC,CAAT,EAAYC,QAAZ,EAAqB;AAChE,UAAIC,KAAK,GAAGf,QAAQ,CAACgB,kBAAkB,CAACF,QAAD,CAAnB,CAApB;;AACA,UAAGC,KAAK,YAAYV,KAApB,EAA0B;AACzB;AACA,eAAO,MAAMU,KAAK,CAACE,IAAN,CAAW,GAAX,CAAN,GAAwB,GAA/B;AACA;;AACD,aAAOF,KAAP;AACA,KAPK,CAAP;AAQA,GATD;;AAUA,SAAOpB,OAAP;AACC,CA5DA,CAAD","sourcesContent":["/** \r\n * JSON Schema link handler\r\n * Copyright (c) 2007 Kris Zyp SitePen (www.sitepen.com)\r\n * Licensed under the MIT (MIT-LICENSE.txt) license.\r\n */\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define([], function () {\r\n            return factory();\r\n        });\r\n    } else if (typeof module === 'object' && module.exports) {\r\n        // Node. Does not work with strict CommonJS, but\r\n        // only CommonJS-like environments that support module.exports,\r\n        // like Node.\r\n        module.exports = factory();\r\n    } else {\r\n        // Browser globals\r\n        root.jsonSchemaLinks = factory();\r\n    }\r\n}(this, function () {// setup primitive classes to be JSON Schema types\r\nvar exports = {};\r\nexports.cacheLinks = true;\r\nexports.getLink = function(relation, instance, schema){\r\n\t// gets the URI of the link for the given relation based on the instance and schema\r\n\t// for example:\r\n\t// getLink(\r\n\t// \t\t\"brother\", \r\n\t// \t\t{\"brother_id\":33}, \r\n\t// \t\t{links:[{rel:\"brother\", href:\"Brother/{brother_id}\"}]}) ->\r\n\t//\t\"Brother/33\"\r\n\tvar links = schema.__linkTemplates; \r\n\tif(!links){\r\n\t\tlinks = {};\r\n\t\tvar schemaLinks = schema.links;\r\n\t\tif(schemaLinks && schemaLinks instanceof Array){\r\n\t\t\tschemaLinks.forEach(function(link){\r\n\t/*\t\t\t// TODO: allow for multiple same-name relations\r\n\t\t\t\tif(links[link.rel]){\r\n\t\t\t\t\tif(!(links[link.rel] instanceof Array)){\r\n\t\t\t\t\t\tlinks[link.rel] = [links[link.rel]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t\tlinks[link.rel] = link.href;\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(exports.cacheLinks){\r\n\t\t\tschema.__linkTemplates = links;\r\n\t\t}\r\n\t}\r\n\tvar linkTemplate = links[relation];\r\n\treturn linkTemplate && exports.substitute(linkTemplate, instance);\r\n};\r\n\r\nexports.substitute = function(linkTemplate, instance){\r\n\treturn linkTemplate.replace(/\\{([^\\}]*)\\}/g, function(t, property){\r\n\t\t\tvar value = instance[decodeURIComponent(property)];\r\n\t\t\tif(value instanceof Array){\r\n\t\t\t\t// the value is an array, it should produce a URI like /Table/(4,5,8) and store.get() should handle that as an array of values\r\n\t\t\t\treturn '(' + value.join(',') + ')';\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t});\r\n};\r\nreturn exports;\r\n}));"]},"metadata":{},"sourceType":"script"}