{"ast":null,"code":"/**\n * Extractor function for an UpdateExpression type value node.\n * An update expression is an expression with an update operator.\n * For example, foo++ will evaluate to foo + 1.\n *\n * @param - value - AST Value object with type `UpdateExpression`\n * @returns - The extracted value converted to correct type.\n */\nexport default function extractValueFromUpdateExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('./index.js').default;\n\n  const {\n    operator,\n    argument,\n    prefix\n  } = value;\n  let val = getValue(argument);\n\n  switch (operator) {\n    case '++':\n      return prefix ? ++val : val++;\n    // eslint-disable-line no-plusplus\n\n    case '--':\n      return prefix ? --val : val--;\n    // eslint-disable-line no-plusplus\n\n    default:\n      return undefined;\n  }\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jsx-ast-utils/src/values/expressions/UpdateExpression.js"],"names":["extractValueFromUpdateExpression","value","getValue","require","default","operator","argument","prefix","val","undefined"],"mappings":"AAAA;;;;;;;;AAQA,eAAe,SAASA,gCAAT,CAA0CC,KAA1C,EAAiD;AAC9D;AACA,QAAMC,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAAvC;;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAiCN,KAAvC;AAEA,MAAIO,GAAG,GAAGN,QAAQ,CAACI,QAAD,CAAlB;;AAEA,UAAQD,QAAR;AACE,SAAK,IAAL;AACE,aAAOE,MAAM,GAAG,EAAEC,GAAL,GAAWA,GAAG,EAA3B;AAA+B;;AACjC,SAAK,IAAL;AACE,aAAOD,MAAM,GAAG,EAAEC,GAAL,GAAWA,GAAG,EAA3B;AAA+B;;AACjC;AACE,aAAOC,SAAP;AANJ;AAQD","sourcesContent":["/**\n * Extractor function for an UpdateExpression type value node.\n * An update expression is an expression with an update operator.\n * For example, foo++ will evaluate to foo + 1.\n *\n * @param - value - AST Value object with type `UpdateExpression`\n * @returns - The extracted value converted to correct type.\n */\nexport default function extractValueFromUpdateExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('./index.js').default;\n  const { operator, argument, prefix } = value;\n\n  let val = getValue(argument);\n\n  switch (operator) {\n    case '++':\n      return prefix ? ++val : val++; // eslint-disable-line no-plusplus\n    case '--':\n      return prefix ? --val : val--; // eslint-disable-line no-plusplus\n    default:\n      return undefined;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}