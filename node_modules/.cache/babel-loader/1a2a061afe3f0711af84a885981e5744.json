{"ast":null,"code":"/* global MyCustomLogger, log */\n\"use strict\";\n\ndescribe(\"loglevel from a global <script> tag with a custom context\", function () {\n  it(\"is available globally\", function () {\n    expect(MyCustomLogger).not.toBeUndefined();\n  });\n  it(\"doesn't have log defined globally\", function () {\n    expect(window.log).not.toBeDefined();\n  });\n  it(\"allows setting the logging level\", function () {\n    MyCustomLogger.setLevel(MyCustomLogger.levels.TRACE);\n    MyCustomLogger.setLevel(MyCustomLogger.levels.DEBUG);\n    MyCustomLogger.setLevel(MyCustomLogger.levels.INFO);\n    MyCustomLogger.setLevel(MyCustomLogger.levels.WARN);\n    MyCustomLogger.setLevel(MyCustomLogger.levels.ERROR);\n  });\n  it(\"successfully logs\", function () {\n    window.console = {\n      \"log\": jasmine.createSpy(\"log\")\n    };\n    MyCustomLogger.setLevel(MyCustomLogger.levels.INFO);\n    MyCustomLogger.info(\"test message\");\n    expect(console.log).toHaveBeenCalledWith(\"test message\");\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/loglevel/test/global-integration-with-new-context.js"],"names":["describe","it","expect","MyCustomLogger","not","toBeUndefined","window","log","toBeDefined","setLevel","levels","TRACE","DEBUG","INFO","WARN","ERROR","console","jasmine","createSpy","info","toHaveBeenCalledWith"],"mappings":"AAAA;AACA;;AAEAA,QAAQ,CAAC,2DAAD,EAA8D,YAAY;AAC9EC,EAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAY;AACpCC,IAAAA,MAAM,CAACC,cAAD,CAAN,CAAuBC,GAAvB,CAA2BC,aAA3B;AACH,GAFC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,mCAAD,EAAsC,YAAY;AAChDC,IAAAA,MAAM,CAACI,MAAM,CAACC,GAAR,CAAN,CAAmBH,GAAnB,CAAuBI,WAAvB;AACH,GAFC,CAAF;AAIAP,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAY;AAC/CE,IAAAA,cAAc,CAACM,QAAf,CAAwBN,cAAc,CAACO,MAAf,CAAsBC,KAA9C;AACAR,IAAAA,cAAc,CAACM,QAAf,CAAwBN,cAAc,CAACO,MAAf,CAAsBE,KAA9C;AACAT,IAAAA,cAAc,CAACM,QAAf,CAAwBN,cAAc,CAACO,MAAf,CAAsBG,IAA9C;AACAV,IAAAA,cAAc,CAACM,QAAf,CAAwBN,cAAc,CAACO,MAAf,CAAsBI,IAA9C;AACAX,IAAAA,cAAc,CAACM,QAAf,CAAwBN,cAAc,CAACO,MAAf,CAAsBK,KAA9C;AACH,GANC,CAAF;AAQAd,EAAAA,EAAE,CAAC,mBAAD,EAAsB,YAAY;AAChCK,IAAAA,MAAM,CAACU,OAAP,GAAiB;AAAE,aAAOC,OAAO,CAACC,SAAR,CAAkB,KAAlB;AAAT,KAAjB;AAEAf,IAAAA,cAAc,CAACM,QAAf,CAAwBN,cAAc,CAACO,MAAf,CAAsBG,IAA9C;AACAV,IAAAA,cAAc,CAACgB,IAAf,CAAoB,cAApB;AAEAjB,IAAAA,MAAM,CAACc,OAAO,CAACT,GAAT,CAAN,CAAoBa,oBAApB,CAAyC,cAAzC;AACH,GAPC,CAAF;AAQH,CAzBO,CAAR","sourcesContent":["/* global MyCustomLogger, log */\n\"use strict\";\n\ndescribe(\"loglevel from a global <script> tag with a custom context\", function () {\n    it(\"is available globally\", function () {\n        expect(MyCustomLogger).not.toBeUndefined();\n    });\n\n    it(\"doesn't have log defined globally\", function () {\n        expect(window.log).not.toBeDefined();\n    });\n\n    it(\"allows setting the logging level\", function () {\n        MyCustomLogger.setLevel(MyCustomLogger.levels.TRACE);\n        MyCustomLogger.setLevel(MyCustomLogger.levels.DEBUG);\n        MyCustomLogger.setLevel(MyCustomLogger.levels.INFO);\n        MyCustomLogger.setLevel(MyCustomLogger.levels.WARN);\n        MyCustomLogger.setLevel(MyCustomLogger.levels.ERROR);\n    });\n\n    it(\"successfully logs\", function () {\n        window.console = { \"log\": jasmine.createSpy(\"log\") };\n\n        MyCustomLogger.setLevel(MyCustomLogger.levels.INFO);\n        MyCustomLogger.info(\"test message\");\n\n        expect(console.log).toHaveBeenCalledWith(\"test message\");\n    });\n});\n"]},"metadata":{},"sourceType":"script"}