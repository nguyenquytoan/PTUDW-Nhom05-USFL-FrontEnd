{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar readdir = require(\"@mrmlnc/readdir-enhanced\");\n\nvar reader_1 = require(\"./reader\");\n\nvar fs_sync_1 = require(\"../adapters/fs-sync\");\n\nvar ReaderSync =\n/** @class */\nfunction (_super) {\n  __extends(ReaderSync, _super);\n\n  function ReaderSync() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(ReaderSync.prototype, \"fsAdapter\", {\n    /**\r\n     * Returns FileSystem adapter.\r\n     */\n    get: function () {\n      return new fs_sync_1.default(this.options);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Use sync API to read entries for Task.\r\n   */\n\n  ReaderSync.prototype.read = function (task) {\n    var root = this.getRootDirectory(task);\n    var options = this.getReaderOptions(task);\n\n    try {\n      var entries = this.api(root, task, options);\n      return entries.map(this.transform, this);\n    } catch (err) {\n      if (this.isEnoentCodeError(err)) {\n        return [];\n      }\n\n      throw err;\n    }\n  };\n  /**\r\n   * Returns founded paths.\r\n   */\n\n\n  ReaderSync.prototype.api = function (root, task, options) {\n    if (task.dynamic) {\n      return this.dynamicApi(root, options);\n    }\n\n    return this.staticApi(task, options);\n  };\n  /**\r\n   * Api for dynamic tasks.\r\n   */\n\n\n  ReaderSync.prototype.dynamicApi = function (root, options) {\n    return readdir.readdirSyncStat(root, options);\n  };\n  /**\r\n   * Api for static tasks.\r\n   */\n\n\n  ReaderSync.prototype.staticApi = function (task, options) {\n    return this.fsAdapter.read(task.patterns, options.filter);\n  };\n\n  return ReaderSync;\n}(reader_1.default);\n\nexports.default = ReaderSync;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/fast-glob/out/providers/reader-sync.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","readdir","require","reader_1","fs_sync_1","ReaderSync","_super","apply","arguments","get","default","options","enumerable","configurable","read","task","root","getRootDirectory","getReaderOptions","entries","api","map","transform","err","isEnoentCodeError","dynamic","dynamicApi","staticApi","readdirSyncStat","fsAdapter","patterns","filter"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar readdir = require(\"@mrmlnc/readdir-enhanced\");\r\nvar reader_1 = require(\"./reader\");\r\nvar fs_sync_1 = require(\"../adapters/fs-sync\");\r\nvar ReaderSync = /** @class */ (function (_super) {\r\n    __extends(ReaderSync, _super);\r\n    function ReaderSync() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(ReaderSync.prototype, \"fsAdapter\", {\r\n        /**\r\n         * Returns FileSystem adapter.\r\n         */\r\n        get: function () {\r\n            return new fs_sync_1.default(this.options);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Use sync API to read entries for Task.\r\n     */\r\n    ReaderSync.prototype.read = function (task) {\r\n        var root = this.getRootDirectory(task);\r\n        var options = this.getReaderOptions(task);\r\n        try {\r\n            var entries = this.api(root, task, options);\r\n            return entries.map(this.transform, this);\r\n        }\r\n        catch (err) {\r\n            if (this.isEnoentCodeError(err)) {\r\n                return [];\r\n            }\r\n            throw err;\r\n        }\r\n    };\r\n    /**\r\n     * Returns founded paths.\r\n     */\r\n    ReaderSync.prototype.api = function (root, task, options) {\r\n        if (task.dynamic) {\r\n            return this.dynamicApi(root, options);\r\n        }\r\n        return this.staticApi(task, options);\r\n    };\r\n    /**\r\n     * Api for dynamic tasks.\r\n     */\r\n    ReaderSync.prototype.dynamicApi = function (root, options) {\r\n        return readdir.readdirSyncStat(root, options);\r\n    };\r\n    /**\r\n     * Api for static tasks.\r\n     */\r\n    ReaderSync.prototype.staticApi = function (task, options) {\r\n        return this.fsAdapter.read(task.patterns, options.filter);\r\n    };\r\n    return ReaderSync;\r\n}(reader_1.default));\r\nexports.default = ReaderSync;\r\n"]},"metadata":{},"sourceType":"script"}