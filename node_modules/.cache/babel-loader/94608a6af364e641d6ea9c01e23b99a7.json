{"ast":null,"code":"/**\n * **PostCSS Options Parser**\n *\n * Transforms the loader options into a valid postcss config `{Object}`\n *\n * @method parseOptions\n *\n * @param {Boolean} exec Execute CSS-in-JS\n * @param {String|Object} parser PostCSS Parser\n * @param {String|Object} syntax PostCSS Syntax\n * @param {String|Object} stringifier PostCSS Stringifier\n * @param {Array|Object|Function} plugins PostCSS Plugins\n *\n * @return {Promise} PostCSS Config\n */\nfunction parseOptions({\n  exec,\n  parser,\n  syntax,\n  stringifier,\n  plugins\n}) {\n  if (typeof plugins === 'function') {\n    plugins = plugins.call(this, this);\n  }\n\n  if (typeof plugins === 'undefined') {\n    plugins = [];\n  } else if (!Array.isArray(plugins)) {\n    plugins = [plugins];\n  }\n\n  const options = {};\n  options.parser = parser;\n  options.syntax = syntax;\n  options.stringifier = stringifier;\n  return Promise.resolve({\n    options,\n    plugins,\n    exec\n  });\n}\n\nmodule.exports = parseOptions;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-loader/src/options.js"],"names":["parseOptions","exec","parser","syntax","stringifier","plugins","call","Array","isArray","options","Promise","resolve","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;AAeA,SAASA,YAAT,CAAuB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA,WAAxB;AAAqCC,EAAAA;AAArC,CAAvB,EAAuE;AACrE,MAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjCA,IAAAA,OAAO,GAAGA,OAAO,CAACC,IAAR,CAAa,IAAb,EAAmB,IAAnB,CAAV;AACD;;AAED,MAAI,OAAOD,OAAP,KAAmB,WAAvB,EAAoC;AAClCA,IAAAA,OAAO,GAAG,EAAV;AACD,GAFD,MAEO,IAAI,CAACE,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAL,EAA6B;AAClCA,IAAAA,OAAO,GAAG,CAAEA,OAAF,CAAV;AACD;;AAED,QAAMI,OAAO,GAAG,EAAhB;AAEAA,EAAAA,OAAO,CAACP,MAAR,GAAiBA,MAAjB;AACAO,EAAAA,OAAO,CAACN,MAAR,GAAiBA,MAAjB;AACAM,EAAAA,OAAO,CAACL,WAAR,GAAsBA,WAAtB;AAEA,SAAOM,OAAO,CAACC,OAAR,CAAgB;AAAEF,IAAAA,OAAF;AAAWJ,IAAAA,OAAX;AAAoBJ,IAAAA;AAApB,GAAhB,CAAP;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiBb,YAAjB","sourcesContent":["/**\n * **PostCSS Options Parser**\n *\n * Transforms the loader options into a valid postcss config `{Object}`\n *\n * @method parseOptions\n *\n * @param {Boolean} exec Execute CSS-in-JS\n * @param {String|Object} parser PostCSS Parser\n * @param {String|Object} syntax PostCSS Syntax\n * @param {String|Object} stringifier PostCSS Stringifier\n * @param {Array|Object|Function} plugins PostCSS Plugins\n *\n * @return {Promise} PostCSS Config\n */\nfunction parseOptions ({ exec, parser, syntax, stringifier, plugins }) {\n  if (typeof plugins === 'function') {\n    plugins = plugins.call(this, this)\n  }\n\n  if (typeof plugins === 'undefined') {\n    plugins = []\n  } else if (!Array.isArray(plugins)) {\n    plugins = [ plugins ]\n  }\n\n  const options = {}\n\n  options.parser = parser\n  options.syntax = syntax\n  options.stringifier = stringifier\n\n  return Promise.resolve({ options, plugins, exec })\n}\n\nmodule.exports = parseOptions\n"]},"metadata":{},"sourceType":"script"}