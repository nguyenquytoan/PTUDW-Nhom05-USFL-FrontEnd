{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Queue } from './Queue.mjs';\nimport './_version.mjs';\n/**\n * A class implementing the `fetchDidFail` lifecycle callback. This makes it\n * easier to add failed requests to a background sync Queue.\n *\n * @memberof workbox.backgroundSync\n */\n\nclass Plugin {\n  /**\n   * @param {...*} queueArgs Args to forward to the composed Queue instance.\n   *    See the [Queue]{@link workbox.backgroundSync.Queue} documentation for\n   *    parameter details.\n   */\n  constructor(...queueArgs) {\n    this._queue = new Queue(...queueArgs);\n    this.fetchDidFail = this.fetchDidFail.bind(this);\n  }\n  /**\n   * @param {Object} options\n   * @param {Request} options.request\n   * @private\n   */\n\n\n  async fetchDidFail({\n    request\n  }) {\n    await this._queue.pushRequest({\n      request\n    });\n  }\n\n}\n\nexport { Plugin };","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/workbox-background-sync/Plugin.mjs"],"names":["Queue","Plugin","constructor","queueArgs","_queue","fetchDidFail","bind","request","pushRequest"],"mappings":"AAAA;;;;;;;AAQA,SAAQA,KAAR,QAAoB,aAApB;AACA,OAAO,gBAAP;AAEA;;;;;;;AAMA,MAAMC,MAAN,CAAa;AACX;;;;;AAKAC,EAAAA,WAAW,CAAC,GAAGC,SAAJ,EAAe;AACxB,SAAKC,MAAL,GAAc,IAAIJ,KAAJ,CAAU,GAAGG,SAAb,CAAd;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;AAED;;;;;;;AAKA,QAAMD,YAAN,CAAmB;AAACE,IAAAA;AAAD,GAAnB,EAA8B;AAC5B,UAAM,KAAKH,MAAL,CAAYI,WAAZ,CAAwB;AAACD,MAAAA;AAAD,KAAxB,CAAN;AACD;;AAlBU;;AAqBb,SAAQN,MAAR","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nimport {Queue} from './Queue.mjs';\nimport './_version.mjs';\n\n/**\n * A class implementing the `fetchDidFail` lifecycle callback. This makes it\n * easier to add failed requests to a background sync Queue.\n *\n * @memberof workbox.backgroundSync\n */\nclass Plugin {\n  /**\n   * @param {...*} queueArgs Args to forward to the composed Queue instance.\n   *    See the [Queue]{@link workbox.backgroundSync.Queue} documentation for\n   *    parameter details.\n   */\n  constructor(...queueArgs) {\n    this._queue = new Queue(...queueArgs);\n    this.fetchDidFail = this.fetchDidFail.bind(this);\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Request} options.request\n   * @private\n   */\n  async fetchDidFail({request}) {\n    await this._queue.pushRequest({request});\n  }\n}\n\nexport {Plugin};\n"]},"metadata":{},"sourceType":"module"}