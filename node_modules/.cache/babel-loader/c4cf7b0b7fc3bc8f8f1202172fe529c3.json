{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar acorn = require('./acorn.js');\n\nvar infile,\n    forceFile,\n    silent = false,\n    compact = false,\n    tokenize = false;\nvar options = {};\n\nfunction help(status) {\n  var print = status === 0 ? console.log : console.error;\n  print(\"usage: \" + path.basename(process.argv[1]) + \" [--ecma3|--ecma5|--ecma6|--ecma7|--ecma8|--ecma9|...|--ecma2015|--ecma2016|--ecma2017|--ecma2018|...]\");\n  print(\"        [--tokenize] [--locations] [---allow-hash-bang] [--compact] [--silent] [--module] [--help] [--] [infile]\");\n  process.exit(status);\n}\n\nfor (var i = 2; i < process.argv.length; ++i) {\n  var arg = process.argv[i];\n\n  if ((arg === \"-\" || arg[0] !== \"-\") && !infile) {\n    infile = arg;\n  } else if (arg === \"--\" && !infile && i + 2 === process.argv.length) {\n    forceFile = infile = process.argv[++i];\n  } else if (arg === \"--locations\") {\n    options.locations = true;\n  } else if (arg === \"--allow-hash-bang\") {\n    options.allowHashBang = true;\n  } else if (arg === \"--silent\") {\n    silent = true;\n  } else if (arg === \"--compact\") {\n    compact = true;\n  } else if (arg === \"--help\") {\n    help(0);\n  } else if (arg === \"--tokenize\") {\n    tokenize = true;\n  } else if (arg === \"--module\") {\n    options.sourceType = \"module\";\n  } else {\n    var match = arg.match(/^--ecma(\\d+)$/);\n\n    if (match) {\n      options.ecmaVersion = +match[1];\n    } else {\n      help(1);\n    }\n  }\n}\n\nfunction run(code) {\n  var result;\n\n  try {\n    if (!tokenize) {\n      result = acorn.parse(code, options);\n    } else {\n      result = [];\n      var tokenizer = acorn.tokenizer(code, options),\n          token;\n\n      do {\n        token = tokenizer.getToken();\n        result.push(token);\n      } while (token.type !== acorn.tokTypes.eof);\n    }\n  } catch (e) {\n    console.error(infile && infile !== \"-\" ? e.message.replace(/\\(\\d+:\\d+\\)$/, function (m) {\n      return m.slice(0, 1) + infile + \" \" + m.slice(1);\n    }) : e.message);\n    process.exit(1);\n  }\n\n  if (!silent) {\n    console.log(JSON.stringify(result, null, compact ? null : 2));\n  }\n}\n\nif (forceFile || infile && infile !== \"-\") {\n  run(fs.readFileSync(infile, \"utf8\"));\n} else {\n  var code = \"\";\n  process.stdin.resume();\n  process.stdin.on(\"data\", function (chunk) {\n    return code += chunk;\n  });\n  process.stdin.on(\"end\", function () {\n    return run(code);\n  });\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/webpack/node_modules/acorn/dist/bin.js"],"names":["path","require","fs","acorn","infile","forceFile","silent","compact","tokenize","options","help","status","print","console","log","error","basename","process","argv","exit","i","length","arg","locations","allowHashBang","sourceType","match","ecmaVersion","run","code","result","parse","tokenizer","token","getToken","push","type","tokTypes","eof","e","message","replace","m","slice","JSON","stringify","readFileSync","stdin","resume","on","chunk"],"mappings":"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","sourcesContent":["'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\nvar acorn = require('./acorn.js');\n\nvar infile, forceFile, silent = false, compact = false, tokenize = false;\nvar options = {};\n\nfunction help(status) {\n  var print = (status === 0) ? console.log : console.error;\n  print(\"usage: \" + path.basename(process.argv[1]) + \" [--ecma3|--ecma5|--ecma6|--ecma7|--ecma8|--ecma9|...|--ecma2015|--ecma2016|--ecma2017|--ecma2018|...]\");\n  print(\"        [--tokenize] [--locations] [---allow-hash-bang] [--compact] [--silent] [--module] [--help] [--] [infile]\");\n  process.exit(status);\n}\n\nfor (var i = 2; i < process.argv.length; ++i) {\n  var arg = process.argv[i];\n  if ((arg === \"-\" || arg[0] !== \"-\") && !infile) { infile = arg; }\n  else if (arg === \"--\" && !infile && i + 2 === process.argv.length) { forceFile = infile = process.argv[++i]; }\n  else if (arg === \"--locations\") { options.locations = true; }\n  else if (arg === \"--allow-hash-bang\") { options.allowHashBang = true; }\n  else if (arg === \"--silent\") { silent = true; }\n  else if (arg === \"--compact\") { compact = true; }\n  else if (arg === \"--help\") { help(0); }\n  else if (arg === \"--tokenize\") { tokenize = true; }\n  else if (arg === \"--module\") { options.sourceType = \"module\"; }\n  else {\n    var match = arg.match(/^--ecma(\\d+)$/);\n    if (match)\n      { options.ecmaVersion = +match[1]; }\n    else\n      { help(1); }\n  }\n}\n\nfunction run(code) {\n  var result;\n  try {\n    if (!tokenize) {\n      result = acorn.parse(code, options);\n    } else {\n      result = [];\n      var tokenizer = acorn.tokenizer(code, options), token;\n      do {\n        token = tokenizer.getToken();\n        result.push(token);\n      } while (token.type !== acorn.tokTypes.eof)\n    }\n  } catch (e) {\n    console.error(infile && infile !== \"-\" ? e.message.replace(/\\(\\d+:\\d+\\)$/, function (m) { return m.slice(0, 1) + infile + \" \" + m.slice(1); }) : e.message);\n    process.exit(1);\n  }\n  if (!silent) { console.log(JSON.stringify(result, null, compact ? null : 2)); }\n}\n\nif (forceFile || infile && infile !== \"-\") {\n  run(fs.readFileSync(infile, \"utf8\"));\n} else {\n  var code = \"\";\n  process.stdin.resume();\n  process.stdin.on(\"data\", function (chunk) { return code += chunk; });\n  process.stdin.on(\"end\", function () { return run(code); });\n}\n"]},"metadata":{},"sourceType":"script"}