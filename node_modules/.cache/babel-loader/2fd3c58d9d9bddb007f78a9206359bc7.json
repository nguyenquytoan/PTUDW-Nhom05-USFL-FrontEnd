{"ast":null,"code":"'use strict';\n\nvar PACKAGE_NAME = require('../../package.json').name,\n    PADDING = new Array(11).join(' ');\n/**\n * Format a debug message\n * @param {{resourcePath:string, loaders:Array, loaderIndex:number}} context A loader or compilation\n * @param {{input:Array.<string>, absolute:Array.<string>, output:Array.<string>, root:string}} info Source-map info\n * @returns {string} An encoded debug string\n */\n\n\nfunction debugMessage(context, info) {\n  return ['  ', PACKAGE_NAME + ':', '  ' + context.resourcePath, formatField('@', precedingRequest(context)), formatField('INPUT', info.input || '(source-map absent)'), formatField('ABSOLUTE', info.absolute), formatField('OUTPUT', info.output), formatField('ROOT', info.root)].filter(Boolean).join('\\n');\n}\n\nmodule.exports = debugMessage;\n/**\n * Find the request that precedes this loader in the loader chain\n * @param {{loaders:Array, loaderIndex:number}} loader The loader context\n * @returns {string} The request of the preceding loader\n */\n\nfunction precedingRequest(loader) {\n  var isLoader = 'loaderIndex' in loader && 'loaders' in loader && Array.isArray(loader.loaders);\n\n  if (isLoader) {\n    var index = loader.loaderIndex + 1;\n    return index in loader.loaders ? loader.loaders[index].request : '(no preceding loader)';\n  }\n}\n/**\n * Where the data is truthy then format it with a right-aligned title.\n * @param {string} title\n * @param {*} data The data to display\n * @returns {boolean|string} False where data is falsey, else formatted message\n */\n\n\nfunction formatField(title, data) {\n  return !!data && rightAlign(title) + formatData(data);\n\n  function rightAlign(text) {\n    return (PADDING + text + ' ').slice(-PADDING.length);\n  }\n\n  function formatData(data) {\n    return Array.isArray(data) ? data.join('\\n' + PADDING) : data;\n  }\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/adjust-sourcemap-loader/lib/process/debug-message.js"],"names":["PACKAGE_NAME","require","name","PADDING","Array","join","debugMessage","context","info","resourcePath","formatField","precedingRequest","input","absolute","output","root","filter","Boolean","module","exports","loader","isLoader","isArray","loaders","index","loaderIndex","request","title","data","rightAlign","formatData","text","slice","length"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,IAAjD;AAAA,IACIC,OAAO,GAAS,IAAIC,KAAJ,CAAU,EAAV,CAAD,CAAgBC,IAAhB,CAAqB,GAArB,CADnB;AAGA;;;;;;;;AAMA,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,IAA/B,EAAqC;AACnC,SAAO,CACL,IADK,EAELR,YAAY,GAAG,GAFV,EAGL,OAAOO,OAAO,CAACE,YAHV,EAILC,WAAW,CAAC,GAAD,EAAMC,gBAAgB,CAACJ,OAAD,CAAtB,CAJN,EAKLG,WAAW,CAAC,OAAD,EAAUF,IAAI,CAACI,KAAL,IAAc,qBAAxB,CALN,EAMLF,WAAW,CAAC,UAAD,EAAaF,IAAI,CAACK,QAAlB,CANN,EAOLH,WAAW,CAAC,QAAD,EAAWF,IAAI,CAACM,MAAhB,CAPN,EAQLJ,WAAW,CAAC,MAAD,EAASF,IAAI,CAACO,IAAd,CARN,EAUJC,MAVI,CAUGC,OAVH,EAWJZ,IAXI,CAWC,IAXD,CAAP;AAYD;;AAEDa,MAAM,CAACC,OAAP,GAAiBb,YAAjB;AAEA;;;;;;AAKA,SAASK,gBAAT,CAA0BS,MAA1B,EAAkC;AAChC,MAAIC,QAAQ,GAAI,iBAAiBD,MAAlB,IAA8B,aAAaA,MAA3C,IAAsDhB,KAAK,CAACkB,OAAN,CAAcF,MAAM,CAACG,OAArB,CAArE;;AACA,MAAIF,QAAJ,EAAc;AACZ,QAAIG,KAAK,GAAGJ,MAAM,CAACK,WAAP,GAAqB,CAAjC;AACA,WAAQD,KAAK,IAAIJ,MAAM,CAACG,OAAjB,GAA4BH,MAAM,CAACG,OAAP,CAAeC,KAAf,EAAsBE,OAAlD,GAA4D,uBAAnE;AACD;AACF;AAED;;;;;;;;AAMA,SAAShB,WAAT,CAAqBiB,KAArB,EAA4BC,IAA5B,EAAkC;AAChC,SAAO,CAAC,CAACA,IAAF,IAAWC,UAAU,CAACF,KAAD,CAAV,GAAoBG,UAAU,CAACF,IAAD,CAAhD;;AAEA,WAASC,UAAT,CAAoBE,IAApB,EAA0B;AACxB,WAAO,CAAC5B,OAAO,GAAG4B,IAAV,GAAiB,GAAlB,EAAuBC,KAAvB,CAA6B,CAAC7B,OAAO,CAAC8B,MAAtC,CAAP;AACD;;AAED,WAASH,UAAT,CAAoBF,IAApB,EAA0B;AACxB,WAAOxB,KAAK,CAACkB,OAAN,CAAcM,IAAd,IAAsBA,IAAI,CAACvB,IAAL,CAAU,OAAOF,OAAjB,CAAtB,GAAkDyB,IAAzD;AACD;AACF","sourcesContent":["'use strict';\n\nvar PACKAGE_NAME = require('../../package.json').name,\n    PADDING      = (new Array(11)).join(' ');\n\n/**\n * Format a debug message\n * @param {{resourcePath:string, loaders:Array, loaderIndex:number}} context A loader or compilation\n * @param {{input:Array.<string>, absolute:Array.<string>, output:Array.<string>, root:string}} info Source-map info\n * @returns {string} An encoded debug string\n */\nfunction debugMessage(context, info) {\n  return [\n    '  ',\n    PACKAGE_NAME + ':',\n    '  ' + context.resourcePath,\n    formatField('@', precedingRequest(context)),\n    formatField('INPUT', info.input || '(source-map absent)'),\n    formatField('ABSOLUTE', info.absolute),\n    formatField('OUTPUT', info.output),\n    formatField('ROOT', info.root)\n  ]\n    .filter(Boolean)\n    .join('\\n');\n}\n\nmodule.exports = debugMessage;\n\n/**\n * Find the request that precedes this loader in the loader chain\n * @param {{loaders:Array, loaderIndex:number}} loader The loader context\n * @returns {string} The request of the preceding loader\n */\nfunction precedingRequest(loader) {\n  var isLoader = ('loaderIndex' in loader) && ('loaders' in loader) && Array.isArray(loader.loaders);\n  if (isLoader) {\n    var index = loader.loaderIndex + 1;\n    return (index in loader.loaders) ? loader.loaders[index].request : '(no preceding loader)';\n  }\n}\n\n/**\n * Where the data is truthy then format it with a right-aligned title.\n * @param {string} title\n * @param {*} data The data to display\n * @returns {boolean|string} False where data is falsey, else formatted message\n */\nfunction formatField(title, data) {\n  return !!data && (rightAlign(title) + formatData(data));\n\n  function rightAlign(text) {\n    return (PADDING + text + ' ').slice(-PADDING.length);\n  }\n\n  function formatData(data) {\n    return Array.isArray(data) ? data.join('\\n' + PADDING) : data;\n  }\n}"]},"metadata":{},"sourceType":"script"}