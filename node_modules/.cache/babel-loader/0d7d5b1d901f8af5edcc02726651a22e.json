{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _util() {\n  const data = _interopRequireDefault(require('util'));\n\n  _util = function _util() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _exit() {\n  const data = _interopRequireDefault(require('exit'));\n\n  _exit = function _exit() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _nodeNotifier() {\n  const data = _interopRequireDefault(require('node-notifier'));\n\n  _nodeNotifier = function _nodeNotifier() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _base_reporter = _interopRequireDefault(require('./base_reporter'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError('Invalid attempt to destructure non-iterable instance');\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i['return'] != null) _i['return']();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst isDarwin = process.platform === 'darwin';\n\nconst icon = _path().default.resolve(__dirname, '../assets/jest_logo.png');\n\nclass NotifyReporter extends _base_reporter.default {\n  constructor(globalConfig, startRun, context) {\n    super();\n\n    _defineProperty(this, '_startRun', void 0);\n\n    _defineProperty(this, '_globalConfig', void 0);\n\n    _defineProperty(this, '_context', void 0);\n\n    this._globalConfig = globalConfig;\n    this._startRun = startRun;\n    this._context = context;\n  }\n\n  onRunComplete(contexts, result) {\n    const success = result.numFailedTests === 0 && result.numRuntimeErrorTestSuites === 0;\n    const firstContext = contexts.values().next();\n    const hasteFS = firstContext && firstContext.value && firstContext.value.hasteFS;\n    let packageName;\n\n    if (hasteFS != null) {\n      // assuming root package.json is the first one\n      const _hasteFS$matchFiles = hasteFS.matchFiles('package.json'),\n            _hasteFS$matchFiles2 = _slicedToArray(_hasteFS$matchFiles, 1),\n            filePath = _hasteFS$matchFiles2[0];\n\n      packageName = filePath != null ? hasteFS.getModuleName(filePath) : this._globalConfig.rootDir;\n    } else {\n      packageName = this._globalConfig.rootDir;\n    }\n\n    packageName = packageName != null ? `${packageName} - ` : '';\n    const notifyMode = this._globalConfig.notifyMode;\n    const statusChanged = this._context.previousSuccess !== success || this._context.firstRun;\n    const testsHaveRun = result.numTotalTests !== 0;\n\n    if (testsHaveRun && success && (notifyMode === 'always' || notifyMode === 'success' || notifyMode === 'success-change' || notifyMode === 'change' && statusChanged || notifyMode === 'failure-change' && statusChanged)) {\n      const title = _util().default.format('%s%d%% Passed', packageName, 100);\n\n      const message = _util().default.format((isDarwin ? '\\u2705 ' : '') + '%d tests passed', result.numPassedTests);\n\n      _nodeNotifier().default.notify({\n        icon,\n        message,\n        title\n      });\n    } else if (testsHaveRun && !success && (notifyMode === 'always' || notifyMode === 'failure' || notifyMode === 'failure-change' || notifyMode === 'change' && statusChanged || notifyMode === 'success-change' && statusChanged)) {\n      const failed = result.numFailedTests / result.numTotalTests;\n\n      const title = _util().default.format('%s%d%% Failed', packageName, Math.ceil(Number.isNaN(failed) ? 0 : failed * 100));\n\n      const message = _util().default.format((isDarwin ? '\\u26D4\\uFE0F ' : '') + '%d of %d tests failed', result.numFailedTests, result.numTotalTests);\n\n      const watchMode = this._globalConfig.watch || this._globalConfig.watchAll;\n      const restartAnswer = 'Run again';\n      const quitAnswer = 'Exit tests';\n\n      if (!watchMode) {\n        _nodeNotifier().default.notify({\n          icon,\n          message,\n          title\n        });\n      } else {\n        _nodeNotifier().default.notify({\n          actions: [restartAnswer, quitAnswer],\n          closeLabel: 'Close',\n          icon,\n          message,\n          timeout: 10,\n          title\n        }, (err, _, metadata) => {\n          if (err || !metadata) {\n            return;\n          }\n\n          if (metadata.activationValue === quitAnswer) {\n            (0, _exit().default)(0);\n            return;\n          }\n\n          if (metadata.activationValue === restartAnswer) {\n            this._startRun(this._globalConfig);\n          }\n        });\n      }\n    }\n\n    this._context.previousSuccess = success;\n    this._context.firstRun = false;\n  }\n\n}\n\nexports.default = NotifyReporter;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@jest/reporters/build/notify_reporter.js"],"names":["Object","defineProperty","exports","value","default","_path","data","_interopRequireDefault","require","_util","_exit","_nodeNotifier","_base_reporter","obj","__esModule","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","_defineProperty","key","enumerable","configurable","writable","isDarwin","process","platform","icon","resolve","__dirname","NotifyReporter","constructor","globalConfig","startRun","context","_globalConfig","_startRun","_context","onRunComplete","contexts","result","success","numFailedTests","numRuntimeErrorTestSuites","firstContext","values","hasteFS","packageName","_hasteFS$matchFiles","matchFiles","_hasteFS$matchFiles2","filePath","getModuleName","rootDir","notifyMode","statusChanged","previousSuccess","firstRun","testsHaveRun","numTotalTests","title","format","message","numPassedTests","notify","failed","Math","ceil","Number","isNaN","watchMode","watch","watchAll","restartAnswer","quitAnswer","actions","closeLabel","timeout","_","metadata","activationValue"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _util() {\n  const data = _interopRequireDefault(require('util'));\n\n  _util = function _util() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _exit() {\n  const data = _interopRequireDefault(require('exit'));\n\n  _exit = function _exit() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _nodeNotifier() {\n  const data = _interopRequireDefault(require('node-notifier'));\n\n  _nodeNotifier = function _nodeNotifier() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _base_reporter = _interopRequireDefault(require('./base_reporter'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _slicedToArray(arr, i) {\n  return (\n    _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest()\n  );\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError('Invalid attempt to destructure non-iterable instance');\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (\n      var _i = arr[Symbol.iterator](), _s;\n      !(_n = (_s = _i.next()).done);\n      _n = true\n    ) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i['return'] != null) _i['return']();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nconst isDarwin = process.platform === 'darwin';\n\nconst icon = _path().default.resolve(__dirname, '../assets/jest_logo.png');\n\nclass NotifyReporter extends _base_reporter.default {\n  constructor(globalConfig, startRun, context) {\n    super();\n\n    _defineProperty(this, '_startRun', void 0);\n\n    _defineProperty(this, '_globalConfig', void 0);\n\n    _defineProperty(this, '_context', void 0);\n\n    this._globalConfig = globalConfig;\n    this._startRun = startRun;\n    this._context = context;\n  }\n\n  onRunComplete(contexts, result) {\n    const success =\n      result.numFailedTests === 0 && result.numRuntimeErrorTestSuites === 0;\n    const firstContext = contexts.values().next();\n    const hasteFS =\n      firstContext && firstContext.value && firstContext.value.hasteFS;\n    let packageName;\n\n    if (hasteFS != null) {\n      // assuming root package.json is the first one\n      const _hasteFS$matchFiles = hasteFS.matchFiles('package.json'),\n        _hasteFS$matchFiles2 = _slicedToArray(_hasteFS$matchFiles, 1),\n        filePath = _hasteFS$matchFiles2[0];\n\n      packageName =\n        filePath != null\n          ? hasteFS.getModuleName(filePath)\n          : this._globalConfig.rootDir;\n    } else {\n      packageName = this._globalConfig.rootDir;\n    }\n\n    packageName = packageName != null ? `${packageName} - ` : '';\n    const notifyMode = this._globalConfig.notifyMode;\n    const statusChanged =\n      this._context.previousSuccess !== success || this._context.firstRun;\n    const testsHaveRun = result.numTotalTests !== 0;\n\n    if (\n      testsHaveRun &&\n      success &&\n      (notifyMode === 'always' ||\n        notifyMode === 'success' ||\n        notifyMode === 'success-change' ||\n        (notifyMode === 'change' && statusChanged) ||\n        (notifyMode === 'failure-change' && statusChanged))\n    ) {\n      const title = _util().default.format('%s%d%% Passed', packageName, 100);\n\n      const message = _util().default.format(\n        (isDarwin ? '\\u2705 ' : '') + '%d tests passed',\n        result.numPassedTests\n      );\n\n      _nodeNotifier().default.notify({\n        icon,\n        message,\n        title\n      });\n    } else if (\n      testsHaveRun &&\n      !success &&\n      (notifyMode === 'always' ||\n        notifyMode === 'failure' ||\n        notifyMode === 'failure-change' ||\n        (notifyMode === 'change' && statusChanged) ||\n        (notifyMode === 'success-change' && statusChanged))\n    ) {\n      const failed = result.numFailedTests / result.numTotalTests;\n\n      const title = _util().default.format(\n        '%s%d%% Failed',\n        packageName,\n        Math.ceil(Number.isNaN(failed) ? 0 : failed * 100)\n      );\n\n      const message = _util().default.format(\n        (isDarwin ? '\\u26D4\\uFE0F ' : '') + '%d of %d tests failed',\n        result.numFailedTests,\n        result.numTotalTests\n      );\n\n      const watchMode = this._globalConfig.watch || this._globalConfig.watchAll;\n      const restartAnswer = 'Run again';\n      const quitAnswer = 'Exit tests';\n\n      if (!watchMode) {\n        _nodeNotifier().default.notify({\n          icon,\n          message,\n          title\n        });\n      } else {\n        _nodeNotifier().default.notify(\n          {\n            actions: [restartAnswer, quitAnswer],\n            closeLabel: 'Close',\n            icon,\n            message,\n            timeout: 10,\n            title\n          },\n          (err, _, metadata) => {\n            if (err || !metadata) {\n              return;\n            }\n\n            if (metadata.activationValue === quitAnswer) {\n              (0, _exit().default)(0);\n              return;\n            }\n\n            if (metadata.activationValue === restartAnswer) {\n              this._startRun(this._globalConfig);\n            }\n          }\n        );\n      }\n    }\n\n    this._context.previousSuccess = success;\n    this._context.firstRun = false;\n  }\n}\n\nexports.default = NotifyReporter;\n"]},"metadata":{},"sourceType":"script"}