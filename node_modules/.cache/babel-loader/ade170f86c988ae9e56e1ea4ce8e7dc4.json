{"ast":null,"code":"/* eslint sort-keys: \"error\" */\n// These mappings represent the syntax proposals that have been\n// shipped by browsers, and are enabled by the `shippedProposals` option.\nconst proposalPlugins = {\n  \"proposal-numeric-separator\": true\n}; // use intermediary object to enforce alphabetical key order\n\nconst pluginSyntaxObject = {\n  \"proposal-async-generator-functions\": \"syntax-async-generators\",\n  \"proposal-json-strings\": \"syntax-json-strings\",\n  \"proposal-nullish-coalescing-operator\": \"syntax-nullish-coalescing-operator\",\n  \"proposal-numeric-separator\": \"syntax-numeric-separator\",\n  \"proposal-object-rest-spread\": \"syntax-object-rest-spread\",\n  \"proposal-optional-catch-binding\": \"syntax-optional-catch-binding\",\n  \"proposal-optional-chaining\": \"syntax-optional-chaining\",\n  \"proposal-unicode-property-regex\": null\n};\nconst pluginSyntaxEntries = Object.keys(pluginSyntaxObject).map(function (key) {\n  return [key, pluginSyntaxObject[key]];\n});\nconst pluginSyntaxMap = new Map(pluginSyntaxEntries);\nmodule.exports = {\n  pluginSyntaxMap,\n  proposalPlugins\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/babel-preset-react-app/node_modules/@babel/preset-env/data/shipped-proposals.js"],"names":["proposalPlugins","pluginSyntaxObject","pluginSyntaxEntries","Object","keys","map","key","pluginSyntaxMap","Map","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA,MAAMA,eAAe,GAAG;AACtB,gCAA8B;AADR,CAAxB,C,CAIA;;AACA,MAAMC,kBAAkB,GAAG;AACzB,wCAAsC,yBADb;AAEzB,2BAAyB,qBAFA;AAGzB,0CAAwC,oCAHf;AAIzB,gCAA8B,0BAJL;AAKzB,iCAA+B,2BALN;AAMzB,qCAAmC,+BANV;AAOzB,gCAA8B,0BAPL;AAQzB,qCAAmC;AARV,CAA3B;AAWA,MAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAP,CAAYH,kBAAZ,EAAgCI,GAAhC,CAAoC,UAAUC,GAAV,EAAe;AAC7E,SAAO,CAACA,GAAD,EAAML,kBAAkB,CAACK,GAAD,CAAxB,CAAP;AACD,CAF2B,CAA5B;AAIA,MAAMC,eAAe,GAAG,IAAIC,GAAJ,CAAQN,mBAAR,CAAxB;AAEAO,MAAM,CAACC,OAAP,GAAiB;AAAEH,EAAAA,eAAF;AAAmBP,EAAAA;AAAnB,CAAjB","sourcesContent":["/* eslint sort-keys: \"error\" */\n// These mappings represent the syntax proposals that have been\n// shipped by browsers, and are enabled by the `shippedProposals` option.\n\nconst proposalPlugins = {\n  \"proposal-numeric-separator\": true\n};\n\n// use intermediary object to enforce alphabetical key order\nconst pluginSyntaxObject = {\n  \"proposal-async-generator-functions\": \"syntax-async-generators\",\n  \"proposal-json-strings\": \"syntax-json-strings\",\n  \"proposal-nullish-coalescing-operator\": \"syntax-nullish-coalescing-operator\",\n  \"proposal-numeric-separator\": \"syntax-numeric-separator\",\n  \"proposal-object-rest-spread\": \"syntax-object-rest-spread\",\n  \"proposal-optional-catch-binding\": \"syntax-optional-catch-binding\",\n  \"proposal-optional-chaining\": \"syntax-optional-chaining\",\n  \"proposal-unicode-property-regex\": null,\n};\n\nconst pluginSyntaxEntries = Object.keys(pluginSyntaxObject).map(function (key) {\n  return [key, pluginSyntaxObject[key]];\n});\n\nconst pluginSyntaxMap = new Map(pluginSyntaxEntries);\n\nmodule.exports = { pluginSyntaxMap, proposalPlugins };\n"]},"metadata":{},"sourceType":"script"}