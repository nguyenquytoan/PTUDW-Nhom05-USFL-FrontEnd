{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = false;\nexports.params = {\n  delim: '__',\n  prefixIds: true,\n  prefixClassNames: true\n};\nexports.description = 'prefix IDs';\n\nvar path = require('path'),\n    csstree = require('css-tree'),\n    unquote = require('unquote'),\n    collections = require('./_collections.js'),\n    referencesProps = collections.referencesProps,\n    rxId = /^#(.*)$/,\n    // regular expression for matching an ID + extracing its name\naddPrefix = null; // Escapes a string for being used as ID\n\n\nvar escapeIdentifierName = function (str) {\n  return str.replace(/[\\. ]/g, '_');\n}; // Matches an #ID value, captures the ID name\n\n\nvar matchId = function (urlVal) {\n  var idUrlMatches = urlVal.match(rxId);\n\n  if (idUrlMatches === null) {\n    return false;\n  }\n\n  return idUrlMatches[1];\n}; // Matches an url(...) value, captures the URL\n\n\nvar matchUrl = function (val) {\n  var urlMatches = /url\\((.*?)\\)/gi.exec(val);\n\n  if (urlMatches === null) {\n    return false;\n  }\n\n  return urlMatches[1];\n}; // Checks if attribute is empty\n\n\nvar attrNotEmpty = function (attr) {\n  return attr && attr.value && attr.value.length > 0;\n}; // prefixes an #ID\n\n\nvar prefixId = function (val) {\n  var idName = matchId(val);\n\n  if (!idName) {\n    return false;\n  }\n\n  return '#' + addPrefix(idName);\n}; // attr.value helper methods\n// prefixes a class attribute value\n\n\nvar addPrefixToClassAttr = function (attr) {\n  if (!attrNotEmpty(attr)) {\n    return;\n  }\n\n  attr.value = attr.value.split(/\\s+/).map(addPrefix).join(' ');\n}; // prefixes an ID attribute value\n\n\nvar addPrefixToIdAttr = function (attr) {\n  if (!attrNotEmpty(attr)) {\n    return;\n  }\n\n  attr.value = addPrefix(attr.value);\n}; // prefixes a href attribute value\n\n\nvar addPrefixToHrefAttr = function (attr) {\n  if (!attrNotEmpty(attr)) {\n    return;\n  }\n\n  var idPrefixed = prefixId(attr.value);\n\n  if (!idPrefixed) {\n    return;\n  }\n\n  attr.value = idPrefixed;\n}; // prefixes an URL attribute value\n\n\nvar addPrefixToUrlAttr = function (attr) {\n  if (!attrNotEmpty(attr)) {\n    return;\n  } // url(...) in value\n\n\n  var urlVal = matchUrl(attr.value);\n\n  if (!urlVal) {\n    return;\n  }\n\n  var idPrefixed = prefixId(urlVal);\n\n  if (!idPrefixed) {\n    return;\n  }\n\n  attr.value = 'url(' + idPrefixed + ')';\n};\n/**\n * Prefixes identifiers\n *\n * @param {Object} node node\n * @param {Object} opts plugin params\n * @param {Object} extra plugin extra information\n *\n * @author strarsis <strarsis@gmail.com>\n */\n\n\nexports.fn = function (node, opts, extra) {\n  // skip subsequent passes when multipass is used\n  if (extra.multipassCount && extra.multipassCount > 0) {\n    return node;\n  } // prefix, from file name or option\n\n\n  var prefix = 'prefix';\n\n  if (opts.prefix) {\n    if (typeof opts.prefix === 'function') {\n      prefix = opts.prefix(node, extra);\n    } else {\n      prefix = opts.prefix;\n    }\n  } else if (opts.prefix === false) {\n    prefix = false;\n  } else if (extra && extra.path && extra.path.length > 0) {\n    var filename = path.basename(extra.path);\n    prefix = filename;\n  } // prefixes a normal value\n\n\n  addPrefix = function (name) {\n    if (prefix === false) {\n      return escapeIdentifierName(name);\n    }\n\n    return escapeIdentifierName(prefix + opts.delim + name);\n  }; // <style/> property values\n\n\n  if (node.elem === 'style') {\n    if (node.isEmpty()) {\n      // skip empty <style/>s\n      return node;\n    }\n\n    var cssStr = node.content[0].text || node.content[0].cdata || [];\n    var cssAst = {};\n\n    try {\n      cssAst = csstree.parse(cssStr, {\n        parseValue: true,\n        parseCustomProperty: false\n      });\n    } catch (parseError) {\n      console.warn('Warning: Parse error of styles of <style/> element, skipped. Error details: ' + parseError);\n      return node;\n    }\n\n    var idPrefixed = '';\n    csstree.walk(cssAst, function (node) {\n      // #ID, .class\n      if ((opts.prefixIds && node.type === 'IdSelector' || opts.prefixClassNames && node.type === 'ClassSelector') && node.name) {\n        node.name = addPrefix(node.name);\n        return;\n      } // url(...) in value\n\n\n      if (node.type === 'Url' && node.value.value && node.value.value.length > 0) {\n        idPrefixed = prefixId(unquote(node.value.value));\n\n        if (!idPrefixed) {\n          return;\n        }\n\n        node.value.value = idPrefixed;\n      }\n    }); // update <style>s\n\n    node.content[0].text = csstree.generate(cssAst);\n    return node;\n  } // element attributes\n\n\n  if (!node.attrs) {\n    return node;\n  } // Nodes\n\n\n  if (opts.prefixIds) {\n    // ID\n    addPrefixToIdAttr(node.attrs.id);\n  }\n\n  if (opts.prefixClassNames) {\n    // Class\n    addPrefixToClassAttr(node.attrs.class);\n  } // References\n  // href\n\n\n  addPrefixToHrefAttr(node.attrs.href); // (xlink:)href (deprecated, must be still supported)\n\n  addPrefixToHrefAttr(node.attrs['xlink:href']); // (referenceable) properties\n\n  for (var referencesProp of referencesProps) {\n    addPrefixToUrlAttr(node.attrs[referencesProp]);\n  }\n\n  return node;\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/svgo/plugins/prefixIds.js"],"names":["exports","type","active","params","delim","prefixIds","prefixClassNames","description","path","require","csstree","unquote","collections","referencesProps","rxId","addPrefix","escapeIdentifierName","str","replace","matchId","urlVal","idUrlMatches","match","matchUrl","val","urlMatches","exec","attrNotEmpty","attr","value","length","prefixId","idName","addPrefixToClassAttr","split","map","join","addPrefixToIdAttr","addPrefixToHrefAttr","idPrefixed","addPrefixToUrlAttr","fn","node","opts","extra","multipassCount","prefix","filename","basename","name","elem","isEmpty","cssStr","content","text","cdata","cssAst","parse","parseValue","parseCustomProperty","parseError","console","warn","walk","generate","attrs","id","class","href","referencesProp"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = false;\n\nexports.params = {\n    delim: '__',\n    prefixIds: true,\n    prefixClassNames: true,\n};\n\nexports.description = 'prefix IDs';\n\n\nvar path = require('path'),\n    csstree = require('css-tree'),\n    unquote = require('unquote'),\n    collections = require('./_collections.js'),\n    referencesProps = collections.referencesProps,\n    rxId = /^#(.*)$/, // regular expression for matching an ID + extracing its name\n    addPrefix = null;\n\n\n// Escapes a string for being used as ID\nvar escapeIdentifierName = function(str) {\n    return str.replace(/[\\. ]/g, '_');\n};\n\n// Matches an #ID value, captures the ID name\nvar matchId = function(urlVal) {\n    var idUrlMatches = urlVal.match(rxId);\n    if (idUrlMatches === null) {\n        return false;\n    }\n    return idUrlMatches[1];\n};\n\n// Matches an url(...) value, captures the URL\nvar matchUrl = function(val) {\n    var urlMatches = /url\\((.*?)\\)/gi.exec(val);\n    if (urlMatches === null) {\n        return false;\n    }\n    return urlMatches[1];\n};\n\n// Checks if attribute is empty\nvar attrNotEmpty = function(attr) {\n    return (attr && attr.value && attr.value.length > 0);\n};\n\n// prefixes an #ID\nvar prefixId = function(val) {\n    var idName = matchId(val);\n    if (!idName) {\n        return false;\n    }\n    return '#' + addPrefix(idName);\n};\n\n\n// attr.value helper methods\n\n// prefixes a class attribute value\nvar addPrefixToClassAttr = function(attr) {\n    if (!attrNotEmpty(attr)) {\n        return;\n    }\n\n    attr.value = attr.value.split(/\\s+/).map(addPrefix).join(' ');\n};\n\n// prefixes an ID attribute value\nvar addPrefixToIdAttr = function(attr) {\n    if (!attrNotEmpty(attr)) {\n        return;\n    }\n\n    attr.value = addPrefix(attr.value);\n};\n\n// prefixes a href attribute value\nvar addPrefixToHrefAttr = function(attr) {\n    if (!attrNotEmpty(attr)) {\n        return;\n    }\n\n    var idPrefixed = prefixId(attr.value);\n    if (!idPrefixed) {\n        return;\n    }\n    attr.value = idPrefixed;\n};\n\n// prefixes an URL attribute value\nvar addPrefixToUrlAttr = function(attr) {\n    if (!attrNotEmpty(attr)) {\n        return;\n    }\n\n    // url(...) in value\n    var urlVal = matchUrl(attr.value);\n    if (!urlVal) {\n        return;\n    }\n\n    var idPrefixed = prefixId(urlVal);\n    if (!idPrefixed) {\n        return;\n    }\n\n    attr.value = 'url(' + idPrefixed + ')';\n};\n\n\n/**\n * Prefixes identifiers\n *\n * @param {Object} node node\n * @param {Object} opts plugin params\n * @param {Object} extra plugin extra information\n *\n * @author strarsis <strarsis@gmail.com>\n */\nexports.fn = function(node, opts, extra) {\n\n    // skip subsequent passes when multipass is used\n    if(extra.multipassCount && extra.multipassCount > 0) {\n        return node;\n    }\n\n    // prefix, from file name or option\n    var prefix = 'prefix';\n    if (opts.prefix) {\n        if (typeof opts.prefix === 'function') {\n            prefix = opts.prefix(node, extra);\n        } else {\n            prefix = opts.prefix;\n        }\n    } else if (opts.prefix === false) {\n        prefix = false;\n    } else if (extra && extra.path && extra.path.length > 0) {\n        var filename = path.basename(extra.path);\n        prefix = filename;\n    }\n\n\n    // prefixes a normal value\n    addPrefix = function(name) {\n        if(prefix === false){\n            return escapeIdentifierName(name);\n        }\n        return escapeIdentifierName(prefix + opts.delim + name);\n    };\n\n\n    // <style/> property values\n\n    if (node.elem === 'style') {\n        if (node.isEmpty()) {\n            // skip empty <style/>s\n            return node;\n        }\n\n        var cssStr = node.content[0].text || node.content[0].cdata || [];\n\n        var cssAst = {};\n        try {\n            cssAst = csstree.parse(cssStr, {\n                parseValue: true,\n                parseCustomProperty: false\n            });\n        } catch (parseError) {\n            console.warn('Warning: Parse error of styles of <style/> element, skipped. Error details: ' + parseError);\n            return node;\n        }\n\n        var idPrefixed = '';\n        csstree.walk(cssAst, function(node) {\n\n            // #ID, .class\n            if (((opts.prefixIds        && node.type === 'IdSelector') ||\n                 (opts.prefixClassNames && node.type === 'ClassSelector')) &&\n                 node.name) {\n                node.name = addPrefix(node.name);\n                return;\n            }\n\n            // url(...) in value\n            if (node.type === 'Url' &&\n                node.value.value && node.value.value.length > 0) {\n                idPrefixed = prefixId(unquote(node.value.value));\n                if (!idPrefixed) {\n                    return;\n                }\n                node.value.value = idPrefixed;\n            }\n\n        });\n\n        // update <style>s\n        node.content[0].text = csstree.generate(cssAst);\n        return node;\n    }\n\n\n    // element attributes\n\n    if (!node.attrs) {\n        return node;\n    }\n\n\n    // Nodes\n\n    if(opts.prefixIds) {\n        // ID\n        addPrefixToIdAttr(node.attrs.id);\n    }\n\n    if(opts.prefixClassNames) {\n        // Class\n        addPrefixToClassAttr(node.attrs.class);\n    }\n\n\n    // References\n\n    // href\n    addPrefixToHrefAttr(node.attrs.href);\n\n    // (xlink:)href (deprecated, must be still supported)\n    addPrefixToHrefAttr(node.attrs['xlink:href']);\n\n    // (referenceable) properties\n    for (var referencesProp of referencesProps) {\n        addPrefixToUrlAttr(node.attrs[referencesProp]);\n    }\n\n\n    return node;\n};\n"]},"metadata":{},"sourceType":"script"}