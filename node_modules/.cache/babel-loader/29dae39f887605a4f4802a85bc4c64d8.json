{"ast":null,"code":"\"use strict\";\n\nvar assert = require(\"chai\").assert,\n    isPrototype = require(\"../../prototype/is\");\n\ndescribe(\"prototype/is\", function () {\n  it(\"Should return true on prototype\", function () {\n    assert.equal(isPrototype(Object.prototype), true);\n  });\n  it(\"Should return false on plain object\", function () {\n    assert.equal(isPrototype({}), false);\n  });\n  it(\"Should return false on function\", function () {\n    assert.equal(isPrototype(function () {\n      return true;\n    }), false);\n  });\n  it(\"Should return false on array\", function () {\n    assert.equal(isPrototype([]), false);\n  });\n\n  if (typeof Object.create === \"function\") {\n    it(\"Should return false on object with no prototype\", function () {\n      assert.equal(isPrototype(Object.create(null)), false);\n    });\n  }\n\n  it(\"Should return false on string\", function () {\n    assert.equal(isPrototype(\"foo\"), false);\n  });\n  it(\"Should return false on empty string\", function () {\n    assert.equal(isPrototype(\"\"), false);\n  });\n  it(\"Should return false on number\", function () {\n    assert.equal(isPrototype(123), false);\n  });\n  it(\"Should return false on NaN\", function () {\n    assert.equal(isPrototype(NaN), false);\n  });\n  it(\"Should return false on boolean\", function () {\n    assert.equal(isPrototype(true), false);\n  });\n\n  if (typeof Symbol === \"function\") {\n    it(\"Should return false on symbol\", function () {\n      assert.equal(isPrototype(Symbol(\"foo\")), false);\n    });\n  }\n\n  it(\"Should return false on null\", function () {\n    assert.equal(isPrototype(null), false);\n  });\n  it(\"Should return false on undefined\", function () {\n    assert.equal(isPrototype(void 0), false);\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/type/test/prototype/is.js"],"names":["assert","require","isPrototype","describe","it","equal","Object","prototype","create","NaN","Symbol"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAQC,OAAO,CAAC,MAAD,CAAP,CAAgBD,MAAlC;AAAA,IACIE,WAAW,GAAGD,OAAO,CAAC,oBAAD,CADzB;;AAGAE,QAAQ,CAAC,cAAD,EAAiB,YAAY;AACpCC,EAAAA,EAAE,CAAC,iCAAD,EAAoC,YAAY;AACjDJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAACI,MAAM,CAACC,SAAR,CAAxB,EAA4C,IAA5C;AACA,GAFC,CAAF;AAGAH,EAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAY;AACrDJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAAC,EAAD,CAAxB,EAA8B,KAA9B;AACA,GAFC,CAAF;AAGAE,EAAAA,EAAE,CAAC,iCAAD,EAAoC,YAAY;AACjDJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAAC,YAAY;AAAE,aAAO,IAAP;AAAc,KAA7B,CAAxB,EAAwD,KAAxD;AACA,GAFC,CAAF;AAGAE,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAAC,EAAD,CAAxB,EAA8B,KAA9B;AAAuC,GAAtF,CAAF;;AACA,MAAI,OAAOI,MAAM,CAACE,MAAd,KAAyB,UAA7B,EAAyC;AACxCJ,IAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAY;AACjEJ,MAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAACI,MAAM,CAACE,MAAP,CAAc,IAAd,CAAD,CAAxB,EAA+C,KAA/C;AACA,KAFC,CAAF;AAGA;;AACDJ,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAAC,KAAD,CAAxB,EAAiC,KAAjC;AAA0C,GAA1F,CAAF;AACAE,EAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAY;AACrDJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAAC,EAAD,CAAxB,EAA8B,KAA9B;AACA,GAFC,CAAF;AAGAE,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAAC,GAAD,CAAxB,EAA+B,KAA/B;AAAwC,GAAxF,CAAF;AACAE,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAACO,GAAD,CAAxB,EAA+B,KAA/B;AAAwC,GAArF,CAAF;AACAL,EAAAA,EAAE,CAAC,gCAAD,EAAmC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAAC,IAAD,CAAxB,EAAgC,KAAhC;AAAyC,GAA1F,CAAF;;AACA,MAAI,OAAOQ,MAAP,KAAkB,UAAtB,EAAkC;AACjCN,IAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAY;AAC/CJ,MAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAACQ,MAAM,CAAC,KAAD,CAAP,CAAxB,EAAyC,KAAzC;AACA,KAFC,CAAF;AAGA;;AAEDN,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAAC,IAAD,CAAxB,EAAgC,KAAhC;AAAyC,GAAvF,CAAF;AACAE,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAY;AAClDJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,WAAW,CAAC,KAAK,CAAN,CAAxB,EAAkC,KAAlC;AACA,GAFC,CAAF;AAGA,CAjCO,CAAR","sourcesContent":["\"use strict\";\n\nvar assert      = require(\"chai\").assert\n  , isPrototype = require(\"../../prototype/is\");\n\ndescribe(\"prototype/is\", function () {\n\tit(\"Should return true on prototype\", function () {\n\t\tassert.equal(isPrototype(Object.prototype), true);\n\t});\n\tit(\"Should return false on plain object\", function () {\n\t\tassert.equal(isPrototype({}), false);\n\t});\n\tit(\"Should return false on function\", function () {\n\t\tassert.equal(isPrototype(function () { return true; }), false);\n\t});\n\tit(\"Should return false on array\", function () { assert.equal(isPrototype([]), false); });\n\tif (typeof Object.create === \"function\") {\n\t\tit(\"Should return false on object with no prototype\", function () {\n\t\t\tassert.equal(isPrototype(Object.create(null)), false);\n\t\t});\n\t}\n\tit(\"Should return false on string\", function () { assert.equal(isPrototype(\"foo\"), false); });\n\tit(\"Should return false on empty string\", function () {\n\t\tassert.equal(isPrototype(\"\"), false);\n\t});\n\tit(\"Should return false on number\", function () { assert.equal(isPrototype(123), false); });\n\tit(\"Should return false on NaN\", function () { assert.equal(isPrototype(NaN), false); });\n\tit(\"Should return false on boolean\", function () { assert.equal(isPrototype(true), false); });\n\tif (typeof Symbol === \"function\") {\n\t\tit(\"Should return false on symbol\", function () {\n\t\t\tassert.equal(isPrototype(Symbol(\"foo\")), false);\n\t\t});\n\t}\n\n\tit(\"Should return false on null\", function () { assert.equal(isPrototype(null), false); });\n\tit(\"Should return false on undefined\", function () {\n\t\tassert.equal(isPrototype(void 0), false);\n\t});\n});\n"]},"metadata":{},"sourceType":"script"}