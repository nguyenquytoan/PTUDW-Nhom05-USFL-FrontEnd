{"ast":null,"code":"var List = require('css-tree').List;\n\nvar walk = require('css-tree').walk;\n\nfunction processRule(node, item, list) {\n  var selectors = node.prelude.children; // generate new rule sets:\n  // .a, .b { color: red; }\n  // ->\n  // .a { color: red; }\n  // .b { color: red; }\n  // while there are more than 1 simple selector split for rulesets\n\n  while (selectors.head !== selectors.tail) {\n    var newSelectors = new List();\n    newSelectors.insert(selectors.remove(selectors.head));\n    list.insert(list.createItem({\n      type: 'Rule',\n      loc: node.loc,\n      prelude: {\n        type: 'SelectorList',\n        loc: node.prelude.loc,\n        children: newSelectors\n      },\n      block: {\n        type: 'Block',\n        loc: node.block.loc,\n        children: node.block.children.copy()\n      },\n      pseudoSignature: node.pseudoSignature\n    }), item);\n  }\n}\n\nmodule.exports = function disjoinRule(ast) {\n  walk(ast, {\n    visit: 'Rule',\n    reverse: true,\n    enter: processRule\n  });\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/csso/lib/restructure/3-disjoinRuleset.js"],"names":["List","require","walk","processRule","node","item","list","selectors","prelude","children","head","tail","newSelectors","insert","remove","createItem","type","loc","block","copy","pseudoSignature","module","exports","disjoinRule","ast","visit","reverse","enter"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBD,IAA/B;;AACA,IAAIE,IAAI,GAAGD,OAAO,CAAC,UAAD,CAAP,CAAoBC,IAA/B;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;AACnC,MAAIC,SAAS,GAAGH,IAAI,CAACI,OAAL,CAAaC,QAA7B,CADmC,CAGnC;AACA;AACA;AACA;AACA;AAEA;;AACA,SAAOF,SAAS,CAACG,IAAV,KAAmBH,SAAS,CAACI,IAApC,EAA0C;AACtC,QAAIC,YAAY,GAAG,IAAIZ,IAAJ,EAAnB;AACAY,IAAAA,YAAY,CAACC,MAAb,CAAoBN,SAAS,CAACO,MAAV,CAAiBP,SAAS,CAACG,IAA3B,CAApB;AAEAJ,IAAAA,IAAI,CAACO,MAAL,CAAYP,IAAI,CAACS,UAAL,CAAgB;AACxBC,MAAAA,IAAI,EAAE,MADkB;AAExBC,MAAAA,GAAG,EAAEb,IAAI,CAACa,GAFc;AAGxBT,MAAAA,OAAO,EAAE;AACLQ,QAAAA,IAAI,EAAE,cADD;AAELC,QAAAA,GAAG,EAAEb,IAAI,CAACI,OAAL,CAAaS,GAFb;AAGLR,QAAAA,QAAQ,EAAEG;AAHL,OAHe;AAQxBM,MAAAA,KAAK,EAAE;AACHF,QAAAA,IAAI,EAAE,OADH;AAEHC,QAAAA,GAAG,EAAEb,IAAI,CAACc,KAAL,CAAWD,GAFb;AAGHR,QAAAA,QAAQ,EAAEL,IAAI,CAACc,KAAL,CAAWT,QAAX,CAAoBU,IAApB;AAHP,OARiB;AAaxBC,MAAAA,eAAe,EAAEhB,IAAI,CAACgB;AAbE,KAAhB,CAAZ,EAcIf,IAdJ;AAeH;AACJ;;AAEDgB,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACvCtB,EAAAA,IAAI,CAACsB,GAAD,EAAM;AACNC,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,OAAO,EAAE,IAFH;AAGNC,IAAAA,KAAK,EAAExB;AAHD,GAAN,CAAJ;AAKH,CAND","sourcesContent":["var List = require('css-tree').List;\nvar walk = require('css-tree').walk;\n\nfunction processRule(node, item, list) {\n    var selectors = node.prelude.children;\n\n    // generate new rule sets:\n    // .a, .b { color: red; }\n    // ->\n    // .a { color: red; }\n    // .b { color: red; }\n\n    // while there are more than 1 simple selector split for rulesets\n    while (selectors.head !== selectors.tail) {\n        var newSelectors = new List();\n        newSelectors.insert(selectors.remove(selectors.head));\n\n        list.insert(list.createItem({\n            type: 'Rule',\n            loc: node.loc,\n            prelude: {\n                type: 'SelectorList',\n                loc: node.prelude.loc,\n                children: newSelectors\n            },\n            block: {\n                type: 'Block',\n                loc: node.block.loc,\n                children: node.block.children.copy()\n            },\n            pseudoSignature: node.pseudoSignature\n        }), item);\n    }\n}\n\nmodule.exports = function disjoinRule(ast) {\n    walk(ast, {\n        visit: 'Rule',\n        reverse: true,\n        enter: processRule\n    });\n};\n"]},"metadata":{},"sourceType":"script"}