{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parse;\nvar reName = /^[^\\\\]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nvar reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi; //modified version of https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L87\n\nvar reAttr = /^\\s*((?:\\\\.|[\\w\\u00b0-\\uFFFF-])+)\\s*(?:(\\S?)=\\s*(?:(['\"])([^]*?)\\3|(#?(?:\\\\.|[\\w\\u00b0-\\uFFFF-])*)|)|)\\s*(i)?\\]/;\nvar actionTypes = {\n  undefined: \"exists\",\n  \"\": \"equals\",\n  \"~\": \"element\",\n  \"^\": \"start\",\n  $: \"end\",\n  \"*\": \"any\",\n  \"!\": \"not\",\n  \"|\": \"hyphen\"\n};\nvar Traversals = {\n  \">\": \"child\",\n  \"<\": \"parent\",\n  \"~\": \"sibling\",\n  \"+\": \"adjacent\"\n};\nvar attribSelectors = {\n  \"#\": [\"id\", \"equals\"],\n  \".\": [\"class\", \"element\"]\n}; //pseudos, whose data-property is parsed as well\n\nvar unpackPseudos = new Set([\"has\", \"not\", \"matches\"]);\nvar stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\nvar quotes = new Set(['\"', \"'\"]); //unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\n\nfunction funescape(_, escaped, escapedWhitespace) {\n  var high = parseInt(escaped, 16) - 0x10000; // NaN means non-codepoint\n\n  return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n  String.fromCharCode(high + 0x10000) : // Supplemental Plane codepoint (surrogate pair)\n  String.fromCharCode(high >> 10 | 0xd800, high & 0x3ff | 0xdc00);\n}\n\nfunction unescapeCSS(str) {\n  return str.replace(reEscape, funescape);\n}\n\nfunction isWhitespace(c) {\n  return c === \" \" || c === \"\\n\" || c === \"\\t\" || c === \"\\f\" || c === \"\\r\";\n}\n\nfunction parse(selector, options) {\n  var subselects = [];\n  selector = parseSelector(subselects, \"\" + selector, options);\n\n  if (selector !== \"\") {\n    throw new Error(\"Unmatched selector: \" + selector);\n  }\n\n  return subselects;\n}\n\nfunction parseSelector(subselects, selector, options) {\n  var tokens = [];\n  var sawWS = false;\n\n  function getName() {\n    var match = selector.match(reName);\n\n    if (!match) {\n      throw new Error(\"Expected name, found \" + selector);\n    }\n\n    var sub = match[0];\n    selector = selector.substr(sub.length);\n    return unescapeCSS(sub);\n  }\n\n  function stripWhitespace(start) {\n    while (isWhitespace(selector.charAt(start))) start++;\n\n    selector = selector.substr(start);\n  }\n\n  function isEscaped(pos) {\n    var slashCount = 0;\n\n    while (selector.charAt(--pos) === \"\\\\\") slashCount++;\n\n    return (slashCount & 1) === 1;\n  }\n\n  stripWhitespace(0);\n\n  while (selector !== \"\") {\n    var firstChar = selector.charAt(0);\n\n    if (isWhitespace(firstChar)) {\n      sawWS = true;\n      stripWhitespace(1);\n    } else if (firstChar in Traversals) {\n      tokens.push({\n        type: Traversals[firstChar]\n      });\n      sawWS = false;\n      stripWhitespace(1);\n    } else if (firstChar === \",\") {\n      if (tokens.length === 0) {\n        throw new Error(\"Empty sub-selector\");\n      }\n\n      subselects.push(tokens);\n      tokens = [];\n      sawWS = false;\n      stripWhitespace(1);\n    } else {\n      if (sawWS) {\n        if (tokens.length > 0) {\n          tokens.push({\n            type: \"descendant\"\n          });\n        }\n\n        sawWS = false;\n      }\n\n      if (firstChar === \"*\") {\n        selector = selector.substr(1);\n        tokens.push({\n          type: \"universal\"\n        });\n      } else if (firstChar in attribSelectors) {\n        var _a = attribSelectors[firstChar],\n            name_1 = _a[0],\n            action = _a[1];\n        selector = selector.substr(1);\n        tokens.push({\n          type: \"attribute\",\n          name: name_1,\n          action: action,\n          value: getName(),\n          ignoreCase: false\n        });\n      } else if (firstChar === \"[\") {\n        selector = selector.substr(1);\n        var data = selector.match(reAttr);\n\n        if (!data) {\n          throw new Error(\"Malformed attribute selector: \" + selector);\n        }\n\n        selector = selector.substr(data[0].length);\n        var name_2 = unescapeCSS(data[1]);\n\n        if (!options || (\"lowerCaseAttributeNames\" in options ? options.lowerCaseAttributeNames : !options.xmlMode)) {\n          name_2 = name_2.toLowerCase();\n        }\n\n        tokens.push({\n          type: \"attribute\",\n          name: name_2,\n          action: actionTypes[data[2]],\n          value: unescapeCSS(data[4] || data[5] || \"\"),\n          ignoreCase: !!data[6]\n        });\n      } else if (firstChar === \":\") {\n        if (selector.charAt(1) === \":\") {\n          selector = selector.substr(2);\n          tokens.push({\n            type: \"pseudo-element\",\n            name: getName().toLowerCase()\n          });\n          continue;\n        }\n\n        selector = selector.substr(1);\n        var name_3 = getName().toLowerCase();\n        var data = null;\n\n        if (selector.charAt(0) === \"(\") {\n          if (unpackPseudos.has(name_3)) {\n            var quot = selector.charAt(1);\n            var quoted = quotes.has(quot);\n            selector = selector.substr(quoted ? 2 : 1);\n            data = [];\n            selector = parseSelector(data, selector, options);\n\n            if (quoted) {\n              if (selector.charAt(0) !== quot) {\n                throw new Error(\"Unmatched quotes in :\" + name_3);\n              } else {\n                selector = selector.substr(1);\n              }\n            }\n\n            if (selector.charAt(0) !== \")\") {\n              throw new Error(\"Missing closing parenthesis in :\" + name_3 + \" (\" + selector + \")\");\n            }\n\n            selector = selector.substr(1);\n          } else {\n            var pos = 1;\n            var counter = 1;\n\n            for (; counter > 0 && pos < selector.length; pos++) {\n              if (selector.charAt(pos) === \"(\" && !isEscaped(pos)) counter++;else if (selector.charAt(pos) === \")\" && !isEscaped(pos)) counter--;\n            }\n\n            if (counter) {\n              throw new Error(\"Parenthesis not matched\");\n            }\n\n            data = selector.substr(1, pos - 2);\n            selector = selector.substr(pos);\n\n            if (stripQuotesFromPseudos.has(name_3)) {\n              var quot = data.charAt(0);\n\n              if (quot === data.slice(-1) && quotes.has(quot)) {\n                data = data.slice(1, -1);\n              }\n\n              data = unescapeCSS(data);\n            }\n          }\n        }\n\n        tokens.push({\n          type: \"pseudo\",\n          name: name_3,\n          data: data\n        });\n      } else if (reName.test(selector)) {\n        var name_4 = getName();\n\n        if (!options || (\"lowerCaseTags\" in options ? options.lowerCaseTags : !options.xmlMode)) {\n          name_4 = name_4.toLowerCase();\n        }\n\n        tokens.push({\n          type: \"tag\",\n          name: name_4\n        });\n      } else {\n        if (tokens.length && tokens[tokens.length - 1].type === \"descendant\") {\n          tokens.pop();\n        }\n\n        addToken(subselects, tokens);\n        return selector;\n      }\n    }\n  }\n\n  addToken(subselects, tokens);\n  return selector;\n}\n\nfunction addToken(subselects, tokens) {\n  if (subselects.length > 0 && tokens.length === 0) {\n    throw new Error(\"Empty sub-selector\");\n  }\n\n  subselects.push(tokens);\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/css-what/lib/parse.js"],"names":["Object","defineProperty","exports","value","default","parse","reName","reEscape","reAttr","actionTypes","undefined","$","Traversals","attribSelectors","unpackPseudos","Set","stripQuotesFromPseudos","quotes","funescape","_","escaped","escapedWhitespace","high","parseInt","String","fromCharCode","unescapeCSS","str","replace","isWhitespace","c","selector","options","subselects","parseSelector","Error","tokens","sawWS","getName","match","sub","substr","length","stripWhitespace","start","charAt","isEscaped","pos","slashCount","firstChar","push","type","_a","name_1","action","name","ignoreCase","data","name_2","lowerCaseAttributeNames","xmlMode","toLowerCase","name_3","has","quot","quoted","counter","slice","test","name_4","lowerCaseTags","pop","addToken"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = parse;\nvar reName = /^[^\\\\]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nvar reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\n//modified version of https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L87\nvar reAttr = /^\\s*((?:\\\\.|[\\w\\u00b0-\\uFFFF-])+)\\s*(?:(\\S?)=\\s*(?:(['\"])([^]*?)\\3|(#?(?:\\\\.|[\\w\\u00b0-\\uFFFF-])*)|)|)\\s*(i)?\\]/;\nvar actionTypes = {\n    undefined: \"exists\",\n    \"\": \"equals\",\n    \"~\": \"element\",\n    \"^\": \"start\",\n    $: \"end\",\n    \"*\": \"any\",\n    \"!\": \"not\",\n    \"|\": \"hyphen\",\n};\nvar Traversals = {\n    \">\": \"child\",\n    \"<\": \"parent\",\n    \"~\": \"sibling\",\n    \"+\": \"adjacent\",\n};\nvar attribSelectors = {\n    \"#\": [\"id\", \"equals\"],\n    \".\": [\"class\", \"element\"],\n};\n//pseudos, whose data-property is parsed as well\nvar unpackPseudos = new Set([\"has\", \"not\", \"matches\"]);\nvar stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\nvar quotes = new Set(['\"', \"'\"]);\n//unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    var high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isWhitespace(c) {\n    return c === \" \" || c === \"\\n\" || c === \"\\t\" || c === \"\\f\" || c === \"\\r\";\n}\nfunction parse(selector, options) {\n    var subselects = [];\n    selector = parseSelector(subselects, \"\" + selector, options);\n    if (selector !== \"\") {\n        throw new Error(\"Unmatched selector: \" + selector);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, options) {\n    var tokens = [];\n    var sawWS = false;\n    function getName() {\n        var match = selector.match(reName);\n        if (!match) {\n            throw new Error(\"Expected name, found \" + selector);\n        }\n        var sub = match[0];\n        selector = selector.substr(sub.length);\n        return unescapeCSS(sub);\n    }\n    function stripWhitespace(start) {\n        while (isWhitespace(selector.charAt(start)))\n            start++;\n        selector = selector.substr(start);\n    }\n    function isEscaped(pos) {\n        var slashCount = 0;\n        while (selector.charAt(--pos) === \"\\\\\")\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    stripWhitespace(0);\n    while (selector !== \"\") {\n        var firstChar = selector.charAt(0);\n        if (isWhitespace(firstChar)) {\n            sawWS = true;\n            stripWhitespace(1);\n        }\n        else if (firstChar in Traversals) {\n            tokens.push({ type: Traversals[firstChar] });\n            sawWS = false;\n            stripWhitespace(1);\n        }\n        else if (firstChar === \",\") {\n            if (tokens.length === 0) {\n                throw new Error(\"Empty sub-selector\");\n            }\n            subselects.push(tokens);\n            tokens = [];\n            sawWS = false;\n            stripWhitespace(1);\n        }\n        else {\n            if (sawWS) {\n                if (tokens.length > 0) {\n                    tokens.push({ type: \"descendant\" });\n                }\n                sawWS = false;\n            }\n            if (firstChar === \"*\") {\n                selector = selector.substr(1);\n                tokens.push({ type: \"universal\" });\n            }\n            else if (firstChar in attribSelectors) {\n                var _a = attribSelectors[firstChar], name_1 = _a[0], action = _a[1];\n                selector = selector.substr(1);\n                tokens.push({\n                    type: \"attribute\",\n                    name: name_1,\n                    action: action,\n                    value: getName(),\n                    ignoreCase: false,\n                });\n            }\n            else if (firstChar === \"[\") {\n                selector = selector.substr(1);\n                var data = selector.match(reAttr);\n                if (!data) {\n                    throw new Error(\"Malformed attribute selector: \" + selector);\n                }\n                selector = selector.substr(data[0].length);\n                var name_2 = unescapeCSS(data[1]);\n                if (!options ||\n                    (\"lowerCaseAttributeNames\" in options\n                        ? options.lowerCaseAttributeNames\n                        : !options.xmlMode)) {\n                    name_2 = name_2.toLowerCase();\n                }\n                tokens.push({\n                    type: \"attribute\",\n                    name: name_2,\n                    action: actionTypes[data[2]],\n                    value: unescapeCSS(data[4] || data[5] || \"\"),\n                    ignoreCase: !!data[6],\n                });\n            }\n            else if (firstChar === \":\") {\n                if (selector.charAt(1) === \":\") {\n                    selector = selector.substr(2);\n                    tokens.push({\n                        type: \"pseudo-element\",\n                        name: getName().toLowerCase(),\n                    });\n                    continue;\n                }\n                selector = selector.substr(1);\n                var name_3 = getName().toLowerCase();\n                var data = null;\n                if (selector.charAt(0) === \"(\") {\n                    if (unpackPseudos.has(name_3)) {\n                        var quot = selector.charAt(1);\n                        var quoted = quotes.has(quot);\n                        selector = selector.substr(quoted ? 2 : 1);\n                        data = [];\n                        selector = parseSelector(data, selector, options);\n                        if (quoted) {\n                            if (selector.charAt(0) !== quot) {\n                                throw new Error(\"Unmatched quotes in :\" + name_3);\n                            }\n                            else {\n                                selector = selector.substr(1);\n                            }\n                        }\n                        if (selector.charAt(0) !== \")\") {\n                            throw new Error(\"Missing closing parenthesis in :\" + name_3 + \" (\" + selector + \")\");\n                        }\n                        selector = selector.substr(1);\n                    }\n                    else {\n                        var pos = 1;\n                        var counter = 1;\n                        for (; counter > 0 && pos < selector.length; pos++) {\n                            if (selector.charAt(pos) === \"(\" && !isEscaped(pos))\n                                counter++;\n                            else if (selector.charAt(pos) === \")\" &&\n                                !isEscaped(pos))\n                                counter--;\n                        }\n                        if (counter) {\n                            throw new Error(\"Parenthesis not matched\");\n                        }\n                        data = selector.substr(1, pos - 2);\n                        selector = selector.substr(pos);\n                        if (stripQuotesFromPseudos.has(name_3)) {\n                            var quot = data.charAt(0);\n                            if (quot === data.slice(-1) && quotes.has(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                            data = unescapeCSS(data);\n                        }\n                    }\n                }\n                tokens.push({ type: \"pseudo\", name: name_3, data: data });\n            }\n            else if (reName.test(selector)) {\n                var name_4 = getName();\n                if (!options ||\n                    (\"lowerCaseTags\" in options\n                        ? options.lowerCaseTags\n                        : !options.xmlMode)) {\n                    name_4 = name_4.toLowerCase();\n                }\n                tokens.push({ type: \"tag\", name: name_4 });\n            }\n            else {\n                if (tokens.length &&\n                    tokens[tokens.length - 1].type === \"descendant\") {\n                    tokens.pop();\n                }\n                addToken(subselects, tokens);\n                return selector;\n            }\n        }\n    }\n    addToken(subselects, tokens);\n    return selector;\n}\nfunction addToken(subselects, tokens) {\n    if (subselects.length > 0 && tokens.length === 0) {\n        throw new Error(\"Empty sub-selector\");\n    }\n    subselects.push(tokens);\n}\n"]},"metadata":{},"sourceType":"script"}