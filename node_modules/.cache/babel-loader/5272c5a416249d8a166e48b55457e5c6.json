{"ast":null,"code":"'use strict';\n\nexports.type = 'full';\nexports.active = true;\nexports.description = 'removes unused namespaces declaration';\n/**\n * Remove unused namespaces declaration.\n *\n * @param {Object} item current iteration item\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\n\nexports.fn = function (data) {\n  var svgElem,\n      xmlnsCollection = [];\n  /**\n   * Remove namespace from collection.\n   *\n   * @param {String} ns namescape name\n   */\n\n  function removeNSfromCollection(ns) {\n    var pos = xmlnsCollection.indexOf(ns); // if found - remove ns from the namespaces collection\n\n    if (pos > -1) {\n      xmlnsCollection.splice(pos, 1);\n    }\n  }\n  /**\n   * Bananas!\n   *\n   * @param {Array} items input items\n   *\n   * @return {Array} output items\n   */\n\n\n  function monkeys(items) {\n    var i = 0,\n        length = items.content.length;\n\n    while (i < length) {\n      var item = items.content[i];\n\n      if (item.isElem('svg')) {\n        item.eachAttr(function (attr) {\n          // collect namespaces\n          if (attr.prefix === 'xmlns' && attr.local) {\n            xmlnsCollection.push(attr.local);\n          }\n        }); // if svg element has ns-attr\n\n        if (xmlnsCollection.length) {\n          // save svg element\n          svgElem = item;\n        }\n      }\n\n      if (xmlnsCollection.length) {\n        // check item for the ns-attrs\n        if (item.prefix) {\n          removeNSfromCollection(item.prefix);\n        } // check each attr for the ns-attrs\n\n\n        item.eachAttr(function (attr) {\n          removeNSfromCollection(attr.prefix);\n        });\n      } // if nothing is found - go deeper\n\n\n      if (xmlnsCollection.length && item.content) {\n        monkeys(item);\n      }\n\n      i++;\n    }\n\n    return items;\n  }\n\n  data = monkeys(data); // remove svg element ns-attributes if they are not used even once\n\n  if (xmlnsCollection.length) {\n    xmlnsCollection.forEach(function (name) {\n      svgElem.removeAttr('xmlns:' + name);\n    });\n  }\n\n  return data;\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/svgo/plugins/removeUnusedNS.js"],"names":["exports","type","active","description","fn","data","svgElem","xmlnsCollection","removeNSfromCollection","ns","pos","indexOf","splice","monkeys","items","i","length","content","item","isElem","eachAttr","attr","prefix","local","push","forEach","name","removeAttr"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,IAAR,GAAe,MAAf;AAEAD,OAAO,CAACE,MAAR,GAAiB,IAAjB;AAEAF,OAAO,CAACG,WAAR,GAAsB,uCAAtB;AAEA;;;;;;;;;AAQAH,OAAO,CAACI,EAAR,GAAa,UAASC,IAAT,EAAe;AAExB,MAAIC,OAAJ;AAAA,MACIC,eAAe,GAAG,EADtB;AAGA;;;;;;AAKA,WAASC,sBAAT,CAAgCC,EAAhC,EAAoC;AAEhC,QAAIC,GAAG,GAAGH,eAAe,CAACI,OAAhB,CAAwBF,EAAxB,CAAV,CAFgC,CAIhC;;AACA,QAAIC,GAAG,GAAG,CAAC,CAAX,EAAc;AACVH,MAAAA,eAAe,CAACK,MAAhB,CAAuBF,GAAvB,EAA4B,CAA5B;AACH;AAEJ;AAED;;;;;;;;;AAOA,WAASG,OAAT,CAAiBC,KAAjB,EAAwB;AAEpB,QAAIC,CAAC,GAAG,CAAR;AAAA,QACIC,MAAM,GAAGF,KAAK,CAACG,OAAN,CAAcD,MAD3B;;AAGA,WAAMD,CAAC,GAAGC,MAAV,EAAkB;AAEd,UAAIE,IAAI,GAAGJ,KAAK,CAACG,OAAN,CAAcF,CAAd,CAAX;;AAEA,UAAIG,IAAI,CAACC,MAAL,CAAY,KAAZ,CAAJ,EAAwB;AAEpBD,QAAAA,IAAI,CAACE,QAAL,CAAc,UAASC,IAAT,EAAe;AACzB;AACA,cAAIA,IAAI,CAACC,MAAL,KAAgB,OAAhB,IAA2BD,IAAI,CAACE,KAApC,EAA2C;AACvChB,YAAAA,eAAe,CAACiB,IAAhB,CAAqBH,IAAI,CAACE,KAA1B;AACH;AACJ,SALD,EAFoB,CASpB;;AACA,YAAIhB,eAAe,CAACS,MAApB,EAA4B;AACxB;AACAV,UAAAA,OAAO,GAAGY,IAAV;AACH;AAEJ;;AAED,UAAIX,eAAe,CAACS,MAApB,EAA4B;AAExB;AACA,YAAIE,IAAI,CAACI,MAAT,EAAiB;AACbd,UAAAA,sBAAsB,CAACU,IAAI,CAACI,MAAN,CAAtB;AACH,SALuB,CAOxB;;;AACAJ,QAAAA,IAAI,CAACE,QAAL,CAAc,UAASC,IAAT,EAAe;AACzBb,UAAAA,sBAAsB,CAACa,IAAI,CAACC,MAAN,CAAtB;AACH,SAFD;AAIH,OAjCa,CAmCd;;;AACA,UAAIf,eAAe,CAACS,MAAhB,IAA0BE,IAAI,CAACD,OAAnC,EAA4C;AACxCJ,QAAAA,OAAO,CAACK,IAAD,CAAP;AACH;;AAEDH,MAAAA,CAAC;AAEJ;;AAED,WAAOD,KAAP;AAEH;;AAEDT,EAAAA,IAAI,GAAGQ,OAAO,CAACR,IAAD,CAAd,CAjFwB,CAmFxB;;AACA,MAAIE,eAAe,CAACS,MAApB,EAA4B;AACxBT,IAAAA,eAAe,CAACkB,OAAhB,CAAwB,UAASC,IAAT,EAAe;AACnCpB,MAAAA,OAAO,CAACqB,UAAR,CAAmB,WAAWD,IAA9B;AACH,KAFD;AAGH;;AAED,SAAOrB,IAAP;AAEH,CA5FD","sourcesContent":["'use strict';\n\nexports.type = 'full';\n\nexports.active = true;\n\nexports.description = 'removes unused namespaces declaration';\n\n/**\n * Remove unused namespaces declaration.\n *\n * @param {Object} item current iteration item\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(data) {\n\n    var svgElem,\n        xmlnsCollection = [];\n\n    /**\n     * Remove namespace from collection.\n     *\n     * @param {String} ns namescape name\n     */\n    function removeNSfromCollection(ns) {\n\n        var pos = xmlnsCollection.indexOf(ns);\n\n        // if found - remove ns from the namespaces collection\n        if (pos > -1) {\n            xmlnsCollection.splice(pos, 1);\n        }\n\n    }\n\n    /**\n     * Bananas!\n     *\n     * @param {Array} items input items\n     *\n     * @return {Array} output items\n     */\n    function monkeys(items) {\n\n        var i = 0,\n            length = items.content.length;\n\n        while(i < length) {\n\n            var item = items.content[i];\n\n            if (item.isElem('svg')) {\n\n                item.eachAttr(function(attr) {\n                    // collect namespaces\n                    if (attr.prefix === 'xmlns' && attr.local) {\n                        xmlnsCollection.push(attr.local);\n                    }\n                });\n\n                // if svg element has ns-attr\n                if (xmlnsCollection.length) {\n                    // save svg element\n                    svgElem = item;\n                }\n\n            }\n\n            if (xmlnsCollection.length) {\n\n                // check item for the ns-attrs\n                if (item.prefix) {\n                    removeNSfromCollection(item.prefix);\n                }\n\n                // check each attr for the ns-attrs\n                item.eachAttr(function(attr) {\n                    removeNSfromCollection(attr.prefix);\n                });\n\n            }\n\n            // if nothing is found - go deeper\n            if (xmlnsCollection.length && item.content) {\n                monkeys(item);\n            }\n\n            i++;\n\n        }\n\n        return items;\n\n    }\n\n    data = monkeys(data);\n\n    // remove svg element ns-attributes if they are not used even once\n    if (xmlnsCollection.length) {\n        xmlnsCollection.forEach(function(name) {\n            svgElem.removeAttr('xmlns:' + name);\n        });\n    }\n\n    return data;\n\n};\n"]},"metadata":{},"sourceType":"script"}