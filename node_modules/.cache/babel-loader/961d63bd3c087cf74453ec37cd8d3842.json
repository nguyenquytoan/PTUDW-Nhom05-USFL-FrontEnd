{"ast":null,"code":"'use strict';\n\nfunction _crypto() {\n  const data = _interopRequireDefault(require('crypto'));\n\n  _crypto = function _crypto() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  const data = _interopRequireDefault(require('fs'));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _core() {\n  const data = require('@babel/core');\n\n  _core = function _core() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function _slash() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst THIS_FILE = _fs().default.readFileSync(__filename);\n\nconst jestPresetPath = require.resolve('babel-preset-jest');\n\nconst babelIstanbulPlugin = require.resolve('babel-plugin-istanbul'); // Narrow down the types\n\n\nconst createTransformer = (options = {}) => {\n  options = _objectSpread({}, options, {\n    caller: {\n      name: 'babel-jest',\n      supportsStaticESM: false\n    },\n    compact: false,\n    plugins: options && options.plugins || [],\n    presets: (options && options.presets || []).concat(jestPresetPath),\n    sourceMaps: 'both'\n  });\n\n  function loadBabelConfig(cwd, filename) {\n    // `cwd` first to allow incoming options to override it\n    const babelConfig = (0, _core().loadPartialConfig)(_objectSpread({\n      cwd\n    }, options, {\n      filename\n    }));\n\n    if (!babelConfig) {\n      throw new Error(`babel-jest: Babel ignores ${_chalk().default.bold((0, _slash().default)(_path().default.relative(cwd, filename)))} - make sure to include the file in Jest's ${_chalk().default.bold('transformIgnorePatterns')} as well.`);\n    }\n\n    return babelConfig;\n  }\n\n  return {\n    canInstrument: true,\n\n    getCacheKey(fileData, filename, configString, {\n      config,\n      instrument,\n      rootDir\n    }) {\n      const babelOptions = loadBabelConfig(config.cwd, filename);\n      const configPath = [babelOptions.config || '', babelOptions.babelrc || ''];\n      return _crypto().default.createHash('md5').update(THIS_FILE).update('\\0', 'utf8').update(JSON.stringify(babelOptions.options)).update('\\0', 'utf8').update(fileData).update('\\0', 'utf8').update(_path().default.relative(rootDir, filename)).update('\\0', 'utf8').update(configString).update('\\0', 'utf8').update(configPath.join('')).update('\\0', 'utf8').update(instrument ? 'instrument' : '').update('\\0', 'utf8').update(process.env.NODE_ENV || '').update('\\0', 'utf8').update(process.env.BABEL_ENV || '').digest('hex');\n    },\n\n    process(src, filename, config, transformOptions) {\n      const babelOptions = _objectSpread({}, loadBabelConfig(config.cwd, filename).options);\n\n      if (transformOptions && transformOptions.instrument) {\n        babelOptions.auxiliaryCommentBefore = ' istanbul ignore next '; // Copied from jest-runtime transform.js\n\n        babelOptions.plugins = (babelOptions.plugins || []).concat([[babelIstanbulPlugin, {\n          // files outside `cwd` will not be instrumented\n          cwd: config.rootDir,\n          exclude: []\n        }]]);\n      }\n\n      const transformResult = (0, _core().transformSync)(src, babelOptions);\n\n      if (transformResult) {\n        const code = transformResult.code,\n              map = transformResult.map;\n\n        if (typeof code === 'string') {\n          return {\n            code,\n            map\n          };\n        }\n      }\n\n      return src;\n    }\n\n  };\n};\n\nconst transformer = _objectSpread({}, createTransformer(), {\n  // Assigned here so only the exported transformer has `createTransformer`,\n  // instead of all created transformers by the function\n  createTransformer\n});\n\nmodule.exports = transformer;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/babel-jest/build/index.js"],"names":["_crypto","data","_interopRequireDefault","require","_fs","_path","_core","_chalk","_slash","obj","__esModule","default","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","THIS_FILE","readFileSync","__filename","jestPresetPath","resolve","babelIstanbulPlugin","createTransformer","options","caller","name","supportsStaticESM","compact","plugins","presets","sourceMaps","loadBabelConfig","cwd","filename","babelConfig","loadPartialConfig","Error","bold","relative","canInstrument","getCacheKey","fileData","configString","config","instrument","rootDir","babelOptions","configPath","babelrc","createHash","update","JSON","stringify","join","process","env","NODE_ENV","BABEL_ENV","digest","src","transformOptions","auxiliaryCommentBefore","exclude","transformResult","transformSync","code","map","transformer","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _crypto() {\n  const data = _interopRequireDefault(require('crypto'));\n\n  _crypto = function _crypto() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  const data = _interopRequireDefault(require('fs'));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require('path'));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _core() {\n  const data = require('@babel/core');\n\n  _core = function _core() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function _slash() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(\n        Object.getOwnPropertySymbols(source).filter(function(sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        })\n      );\n    }\n    ownKeys.forEach(function(key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nconst THIS_FILE = _fs().default.readFileSync(__filename);\n\nconst jestPresetPath = require.resolve('babel-preset-jest');\n\nconst babelIstanbulPlugin = require.resolve('babel-plugin-istanbul'); // Narrow down the types\n\nconst createTransformer = (options = {}) => {\n  options = _objectSpread({}, options, {\n    caller: {\n      name: 'babel-jest',\n      supportsStaticESM: false\n    },\n    compact: false,\n    plugins: (options && options.plugins) || [],\n    presets: ((options && options.presets) || []).concat(jestPresetPath),\n    sourceMaps: 'both'\n  });\n\n  function loadBabelConfig(cwd, filename) {\n    // `cwd` first to allow incoming options to override it\n    const babelConfig = (0, _core().loadPartialConfig)(\n      _objectSpread(\n        {\n          cwd\n        },\n        options,\n        {\n          filename\n        }\n      )\n    );\n\n    if (!babelConfig) {\n      throw new Error(\n        `babel-jest: Babel ignores ${_chalk().default.bold(\n          (0, _slash().default)(_path().default.relative(cwd, filename))\n        )} - make sure to include the file in Jest's ${_chalk().default.bold(\n          'transformIgnorePatterns'\n        )} as well.`\n      );\n    }\n\n    return babelConfig;\n  }\n\n  return {\n    canInstrument: true,\n\n    getCacheKey(\n      fileData,\n      filename,\n      configString,\n      {config, instrument, rootDir}\n    ) {\n      const babelOptions = loadBabelConfig(config.cwd, filename);\n      const configPath = [\n        babelOptions.config || '',\n        babelOptions.babelrc || ''\n      ];\n      return _crypto()\n        .default.createHash('md5')\n        .update(THIS_FILE)\n        .update('\\0', 'utf8')\n        .update(JSON.stringify(babelOptions.options))\n        .update('\\0', 'utf8')\n        .update(fileData)\n        .update('\\0', 'utf8')\n        .update(_path().default.relative(rootDir, filename))\n        .update('\\0', 'utf8')\n        .update(configString)\n        .update('\\0', 'utf8')\n        .update(configPath.join(''))\n        .update('\\0', 'utf8')\n        .update(instrument ? 'instrument' : '')\n        .update('\\0', 'utf8')\n        .update(process.env.NODE_ENV || '')\n        .update('\\0', 'utf8')\n        .update(process.env.BABEL_ENV || '')\n        .digest('hex');\n    },\n\n    process(src, filename, config, transformOptions) {\n      const babelOptions = _objectSpread(\n        {},\n        loadBabelConfig(config.cwd, filename).options\n      );\n\n      if (transformOptions && transformOptions.instrument) {\n        babelOptions.auxiliaryCommentBefore = ' istanbul ignore next '; // Copied from jest-runtime transform.js\n\n        babelOptions.plugins = (babelOptions.plugins || []).concat([\n          [\n            babelIstanbulPlugin,\n            {\n              // files outside `cwd` will not be instrumented\n              cwd: config.rootDir,\n              exclude: []\n            }\n          ]\n        ]);\n      }\n\n      const transformResult = (0, _core().transformSync)(src, babelOptions);\n\n      if (transformResult) {\n        const code = transformResult.code,\n          map = transformResult.map;\n\n        if (typeof code === 'string') {\n          return {\n            code,\n            map\n          };\n        }\n      }\n\n      return src;\n    }\n  };\n};\n\nconst transformer = _objectSpread({}, createTransformer(), {\n  // Assigned here so only the exported transformer has `createTransformer`,\n  // instead of all created transformers by the function\n  createTransformer\n});\n\nmodule.exports = transformer;\n"]},"metadata":{},"sourceType":"script"}