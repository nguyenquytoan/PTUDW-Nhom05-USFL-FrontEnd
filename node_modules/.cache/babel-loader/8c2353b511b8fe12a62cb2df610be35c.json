{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\n\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\n\nfunction expand(project, concurrent, scheduler) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n\n  if (scheduler === void 0) {\n    scheduler = undefined;\n  }\n\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n  return function (source) {\n    return source.lift(new ExpandOperator(project, concurrent, scheduler));\n  };\n}\n\nexports.expand = expand;\n\nvar ExpandOperator = function () {\n  function ExpandOperator(project, concurrent, scheduler) {\n    this.project = project;\n    this.concurrent = concurrent;\n    this.scheduler = scheduler;\n  }\n\n  ExpandOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  };\n\n  return ExpandOperator;\n}();\n\nexports.ExpandOperator = ExpandOperator;\n\nvar ExpandSubscriber = function (_super) {\n  __extends(ExpandSubscriber, _super);\n\n  function ExpandSubscriber(destination, project, concurrent, scheduler) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.project = project;\n    _this.concurrent = concurrent;\n    _this.scheduler = scheduler;\n    _this.index = 0;\n    _this.active = 0;\n    _this.hasCompleted = false;\n\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      _this.buffer = [];\n    }\n\n    return _this;\n  }\n\n  ExpandSubscriber.dispatch = function (arg) {\n    var subscriber = arg.subscriber,\n        result = arg.result,\n        value = arg.value,\n        index = arg.index;\n    subscriber.subscribeToProjection(result, value, index);\n  };\n\n  ExpandSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n\n      return;\n    }\n\n    var index = this.index++;\n\n    if (this.active < this.concurrent) {\n      destination.next(value);\n\n      try {\n        var project = this.project;\n        var result = project(value, index);\n\n        if (!this.scheduler) {\n          this.subscribeToProjection(result, value, index);\n        } else {\n          var state = {\n            subscriber: this,\n            result: result,\n            value: value,\n            index: index\n          };\n          var destination_1 = this.destination;\n          destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n        }\n      } catch (e) {\n        destination.error(e);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  };\n\n  ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n    this.active++;\n    var destination = this.destination;\n    destination.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n  };\n\n  ExpandSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n\n    this.unsubscribe();\n  };\n\n  ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this._next(innerValue);\n  };\n\n  ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n    var buffer = this.buffer;\n    var destination = this.destination;\n    destination.remove(innerSub);\n    this.active--;\n\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  };\n\n  return ExpandSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);\n\nexports.ExpandSubscriber = ExpandSubscriber;","map":{"version":3,"sources":["../../src/internal/operators/expand.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OuterSubscriber_1 = require(\"../OuterSubscriber\");\nvar subscribeToResult_1 = require(\"../util/subscribeToResult\");\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };\n}\nexports.expand = expand;\nvar ExpandOperator = (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexports.ExpandOperator = ExpandOperator;\nvar ExpandSubscriber = (function (_super) {\n    __extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.scheduler = scheduler;\n        _this.index = 0;\n        _this.active = 0;\n        _this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            _this.buffer = [];\n        }\n        return _this;\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            try {\n                var project = this.project;\n                var result = project(value, index);\n                if (!this.scheduler) {\n                    this.subscribeToProjection(result, value, index);\n                }\n                else {\n                    var state = { subscriber: this, result: result, value: value, index: index };\n                    var destination_1 = this.destination;\n                    destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n                }\n            }\n            catch (e) {\n                destination.error(e);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        var destination = this.destination;\n        destination.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        var destination = this.destination;\n        destination.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.ExpandSubscriber = ExpandSubscriber;\n//# sourceMappingURL=expand.js.map"]},"metadata":{},"sourceType":"script"}