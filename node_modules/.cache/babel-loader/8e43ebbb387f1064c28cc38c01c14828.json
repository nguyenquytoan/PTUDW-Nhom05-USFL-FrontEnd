{"ast":null,"code":"/**\n * @fileoverview Rule to flag nested ternary expressions\n * @author Ian Christian Myers\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow nested ternary expressions\",\n      category: \"Stylistic Issues\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-nested-ternary\"\n    },\n    schema: []\n  },\n\n  create(context) {\n    return {\n      ConditionalExpression(node) {\n        if (node.alternate.type === \"ConditionalExpression\" || node.consequent.type === \"ConditionalExpression\") {\n          context.report({\n            node,\n            message: \"Do not nest ternary expressions.\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/lib/rules/no-nested-ternary.js"],"names":["module","exports","meta","type","docs","description","category","recommended","url","schema","create","context","ConditionalExpression","node","alternate","consequent","report","message"],"mappings":"AAAA;;;;AAKA,a,CAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,qCADX;AAEFC,MAAAA,QAAQ,EAAE,kBAFR;AAGFC,MAAAA,WAAW,EAAE,KAHX;AAIFC,MAAAA,GAAG,EAAE;AAJH,KAHJ;AAUFC,IAAAA,MAAM,EAAE;AAVN,GADO;;AAcbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ,WAAO;AACHC,MAAAA,qBAAqB,CAACC,IAAD,EAAO;AACxB,YAAIA,IAAI,CAACC,SAAL,CAAeX,IAAf,KAAwB,uBAAxB,IACIU,IAAI,CAACE,UAAL,CAAgBZ,IAAhB,KAAyB,uBADjC,EAC0D;AACtDQ,UAAAA,OAAO,CAACK,MAAR,CAAe;AAAEH,YAAAA,IAAF;AAAQI,YAAAA,OAAO,EAAE;AAAjB,WAAf;AACH;AACJ;;AANE,KAAP;AAQH;;AAxBY,CAAjB","sourcesContent":["/**\n * @fileoverview Rule to flag nested ternary expressions\n * @author Ian Christian Myers\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"disallow nested ternary expressions\",\n            category: \"Stylistic Issues\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-nested-ternary\"\n        },\n\n        schema: []\n    },\n\n    create(context) {\n\n        return {\n            ConditionalExpression(node) {\n                if (node.alternate.type === \"ConditionalExpression\" ||\n                        node.consequent.type === \"ConditionalExpression\") {\n                    context.report({ node, message: \"Do not nest ternary expressions.\" });\n                }\n            }\n        };\n    }\n};\n"]},"metadata":{},"sourceType":"script"}