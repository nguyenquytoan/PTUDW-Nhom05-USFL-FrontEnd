{"ast":null,"code":"var Token = require('../../tokenizer/token');\n\nvar serializeAll = require('../../writer/one-time').all;\n\nvar serializeRules = require('../../writer/one-time').rules;\n\nfunction removeDuplicateMediaQueries(tokens) {\n  var candidates = {};\n  var candidate;\n  var token;\n  var key;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    if (token[0] != Token.NESTED_BLOCK) {\n      continue;\n    }\n\n    key = serializeRules(token[1]) + '%' + serializeAll(token[2]);\n    candidate = candidates[key];\n\n    if (candidate) {\n      candidate[2] = [];\n    }\n\n    candidates[key] = token;\n  }\n}\n\nmodule.exports = removeDuplicateMediaQueries;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/optimizer/level-2/remove-duplicate-media-queries.js"],"names":["Token","require","serializeAll","all","serializeRules","rules","removeDuplicateMediaQueries","tokens","candidates","candidate","token","key","i","l","length","NESTED_BLOCK","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEA,IAAIC,YAAY,GAAGD,OAAO,CAAC,uBAAD,CAAP,CAAiCE,GAApD;;AACA,IAAIC,cAAc,GAAGH,OAAO,CAAC,uBAAD,CAAP,CAAiCI,KAAtD;;AAEA,SAASC,2BAAT,CAAqCC,MAArC,EAA6C;AAC3C,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,SAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,GAAJ;AACA,MAAIC,CAAJ,EAAOC,CAAP;;AAEA,OAAKD,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGN,MAAM,CAACO,MAAvB,EAA+BF,CAAC,GAAGC,CAAnC,EAAsCD,CAAC,EAAvC,EAA2C;AACzCF,IAAAA,KAAK,GAAGH,MAAM,CAACK,CAAD,CAAd;;AACA,QAAIF,KAAK,CAAC,CAAD,CAAL,IAAYV,KAAK,CAACe,YAAtB,EAAoC;AAClC;AACD;;AAEDJ,IAAAA,GAAG,GAAGP,cAAc,CAACM,KAAK,CAAC,CAAD,CAAN,CAAd,GAA2B,GAA3B,GAAiCR,YAAY,CAACQ,KAAK,CAAC,CAAD,CAAN,CAAnD;AACAD,IAAAA,SAAS,GAAGD,UAAU,CAACG,GAAD,CAAtB;;AAEA,QAAIF,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAe,EAAf;AACD;;AAEDD,IAAAA,UAAU,CAACG,GAAD,CAAV,GAAkBD,KAAlB;AACD;AACF;;AAEDM,MAAM,CAACC,OAAP,GAAiBX,2BAAjB","sourcesContent":["var Token = require('../../tokenizer/token');\n\nvar serializeAll = require('../../writer/one-time').all;\nvar serializeRules = require('../../writer/one-time').rules;\n\nfunction removeDuplicateMediaQueries(tokens) {\n  var candidates = {};\n  var candidate;\n  var token;\n  var key;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    if (token[0] != Token.NESTED_BLOCK) {\n      continue;\n    }\n\n    key = serializeRules(token[1]) + '%' + serializeAll(token[2]);\n    candidate = candidates[key];\n\n    if (candidate) {\n      candidate[2] = [];\n    }\n\n    candidates[key] = token;\n  }\n}\n\nmodule.exports = removeDuplicateMediaQueries;\n"]},"metadata":{},"sourceType":"script"}