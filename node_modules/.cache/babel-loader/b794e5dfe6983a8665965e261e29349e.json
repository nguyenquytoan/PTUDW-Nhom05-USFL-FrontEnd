{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst preRunMessageRemove = _jestUtil().preRunMessage.remove;\n\nclass BaseReporter {\n  constructor() {\n    _defineProperty(this, '_error', void 0);\n  }\n\n  log(message) {\n    process.stderr.write(message + '\\n');\n  }\n\n  onRunStart(_results, _options) {\n    preRunMessageRemove(process.stderr);\n  }\n\n  onTestResult(_test, _testResult, _results) {}\n\n  onTestStart(_test) {}\n\n  onRunComplete(_contexts, _aggregatedResults) {}\n\n  _setError(error) {\n    this._error = error;\n  } // Return an error that occurred during reporting. This error will\n  // define whether the test run was successful or failed.\n\n\n  getLastError() {\n    return this._error;\n  }\n\n}\n\nexports.default = BaseReporter;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/@jest/reporters/build/base_reporter.js"],"names":["Object","defineProperty","exports","value","default","_jestUtil","data","require","_defineProperty","obj","key","enumerable","configurable","writable","preRunMessageRemove","preRunMessage","remove","BaseReporter","constructor","log","message","process","stderr","write","onRunStart","_results","_options","onTestResult","_test","_testResult","onTestStart","onRunComplete","_contexts","_aggregatedResults","_setError","error","_error","getLastError"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAMC,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AAEAF,EAAAA,SAAS,GAAG,SAASA,SAAT,GAAqB;AAC/B,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASE,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCP,KAAnC,EAA0C;AACxC,MAAIO,GAAG,IAAID,GAAX,EAAgB;AACdT,IAAAA,MAAM,CAACC,cAAP,CAAsBQ,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9BP,MAAAA,KAAK,EAAEA,KADuB;AAE9BQ,MAAAA,UAAU,EAAE,IAFkB;AAG9BC,MAAAA,YAAY,EAAE,IAHgB;AAI9BC,MAAAA,QAAQ,EAAE;AAJoB,KAAhC;AAMD,GAPD,MAOO;AACLJ,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWP,KAAX;AACD;;AACD,SAAOM,GAAP;AACD;;AAED,MAAMK,mBAAmB,GAAGT,SAAS,GAAGU,aAAZ,CAA0BC,MAAtD;;AAEA,MAAMC,YAAN,CAAmB;AACjBC,EAAAA,WAAW,GAAG;AACZV,IAAAA,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,KAAK,CAAtB,CAAf;AACD;;AAEDW,EAAAA,GAAG,CAACC,OAAD,EAAU;AACXC,IAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBH,OAAO,GAAG,IAA/B;AACD;;AAEDI,EAAAA,UAAU,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC7BZ,IAAAA,mBAAmB,CAACO,OAAO,CAACC,MAAT,CAAnB;AACD;;AAEDK,EAAAA,YAAY,CAACC,KAAD,EAAQC,WAAR,EAAqBJ,QAArB,EAA+B,CAAE;;AAE7CK,EAAAA,WAAW,CAACF,KAAD,EAAQ,CAAE;;AAErBG,EAAAA,aAAa,CAACC,SAAD,EAAYC,kBAAZ,EAAgC,CAAE;;AAE/CC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACf,SAAKC,MAAL,GAAcD,KAAd;AACD,GArBgB,CAqBf;AACF;;;AAEAE,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKD,MAAZ;AACD;;AA1BgB;;AA6BnBlC,OAAO,CAACE,OAAR,GAAkBa,YAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nconst preRunMessageRemove = _jestUtil().preRunMessage.remove;\n\nclass BaseReporter {\n  constructor() {\n    _defineProperty(this, '_error', void 0);\n  }\n\n  log(message) {\n    process.stderr.write(message + '\\n');\n  }\n\n  onRunStart(_results, _options) {\n    preRunMessageRemove(process.stderr);\n  }\n\n  onTestResult(_test, _testResult, _results) {}\n\n  onTestStart(_test) {}\n\n  onRunComplete(_contexts, _aggregatedResults) {}\n\n  _setError(error) {\n    this._error = error;\n  } // Return an error that occurred during reporting. This error will\n  // define whether the test run was successful or failed.\n\n  getLastError() {\n    return this._error;\n  }\n}\n\nexports.default = BaseReporter;\n"]},"metadata":{},"sourceType":"script"}