{"ast":null,"code":"const test = require('tap').test,\n      prr = require('./');\n\ntest('test prr(o, key, value) form', function (t) {\n  t.plan(2);\n  var o = {};\n  prr(o, 'foo', 'bar');\n  t.equal(o.foo, 'bar', 'correct value');\n  t.deepEqual(Object.getOwnPropertyDescriptor(o, 'foo'), {\n    enumerable: false,\n    configurable: false,\n    writable: false,\n    value: 'bar'\n  }, 'correct property descriptor');\n  t.end();\n});\ntest('test prr(o, { key: value }) form', function (t) {\n  t.plan(2);\n  var o = {};\n  prr(o, {\n    foo: 'bar'\n  });\n  t.equal(o.foo, 'bar', 'correct value');\n  t.deepEqual(Object.getOwnPropertyDescriptor(o, 'foo'), {\n    enumerable: false,\n    configurable: false,\n    writable: false,\n    value: 'bar'\n  }, 'correct property descriptor');\n  t.end();\n});\ntest('test multiple key:value pairs', function (t) {\n  var o = {\n    foo: 'bar'\n  };\n  prr(o, {\n    one: 'ONE',\n    two: 'TWO',\n    obj: {\n      o: 'o'\n    }\n  });\n  t.deepEqual(o, {\n    foo: 'bar'\n  }, 'properties are not enumerable');\n  t.equal(o.one, 'ONE', 'correctly set property');\n  t.equal(o.two, 'TWO', 'correctly set property');\n  t.deepEqual(o.obj, {\n    o: 'o'\n  }, 'correctly set property');\n  ['one', 'two', 'obj'].forEach(function (p) {\n    t.deepEqual(Object.getOwnPropertyDescriptor(o, p), {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: p == 'obj' ? {\n        o: 'o'\n      } : p.toUpperCase()\n    }, 'correct property descriptor');\n  });\n  t.end();\n});\ntest('test descriptor options', function (t) {\n  var o = {};\n  prr(o, 'foo', 'bar', {\n    enumerable: true,\n    configurable: false\n  });\n  t.equal(o.foo, 'bar', 'correct value');\n  t.deepEqual(Object.getOwnPropertyDescriptor(o, 'foo'), {\n    enumerable: true,\n    configurable: false,\n    writable: false,\n    value: 'bar'\n  }, 'correct property descriptor');\n  prr(o, 'foo2', 'bar2', {\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  t.equal(o.foo2, 'bar2', 'correct value');\n  t.deepEqual(Object.getOwnPropertyDescriptor(o, 'foo2'), {\n    enumerable: true,\n    configurable: true,\n    writable: false,\n    value: 'bar2'\n  }, 'correct property descriptor');\n  prr(o, 'foo3', 'bar3', {\n    enumerable: true,\n    configurable: true,\n    writable: true\n  });\n  t.equal(o.foo3, 'bar3', 'correct value');\n  t.deepEqual(Object.getOwnPropertyDescriptor(o, 'foo3'), {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 'bar3'\n  }, 'correct property descriptor');\n  t.end();\n});\ntest('test descriptor options, string form', function (t) {\n  var o = {};\n  prr(o, 'foo', 'bar', 'e');\n  t.equal(o.foo, 'bar', 'correct value');\n  t.deepEqual(Object.getOwnPropertyDescriptor(o, 'foo'), {\n    enumerable: true,\n    configurable: false,\n    writable: false,\n    value: 'bar'\n  }, 'correct property descriptor');\n  prr(o, 'foo2', 'bar2', 'ec');\n  t.equal(o.foo2, 'bar2', 'correct value');\n  t.deepEqual(Object.getOwnPropertyDescriptor(o, 'foo2'), {\n    enumerable: true,\n    configurable: true,\n    writable: false,\n    value: 'bar2'\n  }, 'correct property descriptor');\n  prr(o, 'foo3', 'bar3', 'ecw');\n  t.equal(o.foo3, 'bar3', 'correct value');\n  t.deepEqual(Object.getOwnPropertyDescriptor(o, 'foo3'), {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 'bar3'\n  }, 'correct property descriptor');\n  t.end();\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/prr/test.js"],"names":["test","require","prr","t","plan","o","equal","foo","deepEqual","Object","getOwnPropertyDescriptor","enumerable","configurable","writable","value","end","one","two","obj","forEach","p","toUpperCase","foo2","foo3"],"mappings":"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","sourcesContent":["const test = require('tap').test\n    , prr  = require('./')\n\ntest('test prr(o, key, value) form', function (t) {\n  t.plan(2)\n\n  var o = {}\n  prr(o, 'foo', 'bar')\n  t.equal(o.foo, 'bar', 'correct value')\n  t.deepEqual(\n      Object.getOwnPropertyDescriptor(o, 'foo')\n    , {\n          enumerable   : false\n        , configurable : false\n        , writable     : false\n        , value        : 'bar'\n      }\n    , 'correct property descriptor'\n  )\n  t.end()\n})\n\ntest('test prr(o, { key: value }) form', function (t) {\n  t.plan(2)\n\n  var o = {}\n  prr(o, { foo: 'bar' })\n\n  t.equal(o.foo, 'bar', 'correct value')\n  t.deepEqual(\n      Object.getOwnPropertyDescriptor(o, 'foo')\n    , {\n          enumerable   : false\n        , configurable : false\n        , writable     : false\n        , value        : 'bar'\n      }\n    , 'correct property descriptor'\n  )\n  t.end()\n})\n\ntest('test multiple key:value pairs', function (t) {\n  var o = { foo: 'bar' }\n\n  prr(o, { one: 'ONE', two: 'TWO', obj: { o: 'o' }})\n\n  t.deepEqual(o, { foo: 'bar' }, 'properties are not enumerable')\n  t.equal(o.one, 'ONE', 'correctly set property')\n  t.equal(o.two, 'TWO', 'correctly set property')\n  t.deepEqual(o.obj, { o: 'o' }, 'correctly set property')\n\n  ;[ 'one', 'two', 'obj' ].forEach(function (p) {\n    t.deepEqual(\n        Object.getOwnPropertyDescriptor(o, p)\n      , {\n            enumerable   : false\n          , configurable : false\n          , writable     : false\n          , value        : p == 'obj' ? { o: 'o' } : p.toUpperCase()\n        }\n      , 'correct property descriptor'\n    )\n  })\n\n  t.end()\n})\n\ntest('test descriptor options', function (t) {\n  var o = {}\n\n  prr(o, 'foo', 'bar', {\n      enumerable   : true\n    , configurable : false\n  })\n  t.equal(o.foo, 'bar', 'correct value')\n  t.deepEqual(\n      Object.getOwnPropertyDescriptor(o, 'foo')\n    , {\n          enumerable   : true\n        , configurable : false\n        , writable     : false\n        , value        : 'bar'\n      }\n    , 'correct property descriptor'\n  )\n\n  prr(o, 'foo2', 'bar2', {\n      enumerable   : true\n    , configurable : true\n    , writable     : false\n  })\n  t.equal(o.foo2, 'bar2', 'correct value')\n  t.deepEqual(\n      Object.getOwnPropertyDescriptor(o, 'foo2')\n    , {\n          enumerable   : true\n        , configurable : true\n        , writable     : false\n        , value        : 'bar2'\n      }\n    , 'correct property descriptor'\n  )\n\n  prr(o, 'foo3', 'bar3', {\n      enumerable   : true\n    , configurable : true\n    , writable     : true\n  })\n  t.equal(o.foo3, 'bar3', 'correct value')\n  t.deepEqual(\n      Object.getOwnPropertyDescriptor(o, 'foo3')\n    , {\n          enumerable   : true\n        , configurable : true\n        , writable     : true\n        , value        : 'bar3'\n      }\n    , 'correct property descriptor'\n  )\n\n  t.end()\n})\n\n\ntest('test descriptor options, string form', function (t) {\n  var o = {}\n\n  prr(o, 'foo', 'bar', 'e')\n  t.equal(o.foo, 'bar', 'correct value')\n  t.deepEqual(\n      Object.getOwnPropertyDescriptor(o, 'foo')\n    , {\n          enumerable   : true\n        , configurable : false\n        , writable     : false\n        , value        : 'bar'\n      }\n    , 'correct property descriptor'\n  )\n\n  prr(o, 'foo2', 'bar2', 'ec')\n  t.equal(o.foo2, 'bar2', 'correct value')\n  t.deepEqual(\n      Object.getOwnPropertyDescriptor(o, 'foo2')\n    , {\n          enumerable   : true\n        , configurable : true\n        , writable     : false\n        , value        : 'bar2'\n      }\n    , 'correct property descriptor'\n  )\n\n  prr(o, 'foo3', 'bar3', 'ecw')\n  t.equal(o.foo3, 'bar3', 'correct value')\n  t.deepEqual(\n      Object.getOwnPropertyDescriptor(o, 'foo3')\n    , {\n          enumerable   : true\n        , configurable : true\n        , writable     : true\n        , value        : 'bar3'\n      }\n    , 'correct property descriptor'\n  )\n\n  t.end()\n})\n"]},"metadata":{},"sourceType":"script"}