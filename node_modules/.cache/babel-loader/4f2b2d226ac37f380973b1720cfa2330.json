{"ast":null,"code":"\"use strict\";\n\ndefine(['../lib/loglevel', 'test/test-helpers'], function (log, testHelpers) {\n  var describeIf = testHelpers.describeIf;\n  var itIf = testHelpers.itIf;\n  describe(\"Integration smoke tests:\", function () {\n    describe(\"log methods\", function () {\n      it(\"can all be disabled\", function () {\n        log.setLevel(log.levels.SILENT);\n        log.trace(\"trace\");\n        log.debug(\"debug\");\n        log.log(\"log\");\n        log.info(\"info\");\n        log.warn(\"warn\");\n        log.error(\"error\");\n      });\n    });\n    describeIf(typeof console !== \"undefined\", \"log methods\", function () {\n      it(\"can all be called\", function () {\n        if (typeof console !== \"undefined\") {\n          log.setLevel(log.levels.TRACE);\n        }\n\n        log.trace(\"trace\");\n        log.debug(\"debug\");\n        log.log(\"log\");\n        log.info(\"info\");\n        log.warn(\"warn\");\n        log.error(\"error\");\n      });\n    });\n    describeIf(typeof console !== \"undefined\", \"log levels\", function () {\n      beforeEach(function () {\n        this.addMatchers({\n          \"toBeTheStoredLevel\": testHelpers.toBeTheStoredLevel\n        });\n      });\n      it(\"are all settable\", function () {\n        log.setLevel(log.levels.TRACE);\n        log.setLevel(log.levels.DEBUG);\n        log.setLevel(log.levels.INFO);\n        log.setLevel(log.levels.WARN);\n        log.setLevel(log.levels.ERROR);\n      });\n      itIf(testHelpers.isAnyLevelStoragePossible(), \"are persisted\", function () {\n        log.setLevel(log.levels.TRACE);\n        expect('trace').toBeTheStoredLevel();\n        log.setLevel(log.levels.DEBUG);\n        expect('debug').toBeTheStoredLevel();\n        log.setLevel(log.levels.INFO);\n        expect('info').toBeTheStoredLevel();\n        log.setLevel(log.levels.WARN);\n        expect('warn').toBeTheStoredLevel();\n        log.setLevel(log.levels.ERROR);\n        expect('error').toBeTheStoredLevel();\n        log.setLevel(log.levels.SILENT);\n        expect('silent').toBeTheStoredLevel();\n      });\n    });\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/loglevel/test/integration-smoke-test.js"],"names":["define","log","testHelpers","describeIf","itIf","describe","it","setLevel","levels","SILENT","trace","debug","info","warn","error","console","TRACE","beforeEach","addMatchers","toBeTheStoredLevel","DEBUG","INFO","WARN","ERROR","isAnyLevelStoragePossible","expect"],"mappings":"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","sourcesContent":["\"use strict\";\n\ndefine(['../lib/loglevel', 'test/test-helpers'], function(log, testHelpers) {\n    var describeIf = testHelpers.describeIf;\n    var itIf = testHelpers.itIf;\n\n    describe(\"Integration smoke tests:\", function() {\n        describe(\"log methods\", function() {\n            it(\"can all be disabled\", function() {\n                log.setLevel(log.levels.SILENT);\n                log.trace(\"trace\");\n                log.debug(\"debug\");\n                log.log(\"log\");\n                log.info(\"info\");\n                log.warn(\"warn\");\n                log.error(\"error\");\n            });\n        });\n\n        describeIf(typeof console !== \"undefined\", \"log methods\", function() {\n            it(\"can all be called\", function() {\n                if (typeof console !== \"undefined\") {\n                    log.setLevel(log.levels.TRACE);\n                }\n\n                log.trace(\"trace\");\n                log.debug(\"debug\");\n                log.log(\"log\");\n                log.info(\"info\");\n                log.warn(\"warn\");\n                log.error(\"error\");\n            });\n        });\n\n        describeIf(typeof console !== \"undefined\", \"log levels\", function() {\n            beforeEach(function() {\n                this.addMatchers({\n                    \"toBeTheStoredLevel\" : testHelpers.toBeTheStoredLevel\n                });\n            });\n\n            it(\"are all settable\", function() {\n                log.setLevel(log.levels.TRACE);\n                log.setLevel(log.levels.DEBUG);\n                log.setLevel(log.levels.INFO);\n                log.setLevel(log.levels.WARN);\n                log.setLevel(log.levels.ERROR);\n            });\n\n            itIf(testHelpers.isAnyLevelStoragePossible(), \"are persisted\", function() {\n                log.setLevel(log.levels.TRACE);\n                expect('trace').toBeTheStoredLevel();\n\n                log.setLevel(log.levels.DEBUG);\n                expect('debug').toBeTheStoredLevel();\n\n                log.setLevel(log.levels.INFO);\n                expect('info').toBeTheStoredLevel();\n\n                log.setLevel(log.levels.WARN);\n                expect('warn').toBeTheStoredLevel();\n\n                log.setLevel(log.levels.ERROR);\n                expect('error').toBeTheStoredLevel();\n\n                log.setLevel(log.levels.SILENT);\n                expect('silent').toBeTheStoredLevel();\n            });\n        });\n    });\n});\n"]},"metadata":{},"sourceType":"script"}