{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = getValue;\nexports.getLiteralValue = getLiteralValue;\n\nvar _Literal = require('./Literal');\n\nvar _Literal2 = _interopRequireDefault(_Literal);\n\nvar _JSXElement = require('./JSXElement');\n\nvar _JSXElement2 = _interopRequireDefault(_JSXElement);\n\nvar _expressions = require('./expressions');\n\nvar _expressions2 = _interopRequireDefault(_expressions);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Composition map of types to their extractor functions.\n\n\nvar TYPES = {\n  Literal: _Literal2.default,\n  JSXElement: _JSXElement2.default,\n  JSXExpressionContainer: _expressions2.default\n}; // Composition map of types to their extractor functions to handle literals.\n\nvar LITERAL_TYPES = _extends({}, TYPES, {\n  JSXElement: function JSXElement() {\n    return null;\n  },\n  JSXExpressionContainer: _expressions.extractLiteral\n});\n/**\n * This function maps an AST value node\n * to its correct extractor function for its\n * given type.\n *\n * This will map correctly for *all* possible types.\n *\n * @param value - AST Value object on a JSX Attribute.\n */\n\n\nfunction getValue(value) {\n  return TYPES[value.type](value);\n}\n/**\n * This function maps an AST value node\n * to its correct extractor function for its\n * given type.\n *\n * This will map correctly for *some* possible types that map to literals.\n *\n * @param value - AST Value object on a JSX Attribute.\n */\n\n\nfunction getLiteralValue(value) {\n  return LITERAL_TYPES[value.type](value);\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jsx-ast-utils/lib/values/index.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","getValue","getLiteralValue","_Literal","require","_Literal2","_interopRequireDefault","_JSXElement","_JSXElement2","_expressions","_expressions2","obj","__esModule","TYPES","Literal","JSXElement","JSXExpressionContainer","LITERAL_TYPES","extractLiteral","type"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEAJ,OAAO,CAACa,OAAR,GAAkBC,QAAlB;AACAd,OAAO,CAACe,eAAR,GAA0BA,eAA1B;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACH,QAAD,CAAtC;;AAEA,IAAII,WAAW,GAAGH,OAAO,CAAC,cAAD,CAAzB;;AAEA,IAAII,YAAY,GAAGF,sBAAsB,CAACC,WAAD,CAAzC;;AAEA,IAAIE,YAAY,GAAGL,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIM,aAAa,GAAGJ,sBAAsB,CAACG,YAAD,CAA1C;;AAEA,SAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEX,IAAAA,OAAO,EAAEW;AAAX,GAArC;AAAwD,C,CAE/F;;;AACA,IAAIE,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAET,SAAS,CAACL,OADT;AAEVe,EAAAA,UAAU,EAAEP,YAAY,CAACR,OAFf;AAGVgB,EAAAA,sBAAsB,EAAEN,aAAa,CAACV;AAH5B,CAAZ,C,CAMA;;AACA,IAAIiB,aAAa,GAAG5B,QAAQ,CAAC,EAAD,EAAKwB,KAAL,EAAY;AACtCE,EAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,WAAO,IAAP;AACD,GAHqC;AAItCC,EAAAA,sBAAsB,EAAEP,YAAY,CAACS;AAJC,CAAZ,CAA5B;AAOA;;;;;;;;;;;AASA,SAASjB,QAAT,CAAkBb,KAAlB,EAAyB;AACvB,SAAOyB,KAAK,CAACzB,KAAK,CAAC+B,IAAP,CAAL,CAAkB/B,KAAlB,CAAP;AACD;AAED;;;;;;;;;;;AASA,SAASc,eAAT,CAAyBd,KAAzB,EAAgC;AAC9B,SAAO6B,aAAa,CAAC7B,KAAK,CAAC+B,IAAP,CAAb,CAA0B/B,KAA1B,CAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = getValue;\nexports.getLiteralValue = getLiteralValue;\n\nvar _Literal = require('./Literal');\n\nvar _Literal2 = _interopRequireDefault(_Literal);\n\nvar _JSXElement = require('./JSXElement');\n\nvar _JSXElement2 = _interopRequireDefault(_JSXElement);\n\nvar _expressions = require('./expressions');\n\nvar _expressions2 = _interopRequireDefault(_expressions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Composition map of types to their extractor functions.\nvar TYPES = {\n  Literal: _Literal2.default,\n  JSXElement: _JSXElement2.default,\n  JSXExpressionContainer: _expressions2.default\n};\n\n// Composition map of types to their extractor functions to handle literals.\nvar LITERAL_TYPES = _extends({}, TYPES, {\n  JSXElement: function JSXElement() {\n    return null;\n  },\n  JSXExpressionContainer: _expressions.extractLiteral\n});\n\n/**\n * This function maps an AST value node\n * to its correct extractor function for its\n * given type.\n *\n * This will map correctly for *all* possible types.\n *\n * @param value - AST Value object on a JSX Attribute.\n */\nfunction getValue(value) {\n  return TYPES[value.type](value);\n}\n\n/**\n * This function maps an AST value node\n * to its correct extractor function for its\n * given type.\n *\n * This will map correctly for *some* possible types that map to literals.\n *\n * @param value - AST Value object on a JSX Attribute.\n */\nfunction getLiteralValue(value) {\n  return LITERAL_TYPES[value.type](value);\n}"]},"metadata":{},"sourceType":"script"}