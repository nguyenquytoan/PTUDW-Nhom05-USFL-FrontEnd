{"ast":null,"code":"\"use strict\";\n\nvar assert = require(\"chai\").assert,\n    coerceToString = require(\"../../string/coerce\");\n\ndescribe(\"string/coerce\", function () {\n  it(\"Should return input string\", function () {\n    assert.equal(coerceToString(\"foo\"), \"foo\");\n  });\n  it(\"Should coerce numbers\", function () {\n    assert.equal(coerceToString(12), \"12\");\n  });\n  it(\"Should coerce booleans\", function () {\n    assert.equal(coerceToString(true), \"true\");\n  });\n  it(\"Should coerce string objects\", function () {\n    assert.equal(coerceToString(new String(\"bar\")), \"bar\");\n  });\n  it(\"Should coerce objects\", function () {\n    assert.equal(coerceToString({\n      toString: function () {\n        return \"Some object\";\n      }\n    }), \"Some object\");\n  });\n\n  if (typeof Object.create === \"function\") {\n    it(\"Should not coerce objects with no toString\", function () {\n      assert.equal(coerceToString(Object.create(null)), null);\n    });\n  }\n\n  it(\"Should not coerce objects with no custom toString\", function () {\n    assert.equal(coerceToString({}), null);\n  });\n  it(\"Should not coerce null\", function () {\n    assert.equal(coerceToString(null), null);\n  });\n  it(\"Should not coerce undefined\", function () {\n    assert.equal(coerceToString(undefined), null);\n  });\n\n  if (typeof Symbol === \"function\") {\n    it(\"Should not coerce symbols\", function () {\n      assert.equal(coerceToString(Symbol(\"foo\")), null);\n    });\n  }\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/type/test/string/coerce.js"],"names":["assert","require","coerceToString","describe","it","equal","String","toString","Object","create","undefined","Symbol"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAWC,OAAO,CAAC,MAAD,CAAP,CAAgBD,MAArC;AAAA,IACIE,cAAc,GAAGD,OAAO,CAAC,qBAAD,CAD5B;;AAGAE,QAAQ,CAAC,eAAD,EAAkB,YAAY;AACrCC,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC,KAAD,CAA3B,EAAoC,KAApC;AAA6C,GAA1F,CAAF;AACAE,EAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC,EAAD,CAA3B,EAAiC,IAAjC;AAAyC,GAAjF,CAAF;AACAE,EAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC,IAAD,CAA3B,EAAmC,MAAnC;AAA6C,GAAtF,CAAF;AACAE,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAY;AAC9CJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC,IAAII,MAAJ,CAAW,KAAX,CAAD,CAA3B,EAAgD,KAAhD;AACA,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAY;AACvCJ,IAAAA,MAAM,CAACK,KAAP,CACCH,cAAc,CAAC;AAAEK,MAAAA,QAAQ,EAAE,YAAY;AAAE,eAAO,aAAP;AAAuB;AAAjD,KAAD,CADf,EACsE,aADtE;AAGA,GAJC,CAAF;;AAKA,MAAI,OAAOC,MAAM,CAACC,MAAd,KAAyB,UAA7B,EAAyC;AACxCL,IAAAA,EAAE,CAAC,4CAAD,EAA+C,YAAY;AAC5DJ,MAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAACM,MAAM,CAACC,MAAP,CAAc,IAAd,CAAD,CAA3B,EAAkD,IAAlD;AACA,KAFC,CAAF;AAGA;;AACDL,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAY;AACnEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC,EAAD,CAA3B,EAAiC,IAAjC;AACA,GAFC,CAAF;AAGAE,EAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAY;AAAEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAAC,IAAD,CAA3B,EAAmC,IAAnC;AAA2C,GAApF,CAAF;AACAE,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAY;AAC7CJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAACQ,SAAD,CAA3B,EAAwC,IAAxC;AACA,GAFC,CAAF;;AAIA,MAAI,OAAOC,MAAP,KAAkB,UAAtB,EAAkC;AACjCP,IAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAY;AAC3CJ,MAAAA,MAAM,CAACK,KAAP,CAAaH,cAAc,CAACS,MAAM,CAAC,KAAD,CAAP,CAA3B,EAA4C,IAA5C;AACA,KAFC,CAAF;AAGA;AACD,CA9BO,CAAR","sourcesContent":["\"use strict\";\n\nvar assert         = require(\"chai\").assert\n  , coerceToString = require(\"../../string/coerce\");\n\ndescribe(\"string/coerce\", function () {\n\tit(\"Should return input string\", function () { assert.equal(coerceToString(\"foo\"), \"foo\"); });\n\tit(\"Should coerce numbers\", function () { assert.equal(coerceToString(12), \"12\"); });\n\tit(\"Should coerce booleans\", function () { assert.equal(coerceToString(true), \"true\"); });\n\tit(\"Should coerce string objects\", function () {\n\t\tassert.equal(coerceToString(new String(\"bar\")), \"bar\");\n\t});\n\tit(\"Should coerce objects\", function () {\n\t\tassert.equal(\n\t\t\tcoerceToString({ toString: function () { return \"Some object\"; } }), \"Some object\"\n\t\t);\n\t});\n\tif (typeof Object.create === \"function\") {\n\t\tit(\"Should not coerce objects with no toString\", function () {\n\t\t\tassert.equal(coerceToString(Object.create(null)), null);\n\t\t});\n\t}\n\tit(\"Should not coerce objects with no custom toString\", function () {\n\t\tassert.equal(coerceToString({}), null);\n\t});\n\tit(\"Should not coerce null\", function () { assert.equal(coerceToString(null), null); });\n\tit(\"Should not coerce undefined\", function () {\n\t\tassert.equal(coerceToString(undefined), null);\n\t});\n\n\tif (typeof Symbol === \"function\") {\n\t\tit(\"Should not coerce symbols\", function () {\n\t\t\tassert.equal(coerceToString(Symbol(\"foo\")), null);\n\t\t});\n\t}\n});\n"]},"metadata":{},"sourceType":"script"}