{"ast":null,"code":"'use strict';\n\nconst ls = require('../ls.js');\n\nconst get = require('../get.js');\n\nconst put = require('../put.js');\n\nconst rm = require('../rm.js');\n\nconst verify = require('../verify.js');\n\nconst setLocale = require('../lib/util/y.js').setLocale;\n\nconst clearMemoized = require('../lib/memoization.js').clearMemoized;\n\nconst tmp = require('../lib/util/tmp.js');\n\nsetLocale('es');\nconst x = module.exports;\n\nx.ls = cache => ls(cache);\n\nx.ls.flujo = cache => ls.stream(cache);\n\nx.saca = (cache, clave, ops) => get(cache, clave, ops);\n\nx.saca.porHacheo = (cache, hacheo, ops) => get.byDigest(cache, hacheo, ops);\n\nx.saca.sinc = (cache, clave, ops) => get.sync(cache, clave, ops);\n\nx.saca.sinc.porHacheo = (cache, hacheo, ops) => get.sync.byDigest(cache, hacheo, ops);\n\nx.saca.flujo = (cache, clave, ops) => get.stream(cache, clave, ops);\n\nx.saca.flujo.porHacheo = (cache, hacheo, ops) => get.stream.byDigest(cache, hacheo, ops);\n\nx.sava.copia = (cache, clave, destino, opts) => get.copy(cache, clave, destino, opts);\n\nx.sava.copia.porHacheo = (cache, hacheo, destino, opts) => get.copy.byDigest(cache, hacheo, destino, opts);\n\nx.saca.info = (cache, clave) => get.info(cache, clave);\n\nx.saca.tieneDatos = (cache, hacheo) => get.hasContent(cache, hacheo);\n\nx.saca.tieneDatos.sinc = (cache, hacheo) => get.hasContent.sync(cache, hacheo);\n\nx.mete = (cache, clave, datos, ops) => put(cache, clave, datos, ops);\n\nx.mete.flujo = (cache, clave, ops) => put.stream(cache, clave, ops);\n\nx.rm = (cache, clave) => rm.entry(cache, clave);\n\nx.rm.todo = cache => rm.all(cache);\n\nx.rm.entrada = x.rm;\n\nx.rm.datos = (cache, hacheo) => rm.content(cache, hacheo);\n\nx.ponLenguaje = lang => setLocale(lang);\n\nx.limpiaMemoizado = () => clearMemoized();\n\nx.tmp = {};\n\nx.tmp.mkdir = (cache, ops) => tmp.mkdir(cache, ops);\n\nx.tmp.hazdir = x.tmp.mkdir;\n\nx.tmp.conTmp = (cache, ops, cb) => tmp.withTmp(cache, ops, cb);\n\nx.verifica = (cache, ops) => verify(cache, ops);\n\nx.verifica.ultimaVez = cache => verify.lastRun(cache);\n\nx.verifica.últimaVez = x.verifica.ultimaVez;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/webpack/node_modules/cacache/locales/es.js"],"names":["ls","require","get","put","rm","verify","setLocale","clearMemoized","tmp","x","module","exports","cache","flujo","stream","saca","clave","ops","porHacheo","hacheo","byDigest","sinc","sync","sava","copia","destino","opts","copy","info","tieneDatos","hasContent","mete","datos","entry","todo","all","entrada","content","ponLenguaje","lang","limpiaMemoizado","mkdir","hazdir","conTmp","cb","withTmp","verifica","ultimaVez","lastRun","últimaVez"],"mappings":"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","sourcesContent":["'use strict'\n\nconst ls = require('../ls.js')\nconst get = require('../get.js')\nconst put = require('../put.js')\nconst rm = require('../rm.js')\nconst verify = require('../verify.js')\nconst setLocale = require('../lib/util/y.js').setLocale\nconst clearMemoized = require('../lib/memoization.js').clearMemoized\nconst tmp = require('../lib/util/tmp.js')\n\nsetLocale('es')\n\nconst x = module.exports\n\nx.ls = cache => ls(cache)\nx.ls.flujo = cache => ls.stream(cache)\n\nx.saca = (cache, clave, ops) => get(cache, clave, ops)\nx.saca.porHacheo = (cache, hacheo, ops) => get.byDigest(cache, hacheo, ops)\nx.saca.sinc = (cache, clave, ops) => get.sync(cache, clave, ops)\nx.saca.sinc.porHacheo = (cache, hacheo, ops) => get.sync.byDigest(cache, hacheo, ops)\nx.saca.flujo = (cache, clave, ops) => get.stream(cache, clave, ops)\nx.saca.flujo.porHacheo = (cache, hacheo, ops) => get.stream.byDigest(cache, hacheo, ops)\nx.sava.copia = (cache, clave, destino, opts) => get.copy(cache, clave, destino, opts)\nx.sava.copia.porHacheo = (cache, hacheo, destino, opts) => get.copy.byDigest(cache, hacheo, destino, opts)\nx.saca.info = (cache, clave) => get.info(cache, clave)\nx.saca.tieneDatos = (cache, hacheo) => get.hasContent(cache, hacheo)\nx.saca.tieneDatos.sinc = (cache, hacheo) => get.hasContent.sync(cache, hacheo)\n\nx.mete = (cache, clave, datos, ops) => put(cache, clave, datos, ops)\nx.mete.flujo = (cache, clave, ops) => put.stream(cache, clave, ops)\n\nx.rm = (cache, clave) => rm.entry(cache, clave)\nx.rm.todo = cache => rm.all(cache)\nx.rm.entrada = x.rm\nx.rm.datos = (cache, hacheo) => rm.content(cache, hacheo)\n\nx.ponLenguaje = lang => setLocale(lang)\nx.limpiaMemoizado = () => clearMemoized()\n\nx.tmp = {}\nx.tmp.mkdir = (cache, ops) => tmp.mkdir(cache, ops)\nx.tmp.hazdir = x.tmp.mkdir\nx.tmp.conTmp = (cache, ops, cb) => tmp.withTmp(cache, ops, cb)\n\nx.verifica = (cache, ops) => verify(cache, ops)\nx.verifica.ultimaVez = cache => verify.lastRun(cache)\nx.verifica.últimaVez = x.verifica.ultimaVez\n"]},"metadata":{},"sourceType":"script"}