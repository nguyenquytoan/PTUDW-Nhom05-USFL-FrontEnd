{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'removes viewBox attribute when possible';\nvar viewBoxElems = ['svg', 'pattern', 'symbol'];\n/**\n * Remove viewBox attr which coincides with a width/height box.\n *\n * @see http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n *\n * @example\n * <svg width=\"100\" height=\"50\" viewBox=\"0 0 100 50\">\n *             ⬇\n * <svg width=\"100\" height=\"50\">\n *\n * @param {Object} item current iteration item\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\n\nexports.fn = function (item) {\n  if (item.isElem(viewBoxElems) && item.hasAttr('viewBox') && item.hasAttr('width') && item.hasAttr('height')) {\n    var nums = item.attr('viewBox').value.split(/[ ,]+/g);\n\n    if (nums[0] === '0' && nums[1] === '0' && item.attr('width').value.replace(/px$/, '') === nums[2] && // could use parseFloat too\n    item.attr('height').value.replace(/px$/, '') === nums[3]) {\n      item.removeAttr('viewBox');\n    }\n  }\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/svgo/plugins/removeViewBox.js"],"names":["exports","type","active","description","viewBoxElems","fn","item","isElem","hasAttr","nums","attr","value","split","replace","removeAttr"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,IAAR,GAAe,SAAf;AAEAD,OAAO,CAACE,MAAR,GAAiB,IAAjB;AAEAF,OAAO,CAACG,WAAR,GAAsB,yCAAtB;AAEA,IAAIC,YAAY,GAAG,CAAC,KAAD,EAAQ,SAAR,EAAmB,QAAnB,CAAnB;AAEA;;;;;;;;;;;;;;;;AAeAJ,OAAO,CAACK,EAAR,GAAa,UAASC,IAAT,EAAe;AAExB,MACIA,IAAI,CAACC,MAAL,CAAYH,YAAZ,KACAE,IAAI,CAACE,OAAL,CAAa,SAAb,CADA,IAEAF,IAAI,CAACE,OAAL,CAAa,OAAb,CAFA,IAGAF,IAAI,CAACE,OAAL,CAAa,QAAb,CAJJ,EAKE;AAEE,QAAIC,IAAI,GAAGH,IAAI,CAACI,IAAL,CAAU,SAAV,EAAqBC,KAArB,CAA2BC,KAA3B,CAAiC,QAAjC,CAAX;;AAEA,QACIH,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAZ,IACAA,IAAI,CAAC,CAAD,CAAJ,KAAY,GADZ,IAEAH,IAAI,CAACI,IAAL,CAAU,OAAV,EAAmBC,KAAnB,CAAyBE,OAAzB,CAAiC,KAAjC,EAAwC,EAAxC,MAAgDJ,IAAI,CAAC,CAAD,CAFpD,IAE2D;AAC3DH,IAAAA,IAAI,CAACI,IAAL,CAAU,QAAV,EAAoBC,KAApB,CAA0BE,OAA1B,CAAkC,KAAlC,EAAyC,EAAzC,MAAiDJ,IAAI,CAAC,CAAD,CAJzD,EAKE;AACEH,MAAAA,IAAI,CAACQ,UAAL,CAAgB,SAAhB;AACH;AAEJ;AAEJ,CAtBD","sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'removes viewBox attribute when possible';\n\nvar viewBoxElems = ['svg', 'pattern', 'symbol'];\n\n/**\n * Remove viewBox attr which coincides with a width/height box.\n *\n * @see http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n *\n * @example\n * <svg width=\"100\" height=\"50\" viewBox=\"0 0 100 50\">\n *             ⬇\n * <svg width=\"100\" height=\"50\">\n *\n * @param {Object} item current iteration item\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(item) {\n\n    if (\n        item.isElem(viewBoxElems) &&\n        item.hasAttr('viewBox') &&\n        item.hasAttr('width') &&\n        item.hasAttr('height')\n    ) {\n\n        var nums = item.attr('viewBox').value.split(/[ ,]+/g);\n\n        if (\n            nums[0] === '0' &&\n            nums[1] === '0' &&\n            item.attr('width').value.replace(/px$/, '') === nums[2] && // could use parseFloat too\n            item.attr('height').value.replace(/px$/, '') === nums[3]\n        ) {\n            item.removeAttr('viewBox');\n        }\n\n    }\n\n};\n"]},"metadata":{},"sourceType":"script"}