{"ast":null,"code":"/*\n * MIT License http://opensource.org/licenses/MIT\n * Author: Ben Holloway @bholloway\n */\n'use strict';\n\nvar stream = require('stream');\n\nvar maybeStream = process[process.env.RESOLVE_URL_LOADER_TEST_HARNESS];\n\nfunction logToTestHarness(options) {\n  if (!!maybeStream && typeof maybeStream === 'object' && maybeStream instanceof stream.Writable) {\n    Object.keys(options).map(eachOptionKey);\n    maybeStream = null; // ensure we log only once\n  }\n\n  function eachOptionKey(key) {\n    var value = options[key];\n    var text = typeof value === 'undefined' ? String(value) : JSON.stringify(value.valueOf()) || '-unstringifyable-';\n    maybeStream.write(key + ': ' + text + '\\n');\n  }\n}\n\nmodule.exports = logToTestHarness;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/resolve-url-loader/lib/log-to-test-harness.js"],"names":["stream","require","maybeStream","process","env","RESOLVE_URL_LOADER_TEST_HARNESS","logToTestHarness","options","Writable","Object","keys","map","eachOptionKey","key","value","text","String","JSON","stringify","valueOf","write","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAACA,OAAO,CAACC,GAAR,CAAYC,+BAAb,CAAzB;;AAEA,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AACjC,MAAI,CAAC,CAACL,WAAF,IAAkB,OAAOA,WAAP,KAAuB,QAAzC,IAAuDA,WAAW,YAAYF,MAAM,CAACQ,QAAzF,EAAoG;AAClGC,IAAAA,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,GAArB,CAAyBC,aAAzB;AACAV,IAAAA,WAAW,GAAG,IAAd,CAFkG,CAE9E;AACrB;;AAED,WAASU,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,QAAIC,KAAK,GAAGP,OAAO,CAACM,GAAD,CAAnB;AACA,QAAIE,IAAI,GAAK,OAAOD,KAAP,KAAiB,WAAlB,GACVE,MAAM,CAACF,KAAD,CADI,GAETG,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,OAAN,EAAf,KAAmC,mBAFtC;AAGAjB,IAAAA,WAAW,CAACkB,KAAZ,CAAkBP,GAAG,GAAG,IAAN,GAAaE,IAAb,GAAoB,IAAtC;AACD;AACF;;AAEDM,MAAM,CAACC,OAAP,GAAiBhB,gBAAjB","sourcesContent":["/*\n * MIT License http://opensource.org/licenses/MIT\n * Author: Ben Holloway @bholloway\n */\n'use strict';\n\nvar stream = require('stream');\n\nvar maybeStream = process[process.env.RESOLVE_URL_LOADER_TEST_HARNESS];\n\nfunction logToTestHarness(options) {\n  if (!!maybeStream && (typeof maybeStream === 'object') && (maybeStream instanceof stream.Writable)) {\n    Object.keys(options).map(eachOptionKey);\n    maybeStream = null; // ensure we log only once\n  }\n\n  function eachOptionKey(key) {\n    var value = options[key];\n    var text  = (typeof value === 'undefined') ?\n      String(value) :\n      (JSON.stringify(value.valueOf()) || '-unstringifyable-');\n    maybeStream.write(key + ': ' + text + '\\n');\n  }\n}\n\nmodule.exports = logToTestHarness;\n"]},"metadata":{},"sourceType":"script"}