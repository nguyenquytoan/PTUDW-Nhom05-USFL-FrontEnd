{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getOptions;\n\nvar _loaderUtils = _interopRequireDefault(require(\"loader-utils\"));\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getOptions(loaderContext) {\n  const options = {\n    eslintPath: 'eslint',\n    ..._loaderUtils.default.getOptions(loaderContext)\n  };\n  (0, _schemaUtils.default)(_options.default, options, {\n    name: 'ESLint Loader',\n    baseDataPath: 'options'\n  });\n\n  const {\n    CLIEngine\n  } = require(options.eslintPath);\n\n  options.formatter = getFormatter(CLIEngine, options.formatter);\n\n  if (options.outputReport && options.outputReport.formatter) {\n    options.outputReport.formatter = getFormatter(CLIEngine, options.outputReport.formatter);\n  }\n\n  return options;\n}\n\nfunction getFormatter(CLIEngine, formatter) {\n  if (typeof formatter === 'function') {\n    return formatter;\n  } // Try to get oficial formatter\n\n\n  if (typeof formatter === 'string') {\n    try {\n      return CLIEngine.getFormatter(formatter);\n    } catch (e) {// ignored\n    }\n  }\n\n  return CLIEngine.getFormatter('stylish');\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint-loader/dist/getOptions.js"],"names":["Object","defineProperty","exports","value","default","getOptions","_loaderUtils","_interopRequireDefault","require","_schemaUtils","_options","obj","__esModule","loaderContext","options","eslintPath","name","baseDataPath","CLIEngine","formatter","getFormatter","outputReport","e"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,UAAlB;;AAEA,IAAIC,YAAY,GAAGC,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAzC;;AAEA,IAAIC,YAAY,GAAGF,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAzC;;AAEA,IAAIE,QAAQ,GAAGH,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAArC;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAE/F,SAASN,UAAT,CAAoBQ,aAApB,EAAmC;AACjC,QAAMC,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,QADE;AAEd,OAAGT,YAAY,CAACF,OAAb,CAAqBC,UAArB,CAAgCQ,aAAhC;AAFW,GAAhB;AAIA,GAAC,GAAGJ,YAAY,CAACL,OAAjB,EAA0BM,QAAQ,CAACN,OAAnC,EAA4CU,OAA5C,EAAqD;AACnDE,IAAAA,IAAI,EAAE,eAD6C;AAEnDC,IAAAA,YAAY,EAAE;AAFqC,GAArD;;AAKA,QAAM;AACJC,IAAAA;AADI,MAEFV,OAAO,CAACM,OAAO,CAACC,UAAT,CAFX;;AAIAD,EAAAA,OAAO,CAACK,SAAR,GAAoBC,YAAY,CAACF,SAAD,EAAYJ,OAAO,CAACK,SAApB,CAAhC;;AAEA,MAAIL,OAAO,CAACO,YAAR,IAAwBP,OAAO,CAACO,YAAR,CAAqBF,SAAjD,EAA4D;AAC1DL,IAAAA,OAAO,CAACO,YAAR,CAAqBF,SAArB,GAAiCC,YAAY,CAACF,SAAD,EAAYJ,OAAO,CAACO,YAAR,CAAqBF,SAAjC,CAA7C;AACD;;AAED,SAAOL,OAAP;AACD;;AAED,SAASM,YAAT,CAAsBF,SAAtB,EAAiCC,SAAjC,EAA4C;AAC1C,MAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACnC,WAAOA,SAAP;AACD,GAHyC,CAGxC;;;AAGF,MAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACjC,QAAI;AACF,aAAOD,SAAS,CAACE,YAAV,CAAuBD,SAAvB,CAAP;AACD,KAFD,CAEE,OAAOG,CAAP,EAAU,CAAC;AACZ;AACF;;AAED,SAAOJ,SAAS,CAACE,YAAV,CAAuB,SAAvB,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getOptions;\n\nvar _loaderUtils = _interopRequireDefault(require(\"loader-utils\"));\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getOptions(loaderContext) {\n  const options = {\n    eslintPath: 'eslint',\n    ..._loaderUtils.default.getOptions(loaderContext)\n  };\n  (0, _schemaUtils.default)(_options.default, options, {\n    name: 'ESLint Loader',\n    baseDataPath: 'options'\n  });\n\n  const {\n    CLIEngine\n  } = require(options.eslintPath);\n\n  options.formatter = getFormatter(CLIEngine, options.formatter);\n\n  if (options.outputReport && options.outputReport.formatter) {\n    options.outputReport.formatter = getFormatter(CLIEngine, options.outputReport.formatter);\n  }\n\n  return options;\n}\n\nfunction getFormatter(CLIEngine, formatter) {\n  if (typeof formatter === 'function') {\n    return formatter;\n  } // Try to get oficial formatter\n\n\n  if (typeof formatter === 'string') {\n    try {\n      return CLIEngine.getFormatter(formatter);\n    } catch (e) {// ignored\n    }\n  }\n\n  return CLIEngine.getFormatter('stylish');\n}"]},"metadata":{},"sourceType":"script"}