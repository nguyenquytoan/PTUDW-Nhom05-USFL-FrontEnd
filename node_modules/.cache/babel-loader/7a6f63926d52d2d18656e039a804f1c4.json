{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nconst promisify = require('util.promisify');\n\nconst promisiedFsRealpath = promisify(fs.realpath);\n\nfunction realpath(filepath) {\n  if (typeof fs.realpath.native === 'function') {\n    return promisify(fs.realpath.native)(filepath);\n  }\n\n  const fsBinding = process.binding('fs');\n\n  if (fsBinding.realpath) {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(fsBinding.realpath(filepath, 'utf8'));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  return promisiedFsRealpath(filepath);\n}\n\nfunction realpathSync(filepath) {\n  if (typeof fs.realpathSync.native === 'function') {\n    return fs.realpathSync.native(filepath);\n  }\n\n  const fsBinding = process.binding('fs');\n\n  if (fsBinding.realpath) {\n    try {\n      return fsBinding.realpath(filepath, 'utf8');\n    } catch (err) {\n      /* Probably RAM-disk on windows. */\n    }\n  }\n\n  return fs.realpathSync(filepath);\n}\n\nmodule.exports = realpath;\nmodule.exports.sync = realpathSync;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/realpath-native/index.js"],"names":["fs","require","promisify","promisiedFsRealpath","realpath","filepath","native","fsBinding","process","binding","Promise","resolve","reject","e","realpathSync","err","module","exports","sync"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAME,mBAAmB,GAAGD,SAAS,CAACF,EAAE,CAACI,QAAJ,CAArC;;AAEA,SAASA,QAAT,CAAkBC,QAAlB,EAA4B;AAC1B,MAAI,OAAOL,EAAE,CAACI,QAAH,CAAYE,MAAnB,KAA8B,UAAlC,EAA8C;AAC5C,WAAOJ,SAAS,CAACF,EAAE,CAACI,QAAH,CAAYE,MAAb,CAAT,CAA8BD,QAA9B,CAAP;AACD;;AACD,QAAME,SAAS,GAAGC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAlB;;AAEA,MAAIF,SAAS,CAACH,QAAd,EAAwB;AACtB,WAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI;AACFD,QAAAA,OAAO,CAACJ,SAAS,CAACH,QAAV,CAAmBC,QAAnB,EAA6B,MAA7B,CAAD,CAAP;AACD,OAFD,CAEE,OAAOQ,CAAP,EAAU;AACVD,QAAAA,MAAM,CAACC,CAAD,CAAN;AACD;AACF,KANM,CAAP;AAOD;;AAED,SAAOV,mBAAmB,CAACE,QAAD,CAA1B;AACD;;AAED,SAASS,YAAT,CAAsBT,QAAtB,EAAgC;AAC9B,MAAI,OAAOL,EAAE,CAACc,YAAH,CAAgBR,MAAvB,KAAkC,UAAtC,EAAkD;AAChD,WAAON,EAAE,CAACc,YAAH,CAAgBR,MAAhB,CAAuBD,QAAvB,CAAP;AACD;;AAED,QAAME,SAAS,GAAGC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAlB;;AAEA,MAAIF,SAAS,CAACH,QAAd,EAAwB;AACtB,QAAI;AACF,aAAOG,SAAS,CAACH,QAAV,CAAmBC,QAAnB,EAA6B,MAA7B,CAAP;AACD,KAFD,CAEE,OAAOU,GAAP,EAAY;AACZ;AACD;AACF;;AAED,SAAOf,EAAE,CAACc,YAAH,CAAgBT,QAAhB,CAAP;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiBb,QAAjB;AACAY,MAAM,CAACC,OAAP,CAAeC,IAAf,GAAsBJ,YAAtB","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst promisify = require('util.promisify');\n\nconst promisiedFsRealpath = promisify(fs.realpath);\n\nfunction realpath(filepath) {\n  if (typeof fs.realpath.native === 'function') {\n    return promisify(fs.realpath.native)(filepath);\n  }\n  const fsBinding = process.binding('fs');\n\n  if (fsBinding.realpath) {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(fsBinding.realpath(filepath, 'utf8'));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  return promisiedFsRealpath(filepath);\n}\n\nfunction realpathSync(filepath) {\n  if (typeof fs.realpathSync.native === 'function') {\n    return fs.realpathSync.native(filepath);\n  }\n\n  const fsBinding = process.binding('fs');\n\n  if (fsBinding.realpath) {\n    try {\n      return fsBinding.realpath(filepath, 'utf8');\n    } catch (err) {\n      /* Probably RAM-disk on windows. */\n    }\n  }\n\n  return fs.realpathSync(filepath);\n}\n\nmodule.exports = realpath;\nmodule.exports.sync = realpathSync;\n"]},"metadata":{},"sourceType":"script"}