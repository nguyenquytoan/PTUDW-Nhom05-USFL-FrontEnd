{"ast":null,"code":"/**\n * @fileoverview Disallow construction of dense arrays using the Array constructor\n * @author Matt DuVall <http://www.mattduvall.com/>\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow `Array` constructors\",\n      category: \"Stylistic Issues\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-array-constructor\"\n    },\n    schema: [],\n    messages: {\n      preferLiteral: \"The array literal notation [] is preferable.\"\n    }\n  },\n\n  create(context) {\n    /**\n     * Disallow construction of dense arrays using the Array constructor\n     * @param {ASTNode} node node to evaluate\n     * @returns {void}\n     * @private\n     */\n    function check(node) {\n      if (node.arguments.length !== 1 && node.callee.type === \"Identifier\" && node.callee.name === \"Array\") {\n        context.report({\n          node,\n          messageId: \"preferLiteral\"\n        });\n      }\n    }\n\n    return {\n      CallExpression: check,\n      NewExpression: check\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/lib/rules/no-array-constructor.js"],"names":["module","exports","meta","type","docs","description","category","recommended","url","schema","messages","preferLiteral","create","context","check","node","arguments","length","callee","name","report","messageId","CallExpression","NewExpression"],"mappings":"AAAA;;;;AAKA,a,CAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,+BADX;AAEFC,MAAAA,QAAQ,EAAE,kBAFR;AAGFC,MAAAA,WAAW,EAAE,KAHX;AAIFC,MAAAA,GAAG,EAAE;AAJH,KAHJ;AAUFC,IAAAA,MAAM,EAAE,EAVN;AAYFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,aAAa,EAAE;AADT;AAZR,GADO;;AAkBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ;;;;;;AAMA,aAASC,KAAT,CAAeC,IAAf,EAAqB;AACjB,UACIA,IAAI,CAACC,SAAL,CAAeC,MAAf,KAA0B,CAA1B,IACAF,IAAI,CAACG,MAAL,CAAYf,IAAZ,KAAqB,YADrB,IAEAY,IAAI,CAACG,MAAL,CAAYC,IAAZ,KAAqB,OAHzB,EAIE;AACEN,QAAAA,OAAO,CAACO,MAAR,CAAe;AAAEL,UAAAA,IAAF;AAAQM,UAAAA,SAAS,EAAE;AAAnB,SAAf;AACH;AACJ;;AAED,WAAO;AACHC,MAAAA,cAAc,EAAER,KADb;AAEHS,MAAAA,aAAa,EAAET;AAFZ,KAAP;AAKH;;AAzCY,CAAjB","sourcesContent":["/**\n * @fileoverview Disallow construction of dense arrays using the Array constructor\n * @author Matt DuVall <http://www.mattduvall.com/>\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"disallow `Array` constructors\",\n            category: \"Stylistic Issues\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-array-constructor\"\n        },\n\n        schema: [],\n\n        messages: {\n            preferLiteral: \"The array literal notation [] is preferable.\"\n        }\n    },\n\n    create(context) {\n\n        /**\n         * Disallow construction of dense arrays using the Array constructor\n         * @param {ASTNode} node node to evaluate\n         * @returns {void}\n         * @private\n         */\n        function check(node) {\n            if (\n                node.arguments.length !== 1 &&\n                node.callee.type === \"Identifier\" &&\n                node.callee.name === \"Array\"\n            ) {\n                context.report({ node, messageId: \"preferLiteral\" });\n            }\n        }\n\n        return {\n            CallExpression: check,\n            NewExpression: check\n        };\n\n    }\n};\n"]},"metadata":{},"sourceType":"script"}