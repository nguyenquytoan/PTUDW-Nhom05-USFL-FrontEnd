{"ast":null,"code":"var test = require('tape');\n\nvar hasSymbols = require('has-symbols')();\n\nvar utilInspect = require('../util.inspect');\n\nvar inspect = require('..');\n\ntest('inspect', function (t) {\n  t.plan(1);\n  var obj = [{\n    inspect: function () {\n      return '!XYZ¡';\n    }\n  }, []];\n  t.equal(inspect(obj), '[ !XYZ¡, [] ]');\n});\ntest('inspect custom symbol', {\n  skip: !hasSymbols || !utilInspect\n}, function (t) {\n  t.plan(1);\n  var obj = {\n    inspect: function () {\n      return 'string';\n    }\n  };\n\n  obj[utilInspect.custom] = function () {\n    return 'symbol';\n  };\n\n  t.equal(inspect([obj, []]), '[ ' + (utilInspect.custom ? 'symbol' : 'string') + ', [] ]');\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/object-inspect/test/inspect.js"],"names":["test","require","hasSymbols","utilInspect","inspect","t","plan","obj","equal","skip","custom"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAAP,EAAjB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,iBAAD,CAAzB;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,IAAD,CAArB;;AAEAD,IAAI,CAAC,SAAD,EAAY,UAAUK,CAAV,EAAa;AACzBA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP;AACA,MAAIC,GAAG,GAAG,CAAC;AAAEH,IAAAA,OAAO,EAAE,YAAY;AAAE,aAAO,OAAP;AAAiB;AAA1C,GAAD,EAA+C,EAA/C,CAAV;AACAC,EAAAA,CAAC,CAACG,KAAF,CAAQJ,OAAO,CAACG,GAAD,CAAf,EAAsB,eAAtB;AACH,CAJG,CAAJ;AAMAP,IAAI,CAAC,uBAAD,EAA0B;AAAES,EAAAA,IAAI,EAAE,CAACP,UAAD,IAAe,CAACC;AAAxB,CAA1B,EAAiE,UAAUE,CAAV,EAAa;AAC9EA,EAAAA,CAAC,CAACC,IAAF,CAAO,CAAP;AAEA,MAAIC,GAAG,GAAG;AAAEH,IAAAA,OAAO,EAAE,YAAY;AAAE,aAAO,QAAP;AAAkB;AAA3C,GAAV;;AACAG,EAAAA,GAAG,CAACJ,WAAW,CAACO,MAAb,CAAH,GAA0B,YAAY;AAAE,WAAO,QAAP;AAAkB,GAA1D;;AAEAL,EAAAA,CAAC,CAACG,KAAF,CAAQJ,OAAO,CAAC,CAACG,GAAD,EAAM,EAAN,CAAD,CAAf,EAA4B,QAAQJ,WAAW,CAACO,MAAZ,GAAqB,QAArB,GAAgC,QAAxC,IAAoD,QAAhF;AACH,CAPG,CAAJ","sourcesContent":["var test = require('tape');\nvar hasSymbols = require('has-symbols')();\nvar utilInspect = require('../util.inspect');\n\nvar inspect = require('..');\n\ntest('inspect', function (t) {\n    t.plan(1);\n    var obj = [{ inspect: function () { return '!XYZ¡'; } }, []];\n    t.equal(inspect(obj), '[ !XYZ¡, [] ]');\n});\n\ntest('inspect custom symbol', { skip: !hasSymbols || !utilInspect }, function (t) {\n    t.plan(1);\n\n    var obj = { inspect: function () { return 'string'; } };\n    obj[utilInspect.custom] = function () { return 'symbol'; };\n\n    t.equal(inspect([obj, []]), '[ ' + (utilInspect.custom ? 'symbol' : 'string') + ', [] ]');\n});\n"]},"metadata":{},"sourceType":"script"}