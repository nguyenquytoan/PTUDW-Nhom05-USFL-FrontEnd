{"ast":null,"code":"var http = require('http');\n\nvar sockjs = require('sockjs');\n\nvar node_static = require('node-static'); // 1. Echo sockjs server\n\n\nvar sockjs_opts = {\n  sockjs_url: \"http://cdn.jsdelivr.net/sockjs/1.0.1/sockjs.min.js\"\n};\nvar sockjs_echo = sockjs.createServer(sockjs_opts);\nsockjs_echo.on('connection', function (conn) {\n  conn.on('data', function (message) {\n    conn.write(message);\n  });\n}); // 2. Static files server\n\nvar static_directory = new node_static.Server(__dirname); // 3. Usual http stuff\n\nvar server = http.createServer();\nserver.addListener('request', function (req, res) {\n  static_directory.serve(req, res);\n});\nserver.addListener('upgrade', function (req, res) {\n  res.end();\n});\nsockjs_echo.installHandlers(server, {\n  prefix: '/echo'\n});\nconsole.log(' [*] Listening on 0.0.0.0:9999');\nserver.listen(9999, '0.0.0.0');","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/sockjs/examples/echo/server.js"],"names":["http","require","sockjs","node_static","sockjs_opts","sockjs_url","sockjs_echo","createServer","on","conn","message","write","static_directory","Server","__dirname","server","addListener","req","res","serve","end","installHandlers","prefix","console","log","listen"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,aAAD,CAAzB,C,CAEA;;;AACA,IAAIG,WAAW,GAAG;AAACC,EAAAA,UAAU,EAAE;AAAb,CAAlB;AAEA,IAAIC,WAAW,GAAGJ,MAAM,CAACK,YAAP,CAAoBH,WAApB,CAAlB;AACAE,WAAW,CAACE,EAAZ,CAAe,YAAf,EAA6B,UAASC,IAAT,EAAe;AACxCA,EAAAA,IAAI,CAACD,EAAL,CAAQ,MAAR,EAAgB,UAASE,OAAT,EAAkB;AAC9BD,IAAAA,IAAI,CAACE,KAAL,CAAWD,OAAX;AACH,GAFD;AAGH,CAJD,E,CAMA;;AACA,IAAIE,gBAAgB,GAAG,IAAIT,WAAW,CAACU,MAAhB,CAAuBC,SAAvB,CAAvB,C,CAEA;;AACA,IAAIC,MAAM,GAAGf,IAAI,CAACO,YAAL,EAAb;AACAQ,MAAM,CAACC,WAAP,CAAmB,SAAnB,EAA8B,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC7CN,EAAAA,gBAAgB,CAACO,KAAjB,CAAuBF,GAAvB,EAA4BC,GAA5B;AACH,CAFD;AAGAH,MAAM,CAACC,WAAP,CAAmB,SAAnB,EAA8B,UAASC,GAAT,EAAaC,GAAb,EAAiB;AAC3CA,EAAAA,GAAG,CAACE,GAAJ;AACH,CAFD;AAIAd,WAAW,CAACe,eAAZ,CAA4BN,MAA5B,EAAoC;AAACO,EAAAA,MAAM,EAAC;AAAR,CAApC;AAEAC,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAT,MAAM,CAACU,MAAP,CAAc,IAAd,EAAoB,SAApB","sourcesContent":["var http = require('http');\nvar sockjs = require('sockjs');\nvar node_static = require('node-static');\n\n// 1. Echo sockjs server\nvar sockjs_opts = {sockjs_url: \"http://cdn.jsdelivr.net/sockjs/1.0.1/sockjs.min.js\"};\n\nvar sockjs_echo = sockjs.createServer(sockjs_opts);\nsockjs_echo.on('connection', function(conn) {\n    conn.on('data', function(message) {\n        conn.write(message);\n    });\n});\n\n// 2. Static files server\nvar static_directory = new node_static.Server(__dirname);\n\n// 3. Usual http stuff\nvar server = http.createServer();\nserver.addListener('request', function(req, res) {\n    static_directory.serve(req, res);\n});\nserver.addListener('upgrade', function(req,res){\n    res.end();\n});\n\nsockjs_echo.installHandlers(server, {prefix:'/echo'});\n\nconsole.log(' [*] Listening on 0.0.0.0:9999' );\nserver.listen(9999, '0.0.0.0');\n"]},"metadata":{},"sourceType":"script"}