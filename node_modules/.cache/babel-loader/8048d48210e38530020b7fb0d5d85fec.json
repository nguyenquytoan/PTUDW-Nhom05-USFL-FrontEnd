{"ast":null,"code":"'use strict';\n\nfunction _vm() {\n  const data = _interopRequireDefault(require('vm'));\n\n  _vm = function _vm() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMock() {\n  const data = require('jest-mock');\n\n  _jestMock = function _jestMock() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fakeTimers() {\n  const data = require('@jest/fake-timers');\n\n  _fakeTimers = function _fakeTimers() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass NodeEnvironment {\n  constructor(config) {\n    _defineProperty(this, 'context', void 0);\n\n    _defineProperty(this, 'fakeTimers', void 0);\n\n    _defineProperty(this, 'global', void 0);\n\n    _defineProperty(this, 'moduleMocker', void 0);\n\n    this.context = _vm().default.createContext();\n\n    const global = this.global = _vm().default.runInContext('this', Object.assign(this.context, config.testEnvironmentOptions));\n\n    global.global = global;\n    global.clearInterval = clearInterval;\n    global.clearTimeout = clearTimeout;\n    global.setInterval = setInterval;\n    global.setTimeout = setTimeout;\n    global.ArrayBuffer = ArrayBuffer; // URL and URLSearchParams are global in Node >= 10\n\n    if (typeof URL !== 'undefined' && typeof URLSearchParams !== 'undefined') {\n      /* global URL, URLSearchParams */\n      global.URL = URL;\n      global.URLSearchParams = URLSearchParams;\n    } // TextDecoder and TextDecoder are global in Node >= 11\n\n\n    if (typeof TextEncoder !== 'undefined' && typeof TextDecoder !== 'undefined') {\n      /* global TextEncoder, TextDecoder */\n      global.TextEncoder = TextEncoder;\n      global.TextDecoder = TextDecoder;\n    }\n\n    (0, _jestUtil().installCommonGlobals)(global, config.globals);\n    this.moduleMocker = new (_jestMock().ModuleMocker)(global);\n\n    const timerIdToRef = id => ({\n      id,\n\n      ref() {\n        return this;\n      },\n\n      unref() {\n        return this;\n      }\n\n    });\n\n    const timerRefToId = timer => timer && timer.id || undefined;\n\n    const timerConfig = {\n      idToRef: timerIdToRef,\n      refToId: timerRefToId\n    };\n    this.fakeTimers = new (_fakeTimers().JestFakeTimers)({\n      config,\n      global,\n      moduleMocker: this.moduleMocker,\n      timerConfig\n    });\n  }\n\n  setup() {\n    return Promise.resolve();\n  }\n\n  teardown() {\n    if (this.fakeTimers) {\n      this.fakeTimers.dispose();\n    }\n\n    this.context = null;\n    this.fakeTimers = null;\n    return Promise.resolve();\n  } // TS infers the return type to be `any`, since that's what `runInContext`\n  // returns.\n\n\n  runScript(script) {\n    if (this.context) {\n      return script.runInContext(this.context);\n    }\n\n    return null;\n  }\n\n}\n\nmodule.exports = NodeEnvironment;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-environment-node/build/index.js"],"names":["_vm","data","_interopRequireDefault","require","_jestMock","_jestUtil","_fakeTimers","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","NodeEnvironment","constructor","config","context","createContext","global","runInContext","assign","testEnvironmentOptions","clearInterval","clearTimeout","setInterval","setTimeout","ArrayBuffer","URL","URLSearchParams","TextEncoder","TextDecoder","installCommonGlobals","globals","moduleMocker","ModuleMocker","timerIdToRef","id","ref","unref","timerRefToId","timer","undefined","timerConfig","idToRef","refToId","fakeTimers","JestFakeTimers","setup","Promise","resolve","teardown","dispose","runScript","script","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _vm() {\n  const data = _interopRequireDefault(require('vm'));\n\n  _vm = function _vm() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMock() {\n  const data = require('jest-mock');\n\n  _jestMock = function _jestMock() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function _jestUtil() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fakeTimers() {\n  const data = require('@jest/fake-timers');\n\n  _fakeTimers = function _fakeTimers() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass NodeEnvironment {\n  constructor(config) {\n    _defineProperty(this, 'context', void 0);\n\n    _defineProperty(this, 'fakeTimers', void 0);\n\n    _defineProperty(this, 'global', void 0);\n\n    _defineProperty(this, 'moduleMocker', void 0);\n\n    this.context = _vm().default.createContext();\n\n    const global = (this.global = _vm().default.runInContext(\n      'this',\n      Object.assign(this.context, config.testEnvironmentOptions)\n    ));\n\n    global.global = global;\n    global.clearInterval = clearInterval;\n    global.clearTimeout = clearTimeout;\n    global.setInterval = setInterval;\n    global.setTimeout = setTimeout;\n    global.ArrayBuffer = ArrayBuffer; // URL and URLSearchParams are global in Node >= 10\n\n    if (typeof URL !== 'undefined' && typeof URLSearchParams !== 'undefined') {\n      /* global URL, URLSearchParams */\n      global.URL = URL;\n      global.URLSearchParams = URLSearchParams;\n    } // TextDecoder and TextDecoder are global in Node >= 11\n\n    if (\n      typeof TextEncoder !== 'undefined' &&\n      typeof TextDecoder !== 'undefined'\n    ) {\n      /* global TextEncoder, TextDecoder */\n      global.TextEncoder = TextEncoder;\n      global.TextDecoder = TextDecoder;\n    }\n\n    (0, _jestUtil().installCommonGlobals)(global, config.globals);\n    this.moduleMocker = new (_jestMock()).ModuleMocker(global);\n\n    const timerIdToRef = id => ({\n      id,\n\n      ref() {\n        return this;\n      },\n\n      unref() {\n        return this;\n      }\n    });\n\n    const timerRefToId = timer => (timer && timer.id) || undefined;\n\n    const timerConfig = {\n      idToRef: timerIdToRef,\n      refToId: timerRefToId\n    };\n    this.fakeTimers = new (_fakeTimers()).JestFakeTimers({\n      config,\n      global,\n      moduleMocker: this.moduleMocker,\n      timerConfig\n    });\n  }\n\n  setup() {\n    return Promise.resolve();\n  }\n\n  teardown() {\n    if (this.fakeTimers) {\n      this.fakeTimers.dispose();\n    }\n\n    this.context = null;\n    this.fakeTimers = null;\n    return Promise.resolve();\n  } // TS infers the return type to be `any`, since that's what `runInContext`\n  // returns.\n\n  runScript(script) {\n    if (this.context) {\n      return script.runInContext(this.context);\n    }\n\n    return null;\n  }\n}\n\nmodule.exports = NodeEnvironment;\n"]},"metadata":{},"sourceType":"script"}