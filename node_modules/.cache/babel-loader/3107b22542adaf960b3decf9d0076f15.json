{"ast":null,"code":"var crypto = require(\"crypto\");\n\nvar promisify = require(\"./_promisify.js\");\n\nvar bind = function (c, f) {\n  return f && f.bind(c);\n};\n\nObject.defineProperties(module.exports, {\n  Certificate: {\n    enumerable: true,\n    value: crypto.Certificate\n  },\n  Cipher: {\n    enumerable: true,\n    value: crypto.Cipher\n  },\n  Cipheriv: {\n    enumerable: true,\n    value: crypto.Cipheriv\n  },\n  Credentials: {\n    enumerable: true,\n    value: crypto.Credentials\n  },\n  DEFAULT_ENCODING: {\n    enumerable: true,\n    get: function () {\n      return crypto.DEFAULT_ENCODING;\n    },\n    set: function (v) {\n      crypto.DEFAULT_ENCODING = v;\n    }\n  },\n  Decipher: {\n    enumerable: true,\n    value: crypto.Decipher\n  },\n  Decipheriv: {\n    enumerable: true,\n    value: crypto.Decipheriv\n  },\n  DiffieHellman: {\n    enumerable: true,\n    value: crypto.DiffieHellman\n  },\n  DiffieHellmanGroup: {\n    enumerable: true,\n    value: crypto.DiffieHellmanGroup\n  },\n  ECDH: {\n    enumerable: true,\n    value: crypto.ECDH\n  },\n  Hash: {\n    enumerable: true,\n    value: crypto.Hash\n  },\n  Hmac: {\n    enumerable: true,\n    value: crypto.Hmac\n  },\n  Sign: {\n    enumerable: true,\n    value: crypto.Sign\n  },\n  Verify: {\n    enumerable: true,\n    value: crypto.Verify\n  },\n  //_toBuf: // skipping\n  constants: {\n    enumerable: true,\n    get: function () {\n      return crypto.constants;\n    },\n    set: function (v) {\n      crypto.constants = v;\n    }\n  },\n  createCipher: {\n    enumerable: true,\n    value: bind(crypto, crypto.createCipher)\n  },\n  createCipheriv: {\n    enumerable: true,\n    value: bind(crypto, crypto.createCipheriv)\n  },\n  createCredentials: {\n    enumerable: true,\n    value: bind(crypto, crypto.createCredentials)\n  },\n  createDecipher: {\n    enumerable: true,\n    value: bind(crypto, crypto.createDecipher)\n  },\n  createDecipheriv: {\n    enumerable: true,\n    value: bind(crypto, crypto.createDecipheriv)\n  },\n  createDiffieHellman: {\n    enumerable: true,\n    value: bind(crypto, crypto.createDiffieHellman)\n  },\n  createDiffieHellmanGroup: {\n    enumerable: true,\n    value: bind(crypto, crypto.createDiffieHellmanGroup)\n  },\n  createECDH: {\n    enumerable: true,\n    value: bind(crypto, crypto.createECDH)\n  },\n  createHash: {\n    enumerable: true,\n    value: bind(crypto, crypto.createHash)\n  },\n  createHmac: {\n    enumerable: true,\n    value: bind(crypto, crypto.createHmac)\n  },\n  createSign: {\n    enumerable: true,\n    value: bind(crypto, crypto.createSign)\n  },\n  createVerify: {\n    enumerable: true,\n    value: bind(crypto, crypto.createVerify)\n  },\n  getCiphers: {\n    enumerable: true,\n    value: bind(crypto, crypto.getCiphers)\n  },\n  getCurves: {\n    enumerable: true,\n    value: bind(crypto, crypto.getCurves)\n  },\n  getDiffieHellman: {\n    enumerable: true,\n    value: bind(crypto, crypto.getDiffieHellman)\n  },\n  getHashes: {\n    enumerable: true,\n    value: bind(crypto, crypto.getHashes)\n  },\n  pbkdf2: {\n    enumerable: true,\n    value: promisify(crypto, crypto.pbkdf2, 5)\n  },\n  pbkdf2Sync: {\n    enumerable: true,\n    value: bind(crypto, crypto.pbkdf2Sync)\n  },\n  privateDecrypt: {\n    enumerable: true,\n    value: bind(crypto, crypto.privateDecrypt)\n  },\n  privateEncrypt: {\n    enumerable: true,\n    value: bind(crypto, crypto.privateEncrypt)\n  },\n  prng: {\n    enumerable: true,\n    value: bind(crypto, crypto.prng)\n  },\n  pseudoRandomBytes: {\n    enumerable: true,\n    value: promisify(crypto, crypto.pseudoRandomBytes, 1)\n  },\n  pseudoRandomBytesSync: {\n    enumerable: true,\n    value: crypto.pseudoRandomBytes.bind(crypto)\n  },\n  publicDecrypt: {\n    enumerable: true,\n    value: bind(crypto, crypto.publicDecrypt)\n  },\n  publicEncrypt: {\n    enumerable: true,\n    value: bind(crypto, crypto.publicEncrypt)\n  },\n  randomBytes: {\n    enumerable: true,\n    value: promisify(crypto, crypto.randomBytes, 1)\n  },\n  randomBytesSync: {\n    enumerable: true,\n    value: crypto.randomBytes.bind(crypto)\n  },\n  randomFill: {\n    enumerable: true,\n    value: promisify(crypto, crypto.randomFill, 1)\n  },\n  randomFillSync: {\n    enumerable: true,\n    value: bind(crypto, crypto.randomFillSync)\n  },\n  rng: {\n    enumerable: true,\n    value: bind(crypto, crypto.rng)\n  },\n  setEngine: {\n    enumerable: true,\n    value: bind(crypto, crypto.setEngine)\n  },\n  timingSafeEqual: {\n    enumerable: true,\n    value: bind(crypto, crypto.timingSafeEqual)\n  }\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/pn/crypto.js"],"names":["crypto","require","promisify","bind","c","f","Object","defineProperties","module","exports","Certificate","enumerable","value","Cipher","Cipheriv","Credentials","DEFAULT_ENCODING","get","set","v","Decipher","Decipheriv","DiffieHellman","DiffieHellmanGroup","ECDH","Hash","Hmac","Sign","Verify","constants","createCipher","createCipheriv","createCredentials","createDecipher","createDecipheriv","createDiffieHellman","createDiffieHellmanGroup","createECDH","createHash","createHmac","createSign","createVerify","getCiphers","getCurves","getDiffieHellman","getHashes","pbkdf2","pbkdf2Sync","privateDecrypt","privateEncrypt","prng","pseudoRandomBytes","pseudoRandomBytesSync","publicDecrypt","publicEncrypt","randomBytes","randomBytesSync","randomFill","randomFillSync","rng","setEngine","timingSafeEqual"],"mappings":"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","sourcesContent":["var crypto = require(\"crypto\");\nvar promisify = require(\"./_promisify.js\");\nvar bind = function(c, f) { return f && f.bind(c); };\nObject.defineProperties(module.exports, {\n  Certificate: { enumerable: true, value: crypto.Certificate },\n  Cipher: { enumerable: true, value: crypto.Cipher },\n  Cipheriv: { enumerable: true, value: crypto.Cipheriv },\n  Credentials: { enumerable: true, value: crypto.Credentials },\n  DEFAULT_ENCODING: { enumerable: true, get: function() { return crypto.DEFAULT_ENCODING; }, set: function(v) { crypto.DEFAULT_ENCODING = v; } },\n  Decipher: { enumerable: true, value: crypto.Decipher },\n  Decipheriv: { enumerable: true, value: crypto.Decipheriv },\n  DiffieHellman: { enumerable: true, value: crypto.DiffieHellman },\n  DiffieHellmanGroup: { enumerable: true, value: crypto.DiffieHellmanGroup },\n  ECDH: { enumerable: true, value: crypto.ECDH },\n  Hash: { enumerable: true, value: crypto.Hash },\n  Hmac: { enumerable: true, value: crypto.Hmac },\n  Sign: { enumerable: true, value: crypto.Sign },\n  Verify: { enumerable: true, value: crypto.Verify },\n  //_toBuf: // skipping\n  constants: { enumerable: true, get: function() { return crypto.constants; }, set: function(v) { crypto.constants = v; } },\n  createCipher: { enumerable: true, value: bind(crypto, crypto.createCipher) },\n  createCipheriv: { enumerable: true, value: bind(crypto, crypto.createCipheriv) },\n  createCredentials: { enumerable: true, value: bind(crypto, crypto.createCredentials) },\n  createDecipher: { enumerable: true, value: bind(crypto, crypto.createDecipher) },\n  createDecipheriv: { enumerable: true, value: bind(crypto, crypto.createDecipheriv) },\n  createDiffieHellman: { enumerable: true, value: bind(crypto, crypto.createDiffieHellman) },\n  createDiffieHellmanGroup: { enumerable: true, value: bind(crypto, crypto.createDiffieHellmanGroup) },\n  createECDH: { enumerable: true, value: bind(crypto, crypto.createECDH) },\n  createHash: { enumerable: true, value: bind(crypto, crypto.createHash) },\n  createHmac: { enumerable: true, value: bind(crypto, crypto.createHmac) },\n  createSign: { enumerable: true, value: bind(crypto, crypto.createSign) },\n  createVerify: { enumerable: true, value: bind(crypto, crypto.createVerify) },\n  getCiphers: { enumerable: true, value: bind(crypto, crypto.getCiphers) },\n  getCurves: { enumerable: true, value: bind(crypto, crypto.getCurves) },\n  getDiffieHellman: { enumerable: true, value: bind(crypto, crypto.getDiffieHellman) },\n  getHashes: { enumerable: true, value: bind(crypto, crypto.getHashes) },\n  pbkdf2: { enumerable: true, value: promisify(crypto, crypto.pbkdf2, 5) },\n  pbkdf2Sync: { enumerable: true, value: bind(crypto, crypto.pbkdf2Sync) },\n  privateDecrypt: { enumerable: true, value: bind(crypto, crypto.privateDecrypt) },\n  privateEncrypt: { enumerable: true, value: bind(crypto, crypto.privateEncrypt) },\n  prng: { enumerable: true, value: bind(crypto, crypto.prng) },\n  pseudoRandomBytes: { enumerable: true, value: promisify(crypto, crypto.pseudoRandomBytes, 1) },\n  pseudoRandomBytesSync: { enumerable: true, value: crypto.pseudoRandomBytes.bind(crypto) },\n  publicDecrypt: { enumerable: true, value: bind(crypto, crypto.publicDecrypt) },\n  publicEncrypt: { enumerable: true, value: bind(crypto, crypto.publicEncrypt) },\n  randomBytes: { enumerable: true, value: promisify(crypto, crypto.randomBytes, 1) },\n  randomBytesSync: { enumerable: true, value: crypto.randomBytes.bind(crypto) },\n  randomFill: { enumerable: true, value: promisify(crypto, crypto.randomFill, 1) },\n  randomFillSync: { enumerable: true, value: bind(crypto, crypto.randomFillSync) },\n  rng: { enumerable: true, value: bind(crypto, crypto.rng) },\n  setEngine: { enumerable: true, value: bind(crypto, crypto.setEngine) },\n  timingSafeEqual: { enumerable: true, value: bind(crypto, crypto.timingSafeEqual) },\n});"]},"metadata":{},"sourceType":"script"}