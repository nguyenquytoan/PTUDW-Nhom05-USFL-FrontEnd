{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n/*globals __resourceQuery */\nif (module.hot) {\n  var log = require(\"./log\");\n\n  var checkForUpdate = function checkForUpdate(fromUpdate) {\n    module.hot.check().then(function (updatedModules) {\n      if (!updatedModules) {\n        if (fromUpdate) log(\"info\", \"[HMR] Update applied.\");else log(\"warning\", \"[HMR] Cannot find update.\");\n        return;\n      }\n\n      return module.hot.apply({\n        ignoreUnaccepted: true,\n        onUnaccepted: function (data) {\n          log(\"warning\", \"Ignored an update to unaccepted module \" + data.chain.join(\" -> \"));\n        }\n      }).then(function (renewedModules) {\n        require(\"./log-apply-result\")(updatedModules, renewedModules);\n\n        checkForUpdate(true);\n        return null;\n      });\n    }).catch(function (err) {\n      var status = module.hot.status();\n\n      if ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n        log(\"warning\", \"[HMR] Cannot apply update.\");\n        log(\"warning\", \"[HMR] \" + log.formatError(err));\n        log(\"warning\", \"[HMR] You need to restart the application!\");\n      } else {\n        log(\"warning\", \"[HMR] Update failed: \" + (err.stack || err.message));\n      }\n    });\n  };\n\n  process.on(__resourceQuery.substr(1) || \"SIGUSR2\", function () {\n    if (module.hot.status() !== \"idle\") {\n      log(\"warning\", \"[HMR] Got signal but currently in \" + module.hot.status() + \" state.\");\n      log(\"warning\", \"[HMR] Need to be in idle state to start hot update.\");\n      return;\n    }\n\n    checkForUpdate();\n  });\n} else {\n  throw new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/webpack/hot/signal.js"],"names":["module","hot","log","require","checkForUpdate","fromUpdate","check","then","updatedModules","apply","ignoreUnaccepted","onUnaccepted","data","chain","join","renewedModules","catch","err","status","indexOf","formatError","stack","message","process","on","__resourceQuery","substr","Error"],"mappings":"AAAA;;;;;AAIA;AACA,IAAIA,MAAM,CAACC,GAAX,EAAgB;AACf,MAAIC,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAjB;;AACA,MAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,UAAxB,EAAoC;AACxDL,IAAAA,MAAM,CAACC,GAAP,CACEK,KADF,GAEEC,IAFF,CAEO,UAASC,cAAT,EAAyB;AAC9B,UAAI,CAACA,cAAL,EAAqB;AACpB,YAAIH,UAAJ,EAAgBH,GAAG,CAAC,MAAD,EAAS,uBAAT,CAAH,CAAhB,KACKA,GAAG,CAAC,SAAD,EAAY,2BAAZ,CAAH;AACL;AACA;;AAED,aAAOF,MAAM,CAACC,GAAP,CACLQ,KADK,CACC;AACNC,QAAAA,gBAAgB,EAAE,IADZ;AAENC,QAAAA,YAAY,EAAE,UAASC,IAAT,EAAe;AAC5BV,UAAAA,GAAG,CACF,SADE,EAEF,4CACCU,IAAI,CAACC,KAAL,CAAWC,IAAX,CAAgB,MAAhB,CAHC,CAAH;AAKA;AARK,OADD,EAWLP,IAXK,CAWA,UAASQ,cAAT,EAAyB;AAC9BZ,QAAAA,OAAO,CAAC,oBAAD,CAAP,CAA8BK,cAA9B,EAA8CO,cAA9C;;AAEAX,QAAAA,cAAc,CAAC,IAAD,CAAd;AACA,eAAO,IAAP;AACA,OAhBK,CAAP;AAiBA,KA1BF,EA2BEY,KA3BF,CA2BQ,UAASC,GAAT,EAAc;AACpB,UAAIC,MAAM,GAAGlB,MAAM,CAACC,GAAP,CAAWiB,MAAX,EAAb;;AACA,UAAI,CAAC,OAAD,EAAU,MAAV,EAAkBC,OAAlB,CAA0BD,MAA1B,KAAqC,CAAzC,EAA4C;AAC3ChB,QAAAA,GAAG,CAAC,SAAD,EAAY,4BAAZ,CAAH;AACAA,QAAAA,GAAG,CAAC,SAAD,EAAY,WAAWA,GAAG,CAACkB,WAAJ,CAAgBH,GAAhB,CAAvB,CAAH;AACAf,QAAAA,GAAG,CAAC,SAAD,EAAY,4CAAZ,CAAH;AACA,OAJD,MAIO;AACNA,QAAAA,GAAG,CAAC,SAAD,EAAY,2BAA2Be,GAAG,CAACI,KAAJ,IAAaJ,GAAG,CAACK,OAA5C,CAAZ,CAAH;AACA;AACD,KApCF;AAqCA,GAtCD;;AAwCAC,EAAAA,OAAO,CAACC,EAAR,CAAWC,eAAe,CAACC,MAAhB,CAAuB,CAAvB,KAA6B,SAAxC,EAAmD,YAAW;AAC7D,QAAI1B,MAAM,CAACC,GAAP,CAAWiB,MAAX,OAAwB,MAA5B,EAAoC;AACnChB,MAAAA,GAAG,CACF,SADE,EAEF,uCAAuCF,MAAM,CAACC,GAAP,CAAWiB,MAAX,EAAvC,GAA6D,SAF3D,CAAH;AAIAhB,MAAAA,GAAG,CAAC,SAAD,EAAY,qDAAZ,CAAH;AACA;AACA;;AAEDE,IAAAA,cAAc;AACd,GAXD;AAYA,CAtDD,MAsDO;AACN,QAAM,IAAIuB,KAAJ,CAAU,2CAAV,CAAN;AACA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals __resourceQuery */\nif (module.hot) {\n\tvar log = require(\"./log\");\n\tvar checkForUpdate = function checkForUpdate(fromUpdate) {\n\t\tmodule.hot\n\t\t\t.check()\n\t\t\t.then(function(updatedModules) {\n\t\t\t\tif (!updatedModules) {\n\t\t\t\t\tif (fromUpdate) log(\"info\", \"[HMR] Update applied.\");\n\t\t\t\t\telse log(\"warning\", \"[HMR] Cannot find update.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn module.hot\n\t\t\t\t\t.apply({\n\t\t\t\t\t\tignoreUnaccepted: true,\n\t\t\t\t\t\tonUnaccepted: function(data) {\n\t\t\t\t\t\t\tlog(\n\t\t\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\t\t\"Ignored an update to unaccepted module \" +\n\t\t\t\t\t\t\t\t\tdata.chain.join(\" -> \")\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(function(renewedModules) {\n\t\t\t\t\t\trequire(\"./log-apply-result\")(updatedModules, renewedModules);\n\n\t\t\t\t\t\tcheckForUpdate(true);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(function(err) {\n\t\t\t\tvar status = module.hot.status();\n\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\tlog(\"warning\", \"[HMR] Cannot apply update.\");\n\t\t\t\t\tlog(\"warning\", \"[HMR] \" + log.formatError(err));\n\t\t\t\t\tlog(\"warning\", \"[HMR] You need to restart the application!\");\n\t\t\t\t} else {\n\t\t\t\t\tlog(\"warning\", \"[HMR] Update failed: \" + (err.stack || err.message));\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tprocess.on(__resourceQuery.substr(1) || \"SIGUSR2\", function() {\n\t\tif (module.hot.status() !== \"idle\") {\n\t\t\tlog(\n\t\t\t\t\"warning\",\n\t\t\t\t\"[HMR] Got signal but currently in \" + module.hot.status() + \" state.\"\n\t\t\t);\n\t\t\tlog(\"warning\", \"[HMR] Need to be in idle state to start hot update.\");\n\t\t\treturn;\n\t\t}\n\n\t\tcheckForUpdate();\n\t});\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n"]},"metadata":{},"sourceType":"script"}