{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = treeProcessor;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction treeProcessor(options) {\n  const nodeComplete = options.nodeComplete,\n        nodeStart = options.nodeStart,\n        queueRunnerFactory = options.queueRunnerFactory,\n        runnableIds = options.runnableIds,\n        tree = options.tree;\n\n  function isEnabled(node, parentEnabled) {\n    return parentEnabled || runnableIds.indexOf(node.id) !== -1;\n  }\n\n  function getNodeHandler(node, parentEnabled) {\n    const enabled = isEnabled(node, parentEnabled);\n    return node.children ? getNodeWithChildrenHandler(node, enabled) : getNodeWithoutChildrenHandler(node, enabled);\n  }\n\n  function getNodeWithoutChildrenHandler(node, enabled) {\n    return function fn(done = () => {}) {\n      node.execute(done, enabled);\n    };\n  }\n\n  function getNodeWithChildrenHandler(node, enabled) {\n    return /*#__PURE__*/function () {\n      var _fn = _asyncToGenerator(function* (done = () => {}) {\n        nodeStart(node);\n        yield queueRunnerFactory({\n          onException: error => node.onException(error),\n          queueableFns: wrapChildren(node, enabled),\n          userContext: node.sharedUserContext()\n        });\n        nodeComplete(node);\n        done();\n      });\n\n      function fn() {\n        return _fn.apply(this, arguments);\n      }\n\n      return fn;\n    }();\n  }\n\n  function hasEnabledTest(node) {\n    if (node.children) {\n      return node.children.some(hasEnabledTest);\n    }\n\n    return !node.disabled;\n  }\n\n  function wrapChildren(node, enabled) {\n    if (!node.children) {\n      throw new Error('`node.children` is not defined.');\n    }\n\n    const children = node.children.map(child => ({\n      fn: getNodeHandler(child, enabled)\n    }));\n\n    if (!hasEnabledTest(node)) {\n      return children;\n    }\n\n    return node.beforeAllFns.concat(children).concat(node.afterAllFns);\n  }\n\n  const treeHandler = getNodeHandler(tree, false);\n  return treeHandler();\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jest-jasmine2/build/treeProcessor.js"],"names":["Object","defineProperty","exports","value","default","treeProcessor","Symbol","global","Promise","for","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","options","nodeComplete","nodeStart","queueRunnerFactory","runnableIds","tree","isEnabled","node","parentEnabled","indexOf","id","getNodeHandler","enabled","children","getNodeWithChildrenHandler","getNodeWithoutChildrenHandler","execute","_fn","onException","queueableFns","wrapChildren","userContext","sharedUserContext","hasEnabledTest","some","disabled","Error","map","child","beforeAllFns","concat","afterAllFns","treeHandler"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = treeProcessor;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function() {\n    var self = this,\n      args = arguments;\n    return new Promise(function(resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);\n      }\n      _next(undefined);\n    });\n  };\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction treeProcessor(options) {\n  const nodeComplete = options.nodeComplete,\n    nodeStart = options.nodeStart,\n    queueRunnerFactory = options.queueRunnerFactory,\n    runnableIds = options.runnableIds,\n    tree = options.tree;\n\n  function isEnabled(node, parentEnabled) {\n    return parentEnabled || runnableIds.indexOf(node.id) !== -1;\n  }\n\n  function getNodeHandler(node, parentEnabled) {\n    const enabled = isEnabled(node, parentEnabled);\n    return node.children\n      ? getNodeWithChildrenHandler(node, enabled)\n      : getNodeWithoutChildrenHandler(node, enabled);\n  }\n\n  function getNodeWithoutChildrenHandler(node, enabled) {\n    return function fn(done = () => {}) {\n      node.execute(done, enabled);\n    };\n  }\n\n  function getNodeWithChildrenHandler(node, enabled) {\n    return (\n      /*#__PURE__*/\n      (function() {\n        var _fn = _asyncToGenerator(function*(done = () => {}) {\n          nodeStart(node);\n          yield queueRunnerFactory({\n            onException: error => node.onException(error),\n            queueableFns: wrapChildren(node, enabled),\n            userContext: node.sharedUserContext()\n          });\n          nodeComplete(node);\n          done();\n        });\n\n        function fn() {\n          return _fn.apply(this, arguments);\n        }\n\n        return fn;\n      })()\n    );\n  }\n\n  function hasEnabledTest(node) {\n    if (node.children) {\n      return node.children.some(hasEnabledTest);\n    }\n\n    return !node.disabled;\n  }\n\n  function wrapChildren(node, enabled) {\n    if (!node.children) {\n      throw new Error('`node.children` is not defined.');\n    }\n\n    const children = node.children.map(child => ({\n      fn: getNodeHandler(child, enabled)\n    }));\n\n    if (!hasEnabledTest(node)) {\n      return children;\n    }\n\n    return node.beforeAllFns.concat(children).concat(node.afterAllFns);\n  }\n\n  const treeHandler = getNodeHandler(tree, false);\n  return treeHandler();\n}\n"]},"metadata":{},"sourceType":"script"}