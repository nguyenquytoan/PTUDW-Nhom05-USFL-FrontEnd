{"ast":null,"code":"import postcss from 'postcss';\nconst mediaRegExp = /^media$/i;\nconst prefersInterfaceRegExp = /\\(\\s*prefers-color-scheme\\s*:\\s*(dark|light|no-preference)\\s*\\)/i;\nconst colorIndexByStyle = {\n  dark: 48,\n  light: 70,\n  'no-preference': 22\n};\n\nconst prefersInterfaceReplacer = ($0, style) => `(color-index: ${colorIndexByStyle[style.toLowerCase()]})`;\n\nvar postcss$1 = postcss.plugin('postcss-prefers-color-scheme', opts => {\n  const preserve = 'preserve' in Object(opts) ? opts.preserve : true;\n  return root => {\n    root.walkAtRules(mediaRegExp, atRule => {\n      const params = atRule.params;\n      const altParams = params.replace(prefersInterfaceRegExp, prefersInterfaceReplacer);\n\n      if (params !== altParams) {\n        if (preserve) {\n          atRule.cloneBefore({\n            params: altParams\n          });\n        } else {\n          atRule.params = altParams;\n        }\n      }\n    });\n  };\n});\nexport default postcss$1;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/css-prefers-color-scheme/postcss.mjs"],"names":["postcss","mediaRegExp","prefersInterfaceRegExp","colorIndexByStyle","dark","light","prefersInterfaceReplacer","$0","style","toLowerCase","postcss$1","plugin","opts","preserve","Object","root","walkAtRules","atRule","params","altParams","replace","cloneBefore"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AAEA,MAAMC,WAAW,GAAG,UAApB;AACA,MAAMC,sBAAsB,GAAG,kEAA/B;AACA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,IAAI,EAAE,EADkB;AAExBC,EAAAA,KAAK,EAAE,EAFiB;AAGxB,mBAAiB;AAHO,CAA1B;;AAMA,MAAMC,wBAAwB,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAgB,iBAAgBL,iBAAiB,CAACK,KAAK,CAACC,WAAN,EAAD,CAAsB,GAAxG;;AAEA,IAAIC,SAAS,GAAGV,OAAO,CAACW,MAAR,CAAe,8BAAf,EAA+CC,IAAI,IAAI;AACrE,QAAMC,QAAQ,GAAG,cAAcC,MAAM,CAACF,IAAD,CAApB,GAA6BA,IAAI,CAACC,QAAlC,GAA6C,IAA9D;AACA,SAAOE,IAAI,IAAI;AACbA,IAAAA,IAAI,CAACC,WAAL,CAAiBf,WAAjB,EAA8BgB,MAAM,IAAI;AACtC,YAAMC,MAAM,GAAGD,MAAM,CAACC,MAAtB;AACA,YAAMC,SAAS,GAAGD,MAAM,CAACE,OAAP,CAAelB,sBAAf,EAAuCI,wBAAvC,CAAlB;;AAEA,UAAIY,MAAM,KAAKC,SAAf,EAA0B;AACxB,YAAIN,QAAJ,EAAc;AACZI,UAAAA,MAAM,CAACI,WAAP,CAAmB;AACjBH,YAAAA,MAAM,EAAEC;AADS,WAAnB;AAGD,SAJD,MAIO;AACLF,UAAAA,MAAM,CAACC,MAAP,GAAgBC,SAAhB;AACD;AACF;AACF,KAbD;AAcD,GAfD;AAgBD,CAlBe,CAAhB;AAoBA,eAAeT,SAAf","sourcesContent":["import postcss from 'postcss';\n\nconst mediaRegExp = /^media$/i;\nconst prefersInterfaceRegExp = /\\(\\s*prefers-color-scheme\\s*:\\s*(dark|light|no-preference)\\s*\\)/i;\nconst colorIndexByStyle = {\n  dark: 48,\n  light: 70,\n  'no-preference': 22\n};\n\nconst prefersInterfaceReplacer = ($0, style) => `(color-index: ${colorIndexByStyle[style.toLowerCase()]})`;\n\nvar postcss$1 = postcss.plugin('postcss-prefers-color-scheme', opts => {\n  const preserve = 'preserve' in Object(opts) ? opts.preserve : true;\n  return root => {\n    root.walkAtRules(mediaRegExp, atRule => {\n      const params = atRule.params;\n      const altParams = params.replace(prefersInterfaceRegExp, prefersInterfaceReplacer);\n\n      if (params !== altParams) {\n        if (preserve) {\n          atRule.cloneBefore({\n            params: altParams\n          });\n        } else {\n          atRule.params = altParams;\n        }\n      }\n    });\n  };\n});\n\nexport default postcss$1;\n"]},"metadata":{},"sourceType":"module"}