{"ast":null,"code":"/**\n * Extractor function for a TypeCastExpression type value node.\n * A type cast expression looks like `(this.handleClick: (event: MouseEvent) => void))`\n * This will return the expression `this.handleClick`.\n *\n * @param - value - AST Value object with type `TypeCastExpression`\n * @returns - The extracted value converted to correct type.\n */\nexport default function extractValueFromTypeCastExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('./index.js').default;\n\n  return getValue(value.expression);\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jsx-ast-utils/src/values/expressions/TypeCastExpression.js"],"names":["extractValueFromTypeCastExpression","value","getValue","require","default","expression"],"mappings":"AAAA;;;;;;;;AAQA,eAAe,SAASA,kCAAT,CAA4CC,KAA5C,EAAmD;AAChE;AACA,QAAMC,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAAvC;;AACA,SAAOF,QAAQ,CAACD,KAAK,CAACI,UAAP,CAAf;AACD","sourcesContent":["/**\n * Extractor function for a TypeCastExpression type value node.\n * A type cast expression looks like `(this.handleClick: (event: MouseEvent) => void))`\n * This will return the expression `this.handleClick`.\n *\n * @param - value - AST Value object with type `TypeCastExpression`\n * @returns - The extracted value converted to correct type.\n */\nexport default function extractValueFromTypeCastExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('./index.js').default;\n  return getValue(value.expression);\n}\n"]},"metadata":{},"sourceType":"module"}