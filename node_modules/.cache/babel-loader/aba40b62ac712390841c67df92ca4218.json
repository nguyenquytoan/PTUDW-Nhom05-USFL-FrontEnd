{"ast":null,"code":"'use strict';\n\nvar core = require('../'),\n    isArray = require('lodash/isArray'),\n    isFunction = require('lodash/isFunction'),\n    isObjectLike = require('lodash/isObjectLike');\n\nmodule.exports = function (options) {\n  var errorText = 'Please verify options'; // For better minification because this string is repeating\n\n  if (!isObjectLike(options)) {\n    throw new TypeError(errorText);\n  }\n\n  if (!isFunction(options.client)) {\n    throw new TypeError(errorText + '.client');\n  }\n\n  if (!isArray(options.expose) || options.expose.length === 0) {\n    throw new TypeError(errorText + '.expose');\n  }\n\n  var thenExposed = false;\n\n  for (var i = 0; i < options.expose.length; i += 1) {\n    if (options.expose[i] === 'then') {\n      thenExposed = true;\n      break;\n    }\n  }\n\n  if (!thenExposed) {\n    throw new Error('Please expose \"then\"');\n  }\n\n  var plumbing = core({\n    PromiseImpl: options.PromiseImpl,\n    constructorMixin: options.constructorMixin\n  });\n  return function (requestOptions) {\n    var self = {};\n    plumbing.init.call(self, requestOptions);\n    var request = options.client(requestOptions);\n\n    for (var k = 0; k < options.expose.length; k += 1) {\n      var method = options.expose[k];\n      plumbing[method === 'promise' ? 'exposePromise' : 'exposePromiseMethod'](request, self, '_rp_promise', method);\n    }\n\n    return request;\n  };\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/request-promise-core/configure/request-next.js"],"names":["core","require","isArray","isFunction","isObjectLike","module","exports","options","errorText","TypeError","client","expose","length","thenExposed","i","Error","plumbing","PromiseImpl","constructorMixin","requestOptions","self","init","call","request","k","method"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,KAAD,CAAlB;AAAA,IACIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CADrB;AAAA,IAEIE,UAAU,GAAGF,OAAO,CAAC,mBAAD,CAFxB;AAAA,IAGIG,YAAY,GAAGH,OAAO,CAAC,qBAAD,CAH1B;;AAMAI,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAEhC,MAAIC,SAAS,GAAG,uBAAhB,CAFgC,CAES;;AAEzC,MAAI,CAACJ,YAAY,CAACG,OAAD,CAAjB,EAA4B;AACxB,UAAM,IAAIE,SAAJ,CAAcD,SAAd,CAAN;AACH;;AAED,MAAI,CAACL,UAAU,CAACI,OAAO,CAACG,MAAT,CAAf,EAAiC;AAC7B,UAAM,IAAID,SAAJ,CAAcD,SAAS,GAAG,SAA1B,CAAN;AACH;;AAED,MAAI,CAACN,OAAO,CAACK,OAAO,CAACI,MAAT,CAAR,IAA4BJ,OAAO,CAACI,MAAR,CAAeC,MAAf,KAA0B,CAA1D,EAA6D;AACzD,UAAM,IAAIH,SAAJ,CAAcD,SAAS,GAAG,SAA1B,CAAN;AACH;;AAED,MAAIK,WAAW,GAAG,KAAlB;;AACA,OAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGP,OAAO,CAACI,MAAR,CAAeC,MAApC,EAA4CE,CAAC,IAAE,CAA/C,EAAmD;AAC/C,QAAIP,OAAO,CAACI,MAAR,CAAeG,CAAf,MAAsB,MAA1B,EAAkC;AAC9BD,MAAAA,WAAW,GAAG,IAAd;AACA;AACH;AACJ;;AACD,MAAI,CAACA,WAAL,EAAkB;AACd,UAAM,IAAIE,KAAJ,CAAU,sBAAV,CAAN;AACH;;AAGD,MAAIC,QAAQ,GAAGhB,IAAI,CAAC;AAChBiB,IAAAA,WAAW,EAAEV,OAAO,CAACU,WADL;AAEhBC,IAAAA,gBAAgB,EAAEX,OAAO,CAACW;AAFV,GAAD,CAAnB;AAKA,SAAO,UAAUC,cAAV,EAA0B;AAE7B,QAAIC,IAAI,GAAG,EAAX;AAEAJ,IAAAA,QAAQ,CAACK,IAAT,CAAcC,IAAd,CAAmBF,IAAnB,EAAyBD,cAAzB;AAEA,QAAII,OAAO,GAAGhB,OAAO,CAACG,MAAR,CAAeS,cAAf,CAAd;;AAEA,SAAM,IAAIK,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGjB,OAAO,CAACI,MAAR,CAAeC,MAApC,EAA4CY,CAAC,IAAE,CAA/C,EAAmD;AAE/C,UAAIC,MAAM,GAAGlB,OAAO,CAACI,MAAR,CAAea,CAAf,CAAb;AAEAR,MAAAA,QAAQ,CAAES,MAAM,KAAK,SAAX,GAAuB,eAAvB,GAAyC,qBAA3C,CAAR,CACIF,OADJ,EAEIH,IAFJ,EAGI,aAHJ,EAIIK,MAJJ;AAOH;;AAED,WAAOF,OAAP;AAEH,GAvBD;AAyBH,CA1DD","sourcesContent":["'use strict';\n\nvar core = require('../'),\n    isArray = require('lodash/isArray'),\n    isFunction = require('lodash/isFunction'),\n    isObjectLike = require('lodash/isObjectLike');\n\n\nmodule.exports = function (options) {\n\n    var errorText = 'Please verify options'; // For better minification because this string is repeating\n\n    if (!isObjectLike(options)) {\n        throw new TypeError(errorText);\n    }\n\n    if (!isFunction(options.client)) {\n        throw new TypeError(errorText + '.client');\n    }\n\n    if (!isArray(options.expose) || options.expose.length === 0) {\n        throw new TypeError(errorText + '.expose');\n    }\n\n    var thenExposed = false;\n    for ( var i = 0; i < options.expose.length; i+=1 ) {\n        if (options.expose[i] === 'then') {\n            thenExposed = true;\n            break;\n        }\n    }\n    if (!thenExposed) {\n        throw new Error('Please expose \"then\"');\n    }\n\n\n    var plumbing = core({\n        PromiseImpl: options.PromiseImpl,\n        constructorMixin: options.constructorMixin\n    });\n\n    return function (requestOptions) {\n\n        var self = {};\n\n        plumbing.init.call(self, requestOptions);\n\n        var request = options.client(requestOptions);\n\n        for ( var k = 0; k < options.expose.length; k+=1 ) {\n\n            var method = options.expose[k];\n\n            plumbing[ method === 'promise' ? 'exposePromise' : 'exposePromiseMethod' ](\n                request,\n                self,\n                '_rp_promise',\n                method\n            );\n\n        }\n\n        return request;\n\n    };\n\n};\n"]},"metadata":{},"sourceType":"script"}