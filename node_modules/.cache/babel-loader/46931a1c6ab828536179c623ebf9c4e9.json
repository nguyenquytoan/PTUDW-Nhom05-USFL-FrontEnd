{"ast":null,"code":"var mdns = require('./');\n\nvar tape = require('tape');\n\nvar dgram = require('dgram');\n\nvar port = function (cb) {\n  var s = dgram.createSocket('udp4');\n  s.bind(0, function () {\n    var port = s.address().port;\n    s.on('close', function () {\n      cb(port);\n    });\n    s.close();\n  });\n};\n\nvar configs = [{\n  ip: '127.0.0.1',\n  multicast: false\n} // {'interface': '127.0.0.1', multicast: true}\n];\nvar tests = configs.map(function (config) {\n  return function (name, fn) {\n    tape(name, function (t) {\n      port(function (p) {\n        config.port = p;\n        var dns = mdns(config);\n        dns.on('warning', function (e) {\n          t.error(e);\n        });\n        fn(dns, t);\n      });\n    });\n  };\n});\ntests.forEach(function (test) {\n  test('works', function (dns, t) {\n    t.plan(3);\n    dns.once('query', function (packet) {\n      t.same(packet.type, 'query');\n      dns.destroy(function () {\n        t.ok(true, 'destroys');\n      });\n    });\n    dns.query('hello-world', function () {\n      t.ok(true, 'flushed');\n    });\n  });\n  test('ANY query', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 1, 'one question');\n      t.same(packet.questions[0], {\n        name: 'hello-world',\n        type: 'ANY',\n        class: 1\n      });\n      dns.destroy(function () {\n        t.end();\n      });\n    });\n    dns.query('hello-world', 'ANY');\n  });\n  test('A record', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 1, 'one question');\n      t.same(packet.questions[0], {\n        name: 'hello-world',\n        type: 'A',\n        class: 1\n      });\n      dns.respond([{\n        type: 'A',\n        name: 'hello-world',\n        ttl: 120,\n        data: '127.0.0.1'\n      }]);\n    });\n    dns.once('response', function (packet) {\n      t.same(packet.answers.length, 1, 'one answer');\n      t.same(packet.answers[0], {\n        type: 'A',\n        name: 'hello-world',\n        ttl: 120,\n        data: '127.0.0.1',\n        class: 1,\n        flush: false\n      });\n      dns.destroy(function () {\n        t.end();\n      });\n    });\n    dns.query('hello-world', 'A');\n  });\n  test('A record (two questions)', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 2, 'two questions');\n      t.same(packet.questions[0], {\n        name: 'hello-world',\n        type: 'A',\n        class: 1\n      });\n      t.same(packet.questions[1], {\n        name: 'hej.verden',\n        type: 'A',\n        class: 1\n      });\n      dns.respond([{\n        type: 'A',\n        name: 'hello-world',\n        ttl: 120,\n        data: '127.0.0.1'\n      }, {\n        type: 'A',\n        name: 'hej.verden',\n        ttl: 120,\n        data: '127.0.0.2'\n      }]);\n    });\n    dns.once('response', function (packet) {\n      t.same(packet.answers.length, 2, 'one answers');\n      t.same(packet.answers[0], {\n        type: 'A',\n        name: 'hello-world',\n        ttl: 120,\n        data: '127.0.0.1',\n        class: 1,\n        flush: false\n      });\n      t.same(packet.answers[1], {\n        type: 'A',\n        name: 'hej.verden',\n        ttl: 120,\n        data: '127.0.0.2',\n        class: 1,\n        flush: false\n      });\n      dns.destroy(function () {\n        t.end();\n      });\n    });\n    dns.query([{\n      name: 'hello-world',\n      type: 'A'\n    }, {\n      name: 'hej.verden',\n      type: 'A'\n    }]);\n  });\n  test('AAAA record', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 1, 'one question');\n      t.same(packet.questions[0], {\n        name: 'hello-world',\n        type: 'AAAA',\n        class: 1\n      });\n      dns.respond([{\n        type: 'AAAA',\n        name: 'hello-world',\n        ttl: 120,\n        data: 'fe80::5ef9:38ff:fe8c:ceaa'\n      }]);\n    });\n    dns.once('response', function (packet) {\n      t.same(packet.answers.length, 1, 'one answer');\n      t.same(packet.answers[0], {\n        type: 'AAAA',\n        name: 'hello-world',\n        ttl: 120,\n        data: 'fe80::5ef9:38ff:fe8c:ceaa',\n        class: 1,\n        flush: false\n      });\n      dns.destroy(function () {\n        t.end();\n      });\n    });\n    dns.query('hello-world', 'AAAA');\n  });\n  test('SRV record', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 1, 'one question');\n      t.same(packet.questions[0], {\n        name: 'hello-world',\n        type: 'SRV',\n        class: 1\n      });\n      dns.respond([{\n        type: 'SRV',\n        name: 'hello-world',\n        ttl: 120,\n        data: {\n          port: 11111,\n          target: 'hello.world.com',\n          priority: 10,\n          weight: 12\n        }\n      }]);\n    });\n    dns.once('response', function (packet) {\n      t.same(packet.answers.length, 1, 'one answer');\n      t.same(packet.answers[0], {\n        type: 'SRV',\n        name: 'hello-world',\n        ttl: 120,\n        data: {\n          port: 11111,\n          target: 'hello.world.com',\n          priority: 10,\n          weight: 12\n        },\n        class: 1,\n        flush: false\n      });\n      dns.destroy(function () {\n        t.end();\n      });\n    });\n    dns.query('hello-world', 'SRV');\n  });\n  test('TXT record', function (dns, t) {\n    var data = Buffer.from('black box');\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 1, 'one question');\n      t.same(packet.questions[0], {\n        name: 'hello-world',\n        type: 'TXT',\n        class: 1\n      });\n      dns.respond([{\n        type: 'TXT',\n        name: 'hello-world',\n        ttl: 120,\n        data: data\n      }]);\n    });\n    dns.once('response', function (packet) {\n      t.same(packet.answers.length, 1, 'one answer');\n      t.same(packet.answers[0], {\n        type: 'TXT',\n        name: 'hello-world',\n        ttl: 120,\n        data: data,\n        class: 1,\n        flush: false\n      });\n      dns.destroy(function () {\n        t.end();\n      });\n    });\n    dns.query('hello-world', 'TXT');\n  });\n  test('QU question bit', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions, [{\n        type: 'A',\n        name: 'foo',\n        class: 1\n      }, {\n        type: 'A',\n        name: 'bar',\n        class: 1\n      }]);\n      dns.destroy(function () {\n        t.end();\n      });\n    });\n    dns.query([{\n      type: 'A',\n      name: 'foo',\n      class: 32769\n    }, {\n      type: 'A',\n      name: 'bar',\n      class: 1\n    }]);\n  });\n  test('cache flush bit', function (dns, t) {\n    dns.once('query', function (packet) {\n      dns.respond({\n        answers: [{\n          type: 'A',\n          name: 'foo',\n          ttl: 120,\n          data: '127.0.0.1',\n          class: 1,\n          flush: true\n        }, {\n          type: 'A',\n          name: 'foo',\n          ttl: 120,\n          data: '127.0.0.2',\n          class: 1,\n          flush: false\n        }],\n        additionals: [{\n          type: 'A',\n          name: 'foo',\n          ttl: 120,\n          data: '127.0.0.3',\n          class: 1,\n          flush: true\n        }]\n      });\n    });\n    dns.once('response', function (packet) {\n      t.same(packet.answers, [{\n        type: 'A',\n        name: 'foo',\n        ttl: 120,\n        data: '127.0.0.1',\n        class: 1,\n        flush: true\n      }, {\n        type: 'A',\n        name: 'foo',\n        ttl: 120,\n        data: '127.0.0.2',\n        class: 1,\n        flush: false\n      }]);\n      t.same(packet.additionals[0], {\n        type: 'A',\n        name: 'foo',\n        ttl: 120,\n        data: '127.0.0.3',\n        class: 1,\n        flush: true\n      });\n      dns.destroy(function () {\n        t.end();\n      });\n    });\n    dns.query('foo', 'A');\n  });\n  test('Authoritive Answer bit', function (dns, t) {\n    dns.once('query', function (packet) {\n      dns.respond([]);\n    });\n    dns.once('response', function (packet) {\n      t.ok(packet.flag_auth, 'should be set');\n      dns.destroy(function () {\n        t.end();\n      });\n    });\n    dns.query('foo', 'A');\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/multicast-dns/test.js"],"names":["mdns","require","tape","dgram","port","cb","s","createSocket","bind","address","on","close","configs","ip","multicast","tests","map","config","name","fn","t","p","dns","e","error","forEach","test","plan","once","packet","same","type","destroy","ok","query","questions","length","class","end","respond","ttl","data","answers","flush","target","priority","weight","Buffer","from","additionals","flag_auth"],"mappings":"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","sourcesContent":["var mdns = require('./')\nvar tape = require('tape')\nvar dgram = require('dgram')\n\nvar port = function (cb) {\n  var s = dgram.createSocket('udp4')\n  s.bind(0, function () {\n    var port = s.address().port\n    s.on('close', function () {\n      cb(port)\n    })\n    s.close()\n  })\n}\n\nvar configs = [\n   {ip: '127.0.0.1', multicast: false}\n  // {'interface': '127.0.0.1', multicast: true}\n]\n\nvar tests = configs.map(function (config) {\n  return function (name, fn) {\n    tape(name, function (t) {\n      port(function (p) {\n        config.port = p\n        var dns = mdns(config)\n        dns.on('warning', function (e) {\n          t.error(e)\n        })\n        fn(dns, t)\n      })\n    })\n  }\n})\n\ntests.forEach(function (test) {\n  test('works', function (dns, t) {\n    t.plan(3)\n\n    dns.once('query', function (packet) {\n      t.same(packet.type, 'query')\n      dns.destroy(function () {\n        t.ok(true, 'destroys')\n      })\n    })\n\n    dns.query('hello-world', function () {\n      t.ok(true, 'flushed')\n    })\n  })\n\n  test('ANY query', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 1, 'one question')\n      t.same(packet.questions[0], {name: 'hello-world', type: 'ANY', class: 1})\n      dns.destroy(function () {\n        t.end()\n      })\n    })\n\n    dns.query('hello-world', 'ANY')\n  })\n\n  test('A record', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 1, 'one question')\n      t.same(packet.questions[0], {name: 'hello-world', type: 'A', class: 1})\n      dns.respond([{type: 'A', name: 'hello-world', ttl: 120, data: '127.0.0.1'}])\n    })\n\n    dns.once('response', function (packet) {\n      t.same(packet.answers.length, 1, 'one answer')\n      t.same(packet.answers[0], {type: 'A', name: 'hello-world', ttl: 120, data: '127.0.0.1', class: 1, flush: false})\n      dns.destroy(function () {\n        t.end()\n      })\n    })\n\n    dns.query('hello-world', 'A')\n  })\n\n  test('A record (two questions)', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 2, 'two questions')\n      t.same(packet.questions[0], {name: 'hello-world', type: 'A', class: 1})\n      t.same(packet.questions[1], {name: 'hej.verden', type: 'A', class: 1})\n      dns.respond([{type: 'A', name: 'hello-world', ttl: 120, data: '127.0.0.1'}, {\n        type: 'A',\n        name: 'hej.verden',\n        ttl: 120,\n        data: '127.0.0.2'\n      }])\n    })\n\n    dns.once('response', function (packet) {\n      t.same(packet.answers.length, 2, 'one answers')\n      t.same(packet.answers[0], {type: 'A', name: 'hello-world', ttl: 120, data: '127.0.0.1', class: 1, flush: false})\n      t.same(packet.answers[1], {type: 'A', name: 'hej.verden', ttl: 120, data: '127.0.0.2', class: 1, flush: false})\n      dns.destroy(function () {\n        t.end()\n      })\n    })\n\n    dns.query([{name: 'hello-world', type: 'A'}, {name: 'hej.verden', type: 'A'}])\n  })\n\n  test('AAAA record', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 1, 'one question')\n      t.same(packet.questions[0], {name: 'hello-world', type: 'AAAA', class: 1})\n      dns.respond([{type: 'AAAA', name: 'hello-world', ttl: 120, data: 'fe80::5ef9:38ff:fe8c:ceaa'}])\n    })\n\n    dns.once('response', function (packet) {\n      t.same(packet.answers.length, 1, 'one answer')\n      t.same(packet.answers[0], {\n        type: 'AAAA',\n        name: 'hello-world',\n        ttl: 120,\n        data: 'fe80::5ef9:38ff:fe8c:ceaa',\n        class: 1,\n        flush: false\n      })\n      dns.destroy(function () {\n        t.end()\n      })\n    })\n\n    dns.query('hello-world', 'AAAA')\n  })\n\n  test('SRV record', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 1, 'one question')\n      t.same(packet.questions[0], {name: 'hello-world', type: 'SRV', class: 1})\n      dns.respond([{\n        type: 'SRV',\n        name: 'hello-world',\n        ttl: 120,\n        data: {port: 11111, target: 'hello.world.com', priority: 10, weight: 12}\n      }])\n    })\n\n    dns.once('response', function (packet) {\n      t.same(packet.answers.length, 1, 'one answer')\n      t.same(packet.answers[0], {\n        type: 'SRV',\n        name: 'hello-world',\n        ttl: 120,\n        data: {port: 11111, target: 'hello.world.com', priority: 10, weight: 12},\n        class: 1,\n        flush: false\n      })\n      dns.destroy(function () {\n        t.end()\n      })\n    })\n\n    dns.query('hello-world', 'SRV')\n  })\n\n  test('TXT record', function (dns, t) {\n    var data = Buffer.from('black box')\n\n    dns.once('query', function (packet) {\n      t.same(packet.questions.length, 1, 'one question')\n      t.same(packet.questions[0], {name: 'hello-world', type: 'TXT', class: 1})\n      dns.respond([{type: 'TXT', name: 'hello-world', ttl: 120, data: data}])\n    })\n\n    dns.once('response', function (packet) {\n      t.same(packet.answers.length, 1, 'one answer')\n      t.same(packet.answers[0], {type: 'TXT', name: 'hello-world', ttl: 120, data: data, class: 1, flush: false})\n      dns.destroy(function () {\n        t.end()\n      })\n    })\n\n    dns.query('hello-world', 'TXT')\n  })\n\n  test('QU question bit', function (dns, t) {\n    dns.once('query', function (packet) {\n      t.same(packet.questions, [\n        {type: 'A', name: 'foo', class: 1},\n        {type: 'A', name: 'bar', class: 1}\n      ])\n      dns.destroy(function () {\n        t.end()\n      })\n    })\n\n    dns.query([\n      {type: 'A', name: 'foo', class: 32769},\n      {type: 'A', name: 'bar', class: 1}\n    ])\n  })\n\n  test('cache flush bit', function (dns, t) {\n    dns.once('query', function (packet) {\n      dns.respond({\n        answers: [\n          {type: 'A', name: 'foo', ttl: 120, data: '127.0.0.1', class: 1, flush: true},\n          {type: 'A', name: 'foo', ttl: 120, data: '127.0.0.2', class: 1, flush: false}\n        ],\n        additionals: [\n          {type: 'A', name: 'foo', ttl: 120, data: '127.0.0.3', class: 1, flush: true}\n        ]\n      })\n    })\n\n    dns.once('response', function (packet) {\n      t.same(packet.answers, [\n        {type: 'A', name: 'foo', ttl: 120, data: '127.0.0.1', class: 1, flush: true},\n        {type: 'A', name: 'foo', ttl: 120, data: '127.0.0.2', class: 1, flush: false}\n      ])\n      t.same(packet.additionals[0], {type: 'A', name: 'foo', ttl: 120, data: '127.0.0.3', class: 1, flush: true})\n      dns.destroy(function () {\n        t.end()\n      })\n    })\n\n    dns.query('foo', 'A')\n  })\n\n  test('Authoritive Answer bit', function (dns, t) {\n    dns.once('query', function (packet) {\n      dns.respond([])\n    })\n\n    dns.once('response', function (packet) {\n      t.ok(packet.flag_auth, 'should be set')\n      dns.destroy(function () {\n        t.end()\n      })\n    })\n\n    dns.query('foo', 'A')\n  })\n})\n"]},"metadata":{},"sourceType":"script"}