{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = propName;\n/**\n * Returns the name of the prop given the JSXAttribute object.\n */\n\nfunction propName() {\n  var prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (!prop.type || prop.type !== 'JSXAttribute') {\n    throw new Error('The prop must be a JSXAttribute collected by the AST parser.');\n  }\n\n  if (prop.name.type === 'JSXNamespacedName') {\n    return prop.name.namespace.name + ':' + prop.name.name.name;\n  }\n\n  return prop.name.name;\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/jsx-ast-utils/lib/propName.js"],"names":["Object","defineProperty","exports","value","default","propName","prop","arguments","length","undefined","type","Error","name","namespace"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;AACA;;;;AAGA,SAASA,QAAT,GAAoB;AAClB,MAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;;AAEA,MAAI,CAACD,IAAI,CAACI,IAAN,IAAcJ,IAAI,CAACI,IAAL,KAAc,cAAhC,EAAgD;AAC9C,UAAM,IAAIC,KAAJ,CAAU,8DAAV,CAAN;AACD;;AAED,MAAIL,IAAI,CAACM,IAAL,CAAUF,IAAV,KAAmB,mBAAvB,EAA4C;AAC1C,WAAOJ,IAAI,CAACM,IAAL,CAAUC,SAAV,CAAoBD,IAApB,GAA2B,GAA3B,GAAiCN,IAAI,CAACM,IAAL,CAAUA,IAAV,CAAeA,IAAvD;AACD;;AAED,SAAON,IAAI,CAACM,IAAL,CAAUA,IAAjB;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = propName;\n/**\n * Returns the name of the prop given the JSXAttribute object.\n */\nfunction propName() {\n  var prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (!prop.type || prop.type !== 'JSXAttribute') {\n    throw new Error('The prop must be a JSXAttribute collected by the AST parser.');\n  }\n\n  if (prop.name.type === 'JSXNamespacedName') {\n    return prop.name.namespace.name + ':' + prop.name.name.name;\n  }\n\n  return prop.name.name;\n}"]},"metadata":{},"sourceType":"script"}