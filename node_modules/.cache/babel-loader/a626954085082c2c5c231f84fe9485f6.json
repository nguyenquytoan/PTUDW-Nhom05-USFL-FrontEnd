{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_SubscriptionLoggable,_util_applyMixins PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\n\nvar HotObservable = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(HotObservable, _super);\n\n  function HotObservable(messages, scheduler) {\n    var _this = _super.call(this) || this;\n\n    _this.messages = messages;\n    _this.subscriptions = [];\n    _this.scheduler = scheduler;\n    return _this;\n  }\n\n  HotObservable.prototype._subscribe = function (subscriber) {\n    var subject = this;\n    var index = subject.logSubscribedFrame();\n    var subscription = new Subscription();\n    subscription.add(new Subscription(function () {\n      subject.logUnsubscribedFrame(index);\n    }));\n    subscription.add(_super.prototype._subscribe.call(this, subscriber));\n    return subscription;\n  };\n\n  HotObservable.prototype.setup = function () {\n    var subject = this;\n    var messagesLength = subject.messages.length;\n\n    for (var i = 0; i < messagesLength; i++) {\n      (function () {\n        var message = subject.messages[i];\n        subject.scheduler.schedule(function () {\n          message.notification.observe(subject);\n        }, message.frame);\n      })();\n    }\n  };\n\n  return HotObservable;\n}(Subject);\n\nexport { HotObservable };\n/*@__PURE__*/\n\napplyMixins(HotObservable, [SubscriptionLoggable]);","map":{"version":3,"sources":["../../../src/internal/testing/HotObservable.ts"],"names":[],"mappings":";AAAA,OAAO,KAAE,OAAT,MAAwB,OAAxB;AAEA,SAAS,OAAT,QAAuB,YAAvB;AAIA,SAAS,YAAT,QAA6B,iBAA7B;AACA,SAAS,oBAAT,QAA4B,wBAA5B;AAOA,SAAA,WAAA,QAAA,qBAAA;;IAAsC,aAAA,GAAA,aAAA,UAAU,MAAV,EAAU;AAM9C,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,EACY,MADZ;;AAAA,WAAA,aAAA,CAEE,QAFF,EAES,SAFT,EAIC;AAJkB,QAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,KAAuB,IAAvB;;AALZ,IAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AAQL,IAAA,KAAI,CAAC,aAAL,GAAiB,EAAjB;;AACD,WAAA,KAAA;AAGD;;AACE,EAAA,aAAM,CAAA,SAAN,CAAuC,UAAvC,GAAuC,UAAA,UAAA,EAAA;AACvC,QAAM,OAAK,GAAG,IAAd;AACA,QAAM,KAAA,GAAA,OAAe,CAAA,kBAAf,EAAN;AACA,QAAA,YAAgB,GAAC,IAAI,YAAJ,EAAjB;AACE,IAAA,YAAQ,CAAA,GAAR,CAAQ,IAAA,YAAA,CAAqB,YAAO;AAClC,MAAA,OAAA,CAAA,oBAAA,CAAA,KAAA;AACJ,KAFU,CAAR;AAGF,IAAA,YAAO,CAAA,GAAP,CAAO,MAAa,CAAA,SAAb,CAAa,UAAb,CAAa,IAAb,CAAa,IAAb,EAAa,UAAb,CAAP;AACD,WAAA,YAAA;AAED,GAVE;;AAWA,EAAA,aAAM,CAAA,SAAN,CAAqB,KAArB,GAAqB,YAAA;AACrB,QAAM,OAAA,GAAA,IAAN;AAEA,QAAA,cAAiB,GAAG,OAAA,CAAA,QAAA,CAAiB,MAArC;;AACE,SAAC,IAAA,CAAA,GAAA,CAAD,EAAC,CAAA,GAAA,cAAD,EAAC,CAAA,EAAD,EAAC;OACC,YAAI;AAEJ,YAAA,OAAQ,GAAA,OAAU,CAAA,QAAV,CACN,CADM,CAAR;AAIE,QAAA,OAAC,CAAA,SAAD,CAAC,QAAD,CAAC,YAAA;AAAA,UAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,OAAA;AAAA,SAAD,EAAC,OAAA,CAAA,KAAD;AACL,O;AACF;AACH,GAdI;;AAzBkC,SAAO,aAAP;CAAA,C,OAAA,C;;AAwCtC,SAAA,aAAA","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_SubscriptionLoggable,_util_applyMixins PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nvar HotObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(HotObservable, _super);\n    function HotObservable(messages, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.messages = messages;\n        _this.subscriptions = [];\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    HotObservable.prototype._subscribe = function (subscriber) {\n        var subject = this;\n        var index = subject.logSubscribedFrame();\n        var subscription = new Subscription();\n        subscription.add(new Subscription(function () {\n            subject.logUnsubscribedFrame(index);\n        }));\n        subscription.add(_super.prototype._subscribe.call(this, subscriber));\n        return subscription;\n    };\n    HotObservable.prototype.setup = function () {\n        var subject = this;\n        var messagesLength = subject.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            (function () {\n                var message = subject.messages[i];\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    };\n    return HotObservable;\n}(Subject));\nexport { HotObservable };\n/*@__PURE__*/ applyMixins(HotObservable, [SubscriptionLoggable]);\n//# sourceMappingURL=HotObservable.js.map\n"]},"metadata":{},"sourceType":"module"}