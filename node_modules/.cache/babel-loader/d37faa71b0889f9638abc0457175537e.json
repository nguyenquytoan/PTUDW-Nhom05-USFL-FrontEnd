{"ast":null,"code":"// Generated by CoffeeScript 1.9.3\nvar AnsiPainter, Layout, RenderKid, Styles, blockStyleApplier, inlineStyleApplier, object, stripAnsi, terminalWidth, tools;\ninlineStyleApplier = require('./renderKid/styleApplier/inline');\nblockStyleApplier = require('./renderKid/styleApplier/block');\nAnsiPainter = require('./AnsiPainter');\nStyles = require('./renderKid/Styles');\nLayout = require('./Layout');\ntools = require('./tools');\nobject = require('utila').object;\nstripAnsi = require('strip-ansi');\nterminalWidth = require('./tools').getCols();\n\nmodule.exports = RenderKid = function () {\n  var self;\n  self = RenderKid;\n  RenderKid.AnsiPainter = AnsiPainter;\n  RenderKid.Layout = Layout;\n  RenderKid.quote = tools.quote;\n  RenderKid.tools = tools;\n  RenderKid._defaultConfig = {\n    layout: {\n      terminalWidth: terminalWidth\n    }\n  };\n\n  function RenderKid(config) {\n    if (config == null) {\n      config = {};\n    }\n\n    this.tools = self.tools;\n    this._config = object.append(self._defaultConfig, config);\n\n    this._initStyles();\n  }\n\n  RenderKid.prototype._initStyles = function () {\n    return this._styles = new Styles();\n  };\n\n  RenderKid.prototype.style = function () {\n    return this._styles.setRule.apply(this._styles, arguments);\n  };\n\n  RenderKid.prototype._getStyleFor = function (el) {\n    return this._styles.getStyleFor(el);\n  };\n\n  RenderKid.prototype.render = function (input, withColors) {\n    if (withColors == null) {\n      withColors = true;\n    }\n\n    return this._paint(this._renderDom(this._toDom(input)), withColors);\n  };\n\n  RenderKid.prototype._toDom = function (input) {\n    if (typeof input === 'string') {\n      return this._parse(input);\n    } else if (object.isBareObject(input) || Array.isArray(input)) {\n      return this._objToDom(input);\n    } else {\n      throw Error(\"Invalid input type. Only strings, arrays and objects are accepted\");\n    }\n  };\n\n  RenderKid.prototype._objToDom = function (o, injectFakeRoot) {\n    if (injectFakeRoot == null) {\n      injectFakeRoot = true;\n    }\n\n    if (injectFakeRoot) {\n      o = {\n        body: o\n      };\n    }\n\n    return tools.objectToDom(o);\n  };\n\n  RenderKid.prototype._paint = function (text, withColors) {\n    var painted;\n    painted = AnsiPainter.paint(text);\n\n    if (withColors) {\n      return painted;\n    } else {\n      return stripAnsi(painted);\n    }\n  };\n\n  RenderKid.prototype._parse = function (string, injectFakeRoot) {\n    if (injectFakeRoot == null) {\n      injectFakeRoot = true;\n    }\n\n    if (injectFakeRoot) {\n      string = '<body>' + string + '</body>';\n    }\n\n    return tools.stringToDom(string);\n  };\n\n  RenderKid.prototype._renderDom = function (dom) {\n    var bodyTag, layout, rootBlock;\n    bodyTag = dom[0];\n    layout = new Layout(this._config.layout);\n    rootBlock = layout.getRootBlock();\n\n    this._renderBlockNode(bodyTag, null, rootBlock);\n\n    return layout.get();\n  };\n\n  RenderKid.prototype._renderChildrenOf = function (parentNode, parentBlock) {\n    var i, len, node, nodes;\n    nodes = parentNode.children;\n\n    for (i = 0, len = nodes.length; i < len; i++) {\n      node = nodes[i];\n\n      this._renderNode(node, parentNode, parentBlock);\n    }\n  };\n\n  RenderKid.prototype._renderNode = function (node, parentNode, parentBlock) {\n    if (node.type === 'text') {\n      this._renderText(node, parentNode, parentBlock);\n    } else if (node.name === 'br') {\n      this._renderBr(node, parentNode, parentBlock);\n    } else if (this._isBlock(node)) {\n      this._renderBlockNode(node, parentNode, parentBlock);\n    } else if (this._isNone(node)) {\n      return;\n    } else {\n      this._renderInlineNode(node, parentNode, parentBlock);\n    }\n  };\n\n  RenderKid.prototype._renderText = function (node, parentNode, parentBlock) {\n    var ref, text;\n    text = node.data;\n    text = text.replace(/\\s+/g, ' ');\n\n    if ((parentNode != null ? (ref = parentNode.styles) != null ? ref.display : void 0 : void 0) !== 'inline') {\n      text = text.trim();\n    }\n\n    if (text.length === 0) {\n      return;\n    }\n\n    text = text.replace(/&nl;/g, \"\\n\");\n    return parentBlock.write(text);\n  };\n\n  RenderKid.prototype._renderBlockNode = function (node, parentNode, parentBlock) {\n    var after, before, block, blockConfig, ref;\n    ref = blockStyleApplier.applyTo(node, this._getStyleFor(node)), before = ref.before, after = ref.after, blockConfig = ref.blockConfig;\n    block = parentBlock.openBlock(blockConfig);\n\n    if (before !== '') {\n      block.write(before);\n    }\n\n    this._renderChildrenOf(node, block);\n\n    if (after !== '') {\n      block.write(after);\n    }\n\n    return block.close();\n  };\n\n  RenderKid.prototype._renderInlineNode = function (node, parentNode, parentBlock) {\n    var after, before, ref;\n    ref = inlineStyleApplier.applyTo(node, this._getStyleFor(node)), before = ref.before, after = ref.after;\n\n    if (before !== '') {\n      parentBlock.write(before);\n    }\n\n    this._renderChildrenOf(node, parentBlock);\n\n    if (after !== '') {\n      return parentBlock.write(after);\n    }\n  };\n\n  RenderKid.prototype._renderBr = function (node, parentNode, parentBlock) {\n    return parentBlock.write(\"\\n\");\n  };\n\n  RenderKid.prototype._isBlock = function (node) {\n    return !(node.type === 'text' || node.name === 'br' || this._getStyleFor(node).display !== 'block');\n  };\n\n  RenderKid.prototype._isNone = function (node) {\n    return !(node.type === 'text' || node.name === 'br' || this._getStyleFor(node).display !== 'none');\n  };\n\n  return RenderKid;\n}();","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/renderkid/lib/RenderKid.js"],"names":["AnsiPainter","Layout","RenderKid","Styles","blockStyleApplier","inlineStyleApplier","object","stripAnsi","terminalWidth","tools","require","getCols","module","exports","self","quote","_defaultConfig","layout","config","_config","append","_initStyles","prototype","_styles","style","setRule","apply","arguments","_getStyleFor","el","getStyleFor","render","input","withColors","_paint","_renderDom","_toDom","_parse","isBareObject","Array","isArray","_objToDom","Error","o","injectFakeRoot","body","objectToDom","text","painted","paint","string","stringToDom","dom","bodyTag","rootBlock","getRootBlock","_renderBlockNode","get","_renderChildrenOf","parentNode","parentBlock","i","len","node","nodes","children","length","_renderNode","type","_renderText","name","_renderBr","_isBlock","_isNone","_renderInlineNode","ref","data","replace","styles","display","trim","write","after","before","block","blockConfig","applyTo","openBlock","close"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.9.3\nvar AnsiPainter, Layout, RenderKid, Styles, blockStyleApplier, inlineStyleApplier, object, stripAnsi, terminalWidth, tools;\n\ninlineStyleApplier = require('./renderKid/styleApplier/inline');\n\nblockStyleApplier = require('./renderKid/styleApplier/block');\n\nAnsiPainter = require('./AnsiPainter');\n\nStyles = require('./renderKid/Styles');\n\nLayout = require('./Layout');\n\ntools = require('./tools');\n\nobject = require('utila').object;\n\nstripAnsi = require('strip-ansi');\n\nterminalWidth = require('./tools').getCols();\n\nmodule.exports = RenderKid = (function() {\n  var self;\n\n  self = RenderKid;\n\n  RenderKid.AnsiPainter = AnsiPainter;\n\n  RenderKid.Layout = Layout;\n\n  RenderKid.quote = tools.quote;\n\n  RenderKid.tools = tools;\n\n  RenderKid._defaultConfig = {\n    layout: {\n      terminalWidth: terminalWidth\n    }\n  };\n\n  function RenderKid(config) {\n    if (config == null) {\n      config = {};\n    }\n    this.tools = self.tools;\n    this._config = object.append(self._defaultConfig, config);\n    this._initStyles();\n  }\n\n  RenderKid.prototype._initStyles = function() {\n    return this._styles = new Styles;\n  };\n\n  RenderKid.prototype.style = function() {\n    return this._styles.setRule.apply(this._styles, arguments);\n  };\n\n  RenderKid.prototype._getStyleFor = function(el) {\n    return this._styles.getStyleFor(el);\n  };\n\n  RenderKid.prototype.render = function(input, withColors) {\n    if (withColors == null) {\n      withColors = true;\n    }\n    return this._paint(this._renderDom(this._toDom(input)), withColors);\n  };\n\n  RenderKid.prototype._toDom = function(input) {\n    if (typeof input === 'string') {\n      return this._parse(input);\n    } else if (object.isBareObject(input) || Array.isArray(input)) {\n      return this._objToDom(input);\n    } else {\n      throw Error(\"Invalid input type. Only strings, arrays and objects are accepted\");\n    }\n  };\n\n  RenderKid.prototype._objToDom = function(o, injectFakeRoot) {\n    if (injectFakeRoot == null) {\n      injectFakeRoot = true;\n    }\n    if (injectFakeRoot) {\n      o = {\n        body: o\n      };\n    }\n    return tools.objectToDom(o);\n  };\n\n  RenderKid.prototype._paint = function(text, withColors) {\n    var painted;\n    painted = AnsiPainter.paint(text);\n    if (withColors) {\n      return painted;\n    } else {\n      return stripAnsi(painted);\n    }\n  };\n\n  RenderKid.prototype._parse = function(string, injectFakeRoot) {\n    if (injectFakeRoot == null) {\n      injectFakeRoot = true;\n    }\n    if (injectFakeRoot) {\n      string = '<body>' + string + '</body>';\n    }\n    return tools.stringToDom(string);\n  };\n\n  RenderKid.prototype._renderDom = function(dom) {\n    var bodyTag, layout, rootBlock;\n    bodyTag = dom[0];\n    layout = new Layout(this._config.layout);\n    rootBlock = layout.getRootBlock();\n    this._renderBlockNode(bodyTag, null, rootBlock);\n    return layout.get();\n  };\n\n  RenderKid.prototype._renderChildrenOf = function(parentNode, parentBlock) {\n    var i, len, node, nodes;\n    nodes = parentNode.children;\n    for (i = 0, len = nodes.length; i < len; i++) {\n      node = nodes[i];\n      this._renderNode(node, parentNode, parentBlock);\n    }\n  };\n\n  RenderKid.prototype._renderNode = function(node, parentNode, parentBlock) {\n    if (node.type === 'text') {\n      this._renderText(node, parentNode, parentBlock);\n    } else if (node.name === 'br') {\n      this._renderBr(node, parentNode, parentBlock);\n    } else if (this._isBlock(node)) {\n      this._renderBlockNode(node, parentNode, parentBlock);\n    } else if (this._isNone(node)) {\n      return;\n    } else {\n      this._renderInlineNode(node, parentNode, parentBlock);\n    }\n  };\n\n  RenderKid.prototype._renderText = function(node, parentNode, parentBlock) {\n    var ref, text;\n    text = node.data;\n    text = text.replace(/\\s+/g, ' ');\n    if ((parentNode != null ? (ref = parentNode.styles) != null ? ref.display : void 0 : void 0) !== 'inline') {\n      text = text.trim();\n    }\n    if (text.length === 0) {\n      return;\n    }\n    text = text.replace(/&nl;/g, \"\\n\");\n    return parentBlock.write(text);\n  };\n\n  RenderKid.prototype._renderBlockNode = function(node, parentNode, parentBlock) {\n    var after, before, block, blockConfig, ref;\n    ref = blockStyleApplier.applyTo(node, this._getStyleFor(node)), before = ref.before, after = ref.after, blockConfig = ref.blockConfig;\n    block = parentBlock.openBlock(blockConfig);\n    if (before !== '') {\n      block.write(before);\n    }\n    this._renderChildrenOf(node, block);\n    if (after !== '') {\n      block.write(after);\n    }\n    return block.close();\n  };\n\n  RenderKid.prototype._renderInlineNode = function(node, parentNode, parentBlock) {\n    var after, before, ref;\n    ref = inlineStyleApplier.applyTo(node, this._getStyleFor(node)), before = ref.before, after = ref.after;\n    if (before !== '') {\n      parentBlock.write(before);\n    }\n    this._renderChildrenOf(node, parentBlock);\n    if (after !== '') {\n      return parentBlock.write(after);\n    }\n  };\n\n  RenderKid.prototype._renderBr = function(node, parentNode, parentBlock) {\n    return parentBlock.write(\"\\n\");\n  };\n\n  RenderKid.prototype._isBlock = function(node) {\n    return !(node.type === 'text' || node.name === 'br' || this._getStyleFor(node).display !== 'block');\n  };\n\n  RenderKid.prototype._isNone = function(node) {\n    return !(node.type === 'text' || node.name === 'br' || this._getStyleFor(node).display !== 'none');\n  };\n\n  return RenderKid;\n\n})();\n"]},"metadata":{},"sourceType":"script"}