{"ast":null,"code":"// Generated by CoffeeScript 1.9.3\nvar Rule, StyleSheet;\nRule = require('./Rule');\n\nmodule.exports = StyleSheet = function () {\n  var self;\n  self = StyleSheet;\n\n  function StyleSheet() {\n    this._rulesBySelector = {};\n  }\n\n  StyleSheet.prototype.setRule = function (selector, styles) {\n    var key, val;\n\n    if (typeof selector === 'string') {\n      this._setRule(selector, styles);\n    } else if (typeof selector === 'object') {\n      for (key in selector) {\n        val = selector[key];\n\n        this._setRule(key, val);\n      }\n    }\n\n    return this;\n  };\n\n  StyleSheet.prototype._setRule = function (s, styles) {\n    var i, len, ref, selector;\n    ref = self.splitSelectors(s);\n\n    for (i = 0, len = ref.length; i < len; i++) {\n      selector = ref[i];\n\n      this._setSingleRule(selector, styles);\n    }\n\n    return this;\n  };\n\n  StyleSheet.prototype._setSingleRule = function (s, styles) {\n    var rule, selector;\n    selector = self.normalizeSelector(s);\n\n    if (!(rule = this._rulesBySelector[selector])) {\n      rule = new Rule(selector);\n      this._rulesBySelector[selector] = rule;\n    }\n\n    rule.setStyles(styles);\n    return this;\n  };\n\n  StyleSheet.prototype.getRulesFor = function (el) {\n    var ref, rule, rules, selector;\n    rules = [];\n    ref = this._rulesBySelector;\n\n    for (selector in ref) {\n      rule = ref[selector];\n\n      if (rule.selector.matches(el)) {\n        rules.push(rule);\n      }\n    }\n\n    return rules;\n  };\n\n  StyleSheet.normalizeSelector = function (selector) {\n    return selector.replace(/[\\s]+/g, ' ').replace(/[\\s]*([>\\,\\+]{1})[\\s]*/g, '$1').trim();\n  };\n\n  StyleSheet.splitSelectors = function (s) {\n    return s.trim().split(',');\n  };\n\n  return StyleSheet;\n}();","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/renderkid/lib/renderKid/styles/StyleSheet.js"],"names":["Rule","StyleSheet","require","module","exports","self","_rulesBySelector","prototype","setRule","selector","styles","key","val","_setRule","s","i","len","ref","splitSelectors","length","_setSingleRule","rule","normalizeSelector","setStyles","getRulesFor","el","rules","matches","push","replace","trim","split"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.9.3\nvar Rule, StyleSheet;\n\nRule = require('./Rule');\n\nmodule.exports = StyleSheet = (function() {\n  var self;\n\n  self = StyleSheet;\n\n  function StyleSheet() {\n    this._rulesBySelector = {};\n  }\n\n  StyleSheet.prototype.setRule = function(selector, styles) {\n    var key, val;\n    if (typeof selector === 'string') {\n      this._setRule(selector, styles);\n    } else if (typeof selector === 'object') {\n      for (key in selector) {\n        val = selector[key];\n        this._setRule(key, val);\n      }\n    }\n    return this;\n  };\n\n  StyleSheet.prototype._setRule = function(s, styles) {\n    var i, len, ref, selector;\n    ref = self.splitSelectors(s);\n    for (i = 0, len = ref.length; i < len; i++) {\n      selector = ref[i];\n      this._setSingleRule(selector, styles);\n    }\n    return this;\n  };\n\n  StyleSheet.prototype._setSingleRule = function(s, styles) {\n    var rule, selector;\n    selector = self.normalizeSelector(s);\n    if (!(rule = this._rulesBySelector[selector])) {\n      rule = new Rule(selector);\n      this._rulesBySelector[selector] = rule;\n    }\n    rule.setStyles(styles);\n    return this;\n  };\n\n  StyleSheet.prototype.getRulesFor = function(el) {\n    var ref, rule, rules, selector;\n    rules = [];\n    ref = this._rulesBySelector;\n    for (selector in ref) {\n      rule = ref[selector];\n      if (rule.selector.matches(el)) {\n        rules.push(rule);\n      }\n    }\n    return rules;\n  };\n\n  StyleSheet.normalizeSelector = function(selector) {\n    return selector.replace(/[\\s]+/g, ' ').replace(/[\\s]*([>\\,\\+]{1})[\\s]*/g, '$1').trim();\n  };\n\n  StyleSheet.splitSelectors = function(s) {\n    return s.trim().split(',');\n  };\n\n  return StyleSheet;\n\n})();\n"]},"metadata":{},"sourceType":"script"}