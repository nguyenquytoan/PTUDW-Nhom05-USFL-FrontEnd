{"ast":null,"code":"\"use strict\";\n\nvar assert = require(\"chai\").assert,\n    ensurePlainObject = require(\"../../plain-object/ensure\");\n\ndescribe(\"plain-object/ensure\", function () {\n  it(\"Should return input value\", function () {\n    var value = {};\n    assert.equal(ensurePlainObject(value), value);\n  });\n  it(\"Should crash on invalid value\", function () {\n    try {\n      ensurePlainObject(null);\n      throw new Error(\"Unexpected\");\n    } catch (error) {\n      assert.equal(error.name, \"TypeError\");\n      assert(error.message.includes(\"is not a plain object\"));\n    }\n  });\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/type/test/plain-object/ensure.js"],"names":["assert","require","ensurePlainObject","describe","it","value","equal","Error","error","name","message","includes"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAcC,OAAO,CAAC,MAAD,CAAP,CAAgBD,MAAxC;AAAA,IACIE,iBAAiB,GAAGD,OAAO,CAAC,2BAAD,CAD/B;;AAGAE,QAAQ,CAAC,qBAAD,EAAwB,YAAY;AAC3CC,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAY;AAC3C,QAAIC,KAAK,GAAG,EAAZ;AACAL,IAAAA,MAAM,CAACM,KAAP,CAAaJ,iBAAiB,CAACG,KAAD,CAA9B,EAAuCA,KAAvC;AACA,GAHC,CAAF;AAIAD,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAY;AAC/C,QAAI;AACHF,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,YAAM,IAAIK,KAAJ,CAAU,YAAV,CAAN;AACA,KAHD,CAGE,OAAOC,KAAP,EAAc;AACfR,MAAAA,MAAM,CAACM,KAAP,CAAaE,KAAK,CAACC,IAAnB,EAAyB,WAAzB;AACAT,MAAAA,MAAM,CAACQ,KAAK,CAACE,OAAN,CAAcC,QAAd,CAAuB,uBAAvB,CAAD,CAAN;AACA;AACD,GARC,CAAF;AASA,CAdO,CAAR","sourcesContent":["\"use strict\";\n\nvar assert            = require(\"chai\").assert\n  , ensurePlainObject = require(\"../../plain-object/ensure\");\n\ndescribe(\"plain-object/ensure\", function () {\n\tit(\"Should return input value\", function () {\n\t\tvar value = {};\n\t\tassert.equal(ensurePlainObject(value), value);\n\t});\n\tit(\"Should crash on invalid value\", function () {\n\t\ttry {\n\t\t\tensurePlainObject(null);\n\t\t\tthrow new Error(\"Unexpected\");\n\t\t} catch (error) {\n\t\t\tassert.equal(error.name, \"TypeError\");\n\t\t\tassert(error.message.includes(\"is not a plain object\"));\n\t\t}\n\t});\n});\n"]},"metadata":{},"sourceType":"script"}