{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = colorMerge;\n\nvar _getDecls = require('./getDecls');\n\nvar _getDecls2 = _interopRequireDefault(_getDecls);\n\nvar _hasAllProps = require('./hasAllProps');\n\nvar _hasAllProps2 = _interopRequireDefault(_hasAllProps);\n\nvar _insertCloned = require('./insertCloned');\n\nvar _insertCloned2 = _interopRequireDefault(_insertCloned);\n\nvar _remove = require('./remove');\n\nvar _remove2 = _interopRequireDefault(_remove);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getAllRules(props, properties) {\n  return properties.reduce((list, property) => {\n    props.filter(n => n.prop && ~n.prop.indexOf(property)).forEach((result, index) => {\n      if (!list[index]) {\n        list.push([]);\n      }\n\n      list[index].push(result);\n    });\n    return list;\n  }, [[]]);\n}\n\nfunction colorMerge({\n  rule,\n  properties,\n  prop,\n  value\n}) {\n  let decls = (0, _getDecls2.default)(rule, properties);\n\n  while (decls.length) {\n    const lastNode = decls[decls.length - 1];\n    const props = decls.filter(node => node.important === lastNode.important);\n\n    if ((0, _hasAllProps2.default)(props, ...properties)) {\n      getAllRules(props, properties).reverse().forEach(group => {\n        (0, _insertCloned2.default)(rule, lastNode, {\n          prop,\n          value: value(group)\n        });\n      });\n      props.forEach(_remove2.default);\n    }\n\n    decls = decls.filter(node => !~props.indexOf(node));\n  }\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/postcss-merge-longhand/dist/lib/colorMerge.js"],"names":["Object","defineProperty","exports","value","default","colorMerge","_getDecls","require","_getDecls2","_interopRequireDefault","_hasAllProps","_hasAllProps2","_insertCloned","_insertCloned2","_remove","_remove2","obj","__esModule","getAllRules","props","properties","reduce","list","property","filter","n","prop","indexOf","forEach","result","index","push","rule","decls","length","lastNode","node","important","reverse","group","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = colorMerge;\n\nvar _getDecls = require('./getDecls');\n\nvar _getDecls2 = _interopRequireDefault(_getDecls);\n\nvar _hasAllProps = require('./hasAllProps');\n\nvar _hasAllProps2 = _interopRequireDefault(_hasAllProps);\n\nvar _insertCloned = require('./insertCloned');\n\nvar _insertCloned2 = _interopRequireDefault(_insertCloned);\n\nvar _remove = require('./remove');\n\nvar _remove2 = _interopRequireDefault(_remove);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getAllRules(props, properties) {\n    return properties.reduce((list, property) => {\n        props.filter(n => n.prop && ~n.prop.indexOf(property)).forEach((result, index) => {\n            if (!list[index]) {\n                list.push([]);\n            }\n            list[index].push(result);\n        });\n        return list;\n    }, [[]]);\n}\n\nfunction colorMerge({ rule, properties, prop, value }) {\n    let decls = (0, _getDecls2.default)(rule, properties);\n\n    while (decls.length) {\n        const lastNode = decls[decls.length - 1];\n        const props = decls.filter(node => node.important === lastNode.important);\n        if ((0, _hasAllProps2.default)(props, ...properties)) {\n            getAllRules(props, properties).reverse().forEach(group => {\n                (0, _insertCloned2.default)(rule, lastNode, {\n                    prop,\n                    value: value(group)\n                });\n            });\n            props.forEach(_remove2.default);\n        }\n        decls = decls.filter(node => !~props.indexOf(node));\n    }\n}\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}