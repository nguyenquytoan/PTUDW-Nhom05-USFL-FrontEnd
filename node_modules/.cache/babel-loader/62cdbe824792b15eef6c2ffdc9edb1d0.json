{"ast":null,"code":"'use strict';\n\nvar isObject = require('is-extendable');\n\nvar forIn = require('for-in');\n\nfunction mixin(target, objects) {\n  if (!isObject(target)) {\n    throw new TypeError('mixin-object expects the first argument to be an object.');\n  }\n\n  var len = arguments.length,\n      i = 0;\n\n  while (++i < len) {\n    var obj = arguments[i];\n\n    if (isObject(obj)) {\n      forIn(obj, copy, target);\n    }\n  }\n\n  return target;\n}\n/**\n * copy properties from the source object to the\n * target object.\n *\n * @param  {*} `value`\n * @param  {String} `key`\n */\n\n\nfunction copy(value, key) {\n  this[key] = value;\n}\n/**\n * Expose `mixin`\n */\n\n\nmodule.exports = mixin;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/mixin-object/index.js"],"names":["isObject","require","forIn","mixin","target","objects","TypeError","len","arguments","length","i","obj","copy","value","key","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEA,SAASE,KAAT,CAAeC,MAAf,EAAuBC,OAAvB,EAAgC;AAC9B,MAAI,CAACL,QAAQ,CAACI,MAAD,CAAb,EAAuB;AACrB,UAAM,IAAIE,SAAJ,CAAc,0DAAd,CAAN;AACD;;AACD,MAAIC,GAAG,GAAGC,SAAS,CAACC,MAApB;AAAA,MAA4BC,CAAC,GAAG,CAAhC;;AACA,SAAO,EAAEA,CAAF,GAAMH,GAAb,EAAkB;AAChB,QAAII,GAAG,GAAGH,SAAS,CAACE,CAAD,CAAnB;;AACA,QAAIV,QAAQ,CAACW,GAAD,CAAZ,EAAmB;AACjBT,MAAAA,KAAK,CAACS,GAAD,EAAMC,IAAN,EAAYR,MAAZ,CAAL;AACD;AACF;;AACD,SAAOA,MAAP;AACD;AAED;;;;;;;;;AAQA,SAASQ,IAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0B;AACxB,OAAKA,GAAL,IAAYD,KAAZ;AACD;AAED;;;;;AAIAE,MAAM,CAACC,OAAP,GAAiBb,KAAjB","sourcesContent":["'use strict';\n\nvar isObject = require('is-extendable');\nvar forIn = require('for-in');\n\nfunction mixin(target, objects) {\n  if (!isObject(target)) {\n    throw new TypeError('mixin-object expects the first argument to be an object.');\n  }\n  var len = arguments.length, i = 0;\n  while (++i < len) {\n    var obj = arguments[i];\n    if (isObject(obj)) {\n      forIn(obj, copy, target);\n    }\n  }\n  return target;\n}\n\n/**\n * copy properties from the source object to the\n * target object.\n *\n * @param  {*} `value`\n * @param  {String} `key`\n */\n\nfunction copy(value, key) {\n  this[key] = value;\n}\n\n/**\n * Expose `mixin`\n */\n\nmodule.exports = mixin;"]},"metadata":{},"sourceType":"script"}