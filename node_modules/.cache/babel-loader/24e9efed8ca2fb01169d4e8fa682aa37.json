{"ast":null,"code":"/**\n * @fileoverview Rule to flag use of an object property of the global object (Math and JSON) as a function\n * @author James Allardice\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst {\n  CALL,\n  ReferenceTracker\n} = require(\"eslint-utils\"); //------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n\nconst nonCallableGlobals = [\"Atomics\", \"JSON\", \"Math\", \"Reflect\"]; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"disallow calling global object properties as functions\",\n      category: \"Possible Errors\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-obj-calls\"\n    },\n    schema: [],\n    messages: {\n      unexpectedCall: \"'{{name}}' is not a function.\"\n    }\n  },\n\n  create(context) {\n    return {\n      Program() {\n        const scope = context.getScope();\n        const tracker = new ReferenceTracker(scope);\n        const traceMap = {};\n\n        for (const global of nonCallableGlobals) {\n          traceMap[global] = {\n            [CALL]: true\n          };\n        }\n\n        for (const {\n          node\n        } of tracker.iterateGlobalReferences(traceMap)) {\n          context.report({\n            node,\n            messageId: \"unexpectedCall\",\n            data: {\n              name: node.callee.name\n            }\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/lib/rules/no-obj-calls.js"],"names":["CALL","ReferenceTracker","require","nonCallableGlobals","module","exports","meta","type","docs","description","category","recommended","url","schema","messages","unexpectedCall","create","context","Program","scope","getScope","tracker","traceMap","global","node","iterateGlobalReferences","report","messageId","data","name","callee"],"mappings":"AAAA;;;;AAKA,a,CAEA;AACA;AACA;;AAEA,MAAM;AAAEA,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAA6BC,OAAO,CAAC,cAAD,CAA1C,C,CAEA;AACA;AACA;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,MAApB,EAA4B,SAA5B,CAA3B,C,CAEA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,SADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,wDADX;AAEFC,MAAAA,QAAQ,EAAE,iBAFR;AAGFC,MAAAA,WAAW,EAAE,IAHX;AAIFC,MAAAA,GAAG,EAAE;AAJH,KAHJ;AAUFC,IAAAA,MAAM,EAAE,EAVN;AAYFC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,cAAc,EAAE;AADV;AAZR,GADO;;AAkBbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AAEZ,WAAO;AACHC,MAAAA,OAAO,GAAG;AACN,cAAMC,KAAK,GAAGF,OAAO,CAACG,QAAR,EAAd;AACA,cAAMC,OAAO,GAAG,IAAIpB,gBAAJ,CAAqBkB,KAArB,CAAhB;AACA,cAAMG,QAAQ,GAAG,EAAjB;;AAEA,aAAK,MAAMC,MAAX,IAAqBpB,kBAArB,EAAyC;AACrCmB,UAAAA,QAAQ,CAACC,MAAD,CAAR,GAAmB;AACf,aAACvB,IAAD,GAAQ;AADO,WAAnB;AAGH;;AAED,aAAK,MAAM;AAAEwB,UAAAA;AAAF,SAAX,IAAuBH,OAAO,CAACI,uBAAR,CAAgCH,QAAhC,CAAvB,EAAkE;AAC9DL,UAAAA,OAAO,CAACS,MAAR,CAAe;AAAEF,YAAAA,IAAF;AAAQG,YAAAA,SAAS,EAAE,gBAAnB;AAAqCC,YAAAA,IAAI,EAAE;AAAEC,cAAAA,IAAI,EAAEL,IAAI,CAACM,MAAL,CAAYD;AAApB;AAA3C,WAAf;AACH;AACJ;;AAfE,KAAP;AAiBH;;AArCY,CAAjB","sourcesContent":["/**\n * @fileoverview Rule to flag use of an object property of the global object (Math and JSON) as a function\n * @author James Allardice\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst { CALL, ReferenceTracker } = require(\"eslint-utils\");\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\nconst nonCallableGlobals = [\"Atomics\", \"JSON\", \"Math\", \"Reflect\"];\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"problem\",\n\n        docs: {\n            description: \"disallow calling global object properties as functions\",\n            category: \"Possible Errors\",\n            recommended: true,\n            url: \"https://eslint.org/docs/rules/no-obj-calls\"\n        },\n\n        schema: [],\n\n        messages: {\n            unexpectedCall: \"'{{name}}' is not a function.\"\n        }\n    },\n\n    create(context) {\n\n        return {\n            Program() {\n                const scope = context.getScope();\n                const tracker = new ReferenceTracker(scope);\n                const traceMap = {};\n\n                for (const global of nonCallableGlobals) {\n                    traceMap[global] = {\n                        [CALL]: true\n                    };\n                }\n\n                for (const { node } of tracker.iterateGlobalReferences(traceMap)) {\n                    context.report({ node, messageId: \"unexpectedCall\", data: { name: node.callee.name } });\n                }\n            }\n        };\n    }\n};\n"]},"metadata":{},"sourceType":"script"}