{"ast":null,"code":"\"use strict\";\n\nvar isToStringTagSupported = require(\"../lib/is-to-string-tag-supported\"),\n    isPrototype = require(\"../prototype/is\");\n\nvar regExpTest = RegExp.prototype.test,\n    objectToString = Object.prototype.toString,\n    objectTaggedString = objectToString.call(/a/);\n\nmodule.exports = function (value) {\n  if (!value) return false; // Sanity check (reject objects which do not expose common RegExp interface)\n\n  if (!hasOwnProperty.call(value, \"lastIndex\")) return false;\n\n  try {\n    if (typeof value.lastIndex !== \"number\") return false;\n    if (typeof value.test !== \"function\") return false;\n    if (typeof value.exec !== \"function\") return false;\n  } catch (error) {\n    return false;\n  } // Ensure its native RegExp object (has [[RegExpMatcher]] slot)\n\n\n  if (isToStringTagSupported && typeof value[Symbol.toStringTag] === \"string\") {\n    // Edge case (possibly a regExp with custom Symbol.toStringTag)\n    try {\n      var lastIndex = value.lastIndex;\n      regExpTest.call(value, \"\");\n      if (value.lastIndex !== lastIndex) value.lastIndex = lastIndex;\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  if (objectToString.call(value) !== objectTaggedString) return false;\n  return !isPrototype(value);\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/type/reg-exp/is.js"],"names":["isToStringTagSupported","require","isPrototype","regExpTest","RegExp","prototype","test","objectToString","Object","toString","objectTaggedString","call","module","exports","value","hasOwnProperty","lastIndex","exec","error","Symbol","toStringTag"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,mCAAD,CAApC;AAAA,IACIC,WAAW,GAAcD,OAAO,CAAC,iBAAD,CADpC;;AAGA,IAAIE,UAAU,GAAGC,MAAM,CAACC,SAAP,CAAiBC,IAAlC;AAAA,IACIC,cAAc,GAAGC,MAAM,CAACH,SAAP,CAAiBI,QADtC;AAAA,IAEIC,kBAAkB,GAAGH,cAAc,CAACI,IAAf,CAAoB,GAApB,CAFzB;;AAIAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AACjC,MAAI,CAACA,KAAL,EAAY,OAAO,KAAP,CADqB,CAGjC;;AACA,MAAI,CAACC,cAAc,CAACJ,IAAf,CAAoBG,KAApB,EAA2B,WAA3B,CAAL,EAA8C,OAAO,KAAP;;AAC9C,MAAI;AACH,QAAI,OAAOA,KAAK,CAACE,SAAb,KAA2B,QAA/B,EAAyC,OAAO,KAAP;AACzC,QAAI,OAAOF,KAAK,CAACR,IAAb,KAAsB,UAA1B,EAAsC,OAAO,KAAP;AACtC,QAAI,OAAOQ,KAAK,CAACG,IAAb,KAAsB,UAA1B,EAAsC,OAAO,KAAP;AACtC,GAJD,CAIE,OAAOC,KAAP,EAAc;AACf,WAAO,KAAP;AACA,GAXgC,CAajC;;;AACA,MAAIlB,sBAAsB,IAAI,OAAOc,KAAK,CAACK,MAAM,CAACC,WAAR,CAAZ,KAAqC,QAAnE,EAA6E;AAC5E;AACA,QAAI;AACH,UAAIJ,SAAS,GAAGF,KAAK,CAACE,SAAtB;AACAb,MAAAA,UAAU,CAACQ,IAAX,CAAgBG,KAAhB,EAAuB,EAAvB;AACA,UAAIA,KAAK,CAACE,SAAN,KAAoBA,SAAxB,EAAmCF,KAAK,CAACE,SAAN,GAAkBA,SAAlB;AACnC,aAAO,IAAP;AACA,KALD,CAKE,OAAOE,KAAP,EAAc;AACf,aAAO,KAAP;AACA;AACD;;AACD,MAAIX,cAAc,CAACI,IAAf,CAAoBG,KAApB,MAA+BJ,kBAAnC,EAAuD,OAAO,KAAP;AACvD,SAAO,CAACR,WAAW,CAACY,KAAD,CAAnB;AACA,CA3BD","sourcesContent":["\"use strict\";\n\nvar isToStringTagSupported = require(\"../lib/is-to-string-tag-supported\")\n  , isPrototype            = require(\"../prototype/is\");\n\nvar regExpTest = RegExp.prototype.test\n  , objectToString = Object.prototype.toString\n  , objectTaggedString = objectToString.call(/a/);\n\nmodule.exports = function (value) {\n\tif (!value) return false;\n\n\t// Sanity check (reject objects which do not expose common RegExp interface)\n\tif (!hasOwnProperty.call(value, \"lastIndex\")) return false;\n\ttry {\n\t\tif (typeof value.lastIndex !== \"number\") return false;\n\t\tif (typeof value.test !== \"function\") return false;\n\t\tif (typeof value.exec !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\t// Ensure its native RegExp object (has [[RegExpMatcher]] slot)\n\tif (isToStringTagSupported && typeof value[Symbol.toStringTag] === \"string\") {\n\t\t// Edge case (possibly a regExp with custom Symbol.toStringTag)\n\t\ttry {\n\t\t\tvar lastIndex = value.lastIndex;\n\t\t\tregExpTest.call(value, \"\");\n\t\t\tif (value.lastIndex !== lastIndex) value.lastIndex = lastIndex;\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (objectToString.call(value) !== objectTaggedString) return false;\n\treturn !isPrototype(value);\n};\n"]},"metadata":{},"sourceType":"script"}