{"ast":null,"code":"'use strict';\n\nvar crypto = require('crypto');\n/**\n * Exported function\n *\n * Options:\n *\n *  - `algorithm` hash algo to be used by this instance: *'sha1', 'md5'\n *  - `excludeValues` {true|*false} hash object keys, values ignored\n *  - `encoding` hash encoding, supports 'buffer', '*hex', 'binary', 'base64'\n *  - `ignoreUnknown` {true|*false} ignore unknown object types\n *  - `replacer` optional function that replaces values before hashing\n *  - `respectFunctionProperties` {*true|false} consider function properties when hashing\n *  - `respectFunctionNames` {*true|false} consider 'name' property of functions for hashing\n *  - `respectType` {*true|false} Respect special properties (prototype, constructor)\n *    when hashing to distinguish between types\n *  - `unorderedArrays` {true|*false} Sort all arrays before hashing\n *  - `unorderedSets` {*true|false} Sort `Set` and `Map` instances before hashing\n *  * = default\n *\n * @param {object} object value to hash\n * @param {object} options hashing options\n * @return {string} hash value\n * @api public\n */\n\n\nexports = module.exports = objectHash;\n\nfunction objectHash(object, options) {\n  options = applyDefaults(object, options);\n  return hash(object, options);\n}\n/**\n * Exported sugar methods\n *\n * @param {object} object value to hash\n * @return {string} hash value\n * @api public\n */\n\n\nexports.sha1 = function (object) {\n  return objectHash(object);\n};\n\nexports.keys = function (object) {\n  return objectHash(object, {\n    excludeValues: true,\n    algorithm: 'sha1',\n    encoding: 'hex'\n  });\n};\n\nexports.MD5 = function (object) {\n  return objectHash(object, {\n    algorithm: 'md5',\n    encoding: 'hex'\n  });\n};\n\nexports.keysMD5 = function (object) {\n  return objectHash(object, {\n    algorithm: 'md5',\n    encoding: 'hex',\n    excludeValues: true\n  });\n}; // Internals\n\n\nvar hashes = crypto.getHashes ? crypto.getHashes().slice() : ['sha1', 'md5'];\nhashes.push('passthrough');\nvar encodings = ['buffer', 'hex', 'binary', 'base64'];\n\nfunction applyDefaults(object, sourceOptions) {\n  sourceOptions = sourceOptions || {}; // create a copy rather than mutating\n\n  var options = {};\n  options.algorithm = sourceOptions.algorithm || 'sha1';\n  options.encoding = sourceOptions.encoding || 'hex';\n  options.excludeValues = sourceOptions.excludeValues ? true : false;\n  options.algorithm = options.algorithm.toLowerCase();\n  options.encoding = options.encoding.toLowerCase();\n  options.ignoreUnknown = sourceOptions.ignoreUnknown !== true ? false : true; // default to false\n\n  options.respectType = sourceOptions.respectType === false ? false : true; // default to true\n\n  options.respectFunctionNames = sourceOptions.respectFunctionNames === false ? false : true;\n  options.respectFunctionProperties = sourceOptions.respectFunctionProperties === false ? false : true;\n  options.unorderedArrays = sourceOptions.unorderedArrays !== true ? false : true; // default to false\n\n  options.unorderedSets = sourceOptions.unorderedSets === false ? false : true; // default to false\n\n  options.unorderedObjects = sourceOptions.unorderedObjects === false ? false : true; // default to true\n\n  options.replacer = sourceOptions.replacer || undefined;\n  options.excludeKeys = sourceOptions.excludeKeys || undefined;\n\n  if (typeof object === 'undefined') {\n    throw new Error('Object argument required.');\n  } // if there is a case-insensitive match in the hashes list, accept it\n  // (i.e. SHA256 for sha256)\n\n\n  for (var i = 0; i < hashes.length; ++i) {\n    if (hashes[i].toLowerCase() === options.algorithm.toLowerCase()) {\n      options.algorithm = hashes[i];\n    }\n  }\n\n  if (hashes.indexOf(options.algorithm) === -1) {\n    throw new Error('Algorithm \"' + options.algorithm + '\"  not supported. ' + 'supported values: ' + hashes.join(', '));\n  }\n\n  if (encodings.indexOf(options.encoding) === -1 && options.algorithm !== 'passthrough') {\n    throw new Error('Encoding \"' + options.encoding + '\"  not supported. ' + 'supported values: ' + encodings.join(', '));\n  }\n\n  return options;\n}\n/** Check if the given function is a native function */\n\n\nfunction isNativeFunction(f) {\n  if (typeof f !== 'function') {\n    return false;\n  }\n\n  var exp = /^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i;\n  return exp.exec(Function.prototype.toString.call(f)) != null;\n}\n\nfunction hash(object, options) {\n  var hashingStream;\n\n  if (options.algorithm !== 'passthrough') {\n    hashingStream = crypto.createHash(options.algorithm);\n  } else {\n    hashingStream = new PassThrough();\n  }\n\n  if (typeof hashingStream.write === 'undefined') {\n    hashingStream.write = hashingStream.update;\n    hashingStream.end = hashingStream.update;\n  }\n\n  var hasher = typeHasher(options, hashingStream);\n  hasher.dispatch(object);\n\n  if (!hashingStream.update) {\n    hashingStream.end('');\n  }\n\n  if (hashingStream.digest) {\n    return hashingStream.digest(options.encoding === 'buffer' ? undefined : options.encoding);\n  }\n\n  var buf = hashingStream.read();\n\n  if (options.encoding === 'buffer') {\n    return buf;\n  }\n\n  return buf.toString(options.encoding);\n}\n/**\n * Expose streaming API\n *\n * @param {object} object  Value to serialize\n * @param {object} options  Options, as for hash()\n * @param {object} stream  A stream to write the serializiation to\n * @api public\n */\n\n\nexports.writeToStream = function (object, options, stream) {\n  if (typeof stream === 'undefined') {\n    stream = options;\n    options = {};\n  }\n\n  options = applyDefaults(object, options);\n  return typeHasher(options, stream).dispatch(object);\n};\n\nfunction typeHasher(options, writeTo, context) {\n  context = context || [];\n\n  var write = function (str) {\n    if (writeTo.update) {\n      return writeTo.update(str, 'utf8');\n    } else {\n      return writeTo.write(str, 'utf8');\n    }\n  };\n\n  return {\n    dispatch: function (value) {\n      if (options.replacer) {\n        value = options.replacer(value);\n      }\n\n      var type = typeof value;\n\n      if (value === null) {\n        type = 'null';\n      } //console.log(\"[DEBUG] Dispatch: \", value, \"->\", type, \" -> \", \"_\" + type);\n\n\n      return this['_' + type](value);\n    },\n    _object: function (object) {\n      var pattern = /\\[object (.*)\\]/i;\n      var objString = Object.prototype.toString.call(object);\n      var objType = pattern.exec(objString);\n\n      if (!objType) {\n        // object type did not match [object ...]\n        objType = 'unknown:[' + objString + ']';\n      } else {\n        objType = objType[1]; // take only the class name\n      }\n\n      objType = objType.toLowerCase();\n      var objectNumber = null;\n\n      if ((objectNumber = context.indexOf(object)) >= 0) {\n        return this.dispatch('[CIRCULAR:' + objectNumber + ']');\n      } else {\n        context.push(object);\n      }\n\n      if (typeof Buffer !== 'undefined' && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write('buffer:');\n        return write(object);\n      }\n\n      if (objType !== 'object' && objType !== 'function' && objType !== 'asyncfunction') {\n        if (this['_' + objType]) {\n          this['_' + objType](object);\n        } else if (options.ignoreUnknown) {\n          return write('[' + objType + ']');\n        } else {\n          throw new Error('Unknown object type \"' + objType + '\"');\n        }\n      } else {\n        var keys = Object.keys(object);\n\n        if (options.unorderedObjects) {\n          keys = keys.sort();\n        } // Make sure to incorporate special properties, so\n        // Types with different prototypes will produce\n        // a different hash and objects derived from\n        // different functions (`new Foo`, `new Bar`) will\n        // produce different hashes.\n        // We never do this for native functions since some\n        // seem to break because of that.\n\n\n        if (options.respectType !== false && !isNativeFunction(object)) {\n          keys.splice(0, 0, 'prototype', '__proto__', 'constructor');\n        }\n\n        if (options.excludeKeys) {\n          keys = keys.filter(function (key) {\n            return !options.excludeKeys(key);\n          });\n        }\n\n        write('object:' + keys.length + ':');\n        var self = this;\n        return keys.forEach(function (key) {\n          self.dispatch(key);\n          write(':');\n\n          if (!options.excludeValues) {\n            self.dispatch(object[key]);\n          }\n\n          write(',');\n        });\n      }\n    },\n    _array: function (arr, unordered) {\n      unordered = typeof unordered !== 'undefined' ? unordered : options.unorderedArrays !== false; // default to options.unorderedArrays\n\n      var self = this;\n      write('array:' + arr.length + ':');\n\n      if (!unordered || arr.length <= 1) {\n        return arr.forEach(function (entry) {\n          return self.dispatch(entry);\n        });\n      } // the unordered case is a little more complicated:\n      // since there is no canonical ordering on objects,\n      // i.e. {a:1} < {a:2} and {a:1} > {a:2} are both false,\n      // we first serialize each entry using a PassThrough stream\n      // before sorting.\n      // also: we can’t use the same context array for all entries\n      // since the order of hashing should *not* matter. instead,\n      // we keep track of the additions to a copy of the context array\n      // and add all of them to the global context array when we’re done\n\n\n      var contextAdditions = [];\n      var entries = arr.map(function (entry) {\n        var strm = new PassThrough();\n        var localContext = context.slice(); // make copy\n\n        var hasher = typeHasher(options, strm, localContext);\n        hasher.dispatch(entry); // take only what was added to localContext and append it to contextAdditions\n\n        contextAdditions = contextAdditions.concat(localContext.slice(context.length));\n        return strm.read().toString();\n      });\n      context = context.concat(contextAdditions);\n      entries.sort();\n      return this._array(entries, false);\n    },\n    _date: function (date) {\n      return write('date:' + date.toJSON());\n    },\n    _symbol: function (sym) {\n      return write('symbol:' + sym.toString());\n    },\n    _error: function (err) {\n      return write('error:' + err.toString());\n    },\n    _boolean: function (bool) {\n      return write('bool:' + bool.toString());\n    },\n    _string: function (string) {\n      write('string:' + string.length + ':');\n      write(string.toString());\n    },\n    _function: function (fn) {\n      write('fn:');\n\n      if (isNativeFunction(fn)) {\n        this.dispatch('[native]');\n      } else {\n        this.dispatch(fn.toString());\n      }\n\n      if (options.respectFunctionNames !== false) {\n        // Make sure we can still distinguish native functions\n        // by their name, otherwise String and Function will\n        // have the same hash\n        this.dispatch(\"function-name:\" + String(fn.name));\n      }\n\n      if (options.respectFunctionProperties) {\n        this._object(fn);\n      }\n    },\n    _number: function (number) {\n      return write('number:' + number.toString());\n    },\n    _xml: function (xml) {\n      return write('xml:' + xml.toString());\n    },\n    _null: function () {\n      return write('Null');\n    },\n    _undefined: function () {\n      return write('Undefined');\n    },\n    _regexp: function (regex) {\n      return write('regex:' + regex.toString());\n    },\n    _uint8array: function (arr) {\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint8clampedarray: function (arr) {\n      write('uint8clampedarray:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int8array: function (arr) {\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint16array: function (arr) {\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int16array: function (arr) {\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint32array: function (arr) {\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int32array: function (arr) {\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float32array: function (arr) {\n      write('float32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float64array: function (arr) {\n      write('float64array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _arraybuffer: function (arr) {\n      write('arraybuffer:');\n      return this.dispatch(new Uint8Array(arr));\n    },\n    _url: function (url) {\n      return write('url:' + url.toString(), 'utf8');\n    },\n    _map: function (map) {\n      write('map:');\n      var arr = Array.from(map);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _set: function (set) {\n      write('set:');\n      var arr = Array.from(set);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _blob: function () {\n      if (options.ignoreUnknown) {\n        return write('[blob]');\n      }\n\n      throw Error('Hashing Blob objects is currently not supported\\n' + '(see https://github.com/puleos/object-hash/issues/26)\\n' + 'Use \"options.replacer\" or \"options.ignoreUnknown\"\\n');\n    },\n    _domwindow: function () {\n      return write('domwindow');\n    },\n\n    /* Node.js standard native objects */\n    _process: function () {\n      return write('process');\n    },\n    _timer: function () {\n      return write('timer');\n    },\n    _pipe: function () {\n      return write('pipe');\n    },\n    _tcp: function () {\n      return write('tcp');\n    },\n    _udp: function () {\n      return write('udp');\n    },\n    _tty: function () {\n      return write('tty');\n    },\n    _statwatcher: function () {\n      return write('statwatcher');\n    },\n    _securecontext: function () {\n      return write('securecontext');\n    },\n    _connection: function () {\n      return write('connection');\n    },\n    _zlib: function () {\n      return write('zlib');\n    },\n    _context: function () {\n      return write('context');\n    },\n    _nodescript: function () {\n      return write('nodescript');\n    },\n    _httpparser: function () {\n      return write('httpparser');\n    },\n    _dataview: function () {\n      return write('dataview');\n    },\n    _signal: function () {\n      return write('signal');\n    },\n    _fsevent: function () {\n      return write('fsevent');\n    },\n    _tlswrap: function () {\n      return write('tlswrap');\n    }\n  };\n} // Mini-implementation of stream.PassThrough\n// We are far from having need for the full implementation, and we can\n// make assumptions like \"many writes, then only one final read\"\n// and we can ignore encoding specifics\n\n\nfunction PassThrough() {\n  return {\n    buf: '',\n    write: function (b) {\n      this.buf += b;\n    },\n    end: function (b) {\n      this.buf += b;\n    },\n    read: function () {\n      return this.buf;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/object-hash/index.js"],"names":["crypto","require","exports","module","objectHash","object","options","applyDefaults","hash","sha1","keys","excludeValues","algorithm","encoding","MD5","keysMD5","hashes","getHashes","slice","push","encodings","sourceOptions","toLowerCase","ignoreUnknown","respectType","respectFunctionNames","respectFunctionProperties","unorderedArrays","unorderedSets","unorderedObjects","replacer","undefined","excludeKeys","Error","i","length","indexOf","join","isNativeFunction","f","exp","exec","Function","prototype","toString","call","hashingStream","createHash","PassThrough","write","update","end","hasher","typeHasher","dispatch","digest","buf","read","writeToStream","stream","writeTo","context","str","value","type","_object","pattern","objString","Object","objType","objectNumber","Buffer","isBuffer","sort","splice","filter","key","self","forEach","_array","arr","unordered","entry","contextAdditions","entries","map","strm","localContext","concat","_date","date","toJSON","_symbol","sym","_error","err","_boolean","bool","_string","string","_function","fn","String","name","_number","number","_xml","xml","_null","_undefined","_regexp","regex","_uint8array","Array","_uint8clampedarray","_int8array","_uint16array","_int16array","_uint32array","_int32array","_float32array","_float64array","_arraybuffer","Uint8Array","_url","url","_map","from","_set","set","_blob","_domwindow","_process","_timer","_pipe","_tcp","_udp","_tty","_statwatcher","_securecontext","_connection","_zlib","_context","_nodescript","_httpparser","_dataview","_signal","_fsevent","_tlswrap","b"],"mappings":"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","sourcesContent":["'use strict';\n\nvar crypto = require('crypto');\n\n/**\n * Exported function\n *\n * Options:\n *\n *  - `algorithm` hash algo to be used by this instance: *'sha1', 'md5'\n *  - `excludeValues` {true|*false} hash object keys, values ignored\n *  - `encoding` hash encoding, supports 'buffer', '*hex', 'binary', 'base64'\n *  - `ignoreUnknown` {true|*false} ignore unknown object types\n *  - `replacer` optional function that replaces values before hashing\n *  - `respectFunctionProperties` {*true|false} consider function properties when hashing\n *  - `respectFunctionNames` {*true|false} consider 'name' property of functions for hashing\n *  - `respectType` {*true|false} Respect special properties (prototype, constructor)\n *    when hashing to distinguish between types\n *  - `unorderedArrays` {true|*false} Sort all arrays before hashing\n *  - `unorderedSets` {*true|false} Sort `Set` and `Map` instances before hashing\n *  * = default\n *\n * @param {object} object value to hash\n * @param {object} options hashing options\n * @return {string} hash value\n * @api public\n */\nexports = module.exports = objectHash;\n\nfunction objectHash(object, options){\n  options = applyDefaults(object, options);\n\n  return hash(object, options);\n}\n\n/**\n * Exported sugar methods\n *\n * @param {object} object value to hash\n * @return {string} hash value\n * @api public\n */\nexports.sha1 = function(object){\n  return objectHash(object);\n};\nexports.keys = function(object){\n  return objectHash(object, {excludeValues: true, algorithm: 'sha1', encoding: 'hex'});\n};\nexports.MD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex'});\n};\nexports.keysMD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex', excludeValues: true});\n};\n\n// Internals\nvar hashes = crypto.getHashes ? crypto.getHashes().slice() : ['sha1', 'md5'];\nhashes.push('passthrough');\nvar encodings = ['buffer', 'hex', 'binary', 'base64'];\n\nfunction applyDefaults(object, sourceOptions){\n  sourceOptions = sourceOptions || {};\n\n  // create a copy rather than mutating\n  var options = {};\n  options.algorithm = sourceOptions.algorithm || 'sha1';\n  options.encoding = sourceOptions.encoding || 'hex';\n  options.excludeValues = sourceOptions.excludeValues ? true : false;\n  options.algorithm = options.algorithm.toLowerCase();\n  options.encoding = options.encoding.toLowerCase();\n  options.ignoreUnknown = sourceOptions.ignoreUnknown !== true ? false : true; // default to false\n  options.respectType = sourceOptions.respectType === false ? false : true; // default to true\n  options.respectFunctionNames = sourceOptions.respectFunctionNames === false ? false : true;\n  options.respectFunctionProperties = sourceOptions.respectFunctionProperties === false ? false : true;\n  options.unorderedArrays = sourceOptions.unorderedArrays !== true ? false : true; // default to false\n  options.unorderedSets = sourceOptions.unorderedSets === false ? false : true; // default to false\n  options.unorderedObjects = sourceOptions.unorderedObjects === false ? false : true; // default to true\n  options.replacer = sourceOptions.replacer || undefined;\n  options.excludeKeys = sourceOptions.excludeKeys || undefined;\n\n  if(typeof object === 'undefined') {\n    throw new Error('Object argument required.');\n  }\n\n  // if there is a case-insensitive match in the hashes list, accept it\n  // (i.e. SHA256 for sha256)\n  for (var i = 0; i < hashes.length; ++i) {\n    if (hashes[i].toLowerCase() === options.algorithm.toLowerCase()) {\n      options.algorithm = hashes[i];\n    }\n  }\n\n  if(hashes.indexOf(options.algorithm) === -1){\n    throw new Error('Algorithm \"' + options.algorithm + '\"  not supported. ' +\n      'supported values: ' + hashes.join(', '));\n  }\n\n  if(encodings.indexOf(options.encoding) === -1 &&\n     options.algorithm !== 'passthrough'){\n    throw new Error('Encoding \"' + options.encoding + '\"  not supported. ' +\n      'supported values: ' + encodings.join(', '));\n  }\n\n  return options;\n}\n\n/** Check if the given function is a native function */\nfunction isNativeFunction(f) {\n  if ((typeof f) !== 'function') {\n    return false;\n  }\n  var exp = /^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i;\n  return exp.exec(Function.prototype.toString.call(f)) != null;\n}\n\nfunction hash(object, options) {\n  var hashingStream;\n\n  if (options.algorithm !== 'passthrough') {\n    hashingStream = crypto.createHash(options.algorithm);\n  } else {\n    hashingStream = new PassThrough();\n  }\n\n  if (typeof hashingStream.write === 'undefined') {\n    hashingStream.write = hashingStream.update;\n    hashingStream.end   = hashingStream.update;\n  }\n\n  var hasher = typeHasher(options, hashingStream);\n  hasher.dispatch(object);\n  if (!hashingStream.update) {\n    hashingStream.end('');\n  }\n\n  if (hashingStream.digest) {\n    return hashingStream.digest(options.encoding === 'buffer' ? undefined : options.encoding);\n  }\n\n  var buf = hashingStream.read();\n  if (options.encoding === 'buffer') {\n    return buf;\n  }\n\n  return buf.toString(options.encoding);\n}\n\n/**\n * Expose streaming API\n *\n * @param {object} object  Value to serialize\n * @param {object} options  Options, as for hash()\n * @param {object} stream  A stream to write the serializiation to\n * @api public\n */\nexports.writeToStream = function(object, options, stream) {\n  if (typeof stream === 'undefined') {\n    stream = options;\n    options = {};\n  }\n\n  options = applyDefaults(object, options);\n\n  return typeHasher(options, stream).dispatch(object);\n};\n\nfunction typeHasher(options, writeTo, context){\n  context = context || [];\n  var write = function(str) {\n    if (writeTo.update) {\n      return writeTo.update(str, 'utf8');\n    } else {\n      return writeTo.write(str, 'utf8');\n    }\n  };\n\n  return {\n    dispatch: function(value){\n      if (options.replacer) {\n        value = options.replacer(value);\n      }\n\n      var type = typeof value;\n      if (value === null) {\n        type = 'null';\n      }\n\n      //console.log(\"[DEBUG] Dispatch: \", value, \"->\", type, \" -> \", \"_\" + type);\n\n      return this['_' + type](value);\n    },\n    _object: function(object) {\n      var pattern = (/\\[object (.*)\\]/i);\n      var objString = Object.prototype.toString.call(object);\n      var objType = pattern.exec(objString);\n      if (!objType) { // object type did not match [object ...]\n        objType = 'unknown:[' + objString + ']';\n      } else {\n        objType = objType[1]; // take only the class name\n      }\n\n      objType = objType.toLowerCase();\n\n      var objectNumber = null;\n\n      if ((objectNumber = context.indexOf(object)) >= 0) {\n        return this.dispatch('[CIRCULAR:' + objectNumber + ']');\n      } else {\n        context.push(object);\n      }\n\n      if (typeof Buffer !== 'undefined' && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write('buffer:');\n        return write(object);\n      }\n\n      if(objType !== 'object' && objType !== 'function' && objType !== 'asyncfunction') {\n        if(this['_' + objType]) {\n          this['_' + objType](object);\n        } else if (options.ignoreUnknown) {\n          return write('[' + objType + ']');\n        } else {\n          throw new Error('Unknown object type \"' + objType + '\"');\n        }\n      }else{\n        var keys = Object.keys(object);\n        if (options.unorderedObjects) {\n          keys = keys.sort();\n        }\n        // Make sure to incorporate special properties, so\n        // Types with different prototypes will produce\n        // a different hash and objects derived from\n        // different functions (`new Foo`, `new Bar`) will\n        // produce different hashes.\n        // We never do this for native functions since some\n        // seem to break because of that.\n        if (options.respectType !== false && !isNativeFunction(object)) {\n          keys.splice(0, 0, 'prototype', '__proto__', 'constructor');\n        }\n\n        if (options.excludeKeys) {\n          keys = keys.filter(function(key) { return !options.excludeKeys(key); });\n        }\n\n        write('object:' + keys.length + ':');\n        var self = this;\n        return keys.forEach(function(key){\n          self.dispatch(key);\n          write(':');\n          if(!options.excludeValues) {\n            self.dispatch(object[key]);\n          }\n          write(',');\n        });\n      }\n    },\n    _array: function(arr, unordered){\n      unordered = typeof unordered !== 'undefined' ? unordered :\n        options.unorderedArrays !== false; // default to options.unorderedArrays\n\n      var self = this;\n      write('array:' + arr.length + ':');\n      if (!unordered || arr.length <= 1) {\n        return arr.forEach(function(entry) {\n          return self.dispatch(entry);\n        });\n      }\n\n      // the unordered case is a little more complicated:\n      // since there is no canonical ordering on objects,\n      // i.e. {a:1} < {a:2} and {a:1} > {a:2} are both false,\n      // we first serialize each entry using a PassThrough stream\n      // before sorting.\n      // also: we can’t use the same context array for all entries\n      // since the order of hashing should *not* matter. instead,\n      // we keep track of the additions to a copy of the context array\n      // and add all of them to the global context array when we’re done\n      var contextAdditions = [];\n      var entries = arr.map(function(entry) {\n        var strm = new PassThrough();\n        var localContext = context.slice(); // make copy\n        var hasher = typeHasher(options, strm, localContext);\n        hasher.dispatch(entry);\n        // take only what was added to localContext and append it to contextAdditions\n        contextAdditions = contextAdditions.concat(localContext.slice(context.length));\n        return strm.read().toString();\n      });\n      context = context.concat(contextAdditions);\n      entries.sort();\n      return this._array(entries, false);\n    },\n    _date: function(date){\n      return write('date:' + date.toJSON());\n    },\n    _symbol: function(sym){\n      return write('symbol:' + sym.toString());\n    },\n    _error: function(err){\n      return write('error:' + err.toString());\n    },\n    _boolean: function(bool){\n      return write('bool:' + bool.toString());\n    },\n    _string: function(string){\n      write('string:' + string.length + ':');\n      write(string.toString());\n    },\n    _function: function(fn){\n      write('fn:');\n      if (isNativeFunction(fn)) {\n        this.dispatch('[native]');\n      } else {\n        this.dispatch(fn.toString());\n      }\n\n      if (options.respectFunctionNames !== false) {\n        // Make sure we can still distinguish native functions\n        // by their name, otherwise String and Function will\n        // have the same hash\n        this.dispatch(\"function-name:\" + String(fn.name));\n      }\n\n      if (options.respectFunctionProperties) {\n        this._object(fn);\n      }\n    },\n    _number: function(number){\n      return write('number:' + number.toString());\n    },\n    _xml: function(xml){\n      return write('xml:' + xml.toString());\n    },\n    _null: function() {\n      return write('Null');\n    },\n    _undefined: function() {\n      return write('Undefined');\n    },\n    _regexp: function(regex){\n      return write('regex:' + regex.toString());\n    },\n    _uint8array: function(arr){\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint8clampedarray: function(arr){\n      write('uint8clampedarray:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int8array: function(arr){\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint16array: function(arr){\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int16array: function(arr){\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint32array: function(arr){\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int32array: function(arr){\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float32array: function(arr){\n      write('float32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float64array: function(arr){\n      write('float64array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _arraybuffer: function(arr){\n      write('arraybuffer:');\n      return this.dispatch(new Uint8Array(arr));\n    },\n    _url: function(url) {\n      return write('url:' + url.toString(), 'utf8');\n    },\n    _map: function(map) {\n      write('map:');\n      var arr = Array.from(map);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _set: function(set) {\n      write('set:');\n      var arr = Array.from(set);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _blob: function() {\n      if (options.ignoreUnknown) {\n        return write('[blob]');\n      }\n\n      throw Error('Hashing Blob objects is currently not supported\\n' +\n        '(see https://github.com/puleos/object-hash/issues/26)\\n' +\n        'Use \"options.replacer\" or \"options.ignoreUnknown\"\\n');\n    },\n    _domwindow: function() { return write('domwindow'); },\n    /* Node.js standard native objects */\n    _process: function() { return write('process'); },\n    _timer: function() { return write('timer'); },\n    _pipe: function() { return write('pipe'); },\n    _tcp: function() { return write('tcp'); },\n    _udp: function() { return write('udp'); },\n    _tty: function() { return write('tty'); },\n    _statwatcher: function() { return write('statwatcher'); },\n    _securecontext: function() { return write('securecontext'); },\n    _connection: function() { return write('connection'); },\n    _zlib: function() { return write('zlib'); },\n    _context: function() { return write('context'); },\n    _nodescript: function() { return write('nodescript'); },\n    _httpparser: function() { return write('httpparser'); },\n    _dataview: function() { return write('dataview'); },\n    _signal: function() { return write('signal'); },\n    _fsevent: function() { return write('fsevent'); },\n    _tlswrap: function() { return write('tlswrap'); }\n  };\n}\n\n// Mini-implementation of stream.PassThrough\n// We are far from having need for the full implementation, and we can\n// make assumptions like \"many writes, then only one final read\"\n// and we can ignore encoding specifics\nfunction PassThrough() {\n  return {\n    buf: '',\n\n    write: function(b) {\n      this.buf += b;\n    },\n\n    end: function(b) {\n      this.buf += b;\n    },\n\n    read: function() {\n      return this.buf;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}