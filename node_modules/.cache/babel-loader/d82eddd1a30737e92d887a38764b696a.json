{"ast":null,"code":"'use strict';\n\nvar test = require('tape');\n\nvar utils = require('../lib/utils');\n\ntest('merge()', function (t) {\n  t.deepEqual(utils.merge({\n    a: 'b'\n  }, {\n    a: 'c'\n  }), {\n    a: ['b', 'c']\n  }, 'merges two objects with the same key');\n  var oneMerged = utils.merge({\n    foo: 'bar'\n  }, {\n    foo: {\n      first: '123'\n    }\n  });\n  t.deepEqual(oneMerged, {\n    foo: ['bar', {\n      first: '123'\n    }]\n  }, 'merges a standalone and an object into an array');\n  var twoMerged = utils.merge({\n    foo: ['bar', {\n      first: '123'\n    }]\n  }, {\n    foo: {\n      second: '456'\n    }\n  });\n  t.deepEqual(twoMerged, {\n    foo: {\n      0: 'bar',\n      1: {\n        first: '123'\n      },\n      second: '456'\n    }\n  }, 'merges a standalone and two objects into an array');\n  var sandwiched = utils.merge({\n    foo: ['bar', {\n      first: '123',\n      second: '456'\n    }]\n  }, {\n    foo: 'baz'\n  });\n  t.deepEqual(sandwiched, {\n    foo: ['bar', {\n      first: '123',\n      second: '456'\n    }, 'baz']\n  }, 'merges an object sandwiched by two standalones into an array');\n  var nestedArrays = utils.merge({\n    foo: ['baz']\n  }, {\n    foo: ['bar', 'xyzzy']\n  });\n  t.deepEqual(nestedArrays, {\n    foo: ['baz', 'bar', 'xyzzy']\n  });\n  t.end();\n});\ntest('assign()', function (t) {\n  var target = {\n    a: 1,\n    b: 2\n  };\n  var source = {\n    b: 3,\n    c: 4\n  };\n  var result = utils.assign(target, source);\n  t.equal(result, target, 'returns the target');\n  t.deepEqual(target, {\n    a: 1,\n    b: 3,\n    c: 4\n  }, 'target and source are merged');\n  t.deepEqual(source, {\n    b: 3,\n    c: 4\n  }, 'source is untouched');\n  t.end();\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/qs/test/utils.js"],"names":["test","require","utils","t","deepEqual","merge","a","oneMerged","foo","first","twoMerged","second","sandwiched","nestedArrays","end","target","b","source","c","result","assign","equal"],"mappings":"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","sourcesContent":["'use strict';\n\nvar test = require('tape');\nvar utils = require('../lib/utils');\n\ntest('merge()', function (t) {\n    t.deepEqual(utils.merge({ a: 'b' }, { a: 'c' }), { a: ['b', 'c'] }, 'merges two objects with the same key');\n\n    var oneMerged = utils.merge({ foo: 'bar' }, { foo: { first: '123' } });\n    t.deepEqual(oneMerged, { foo: ['bar', { first: '123' }] }, 'merges a standalone and an object into an array');\n\n    var twoMerged = utils.merge({ foo: ['bar', { first: '123' }] }, { foo: { second: '456' } });\n    t.deepEqual(twoMerged, { foo: { 0: 'bar', 1: { first: '123' }, second: '456' } }, 'merges a standalone and two objects into an array');\n\n    var sandwiched = utils.merge({ foo: ['bar', { first: '123', second: '456' }] }, { foo: 'baz' });\n    t.deepEqual(sandwiched, { foo: ['bar', { first: '123', second: '456' }, 'baz'] }, 'merges an object sandwiched by two standalones into an array');\n\n    var nestedArrays = utils.merge({ foo: ['baz'] }, { foo: ['bar', 'xyzzy'] });\n    t.deepEqual(nestedArrays, { foo: ['baz', 'bar', 'xyzzy'] });\n\n    t.end();\n});\n\ntest('assign()', function (t) {\n    var target = { a: 1, b: 2 };\n    var source = { b: 3, c: 4 };\n    var result = utils.assign(target, source);\n\n    t.equal(result, target, 'returns the target');\n    t.deepEqual(target, { a: 1, b: 3, c: 4 }, 'target and source are merged');\n    t.deepEqual(source, { b: 3, c: 4 }, 'source is untouched');\n\n    t.end();\n});\n"]},"metadata":{},"sourceType":"script"}