{"ast":null,"code":"'use strict';\n\nconst execa = require('execa');\n\nconst lcid = require('lcid');\n\nconst mem = require('mem');\n\nconst defaultOptions = {\n  spawn: true\n};\nconst defaultLocale = 'en_US';\n\nfunction getEnvLocale(env = process.env) {\n  return env.LC_ALL || env.LC_MESSAGES || env.LANG || env.LANGUAGE;\n}\n\nfunction parseLocale(string) {\n  const env = string.split('\\n').reduce((env, def) => {\n    const [key, value] = def.split('=');\n    env[key] = value.replace(/^\"|\"$/g, '');\n    return env;\n  }, {});\n  return getEnvLocale(env);\n}\n\nfunction getLocale(string) {\n  return string && string.replace(/[.:].*/, '');\n}\n\nfunction getLocales() {\n  return execa.stdout('locale', ['-a']);\n}\n\nfunction getLocalesSync() {\n  return execa.sync('locale', ['-a']).stdout;\n}\n\nfunction getSupportedLocale(locale, locales = '') {\n  return locales.includes(locale) ? locale : defaultLocale;\n}\n\nfunction getAppleLocale() {\n  return Promise.all([execa.stdout('defaults', ['read', '-globalDomain', 'AppleLocale']), getLocales()]).then(results => getSupportedLocale(results[0], results[1]));\n}\n\nfunction getAppleLocaleSync() {\n  return getSupportedLocale(execa.sync('defaults', ['read', '-globalDomain', 'AppleLocale']).stdout, getLocalesSync());\n}\n\nfunction getUnixLocale() {\n  if (process.platform === 'darwin') {\n    return getAppleLocale();\n  }\n\n  return execa.stdout('locale').then(stdout => getLocale(parseLocale(stdout)));\n}\n\nfunction getUnixLocaleSync() {\n  if (process.platform === 'darwin') {\n    return getAppleLocaleSync();\n  }\n\n  return getLocale(parseLocale(execa.sync('locale').stdout));\n}\n\nfunction getWinLocale() {\n  return execa.stdout('wmic', ['os', 'get', 'locale']).then(stdout => {\n    const lcidCode = parseInt(stdout.replace('Locale', ''), 16);\n    return lcid.from(lcidCode);\n  });\n}\n\nfunction getWinLocaleSync() {\n  const {\n    stdout\n  } = execa.sync('wmic', ['os', 'get', 'locale']);\n  const lcidCode = parseInt(stdout.replace('Locale', ''), 16);\n  return lcid.from(lcidCode);\n}\n\nmodule.exports = mem((options = defaultOptions) => {\n  const envLocale = getEnvLocale();\n  let thenable;\n\n  if (envLocale || options.spawn === false) {\n    thenable = Promise.resolve(getLocale(envLocale));\n  } else if (process.platform === 'win32') {\n    thenable = getWinLocale();\n  } else {\n    thenable = getUnixLocale();\n  }\n\n  return thenable.then(locale => locale || defaultLocale).catch(() => defaultLocale);\n});\nmodule.exports.sync = mem((options = defaultOptions) => {\n  const envLocale = getEnvLocale();\n  let res;\n\n  if (envLocale || options.spawn === false) {\n    res = getLocale(envLocale);\n  } else {\n    try {\n      res = process.platform === 'win32' ? getWinLocaleSync() : getUnixLocaleSync();\n    } catch (_) {}\n  }\n\n  return res || defaultLocale;\n});","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/os-locale/index.js"],"names":["execa","require","lcid","mem","defaultOptions","spawn","defaultLocale","getEnvLocale","env","process","LC_ALL","LC_MESSAGES","LANG","LANGUAGE","parseLocale","string","split","reduce","def","key","value","replace","getLocale","getLocales","stdout","getLocalesSync","sync","getSupportedLocale","locale","locales","includes","getAppleLocale","Promise","all","then","results","getAppleLocaleSync","getUnixLocale","platform","getUnixLocaleSync","getWinLocale","lcidCode","parseInt","from","getWinLocaleSync","module","exports","options","envLocale","thenable","resolve","catch","res","_"],"mappings":"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","sourcesContent":["'use strict';\nconst execa = require('execa');\nconst lcid = require('lcid');\nconst mem = require('mem');\n\nconst defaultOptions = {spawn: true};\nconst defaultLocale = 'en_US';\n\nfunction getEnvLocale(env = process.env) {\n\treturn env.LC_ALL || env.LC_MESSAGES || env.LANG || env.LANGUAGE;\n}\n\nfunction parseLocale(string) {\n\tconst env = string.split('\\n').reduce((env, def) => {\n\t\tconst [key, value] = def.split('=');\n\t\tenv[key] = value.replace(/^\"|\"$/g, '');\n\t\treturn env;\n\t}, {});\n\n\treturn getEnvLocale(env);\n}\n\nfunction getLocale(string) {\n\treturn (string && string.replace(/[.:].*/, ''));\n}\n\nfunction getLocales() {\n\treturn execa.stdout('locale', ['-a']);\n}\n\nfunction getLocalesSync() {\n\treturn execa.sync('locale', ['-a']).stdout;\n}\n\nfunction getSupportedLocale(locale, locales = '') {\n\treturn locales.includes(locale) ? locale : defaultLocale;\n}\n\nfunction getAppleLocale() {\n\treturn Promise.all([\n\t\texeca.stdout('defaults', ['read', '-globalDomain', 'AppleLocale']),\n\t\tgetLocales()\n\t]).then(results => getSupportedLocale(results[0], results[1]));\n}\n\nfunction getAppleLocaleSync() {\n\treturn getSupportedLocale(\n\t\texeca.sync('defaults', ['read', '-globalDomain', 'AppleLocale']).stdout,\n\t\tgetLocalesSync()\n\t);\n}\n\nfunction getUnixLocale() {\n\tif (process.platform === 'darwin') {\n\t\treturn getAppleLocale();\n\t}\n\n\treturn execa.stdout('locale')\n\t\t.then(stdout => getLocale(parseLocale(stdout)));\n}\n\nfunction getUnixLocaleSync() {\n\tif (process.platform === 'darwin') {\n\t\treturn getAppleLocaleSync();\n\t}\n\n\treturn getLocale(parseLocale(execa.sync('locale').stdout));\n}\n\nfunction getWinLocale() {\n\treturn execa.stdout('wmic', ['os', 'get', 'locale'])\n\t\t.then(stdout => {\n\t\t\tconst lcidCode = parseInt(stdout.replace('Locale', ''), 16);\n\t\t\treturn lcid.from(lcidCode);\n\t\t});\n}\n\nfunction getWinLocaleSync() {\n\tconst {stdout} = execa.sync('wmic', ['os', 'get', 'locale']);\n\tconst lcidCode = parseInt(stdout.replace('Locale', ''), 16);\n\treturn lcid.from(lcidCode);\n}\n\nmodule.exports = mem((options = defaultOptions) => {\n\tconst envLocale = getEnvLocale();\n\n\tlet thenable;\n\tif (envLocale || options.spawn === false) {\n\t\tthenable = Promise.resolve(getLocale(envLocale));\n\t} else if (process.platform === 'win32') {\n\t\tthenable = getWinLocale();\n\t} else {\n\t\tthenable = getUnixLocale();\n\t}\n\n\treturn thenable\n\t\t.then(locale => locale || defaultLocale)\n\t\t.catch(() => defaultLocale);\n});\n\nmodule.exports.sync = mem((options = defaultOptions) => {\n\tconst envLocale = getEnvLocale();\n\n\tlet res;\n\tif (envLocale || options.spawn === false) {\n\t\tres = getLocale(envLocale);\n\t} else {\n\t\ttry {\n\t\t\tres = process.platform === 'win32' ? getWinLocaleSync() : getUnixLocaleSync();\n\t\t} catch (_) {}\n\t}\n\n\treturn res || defaultLocale;\n});\n"]},"metadata":{},"sourceType":"script"}