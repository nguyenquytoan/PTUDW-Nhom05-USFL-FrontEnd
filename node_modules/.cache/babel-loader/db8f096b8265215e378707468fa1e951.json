{"ast":null,"code":"var populateComponents = require('./properties/populate-components');\n\nvar wrapForOptimizing = require('../wrap-for-optimizing').single;\n\nvar restoreFromOptimizing = require('../restore-from-optimizing');\n\nvar Token = require('../../tokenizer/token');\n\nvar animationNameRegex = /^(\\-moz\\-|\\-o\\-|\\-webkit\\-)?animation-name$/;\nvar animationRegex = /^(\\-moz\\-|\\-o\\-|\\-webkit\\-)?animation$/;\nvar keyframeRegex = /^@(\\-moz\\-|\\-o\\-|\\-webkit\\-)?keyframes /;\nvar importantRegex = /\\s{0,31}!important$/;\nvar optionalMatchingQuotesRegex = /^(['\"]?)(.*)\\1$/;\n\nfunction normalize(value) {\n  return value.replace(optionalMatchingQuotesRegex, '$2').replace(importantRegex, '');\n}\n\nfunction removeUnusedAtRules(tokens, context) {\n  removeUnusedAtRule(tokens, matchCounterStyle, markCounterStylesAsUsed, context);\n  removeUnusedAtRule(tokens, matchFontFace, markFontFacesAsUsed, context);\n  removeUnusedAtRule(tokens, matchKeyframe, markKeyframesAsUsed, context);\n  removeUnusedAtRule(tokens, matchNamespace, markNamespacesAsUsed, context);\n}\n\nfunction removeUnusedAtRule(tokens, matchCallback, markCallback, context) {\n  var atRules = {};\n  var atRule;\n  var atRuleTokens;\n  var atRuleToken;\n  var zeroAt;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    matchCallback(tokens[i], atRules);\n  }\n\n  if (Object.keys(atRules).length === 0) {\n    return;\n  }\n\n  markUsedAtRules(tokens, markCallback, atRules, context);\n\n  for (atRule in atRules) {\n    atRuleTokens = atRules[atRule];\n\n    for (i = 0, l = atRuleTokens.length; i < l; i++) {\n      atRuleToken = atRuleTokens[i];\n      zeroAt = atRuleToken[0] == Token.AT_RULE ? 1 : 2;\n      atRuleToken[zeroAt] = [];\n    }\n  }\n}\n\nfunction markUsedAtRules(tokens, markCallback, atRules, context) {\n  var boundMarkCallback = markCallback(atRules);\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    switch (tokens[i][0]) {\n      case Token.RULE:\n        boundMarkCallback(tokens[i], context);\n        break;\n\n      case Token.NESTED_BLOCK:\n        markUsedAtRules(tokens[i][2], markCallback, atRules, context);\n    }\n  }\n}\n\nfunction matchCounterStyle(token, atRules) {\n  var match;\n\n  if (token[0] == Token.AT_RULE_BLOCK && token[1][0][1].indexOf('@counter-style') === 0) {\n    match = token[1][0][1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markCounterStylesAsUsed(atRules) {\n  return function (token, context) {\n    var property;\n    var wrappedProperty;\n    var i, l;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'list-style') {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n\n        if (wrappedProperty.components[0].value[0][1] in atRules) {\n          delete atRules[property[2][1]];\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (property[1][1] == 'list-style-type' && property[2][1] in atRules) {\n        delete atRules[property[2][1]];\n      }\n    }\n  };\n}\n\nfunction matchFontFace(token, atRules) {\n  var property;\n  var match;\n  var i, l;\n\n  if (token[0] == Token.AT_RULE_BLOCK && token[1][0][1] == '@font-face') {\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'font-family') {\n        match = normalize(property[2][1].toLowerCase());\n        atRules[match] = atRules[match] || [];\n        atRules[match].push(token);\n        break;\n      }\n    }\n  }\n}\n\nfunction markFontFacesAsUsed(atRules) {\n  return function (token, context) {\n    var property;\n    var wrappedProperty;\n    var component;\n    var normalizedMatch;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'font') {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n        component = wrappedProperty.components[6];\n\n        for (j = 0, m = component.value.length; j < m; j++) {\n          normalizedMatch = normalize(component.value[j][1].toLowerCase());\n\n          if (normalizedMatch in atRules) {\n            delete atRules[normalizedMatch];\n          }\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (property[1][1] == 'font-family') {\n        for (j = 2, m = property.length; j < m; j++) {\n          normalizedMatch = normalize(property[j][1].toLowerCase());\n\n          if (normalizedMatch in atRules) {\n            delete atRules[normalizedMatch];\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction matchKeyframe(token, atRules) {\n  var match;\n\n  if (token[0] == Token.NESTED_BLOCK && keyframeRegex.test(token[1][0][1])) {\n    match = token[1][0][1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markKeyframesAsUsed(atRules) {\n  return function (token, context) {\n    var property;\n    var wrappedProperty;\n    var component;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (animationRegex.test(property[1][1])) {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n        component = wrappedProperty.components[7];\n\n        for (j = 0, m = component.value.length; j < m; j++) {\n          if (component.value[j][1] in atRules) {\n            delete atRules[component.value[j][1]];\n          }\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (animationNameRegex.test(property[1][1])) {\n        for (j = 2, m = property.length; j < m; j++) {\n          if (property[j][1] in atRules) {\n            delete atRules[property[j][1]];\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction matchNamespace(token, atRules) {\n  var match;\n\n  if (token[0] == Token.AT_RULE && token[1].indexOf('@namespace') === 0) {\n    match = token[1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markNamespacesAsUsed(atRules) {\n  var namespaceRegex = new RegExp(Object.keys(atRules).join('\\\\\\||') + '\\\\\\|', 'g');\n  return function (token) {\n    var match;\n    var scope;\n    var normalizedMatch;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[1].length; i < l; i++) {\n      scope = token[1][i];\n      match = scope[1].match(namespaceRegex);\n\n      for (j = 0, m = match.length; j < m; j++) {\n        normalizedMatch = match[j].substring(0, match[j].length - 1);\n\n        if (normalizedMatch in atRules) {\n          delete atRules[normalizedMatch];\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = removeUnusedAtRules;","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/clean-css/lib/optimizer/level-2/remove-unused-at-rules.js"],"names":["populateComponents","require","wrapForOptimizing","single","restoreFromOptimizing","Token","animationNameRegex","animationRegex","keyframeRegex","importantRegex","optionalMatchingQuotesRegex","normalize","value","replace","removeUnusedAtRules","tokens","context","removeUnusedAtRule","matchCounterStyle","markCounterStylesAsUsed","matchFontFace","markFontFacesAsUsed","matchKeyframe","markKeyframesAsUsed","matchNamespace","markNamespacesAsUsed","matchCallback","markCallback","atRules","atRule","atRuleTokens","atRuleToken","zeroAt","i","l","length","Object","keys","markUsedAtRules","AT_RULE","boundMarkCallback","RULE","NESTED_BLOCK","token","match","AT_RULE_BLOCK","indexOf","split","push","property","wrappedProperty","validator","warnings","components","toLowerCase","component","normalizedMatch","j","m","test","namespaceRegex","RegExp","join","scope","substring","module","exports"],"mappings":"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","sourcesContent":["var populateComponents = require('./properties/populate-components');\n\nvar wrapForOptimizing = require('../wrap-for-optimizing').single;\nvar restoreFromOptimizing = require('../restore-from-optimizing');\n\nvar Token = require('../../tokenizer/token');\n\nvar animationNameRegex = /^(\\-moz\\-|\\-o\\-|\\-webkit\\-)?animation-name$/;\nvar animationRegex = /^(\\-moz\\-|\\-o\\-|\\-webkit\\-)?animation$/;\nvar keyframeRegex = /^@(\\-moz\\-|\\-o\\-|\\-webkit\\-)?keyframes /;\nvar importantRegex = /\\s{0,31}!important$/;\nvar optionalMatchingQuotesRegex = /^(['\"]?)(.*)\\1$/;\n\nfunction normalize(value) {\n  return value\n    .replace(optionalMatchingQuotesRegex, '$2')\n    .replace(importantRegex, '');\n}\n\nfunction removeUnusedAtRules(tokens, context) {\n  removeUnusedAtRule(tokens, matchCounterStyle, markCounterStylesAsUsed, context);\n  removeUnusedAtRule(tokens, matchFontFace, markFontFacesAsUsed, context);\n  removeUnusedAtRule(tokens, matchKeyframe, markKeyframesAsUsed, context);\n  removeUnusedAtRule(tokens, matchNamespace, markNamespacesAsUsed, context);\n}\n\nfunction removeUnusedAtRule(tokens, matchCallback, markCallback, context) {\n  var atRules = {};\n  var atRule;\n  var atRuleTokens;\n  var atRuleToken;\n  var zeroAt;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    matchCallback(tokens[i], atRules);\n  }\n\n  if (Object.keys(atRules).length === 0) {\n    return;\n  }\n\n  markUsedAtRules(tokens, markCallback, atRules, context);\n\n  for (atRule in atRules) {\n    atRuleTokens = atRules[atRule];\n\n    for (i = 0, l = atRuleTokens.length; i < l; i++) {\n      atRuleToken = atRuleTokens[i];\n      zeroAt = atRuleToken[0] == Token.AT_RULE ? 1 : 2;\n      atRuleToken[zeroAt] = [];\n    }\n  }\n}\n\nfunction markUsedAtRules(tokens, markCallback, atRules, context) {\n  var boundMarkCallback = markCallback(atRules);\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    switch (tokens[i][0]) {\n      case Token.RULE:\n        boundMarkCallback(tokens[i], context);\n        break;\n      case Token.NESTED_BLOCK:\n        markUsedAtRules(tokens[i][2], markCallback, atRules, context);\n    }\n  }\n}\n\nfunction matchCounterStyle(token, atRules) {\n  var match;\n\n  if (token[0] == Token.AT_RULE_BLOCK && token[1][0][1].indexOf('@counter-style') === 0) {\n    match = token[1][0][1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markCounterStylesAsUsed(atRules) {\n  return function (token, context) {\n    var property;\n    var wrappedProperty;\n    var i, l;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'list-style') {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n\n        if (wrappedProperty.components[0].value[0][1] in atRules) {\n          delete atRules[property[2][1]];\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (property[1][1] == 'list-style-type' && property[2][1] in atRules) {\n        delete atRules[property[2][1]];\n      }\n    }\n  };\n}\n\nfunction matchFontFace(token, atRules) {\n  var property;\n  var match;\n  var i, l;\n\n  if (token[0] == Token.AT_RULE_BLOCK && token[1][0][1] == '@font-face') {\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'font-family') {\n        match = normalize(property[2][1].toLowerCase());\n        atRules[match] = atRules[match] || [];\n        atRules[match].push(token);\n        break;\n      }\n    }\n  }\n}\n\nfunction markFontFacesAsUsed(atRules) {\n  return function (token, context) {\n    var property;\n    var wrappedProperty;\n    var component;\n    var normalizedMatch;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'font') {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n        component = wrappedProperty.components[6];\n\n        for (j = 0, m = component.value.length; j < m; j++) {\n          normalizedMatch = normalize(component.value[j][1].toLowerCase());\n\n          if (normalizedMatch in atRules) {\n            delete atRules[normalizedMatch];\n          }\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (property[1][1] == 'font-family') {\n        for (j = 2, m = property.length; j < m; j++) {\n          normalizedMatch = normalize(property[j][1].toLowerCase());\n\n          if (normalizedMatch in atRules) {\n            delete atRules[normalizedMatch];\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction matchKeyframe(token, atRules) {\n  var match;\n\n  if (token[0] == Token.NESTED_BLOCK && keyframeRegex.test(token[1][0][1])) {\n    match = token[1][0][1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markKeyframesAsUsed(atRules) {\n  return function (token, context) {\n    var property;\n    var wrappedProperty;\n    var component;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (animationRegex.test(property[1][1])) {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n        component = wrappedProperty.components[7];\n\n        for (j = 0, m = component.value.length; j < m; j++) {\n          if (component.value[j][1] in atRules) {\n            delete atRules[component.value[j][1]];\n          }\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (animationNameRegex.test(property[1][1])) {\n        for (j = 2, m = property.length; j < m; j++) {\n          if (property[j][1] in atRules) {\n            delete atRules[property[j][1]];\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction matchNamespace(token, atRules) {\n  var match;\n\n  if (token[0] == Token.AT_RULE && token[1].indexOf('@namespace') === 0) {\n    match = token[1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markNamespacesAsUsed(atRules) {\n  var namespaceRegex = new RegExp(Object.keys(atRules).join('\\\\\\||') + '\\\\\\|', 'g');\n\n  return function (token) {\n    var match;\n    var scope;\n    var normalizedMatch;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[1].length; i < l; i++) {\n      scope = token[1][i];\n      match = scope[1].match(namespaceRegex);\n\n      for (j = 0, m = match.length; j < m; j++) {\n        normalizedMatch = match[j].substring(0, match[j].length - 1);\n\n        if (normalizedMatch in atRules) {\n          delete atRules[normalizedMatch];\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = removeUnusedAtRules;\n"]},"metadata":{},"sourceType":"script"}