{"ast":null,"code":"/**\n * @fileoverview Reports useless `catch` clauses that just rethrow their error.\n * @author Teddy Katz\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow unnecessary `catch` clauses\",\n      category: \"Best Practices\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-useless-catch\"\n    },\n    schema: []\n  },\n\n  create(context) {\n    return {\n      CatchClause(node) {\n        if (node.param && node.param.type === \"Identifier\" && node.body.body.length && node.body.body[0].type === \"ThrowStatement\" && node.body.body[0].argument.type === \"Identifier\" && node.body.body[0].argument.name === node.param.name) {\n          if (node.parent.finalizer) {\n            context.report({\n              node,\n              message: \"Unnecessary catch clause.\"\n            });\n          } else {\n            context.report({\n              node: node.parent,\n              message: \"Unnecessary try/catch wrapper.\"\n            });\n          }\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/eslint/lib/rules/no-useless-catch.js"],"names":["module","exports","meta","type","docs","description","category","recommended","url","schema","create","context","CatchClause","node","param","body","length","argument","name","parent","finalizer","report","message"],"mappings":"AAAA;;;;AAKA,a,CAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,YADJ;AAGFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAAE,sCADX;AAEFC,MAAAA,QAAQ,EAAE,gBAFR;AAGFC,MAAAA,WAAW,EAAE,IAHX;AAIFC,MAAAA,GAAG,EAAE;AAJH,KAHJ;AAUFC,IAAAA,MAAM,EAAE;AAVN,GADO;;AAcbC,EAAAA,MAAM,CAACC,OAAD,EAAU;AACZ,WAAO;AACHC,MAAAA,WAAW,CAACC,IAAD,EAAO;AACd,YACIA,IAAI,CAACC,KAAL,IACAD,IAAI,CAACC,KAAL,CAAWX,IAAX,KAAoB,YADpB,IAEAU,IAAI,CAACE,IAAL,CAAUA,IAAV,CAAeC,MAFf,IAGAH,IAAI,CAACE,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBZ,IAAlB,KAA2B,gBAH3B,IAIAU,IAAI,CAACE,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBE,QAAlB,CAA2Bd,IAA3B,KAAoC,YAJpC,IAKAU,IAAI,CAACE,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBE,QAAlB,CAA2BC,IAA3B,KAAoCL,IAAI,CAACC,KAAL,CAAWI,IANnD,EAOE;AACE,cAAIL,IAAI,CAACM,MAAL,CAAYC,SAAhB,EAA2B;AACvBT,YAAAA,OAAO,CAACU,MAAR,CAAe;AACXR,cAAAA,IADW;AAEXS,cAAAA,OAAO,EAAE;AAFE,aAAf;AAIH,WALD,MAKO;AACHX,YAAAA,OAAO,CAACU,MAAR,CAAe;AACXR,cAAAA,IAAI,EAAEA,IAAI,CAACM,MADA;AAEXG,cAAAA,OAAO,EAAE;AAFE,aAAf;AAIH;AACJ;AACJ;;AAtBE,KAAP;AAwBH;;AAvCY,CAAjB","sourcesContent":["/**\n * @fileoverview Reports useless `catch` clauses that just rethrow their error.\n * @author Teddy Katz\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"disallow unnecessary `catch` clauses\",\n            category: \"Best Practices\",\n            recommended: true,\n            url: \"https://eslint.org/docs/rules/no-useless-catch\"\n        },\n\n        schema: []\n    },\n\n    create(context) {\n        return {\n            CatchClause(node) {\n                if (\n                    node.param &&\n                    node.param.type === \"Identifier\" &&\n                    node.body.body.length &&\n                    node.body.body[0].type === \"ThrowStatement\" &&\n                    node.body.body[0].argument.type === \"Identifier\" &&\n                    node.body.body[0].argument.name === node.param.name\n                ) {\n                    if (node.parent.finalizer) {\n                        context.report({\n                            node,\n                            message: \"Unnecessary catch clause.\"\n                        });\n                    } else {\n                        context.report({\n                            node: node.parent,\n                            message: \"Unnecessary try/catch wrapper.\"\n                        });\n                    }\n                }\n            }\n        };\n    }\n};\n"]},"metadata":{},"sourceType":"script"}