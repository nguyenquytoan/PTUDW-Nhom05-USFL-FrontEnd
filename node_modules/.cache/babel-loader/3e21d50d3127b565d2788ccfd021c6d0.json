{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar concat_1 = require(\"../observable/concat\");\n\nvar isScheduler_1 = require(\"../util/isScheduler\");\n\nfunction startWith() {\n  var array = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    array[_i] = arguments[_i];\n  }\n\n  var scheduler = array[array.length - 1];\n\n  if (isScheduler_1.isScheduler(scheduler)) {\n    array.pop();\n    return function (source) {\n      return concat_1.concat(array, source, scheduler);\n    };\n  } else {\n    return function (source) {\n      return concat_1.concat(array, source);\n    };\n  }\n}\n\nexports.startWith = startWith;","map":{"version":3,"sources":["../../src/internal/operators/startWith.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAiEA,SAAgB,SAAhB,GAAyB;AAAO,MAAA,KAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAkC;AAAlC,IAAA,KAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAC9B,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,MAAN,GAAe,CAAhB,CAAvB;;AACA,MAAI,aAAA,CAAA,WAAA,CAAY,SAAZ,CAAJ,EAA4B;AAE1B,IAAA,KAAK,CAAC,GAAN;AACA,WAAO,UAAC,MAAD,EAAsB;AAAK,aAAA,QAAA,CAAA,MAAA,CAAO,KAAP,EAAqB,MAArB,EAAA,SAAA,CAAA;AAAuC,KAAzE;AACD,GAJD,MAIO;AACL,WAAO,UAAC,MAAD,EAAsB;AAAK,aAAA,QAAA,CAAA,MAAA,CAAO,KAAP,EAAA,MAAA,CAAA;AAA4B,KAA9D;AACD;AACF;;AATD,OAAA,CAAA,SAAA,GAAA,SAAA","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar concat_1 = require(\"../observable/concat\");\nvar isScheduler_1 = require(\"../util/isScheduler\");\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    var scheduler = array[array.length - 1];\n    if (isScheduler_1.isScheduler(scheduler)) {\n        array.pop();\n        return function (source) { return concat_1.concat(array, source, scheduler); };\n    }\n    else {\n        return function (source) { return concat_1.concat(array, source); };\n    }\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map"]},"metadata":{},"sourceType":"script"}