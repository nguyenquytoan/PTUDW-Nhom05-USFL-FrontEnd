{"ast":null,"code":"/**\n * Created by Tony on 11/1/13.\n */\nvar http = require('http');\n\nvar sockjs = require('sockjs');\n\nvar Hapi = require('hapi'); // 1. Echo sockjs server\n\n\nvar sockjs_opts = {\n  sockjs_url: \"http://cdn.jsdelivr.net/sockjs/1.0.1/sockjs.min.js\"\n};\nvar sockjs_echo = sockjs.createServer(sockjs_opts);\nsockjs_echo.on('connection', function (conn) {\n  conn.on('data', function (message) {\n    conn.write(message);\n  });\n}); // Create a server and set port (default host 0.0.0.0)\n\nvar hapi_server = new Hapi.Server();\nhapi_server.connection({\n  port: 9999\n});\nhapi_server.register(require('inert'), err => {\n  hapi_server.route({\n    method: 'GET',\n    path: '/{path*}',\n    handler: function (request, reply) {\n      reply.file('./html/index.html');\n    }\n  });\n}); //hapi_server.listener is the http listener hapi uses\n\nsockjs_echo.installHandlers(hapi_server.listener, {\n  prefix: '/echo'\n});\nconsole.log(' [*] Listening on 0.0.0.0:9999');\nhapi_server.start();","map":{"version":3,"sources":["/Users/nguyenquytoan/Desktop/PTUDW-17TN-Nhom05-USFL/react-usfl/PTUDW-17TN-Nhom05/node_modules/sockjs/examples/hapi/server.js"],"names":["http","require","sockjs","Hapi","sockjs_opts","sockjs_url","sockjs_echo","createServer","on","conn","message","write","hapi_server","Server","connection","port","register","err","route","method","path","handler","request","reply","file","installHandlers","listener","prefix","console","log","start"],"mappings":"AAAA;;;AAGA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB,C,CAEA;;;AACA,IAAIG,WAAW,GAAG;AACdC,EAAAA,UAAU,EAAE;AADE,CAAlB;AAIA,IAAIC,WAAW,GAAGJ,MAAM,CAACK,YAAP,CAAoBH,WAApB,CAAlB;AACAE,WAAW,CAACE,EAAZ,CAAe,YAAf,EAA6B,UAASC,IAAT,EAAe;AACxCA,EAAAA,IAAI,CAACD,EAAL,CAAQ,MAAR,EAAgB,UAASE,OAAT,EAAkB;AAC9BD,IAAAA,IAAI,CAACE,KAAL,CAAWD,OAAX;AACH,GAFD;AAGH,CAJD,E,CAMA;;AACA,IAAIE,WAAW,GAAG,IAAIT,IAAI,CAACU,MAAT,EAAlB;AACAD,WAAW,CAACE,UAAZ,CAAuB;AACnBC,EAAAA,IAAI,EAAE;AADa,CAAvB;AAIAH,WAAW,CAACI,QAAZ,CAAqBf,OAAO,CAAC,OAAD,CAA5B,EAAwCgB,GAAD,IAAS;AAC5CL,EAAAA,WAAW,CAACM,KAAZ,CAAkB;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdC,IAAAA,IAAI,EAAE,UAFQ;AAGdC,IAAAA,OAAO,EAAE,UAASC,OAAT,EAAkBC,KAAlB,EAAyB;AAC9BA,MAAAA,KAAK,CAACC,IAAN,CAAW,mBAAX;AACH;AALa,GAAlB;AAOH,CARD,E,CAUA;;AACAlB,WAAW,CAACmB,eAAZ,CAA4Bb,WAAW,CAACc,QAAxC,EAAkD;AAC9CC,EAAAA,MAAM,EAAE;AADsC,CAAlD;AAIAC,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAjB,WAAW,CAACkB,KAAZ","sourcesContent":["/**\n * Created by Tony on 11/1/13.\n */\nvar http = require('http');\nvar sockjs = require('sockjs');\nvar Hapi = require('hapi');\n\n// 1. Echo sockjs server\nvar sockjs_opts = {\n    sockjs_url: \"http://cdn.jsdelivr.net/sockjs/1.0.1/sockjs.min.js\"\n};\n\nvar sockjs_echo = sockjs.createServer(sockjs_opts);\nsockjs_echo.on('connection', function(conn) {\n    conn.on('data', function(message) {\n        conn.write(message);\n    });\n});\n\n// Create a server and set port (default host 0.0.0.0)\nvar hapi_server = new Hapi.Server();\nhapi_server.connection({\n    port: 9999\n});\n\nhapi_server.register(require('inert'), (err) => {\n    hapi_server.route({\n        method: 'GET',\n        path: '/{path*}',\n        handler: function(request, reply) {\n            reply.file('./html/index.html');\n        }\n    });\n});\n\n//hapi_server.listener is the http listener hapi uses\nsockjs_echo.installHandlers(hapi_server.listener, {\n    prefix: '/echo'\n});\n\nconsole.log(' [*] Listening on 0.0.0.0:9999');\nhapi_server.start();\n"]},"metadata":{},"sourceType":"script"}